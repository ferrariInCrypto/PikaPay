{"id":"e58648ed90e91b67972dbee5313e22da","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PikaPay.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract PikaFractionalAttestationToken is ERC20 {\n    PikaPay public pikaPay;\n    uint256 public batchId;\n\n    constructor(\n        PikaPay _pikaPay,\n        uint256 _batchId,\n        uint256 _supply\n    )\n        ERC20(\n            string.concat(\"PikaPay Batch #\", Strings.toString(_batchId)),\n            \"SFAT\"\n        )\n    {\n        pikaPay = _pikaPay;\n        batchId = _batchId;\n        _mint(msg.sender, _supply);\n    }\n\n    function _beforeTokenTransfer(\n        address,\n        address,\n        uint256\n    ) internal view  {\n        require(\n            msg.sender == address(pikaPay),\n            \"Only PikaPay can transfer PikaFractionalAttestationToken\"\n        );\n    }\n}\n\ncontract PikaPay {\n    struct Batch {\n        uint256 batchId;\n        PikaFractionalAttestationToken squirrelFractionalAttestationToken;\n        string attestation;\n        uint256 totalAmount;\n        uint256 unwithdrawnAmount;\n        ERC20 token;  // Added the token as part of the batch\n    }\n\n    uint256 public numberOfBatches = 0;\n    mapping(uint256 => Batch) public batches;\n    mapping(uint256 => mapping(address => uint256)) public beneficiaryBalance;\n\n    event Deposit(uint256 batchId, string attestation, uint256 amount);\n\n    event AttestedWithdrawal(\n        uint256 batchId,\n        address receiver,\n        uint256 amount,\n        string attestation,\n        string meta\n    );\n\n    event PrivateWithdrawal(\n        uint256 batchId,\n        address receiver,\n        uint256 amount,\n        string meta\n    );\n\n    constructor() {}\n\n    // Function to deposit any ERC20 token\n    function deposit(\n        address _tokenAddress,\n        string calldata _attestation,\n        uint256 _amount\n    ) external {\n        numberOfBatches += 1;\n        ERC20 token = ERC20(_tokenAddress); // Use the provided token address\n        token.transferFrom(msg.sender, address(this), _amount); // Transfer the token from the sender to this contract\n        PikaFractionalAttestationToken tokenContract = new PikaFractionalAttestationToken(\n                this,\n                numberOfBatches,\n                _amount\n            );\n        batches[numberOfBatches] = Batch(\n            numberOfBatches,\n            tokenContract,\n            _attestation,\n            _amount,\n            _amount,\n            token  // Save the token reference\n        );\n        beneficiaryBalance[numberOfBatches][msg.sender] = _amount;\n        emit Deposit(numberOfBatches, _attestation, _amount);\n    }\n\n    // Function for transferring beneficial ownership\n    function transferBeneficialOwnership(\n        uint256 _batchId,\n        address _to,\n        uint256 _amount\n    ) external {\n        require(\n            beneficiaryBalance[_batchId][msg.sender] >= _amount,\n            \"Insufficient balance\"\n        );\n        beneficiaryBalance[_batchId][msg.sender] -= _amount;\n        beneficiaryBalance[_batchId][_to] += _amount;\n    }\n\n    // Withdraw function with attestation (transfer token and attestation token)\n    function withdrawWithAttestation(\n        uint256 _batchId,\n        uint256 _amount,\n        string calldata _meta\n    ) external {\n        require(\n            beneficiaryBalance[_batchId][msg.sender] >= _amount,\n            \"Insufficient balance\"\n        );\n\n        // Update balances\n        beneficiaryBalance[_batchId][msg.sender] -= _amount;\n        batches[_batchId].unwithdrawnAmount -= _amount;\n\n        // Transfer the original token (ERC20) to the sender\n        ERC20 token = batches[_batchId].token;  // Get the correct token from the batch\n        token.transfer(msg.sender, _amount);\n\n        // Transfer the fractional attestation token to the sender\n        batches[_batchId].squirrelFractionalAttestationToken.transfer(msg.sender, _amount);\n\n        emit AttestedWithdrawal(\n            _batchId,\n            msg.sender,\n            _amount,\n            batches[_batchId].attestation,\n            _meta\n        );\n    }\n\n    // Withdraw function for private withdrawals (without attestation)\n    function withdrawPrivately(\n        uint256 _batchId,\n        uint256 _amount,\n        string calldata _meta\n    ) external {\n        require(\n            beneficiaryBalance[_batchId][msg.sender] >= _amount,\n            \"Insufficient balance\"\n        );\n\n        // Update balances\n        beneficiaryBalance[_batchId][msg.sender] -= _amount;\n        batches[_batchId].unwithdrawnAmount -= _amount;\n\n        // Transfer the original token (ERC20) to the sender\n        ERC20 token = batches[_batchId].token;  // Get the correct token from the batch\n        token.transfer(msg.sender, _amount);\n\n        emit PrivateWithdrawal(\n            _batchId,\n            msg.sender,\n            _amount,\n            _meta\n        );\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1133:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1133:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1133:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1142:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1142:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1142:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1150:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1150:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1150:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1166:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1166:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1166:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:757:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1124:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1185:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1201:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1245:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1261:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1288:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1335:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1385:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1370:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1396:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1657:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1667:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1675:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1667:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1690:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1700:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1690:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1425:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1627:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1613:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1634:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1657:0:1"},"scope":651,"src":"1601:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"1839:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1856:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"1849:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1720:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"1792:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1824:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:1"},"scope":651,"src":"1779:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2043:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2060:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2053:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1874:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1996:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2028:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:1"},"scope":651,"src":"1981:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"2763:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"2773:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2080:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2724:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"2756:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:1"},"scope":651,"src":"2707:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"2910:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2927:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"2920:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2795:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2869:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2901:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:1"},"scope":651,"src":"2849:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3078:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3095:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3105:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3088:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2952:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3031:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:1"},"scope":651,"src":"3004:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3390:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3408:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3400:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3416:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3448:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3455:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3459:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3438:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3475:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3126:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3341:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3333:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3353:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3345:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:1"},"scope":651,"src":"3315:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3640:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3657:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3669:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3676:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3650:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3499:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3578:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3570:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3593:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3631:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:1"},"scope":651,"src":"3551:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4077:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4095:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4103:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4134:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4141:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4150:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4125:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4125:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4166:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3697:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4023:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4040:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4071:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:1"},"scope":651,"src":"3998:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"4869:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"4887:7:1","nodeType":"VariableDeclaration","scope":333,"src":"4879:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4897:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4935:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4950:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4919:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4919:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4982:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4986:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4966:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4966:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5002:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4190:581:1","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"4806:4:1","nodeType":"VariableDeclaration","scope":334,"src":"4798:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"4820:2:1","nodeType":"VariableDeclaration","scope":334,"src":"4812:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"4832:5:1","nodeType":"VariableDeclaration","scope":334,"src":"4824:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4863:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:1"},"scope":651,"src":"4776:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5462:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5476:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5472:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5496:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5517:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5510:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5571:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5567:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5589:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5610:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5603:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5670:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5676:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5662:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5662:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5026:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5420:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5412:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5446:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5438:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5462:0:1"},"scope":651,"src":"5393:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6083:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6097:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6271:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6285:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6307:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6317:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6340:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6354:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6336:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6361:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6411:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6417:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6430:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6386:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6379:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6464:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6571:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6581:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6589:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6603:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6571:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6093:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6117:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6233:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6233:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6647:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"6862:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"6876:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7021:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7038:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7021:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6643:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6665:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6679:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6810:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"6810:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7092:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7098:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7102:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7083:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7078:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5699:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6033:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6025:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6047:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6039:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6059:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6051:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6083:0:1"},"scope":651,"src":"6008:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7514:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7528:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7524:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7551:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7572:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7565:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7644:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7653:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7624:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7624:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7121:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7481:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7498:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7490:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7514:0:1"},"scope":651,"src":"7458:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8040:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8054:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8050:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8077:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8098:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8091:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8177:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8148:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8148:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7672:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8007:7:1","nodeType":"VariableDeclaration","scope":524,"src":"7999:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8024:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8016:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8040:0:1"},"scope":651,"src":"7984:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"8800:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8819:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8826:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8835:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"8810:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"8810:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8196:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"8752:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8744:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"8767:7:1","nodeType":"VariableDeclaration","scope":542,"src":"8759:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"8784:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8776:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8800:0:1"},"scope":651,"src":"8726:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9799:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9813:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"9809:89:1","trueBody":{"id":567,"nodeType":"Block","src":"9834:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9855:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"9848:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"9907:90:1","trueBody":{"id":582,"nodeType":"Block","src":"9934:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9955:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"9948:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10006:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10018:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10025:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10036:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10006:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10055:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10051:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10066:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10094:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10101:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10110:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10085:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10080:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"8860:836:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9727:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9719:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9742:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9734:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"9759:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9751:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:1","nodeType":"VariableDeclaration","scope":602,"src":"9766:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"9799:0:1"},"scope":651,"src":"9701:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10504:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10514:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10558:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10541:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10580:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:1","memberName":"max","nodeType":"MemberAccess","src":"10600:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10576:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10619:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10637:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10656:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10633:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10663:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10715:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10724:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10742:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10688:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10681:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"10776:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10813:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10820:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10829:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10848:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"10804:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"10804:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10139:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10448:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10440:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10463:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10455:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10480:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10472:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10504:0:1"},"scope":651,"src":"10415:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1106:9788:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:10790:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"214:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"227:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"396:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:2","nodeType":"VariableDeclaration","scope":663,"src":"405:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:2","nodeType":"VariableDeclaration","scope":663,"src":"427:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:2","nodeType":"VariableDeclaration","scope":663,"src":"447:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:2"},"src":"390:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"468:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"627:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:2","nodeType":"VariableDeclaration","scope":672,"src":"636:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:2","nodeType":"VariableDeclaration","scope":672,"src":"659:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:2","nodeType":"VariableDeclaration","scope":672,"src":"684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:2"},"src":"621:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"705:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"795:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"821:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:2"},"scope":729,"src":"775:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"836:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1242:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1267:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:2"},"scope":729,"src":"1204:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1279:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1575:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1590:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1622:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:2"},"scope":729,"src":"1548:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1637:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2326:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2351:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2376:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:2"},"scope":729,"src":"2309:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2388:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2720:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2712:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2734:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2726:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2746:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2738:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2771:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:2"},"scope":729,"src":"2690:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"204:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2674:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["306:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"306:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"306:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:87:3","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"288:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"319:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"417:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:3"},"scope":755,"src":"378:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"438:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"514:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"540:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:3"},"scope":755,"src":"499:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"561:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"648:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"674:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:3"},"scope":755,"src":"631:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"278:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:559:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"125:489:5","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"Panic","nameLocation":"665:5:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"677:36:5","text":"@dev generic / unspecified error"},"id":792,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:5","nodeType":"VariableDeclaration","scope":837,"src":"718:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"764:37:5","text":"@dev used by the assert() builtin"},"id":796,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:5","nodeType":"VariableDeclaration","scope":837,"src":"806:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"851:41:5","text":"@dev arithmetic underflow or overflow"},"id":800,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:5","nodeType":"VariableDeclaration","scope":837,"src":"897:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:5","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"950:35:5","text":"@dev division or modulo by zero"},"id":804,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:5","nodeType":"VariableDeclaration","scope":837,"src":"990:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"1045:30:5","text":"@dev enum conversion error"},"id":808,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:5","nodeType":"VariableDeclaration","scope":837,"src":"1080:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:5","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1140:36:5","text":"@dev invalid encoding in storage"},"id":812,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:5","nodeType":"VariableDeclaration","scope":837,"src":"1181:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"1242:24:5","text":"@dev empty array pop"},"id":816,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:5","nodeType":"VariableDeclaration","scope":837,"src":"1271:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1325:35:5","text":"@dev array out of bounds access"},"id":820,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:5","nodeType":"VariableDeclaration","scope":837,"src":"1365:52:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1423:65:5","text":"@dev resource error (too large allocation or too large array)"},"id":824,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:5","nodeType":"VariableDeclaration","scope":837,"src":"1493:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"1546:42:5","text":"@dev calling invalid internal function"},"id":828,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:5","nodeType":"VariableDeclaration","scope":837,"src":"1593:58:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:5","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"1819:151:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:5"},"nodeType":"YulFunctionCall","src":"1868:24:5"},"nodeType":"YulExpressionStatement","src":"1868:24:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:5","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:5"},"nodeType":"YulFunctionCall","src":"1905:18:5"},"nodeType":"YulExpressionStatement","src":"1905:18:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:5","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:5"},"nodeType":"YulFunctionCall","src":"1936:18:5"},"nodeType":"YulExpressionStatement","src":"1936:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":831,"isOffset":false,"isSlot":false,"src":"1918:4:5","valueSize":1}],"flags":["memory-safe"],"id":834,"nodeType":"InlineAssembly","src":"1829:135:5"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"1658:113:5","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:5","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"code","nameLocation":"1799:4:5","nodeType":"VariableDeclaration","scope":836,"src":"1791:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:5"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"1819:0:5"},"scope":837,"src":"1776:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":838,"src":"657:1315:5","usedErrors":[],"usedEvents":[]}],"src":"99:1874:5"},"id":5},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2763],"SignedMath":[4672],"Strings":[1157]},"id":1158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":2764,"src":"127:37:6","symbolAliases":[{"foreign":{"id":840,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"135:4:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":4673,"src":"165:49:6","symbolAliases":[{"foreign":{"id":842,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"173:10:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"216:34:6","text":" @dev String operations."},"fullyImplemented":true,"id":1157,"linearizedBaseContracts":[1157],"name":"Strings","nameLocation":"259:7:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":847,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:6","nodeType":"VariableDeclaration","scope":1157,"src":"273:56:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":845,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":850,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:6","nodeType":"VariableDeclaration","scope":1157,"src":"335:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":848,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"384:81:6","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":857,"name":"StringsInsufficientHexLength","nameLocation":"476:28:6","nodeType":"ErrorDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"value","nameLocation":"513:5:6","nodeType":"VariableDeclaration","scope":857,"src":"505:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"length","nameLocation":"528:6:6","nodeType":"VariableDeclaration","scope":857,"src":"520:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:6"},"src":"470:66:6"},{"body":{"id":904,"nodeType":"Block","src":"708:561:6","statements":[{"id":903,"nodeType":"UncheckedBlock","src":"718:545:6","statements":[{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"length","nameLocation":"750:6:6","nodeType":"VariableDeclaration","scope":903,"src":"742:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":873,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"770:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":867,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"759:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2763_$","typeString":"type(library Math)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:6","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2535,"src":"759:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:6"},{"assignments":[875],"declarations":[{"constant":false,"id":875,"mutability":"mutable","name":"buffer","nameLocation":"808:6:6","nodeType":"VariableDeclaration","scope":903,"src":"794:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":874,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":880,"initialValue":{"arguments":[{"id":878,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"828:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":876,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:6"},{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"ptr","nameLocation":"857:3:6","nodeType":"VariableDeclaration","scope":903,"src":"849:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":883,"nodeType":"VariableDeclarationStatement","src":"849:11:6"},{"AST":{"nodeType":"YulBlock","src":"899:67:6","statements":[{"nodeType":"YulAssignment","src":"917:35:6","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:6","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:6"},"nodeType":"YulFunctionCall","src":"936:15:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:6"},"nodeType":"YulFunctionCall","src":"924:28:6"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":875,"isOffset":false,"isSlot":false,"src":"928:6:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"944:6:6","valueSize":1},{"declaration":882,"isOffset":false,"isSlot":false,"src":"917:3:6","valueSize":1}],"flags":["memory-safe"],"id":884,"nodeType":"InlineAssembly","src":"874:92:6"},{"body":{"id":899,"nodeType":"Block","src":"992:234:6","statements":[{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:6","subExpression":{"id":886,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1010:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"nodeType":"ExpressionStatement","src":"1010:5:6"},{"AST":{"nodeType":"YulBlock","src":"1058:86:6","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:6","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:6"},"nodeType":"YulFunctionCall","src":"1098:14:6"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:6"},"nodeType":"YulFunctionCall","src":"1093:32:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:6"},"nodeType":"YulFunctionCall","src":"1080:46:6"},"nodeType":"YulExpressionStatement","src":"1080:46:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":847,"isOffset":false,"isSlot":false,"src":"1114:10:6","valueSize":1},{"declaration":882,"isOffset":false,"isSlot":false,"src":"1088:3:6","valueSize":1},{"declaration":860,"isOffset":false,"isSlot":false,"src":"1102:5:6","valueSize":1}],"flags":["memory-safe"],"id":889,"nodeType":"InlineAssembly","src":"1033:111:6"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"1161:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"nodeType":"ExpressionStatement","src":"1161:11:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"1194:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"1190:21:6","trueBody":{"id":897,"nodeType":"Break","src":"1206:5:6"}}]},"condition":{"hexValue":"74727565","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":900,"nodeType":"WhileStatement","src":"979:247:6"},{"expression":{"id":901,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1246:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":864,"id":902,"nodeType":"Return","src":"1239:13:6"}]}]},"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"542:90:6","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":905,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:6","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"value","nameLocation":"663:5:6","nodeType":"VariableDeclaration","scope":905,"src":"655:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:6"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":905,"src":"693:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":862,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:6"},"scope":1157,"src":"637:632:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"1445:92:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"1476:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:6","trueExpression":{"hexValue":"2d","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"1522:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":923,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"1507:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4672_$","typeString":"type(library SignedMath)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:6","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4671,"src":"1507:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1498:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":913,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:6","typeDescriptions":{}}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:6","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":912,"id":929,"nodeType":"Return","src":"1455:75:6"}]},"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"1275:89:6","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:6","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"value","nameLocation":"1400:5:6","nodeType":"VariableDeclaration","scope":931,"src":"1393:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":907,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:6"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":931,"src":"1430:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:6"},"scope":1157,"src":"1369:168:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"1716:100:6","statements":[{"id":949,"nodeType":"UncheckedBlock","src":"1726:84:6","statements":[{"expression":{"arguments":[{"id":940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1769:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1788:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":941,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"1776:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2763_$","typeString":"type(library Math)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:6","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"1776:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[951,1034,1054],"referencedDeclaration":1034,"src":"1757:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":938,"id":948,"nodeType":"Return","src":"1750:49:6"}]}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"1543:94:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"value","nameLocation":"1671:5:6","nodeType":"VariableDeclaration","scope":951,"src":"1663:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:6"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"1701:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":936,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:6"},"scope":1157,"src":"1642:174:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"2029:435:6","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:6","nodeType":"VariableDeclaration","scope":1033,"src":"2039:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"id":963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2060:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:6"},{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:6","nodeType":"VariableDeclaration","scope":1033,"src":"2075:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":965,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":975,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":970,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2111:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:6"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":976,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2132:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":978,"indexExpression":{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":981,"nodeType":"ExpressionStatement","src":"2132:15:6"},{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":982,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2157:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":984,"indexExpression":{"hexValue":"31","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":987,"nodeType":"ExpressionStatement","src":"2157:15:6"},{"body":{"id":1016,"nodeType":"Block","src":"2227:95:6","statements":[{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1002,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2241:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1004,"indexExpression":{"id":1003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2248:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1005,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2253:10:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1009,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2264:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1011,"nodeType":"ExpressionStatement","src":"2241:40:6"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1012,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2295:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ExpressionStatement","src":"2295:16:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2215:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"initializationExpression":{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"i","nameLocation":"2195:1:6","nodeType":"VariableDeclaration","scope":1017,"src":"2187:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":995,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":991,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2203:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:6"},"loopExpression":{"expression":{"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:6","subExpression":{"id":999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2224:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1001,"nodeType":"ExpressionStatement","src":"2222:3:6"},"nodeType":"ForStatement","src":"2182:140:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2335:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"2331:96:6","trueBody":{"id":1026,"nodeType":"Block","src":"2352:75:6","statements":[{"errorCall":{"arguments":[{"id":1022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2402:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1023,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2409:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2373:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"RevertStatement","src":"2366:50:6"}]}},{"expression":{"arguments":[{"id":1030,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2450:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1028,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:6","typeDescriptions":{}}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":960,"id":1032,"nodeType":"Return","src":"2436:21:6"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1822:112:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:6","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"1968:5:6","nodeType":"VariableDeclaration","scope":1034,"src":"1960:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"length","nameLocation":"1983:6:6","nodeType":"VariableDeclaration","scope":1034,"src":"1975:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:6"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"2014:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":958,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:6"},"scope":1157,"src":"1939:525:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"2696:75:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1047,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2741:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1045,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:6","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:6","typeDescriptions":{}}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1050,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2749:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1042,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[951,1034,1054],"referencedDeclaration":1034,"src":"2713:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1041,"id":1052,"nodeType":"Return","src":"2706:58:6"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"2470:148:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:6","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"addr","nameLocation":"2652:4:6","nodeType":"VariableDeclaration","scope":1054,"src":"2644:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:6"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"2681:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1039,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:6"},"scope":1157,"src":"2623:148:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"3028:642:6","statements":[{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:6","nodeType":"VariableDeclaration","scope":1118,"src":"3038:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"arguments":[{"id":1067,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"3078:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[951,1034,1054],"referencedDeclaration":1054,"src":"3066:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:6","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:6"},{"assignments":[1072],"declarations":[{"constant":false,"id":1072,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:6","nodeType":"VariableDeclaration","scope":1118,"src":"3169:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1073,"nodeType":"VariableDeclarationStatement","src":"3169:17:6"},{"AST":{"nodeType":"YulBlock","src":"3221:78:6","statements":[{"nodeType":"YulAssignment","src":"3235:54:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:6","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:6","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:6"},"nodeType":"YulFunctionCall","src":"3266:17:6"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:6","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:6"},"nodeType":"YulFunctionCall","src":"3256:32:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:6"},"nodeType":"YulFunctionCall","src":"3248:41:6"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1063,"isOffset":false,"isSlot":false,"src":"3270:6:6","valueSize":1},{"declaration":1072,"isOffset":false,"isSlot":false,"src":"3235:9:6","valueSize":1}],"flags":["memory-safe"],"id":1074,"nodeType":"InlineAssembly","src":"3196:103:6"},{"body":{"id":1111,"nodeType":"Block","src":"3342:291:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3448:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1092,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3477:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1094,"indexExpression":{"id":1093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3484:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1090,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:6","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"3444:150:6","trueBody":{"id":1105,"nodeType":"Block","src":"3494:100:6","statements":[{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1099,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3562:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1101,"indexExpression":{"id":1100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3569:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1104,"nodeType":"ExpressionStatement","src":"3562:17:6"}]}},{"expression":{"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1107,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3607:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ExpressionStatement","src":"3607:15:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3330:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"initializationExpression":{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"i","nameLocation":"3322:1:6","nodeType":"VariableDeclaration","scope":1112,"src":"3314:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1078,"initialValue":{"hexValue":"3431","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:6","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:6"},"loopExpression":{"expression":{"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:6","subExpression":{"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3339:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1084,"nodeType":"ExpressionStatement","src":"3337:3:6"},"nodeType":"ForStatement","src":"3309:324:6"},{"expression":{"arguments":[{"id":1115,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3656:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:6","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1061,"id":1117,"nodeType":"Return","src":"3642:21:6"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"2777:165:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:6","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"addr","nameLocation":"2984:4:6","nodeType":"VariableDeclaration","scope":1119,"src":"2976:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:6"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"3013:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1059,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:6"},"scope":1157,"src":"2947:723:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"3825:104:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3848:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:6","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:6","memberName":"length","nodeType":"MemberAccess","src":"3842:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3867:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1134,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:6","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:6","memberName":"length","nodeType":"MemberAccess","src":"3861:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"3896:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:6","typeDescriptions":{}}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3919:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1147,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:6","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1146,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1128,"id":1154,"nodeType":"Return","src":"3835:87:6"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"3676:66:6","text":" @dev Returns true if the two strings are equal."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:6","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"a","nameLocation":"3776:1:6","nodeType":"VariableDeclaration","scope":1156,"src":"3762:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1121,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"b","nameLocation":"3793:1:6","nodeType":"VariableDeclaration","scope":1156,"src":"3779:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1123,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:6"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"3819:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:6"},"scope":1157,"src":"3747:182:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1158,"src":"251:3680:6","usedErrors":[857],"usedEvents":[]}],"src":"101:3831:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2763],"Panic":[837],"SafeCast":[4528]},"id":2764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":838,"src":"129:35:7","symbolAliases":[{"foreign":{"id":1160,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"137:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":4529,"src":"165:40:7","symbolAliases":[{"foreign":{"id":1162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"207:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2763,"linearizedBaseContracts":[2763],"name":"Math","nameLocation":"289:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1169,"members":[{"id":1165,"name":"Floor","nameLocation":"324:5:7","nodeType":"EnumValue","src":"324:5:7"},{"id":1166,"name":"Ceil","nameLocation":"367:4:7","nodeType":"EnumValue","src":"367:4:7"},{"id":1167,"name":"Trunc","nameLocation":"409:5:7","nodeType":"EnumValue","src":"409:5:7"},{"id":1168,"name":"Expand","nameLocation":"439:6:7","nodeType":"EnumValue","src":"439:6:7"}],"name":"Rounding","nameLocation":"305:8:7","nodeType":"EnumDefinition","src":"300:169:7"},{"body":{"id":1200,"nodeType":"Block","src":"677:140:7","statements":[{"id":1199,"nodeType":"UncheckedBlock","src":"687:124:7","statements":[{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"c","nameLocation":"719:1:7","nodeType":"VariableDeclaration","scope":1199,"src":"711:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"723:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"727:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"746:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"750:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1194,"nodeType":"IfStatement","src":"742:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1180,"id":1193,"nodeType":"Return","src":"753:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1196,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"798:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1180,"id":1198,"nodeType":"Return","src":"784:16:7"}]}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"475:106:7","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:7","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"a","nameLocation":"610:1:7","nodeType":"VariableDeclaration","scope":1201,"src":"602:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"b","nameLocation":"621:1:7","nodeType":"VariableDeclaration","scope":1201,"src":"613:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:7"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"success","nameLocation":"652:7:7","nodeType":"VariableDeclaration","scope":1201,"src":"647:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"result","nameLocation":"669:6:7","nodeType":"VariableDeclaration","scope":1201,"src":"661:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:7"},"scope":2763,"src":"586:231:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"1028:113:7","statements":[{"id":1227,"nodeType":"UncheckedBlock","src":"1038:97:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"1066:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1214,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"1070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"1062:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1212,"id":1219,"nodeType":"Return","src":"1073:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"1118:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"1122:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1212,"id":1226,"nodeType":"Return","src":"1104:20:7"}]}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"823:109:7","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:7","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"a","nameLocation":"961:1:7","nodeType":"VariableDeclaration","scope":1229,"src":"953:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"b","nameLocation":"972:1:7","nodeType":"VariableDeclaration","scope":1229,"src":"964:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:7"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"success","nameLocation":"1003:7:7","nodeType":"VariableDeclaration","scope":1229,"src":"998:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1208,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"result","nameLocation":"1020:6:7","nodeType":"VariableDeclaration","scope":1229,"src":"1012:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:7"},"scope":2763,"src":"937:204:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1270,"nodeType":"Block","src":"1355:417:7","statements":[{"id":1269,"nodeType":"UncheckedBlock","src":"1365:401:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1623:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"nodeType":"IfStatement","src":"1619:28:7","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1240,"id":1247,"nodeType":"Return","src":"1631:16:7"}},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"c","nameLocation":"1669:1:7","nodeType":"VariableDeclaration","scope":1269,"src":"1661:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1254,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1673:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1696:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1700:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1705:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"1692:33:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1240,"id":1263,"nodeType":"Return","src":"1708:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1266,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1240,"id":1268,"nodeType":"Return","src":"1739:16:7"}]}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1147:112:7","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:7","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"a","nameLocation":"1288:1:7","nodeType":"VariableDeclaration","scope":1271,"src":"1280:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"b","nameLocation":"1299:1:7","nodeType":"VariableDeclaration","scope":1271,"src":"1291:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:7"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"success","nameLocation":"1330:7:7","nodeType":"VariableDeclaration","scope":1271,"src":"1325:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"result","nameLocation":"1347:6:7","nodeType":"VariableDeclaration","scope":1271,"src":"1339:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:7"},"scope":2763,"src":"1264:508:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"1987:114:7","statements":[{"id":1297,"nodeType":"UncheckedBlock","src":"1997:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2025:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"2021:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1282,"id":1289,"nodeType":"Return","src":"2033:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2078:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2082:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1282,"id":1296,"nodeType":"Return","src":"2064:20:7"}]}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"1778:113:7","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:7","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"a","nameLocation":"1920:1:7","nodeType":"VariableDeclaration","scope":1299,"src":"1912:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"b","nameLocation":"1931:1:7","nodeType":"VariableDeclaration","scope":1299,"src":"1923:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:7"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"success","nameLocation":"1962:7:7","nodeType":"VariableDeclaration","scope":1299,"src":"1957:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"result","nameLocation":"1979:6:7","nodeType":"VariableDeclaration","scope":1299,"src":"1971:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:7"},"scope":2763,"src":"1896:205:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1326,"nodeType":"Block","src":"2326:114:7","statements":[{"id":1325,"nodeType":"UncheckedBlock","src":"2336:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2364:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1318,"nodeType":"IfStatement","src":"2360:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1310,"id":1317,"nodeType":"Return","src":"2372:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2417:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2421:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1310,"id":1324,"nodeType":"Return","src":"2403:20:7"}]}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"2107:123:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:7","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"a","nameLocation":"2259:1:7","nodeType":"VariableDeclaration","scope":1327,"src":"2251:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"b","nameLocation":"2270:1:7","nodeType":"VariableDeclaration","scope":1327,"src":"2262:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:7"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"success","nameLocation":"2301:7:7","nodeType":"VariableDeclaration","scope":1327,"src":"2296:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"result","nameLocation":"2318:6:7","nodeType":"VariableDeclaration","scope":1327,"src":"2310:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:7"},"scope":2763,"src":"2235:205:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"2912:207:7","statements":[{"id":1352,"nodeType":"UncheckedBlock","src":"2922:191:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3060:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3066:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1346,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"3091:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"3075:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"3075:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1338,"id":1351,"nodeType":"Return","src":"3053:49:7"}]}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"2446:374:7","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:7","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"condition","nameLocation":"2847:9:7","nodeType":"VariableDeclaration","scope":1354,"src":"2842:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1329,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"a","nameLocation":"2866:1:7","nodeType":"VariableDeclaration","scope":1354,"src":"2858:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"b","nameLocation":"2877:1:7","nodeType":"VariableDeclaration","scope":1354,"src":"2869:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:7"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"2903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:7"},"scope":2763,"src":"2825:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"3256:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3281:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"3285:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3288:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"3291:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1364,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3273:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1363,"id":1371,"nodeType":"Return","src":"3266:27:7"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"3125:59:7","text":" @dev Returns the largest of two numbers."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:7","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"a","nameLocation":"3210:1:7","nodeType":"VariableDeclaration","scope":1373,"src":"3202:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"b","nameLocation":"3221:1:7","nodeType":"VariableDeclaration","scope":1373,"src":"3213:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:7"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"3247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:7"},"scope":2763,"src":"3189:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"3438:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3463:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3467:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3470:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"3473:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3455:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1382,"id":1390,"nodeType":"Return","src":"3448:27:7"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"3306:60:7","text":" @dev Returns the smallest of two numbers."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:7","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"a","nameLocation":"3392:1:7","nodeType":"VariableDeclaration","scope":1392,"src":"3384:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"b","nameLocation":"3403:1:7","nodeType":"VariableDeclaration","scope":1392,"src":"3395:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:7"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"3429:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:7"},"scope":2763,"src":"3371:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"3666:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3721:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3725:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3731:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"3735:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1401,"id":1413,"nodeType":"Return","src":"3713:28:7"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"3488:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:7","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"a","nameLocation":"3620:1:7","nodeType":"VariableDeclaration","scope":1415,"src":"3612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"b","nameLocation":"3631:1:7","nodeType":"VariableDeclaration","scope":1415,"src":"3623:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:7"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1415,"src":"3657:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:7"},"scope":2763,"src":"3595:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"4040:633:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"4054:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1436,"nodeType":"IfStatement","src":"4050:150:7","trueBody":{"id":1435,"nodeType":"Block","src":"4062:138:7","statements":[{"expression":{"arguments":[{"expression":{"id":1431,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4166:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"4166:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1428,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4154:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"4154:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"ExpressionStatement","src":"4154:35:7"}]}},{"id":1454,"nodeType":"UncheckedBlock","src":"4583:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4630:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1437,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4614:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"4614:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4641:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"4650:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1424,"id":1453,"nodeType":"Return","src":"4607:49:7"}]}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"3754:210:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:7","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"a","nameLocation":"3994:1:7","nodeType":"VariableDeclaration","scope":1456,"src":"3986:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"b","nameLocation":"4005:1:7","nodeType":"VariableDeclaration","scope":1456,"src":"3997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:7"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"4031:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:7"},"scope":2763,"src":"3969:704:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"5094:4128:7","statements":[{"id":1591,"nodeType":"UncheckedBlock","src":"5104:4112:7","statements":[{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"5433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1473,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"5449:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1471,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5453:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:7"},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"5513:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"nodeType":"VariableDeclarationStatement","src":"5513:13:7"},{"AST":{"nodeType":"YulBlock","src":"5593:122:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:7"},"nodeType":"YulFunctionCall","src":"5634:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:7"},"nodeType":"YulFunctionCall","src":"5621:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:7","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:7"},"nodeType":"YulFunctionCall","src":"5671:14:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:7"},"nodeType":"YulFunctionCall","src":"5687:13:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:7"},"nodeType":"YulFunctionCall","src":"5667:34:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1469,"isOffset":false,"isSlot":false,"src":"5679:5:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"5694:5:7","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"5658:5:7","valueSize":1},{"declaration":1459,"isOffset":false,"isSlot":false,"src":"5628:1:7","valueSize":1},{"declaration":1461,"isOffset":false,"isSlot":false,"src":"5631:1:7","valueSize":1}],"id":1477,"nodeType":"InlineAssembly","src":"5584:131:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1486,"nodeType":"IfStatement","src":"5792:368:7","trueBody":{"id":1485,"nodeType":"Block","src":"5808:352:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"6126:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1482,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6134:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1467,"id":1484,"nodeType":"Return","src":"6119:26:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1487,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6270:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1488,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"6285:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1505,"nodeType":"IfStatement","src":"6266:143:7","trueBody":{"id":1504,"nodeType":"Block","src":"6292:117:7","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6330:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1497,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6348:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"6348:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1499,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6372:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:7","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":800,"src":"6372:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1493,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"6322:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1490,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6310:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"6310:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"6310:84:7"}]}},{"assignments":[1507],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:7","nodeType":"VariableDeclaration","scope":1591,"src":"6664:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"nodeType":"VariableDeclarationStatement","src":"6664:17:7"},{"AST":{"nodeType":"YulBlock","src":"6704:291:7","statements":[{"nodeType":"YulAssignment","src":"6773:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:7"},"nodeType":"YulFunctionCall","src":"6786:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:7"}]},{"nodeType":"YulAssignment","src":"6893:41:7","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:7"},"nodeType":"YulFunctionCall","src":"6913:20:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:7"},"nodeType":"YulFunctionCall","src":"6902:32:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:7"}]},{"nodeType":"YulAssignment","src":"6951:30:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:7"},"nodeType":"YulFunctionCall","src":"6960:21:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1463,"isOffset":false,"isSlot":false,"src":"6799:11:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"6927:5:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"6951:5:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"6964:5:7","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"6893:5:7","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"6906:5:7","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"6773:9:7","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"6916:9:7","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"6971:9:7","valueSize":1},{"declaration":1459,"isOffset":false,"isSlot":false,"src":"6793:1:7","valueSize":1},{"declaration":1461,"isOffset":false,"isSlot":false,"src":"6796:1:7","valueSize":1}],"id":1509,"nodeType":"InlineAssembly","src":"6695:300:7"},{"assignments":[1511],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"twos","nameLocation":"7207:4:7","nodeType":"VariableDeclaration","scope":1591,"src":"7199:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1518,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7214:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1514,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7233:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:7"},{"AST":{"nodeType":"YulBlock","src":"7268:366:7","statements":[{"nodeType":"YulAssignment","src":"7333:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:7"},"nodeType":"YulFunctionCall","src":"7348:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:7"}]},{"nodeType":"YulAssignment","src":"7437:25:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:7"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:7"},"nodeType":"YulFunctionCall","src":"7446:16:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:7"}]},{"nodeType":"YulAssignment","src":"7581:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:7"},"nodeType":"YulFunctionCall","src":"7597:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:7"},"nodeType":"YulFunctionCall","src":"7593:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:7"},"nodeType":"YulFunctionCall","src":"7589:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1463,"isOffset":false,"isSlot":false,"src":"7333:11:7","valueSize":1},{"declaration":1463,"isOffset":false,"isSlot":false,"src":"7352:11:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"7437:5:7","valueSize":1},{"declaration":1469,"isOffset":false,"isSlot":false,"src":"7450:5:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"7365:4:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"7457:4:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"7581:4:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"7604:4:7","valueSize":1},{"declaration":1511,"isOffset":false,"isSlot":false,"src":"7611:4:7","valueSize":1}],"id":1519,"nodeType":"InlineAssembly","src":"7259:375:7"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7700:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7709:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1522,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"7717:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"7700:21:7"},{"assignments":[1527],"declarations":[{"constant":false,"id":1527,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:7","nodeType":"VariableDeclaration","scope":1591,"src":"8056:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1534,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1529,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8079:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:7"},{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1535,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8327:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1538,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8341:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ExpressionStatement","src":"8312:36:7"},{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8382:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1545,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8397:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1546,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"nodeType":"ExpressionStatement","src":"8382:36:7"},{"expression":{"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1551,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8469:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1554,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8483:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1558,"nodeType":"ExpressionStatement","src":"8454:36:7"},{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1559,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8540:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1562,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8554:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"8525:36:7"},{"expression":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1567,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8613:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1570,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ExpressionStatement","src":"8598:36:7"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1575,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8672:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8687:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1578,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8701:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"8672:36:7"},{"expression":{"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"9154:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1584,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9163:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1585,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1588,"nodeType":"ExpressionStatement","src":"9154:24:7"},{"expression":{"id":1589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"9199:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1467,"id":1590,"nodeType":"Return","src":"9192:13:7"}]}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"4679:312:7","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:7","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"x","nameLocation":"5020:1:7","nodeType":"VariableDeclaration","scope":1593,"src":"5012:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"y","nameLocation":"5031:1:7","nodeType":"VariableDeclaration","scope":1593,"src":"5023:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:7","nodeType":"VariableDeclaration","scope":1593,"src":"5034:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:7"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"result","nameLocation":"5086:6:7","nodeType":"VariableDeclaration","scope":1593,"src":"5078:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:7"},"scope":2763,"src":"4996:4226:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"9461:128:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1609,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9485:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1610,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9488:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1611,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9491:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1608,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1593,1630],"referencedDeclaration":1593,"src":"9478:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1616,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"9539:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":1615,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"9522:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1619,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9559:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1620,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9562:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9565:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1613,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"9506:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"9506:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1607,"id":1628,"nodeType":"Return","src":"9471:111:7"}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"9228:118:7","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:7","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"x","nameLocation":"9375:1:7","nodeType":"VariableDeclaration","scope":1630,"src":"9367:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"y","nameLocation":"9386:1:7","nodeType":"VariableDeclaration","scope":1630,"src":"9378:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:7","nodeType":"VariableDeclaration","scope":1630,"src":"9389:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:7","nodeType":"VariableDeclaration","scope":1630,"src":"9410:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"Rounding","nameLocations":["9410:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"9410:8:7"},"referencedDeclaration":1169,"src":"9410:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:7"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"9452:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:7"},"scope":2763,"src":"9351:238:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"10223:1849:7","statements":[{"id":1725,"nodeType":"UncheckedBlock","src":"10233:1833:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"10261:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1645,"nodeType":"IfStatement","src":"10257:20:7","trueBody":{"expression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1639,"id":1644,"nodeType":"Return","src":"10269:8:7"}},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:7","nodeType":"VariableDeclaration","scope":1725,"src":"10748:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"10768:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1649,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"10772:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:7"},{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:7","nodeType":"VariableDeclaration","scope":1725,"src":"10787:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"id":1654,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"10801:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:7"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"x","nameLocation":"10945:1:7","nodeType":"VariableDeclaration","scope":1725,"src":"10938:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1656,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1659,"initialValue":{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:7"},{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"y","nameLocation":"10971:1:7","nodeType":"VariableDeclaration","scope":1725,"src":"10964:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1660,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1663,"initialValue":{"hexValue":"31","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:7"},{"body":{"id":1700,"nodeType":"Block","src":"11014:882:7","statements":[{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:7","nodeType":"VariableDeclaration","scope":1700,"src":"11032:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1672,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11051:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1670,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11057:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:7"},{"expression":{"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1673,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11086:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1674,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11091:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1675,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1676,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11191:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11436:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"11442:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1679,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"11454:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"11085:395:7"},{"expression":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1685,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11500:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"11503:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1687,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"11585:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11839:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"11843:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1693,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"11854:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1691,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:7","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"11499:382:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1664,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"10998:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"nodeType":"WhileStatement","src":"10991:905:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"11914:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1707,"nodeType":"IfStatement","src":"11910:22:7","trueBody":{"expression":{"hexValue":"30","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1639,"id":1706,"nodeType":"Return","src":"11924:8:7"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"11983:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"11990:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:7","subExpression":{"id":1715,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12003:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:7","typeDescriptions":{}}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1721,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"12015:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:7","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1708,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"11975:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1639,"id":1724,"nodeType":"Return","src":"11968:50:7"}]}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"9595:553:7","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:7","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"a","nameLocation":"10177:1:7","nodeType":"VariableDeclaration","scope":1727,"src":"10169:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"n","nameLocation":"10188:1:7","nodeType":"VariableDeclaration","scope":1727,"src":"10180:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:7"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"10214:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:7"},"scope":2763,"src":"10153:1919:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"12672:82:7","statements":[{"id":1746,"nodeType":"UncheckedBlock","src":"12682:66:7","statements":[{"expression":{"arguments":[{"id":1739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"12725:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"12728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1743,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"12735:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1737,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"12713:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2763_$","typeString":"type(library Math)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:7","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"12713:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1745,"nodeType":"Return","src":"12706:31:7"}]}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"12078:514:7","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:7","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"a","nameLocation":"12626:1:7","nodeType":"VariableDeclaration","scope":1748,"src":"12618:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"p","nameLocation":"12637:1:7","nodeType":"VariableDeclaration","scope":1748,"src":"12629:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:7"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"12663:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:7"},"scope":2763,"src":"12597:157:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1783,"nodeType":"Block","src":"13524:174:7","statements":[{"assignments":[1761,1763],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"success","nameLocation":"13540:7:7","nodeType":"VariableDeclaration","scope":1783,"src":"13535:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1760,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"result","nameLocation":"13557:6:7","nodeType":"VariableDeclaration","scope":1783,"src":"13549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1769,"initialValue":{"arguments":[{"id":1765,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"13577:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1766,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"13580:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1767,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13583:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1764,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1808,1890],"referencedDeclaration":1808,"src":"13567:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:7"},{"condition":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:7","subExpression":{"id":1770,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"13600:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1780,"nodeType":"IfStatement","src":"13595:74:7","trueBody":{"id":1779,"nodeType":"Block","src":"13609:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":1775,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13635:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"13635:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1772,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13623:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"13623:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1778,"nodeType":"ExpressionStatement","src":"13623:35:7"}]}},{"expression":{"id":1781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"13685:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1759,"id":1782,"nodeType":"Return","src":"13678:13:7"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"12760:678:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:7","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"b","nameLocation":"13467:1:7","nodeType":"VariableDeclaration","scope":1784,"src":"13459:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"e","nameLocation":"13478:1:7","nodeType":"VariableDeclaration","scope":1784,"src":"13470:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"m","nameLocation":"13489:1:7","nodeType":"VariableDeclaration","scope":1784,"src":"13481:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:7"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"13515:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:7"},"scope":2763,"src":"13443:255:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1807,"nodeType":"Block","src":"14552:1493:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"14566:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"14562:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1797,"id":1804,"nodeType":"Return","src":"14574:17:7"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:7","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:7"},"nodeType":"YulFunctionCall","src":"14651:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:7"},"nodeType":"YulFunctionCall","src":"15563:17:7"},"nodeType":"YulExpressionStatement","src":"15563:17:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:7"},"nodeType":"YulFunctionCall","src":"15600:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:7"},"nodeType":"YulFunctionCall","src":"15593:28:7"},"nodeType":"YulExpressionStatement","src":"15593:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:7"},"nodeType":"YulFunctionCall","src":"15641:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:7"},"nodeType":"YulFunctionCall","src":"15634:28:7"},"nodeType":"YulExpressionStatement","src":"15634:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:7","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:7"},"nodeType":"YulFunctionCall","src":"15682:14:7"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:7"},"nodeType":"YulFunctionCall","src":"15675:25:7"},"nodeType":"YulExpressionStatement","src":"15675:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:7","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:7"},"nodeType":"YulFunctionCall","src":"15720:14:7"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:7"},"nodeType":"YulFunctionCall","src":"15713:25:7"},"nodeType":"YulExpressionStatement","src":"15713:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:7","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:7"},"nodeType":"YulFunctionCall","src":"15758:14:7"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:7"},"nodeType":"YulFunctionCall","src":"15751:25:7"},"nodeType":"YulExpressionStatement","src":"15751:25:7"},{"nodeType":"YulAssignment","src":"15938:57:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:7"},"nodeType":"YulFunctionCall","src":"15960:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:7","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:7","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:7","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:7"},"nodeType":"YulFunctionCall","src":"15949:46:7"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:7"}]},{"nodeType":"YulAssignment","src":"16008:21:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:7","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:7"},"nodeType":"YulFunctionCall","src":"16018:11:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1787,"isOffset":false,"isSlot":false,"src":"15698:1:7","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"15736:1:7","valueSize":1},{"declaration":1791,"isOffset":false,"isSlot":false,"src":"15774:1:7","valueSize":1},{"declaration":1796,"isOffset":false,"isSlot":false,"src":"16008:6:7","valueSize":1},{"declaration":1794,"isOffset":false,"isSlot":false,"src":"15938:7:7","valueSize":1}],"flags":["memory-safe"],"id":1806,"nodeType":"InlineAssembly","src":"14601:1438:7"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"13704:738:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:7","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"b","nameLocation":"14474:1:7","nodeType":"VariableDeclaration","scope":1808,"src":"14466:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"e","nameLocation":"14485:1:7","nodeType":"VariableDeclaration","scope":1808,"src":"14477:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"m","nameLocation":"14496:1:7","nodeType":"VariableDeclaration","scope":1808,"src":"14488:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:7"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"success","nameLocation":"14527:7:7","nodeType":"VariableDeclaration","scope":1808,"src":"14522:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"result","nameLocation":"14544:6:7","nodeType":"VariableDeclaration","scope":1808,"src":"14536:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:7"},"scope":2763,"src":"14447:1598:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1843,"nodeType":"Block","src":"16242:179:7","statements":[{"assignments":[1821,1823],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"success","nameLocation":"16258:7:7","nodeType":"VariableDeclaration","scope":1843,"src":"16253:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1820,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"result","nameLocation":"16280:6:7","nodeType":"VariableDeclaration","scope":1843,"src":"16267:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1829,"initialValue":{"arguments":[{"id":1825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"16300:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1826,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"16303:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1827,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"16306:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1824,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1808,1890],"referencedDeclaration":1890,"src":"16290:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:7"},{"condition":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:7","subExpression":{"id":1830,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"16323:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1840,"nodeType":"IfStatement","src":"16318:74:7","trueBody":{"id":1839,"nodeType":"Block","src":"16332:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":1835,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16358:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"16358:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1832,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16346:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"16346:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1838,"nodeType":"ExpressionStatement","src":"16346:35:7"}]}},{"expression":{"id":1841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"16408:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1819,"id":1842,"nodeType":"Return","src":"16401:13:7"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"16051:85:7","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:7","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"b","nameLocation":"16170:1:7","nodeType":"VariableDeclaration","scope":1844,"src":"16157:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1810,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"e","nameLocation":"16186:1:7","nodeType":"VariableDeclaration","scope":1844,"src":"16173:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1812,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"m","nameLocation":"16202:1:7","nodeType":"VariableDeclaration","scope":1844,"src":"16189:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:7"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"16228:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:7"},"scope":2763,"src":"16141:280:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1889,"nodeType":"Block","src":"16675:771:7","statements":[{"condition":{"arguments":[{"id":1859,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"16700:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1858,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"16689:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1868,"nodeType":"IfStatement","src":"16685:47:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1857,"id":1867,"nodeType":"Return","src":"16704:28:7"}},{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:7","nodeType":"VariableDeclaration","scope":1889,"src":"16743:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1873,"initialValue":{"expression":{"id":1871,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"16758:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:7","memberName":"length","nodeType":"MemberAccess","src":"16758:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:7"},{"expression":{"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"16848:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1877,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"16874:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:7","memberName":"length","nodeType":"MemberAccess","src":"16874:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1879,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"16884:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:7","memberName":"length","nodeType":"MemberAccess","src":"16884:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1881,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"16894:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"16900:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1883,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"16903:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1884,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"16906:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1875,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1887,"nodeType":"ExpressionStatement","src":"16848:60:7"},{"AST":{"nodeType":"YulBlock","src":"16944:496:7","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:7","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:7"},"nodeType":"YulFunctionCall","src":"16973:17:7"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:7","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:7"},"nodeType":"YulFunctionCall","src":"17102:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:7","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:7"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:7"},"nodeType":"YulFunctionCall","src":"17124:13:7"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:7"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:7"},"nodeType":"YulFunctionCall","src":"17091:62:7"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:7"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:7"},"nodeType":"YulFunctionCall","src":"17302:20:7"},"nodeType":"YulExpressionStatement","src":"17302:20:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:7","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:7"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:7"},"nodeType":"YulFunctionCall","src":"17411:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:7"},"nodeType":"YulFunctionCall","src":"17398:32:7"},"nodeType":"YulExpressionStatement","src":"17398:32:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1870,"isOffset":false,"isSlot":false,"src":"17148:4:7","valueSize":1},{"declaration":1870,"isOffset":false,"isSlot":false,"src":"17317:4:7","valueSize":1},{"declaration":1870,"isOffset":false,"isSlot":false,"src":"17424:4:7","valueSize":1},{"declaration":1856,"isOffset":false,"isSlot":false,"src":"16977:6:7","valueSize":1},{"declaration":1856,"isOffset":false,"isSlot":false,"src":"17130:6:7","valueSize":1},{"declaration":1856,"isOffset":false,"isSlot":false,"src":"17309:6:7","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"17080:7:7","valueSize":1}],"flags":["memory-safe"],"id":1888,"nodeType":"InlineAssembly","src":"16919:521:7"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"16427:88:7","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:7","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"b","nameLocation":"16561:1:7","nodeType":"VariableDeclaration","scope":1890,"src":"16548:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"e","nameLocation":"16585:1:7","nodeType":"VariableDeclaration","scope":1890,"src":"16572:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1848,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"m","nameLocation":"16609:1:7","nodeType":"VariableDeclaration","scope":1890,"src":"16596:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1850,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:7"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"success","nameLocation":"16645:7:7","nodeType":"VariableDeclaration","scope":1890,"src":"16640:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1853,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"result","nameLocation":"16667:6:7","nodeType":"VariableDeclaration","scope":1890,"src":"16654:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:7"},"scope":2763,"src":"16520:926:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"17601:176:7","statements":[{"body":{"id":1918,"nodeType":"Block","src":"17658:92:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1909,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"17676:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1911,"indexExpression":{"id":1910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"17686:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"IfStatement","src":"17672:68:7","trueBody":{"id":1916,"nodeType":"Block","src":"17695:45:7","statements":[{"expression":{"hexValue":"66616c7365","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1897,"id":1915,"nodeType":"Return","src":"17713:12:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"17631:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1903,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"17635:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:7","memberName":"length","nodeType":"MemberAccess","src":"17635:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1919,"initializationExpression":{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"i","nameLocation":"17624:1:7","nodeType":"VariableDeclaration","scope":1919,"src":"17616:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1901,"initialValue":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:7"},"loopExpression":{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:7","subExpression":{"id":1906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"17655:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"17653:3:7"},"nodeType":"ForStatement","src":"17611:139:7"},{"expression":{"hexValue":"74727565","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1897,"id":1921,"nodeType":"Return","src":"17759:11:7"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"17452:72:7","text":" @dev Returns whether the provided byte array is zero."},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:7","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:7","nodeType":"VariableDeclaration","scope":1923,"src":"17549:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:7"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"17595:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1895,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:7"},"scope":2763,"src":"17529:248:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2141,"nodeType":"Block","src":"18137:5124:7","statements":[{"id":2140,"nodeType":"UncheckedBlock","src":"18147:5108:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"18241:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1937,"nodeType":"IfStatement","src":"18237:53:7","trueBody":{"id":1936,"nodeType":"Block","src":"18249:41:7","statements":[{"expression":{"id":1934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"18274:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1930,"id":1935,"nodeType":"Return","src":"18267:8:7"}]}},{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"aa","nameLocation":"19225:2:7","nodeType":"VariableDeclaration","scope":2140,"src":"19217:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1941,"initialValue":{"id":1940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"19230:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:7"},{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"xn","nameLocation":"19253:2:7","nodeType":"VariableDeclaration","scope":2140,"src":"19245:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"hexValue":"31","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19278:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"19274:92:7","trueBody":{"id":1960,"nodeType":"Block","src":"19296:70:7","statements":[{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1952,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19314:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"19314:10:7"},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19342:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"19342:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19383:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1977,"nodeType":"IfStatement","src":"19379:90:7","trueBody":{"id":1976,"nodeType":"Block","src":"19400:69:7","statements":[{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1968,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19418:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1971,"nodeType":"ExpressionStatement","src":"19418:9:7"},{"expression":{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1972,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19445:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1975,"nodeType":"ExpressionStatement","src":"19445:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19486:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"19482:90:7","trueBody":{"id":1992,"nodeType":"Block","src":"19503:69:7","statements":[{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19521:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"nodeType":"ExpressionStatement","src":"19521:9:7"},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1988,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19548:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"19548:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19589:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2009,"nodeType":"IfStatement","src":"19585:89:7","trueBody":{"id":2008,"nodeType":"Block","src":"19606:68:7","statements":[{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2000,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19624:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"19624:9:7"},{"expression":{"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2004,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19651:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2007,"nodeType":"ExpressionStatement","src":"19651:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19691:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"19687:87:7","trueBody":{"id":2024,"nodeType":"Block","src":"19707:67:7","statements":[{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19725:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"19725:8:7"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19751:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"19751:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19791:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"19787:87:7","trueBody":{"id":2040,"nodeType":"Block","src":"19807:67:7","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19825:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"19825:8:7"},{"expression":{"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19851:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2039,"nodeType":"ExpressionStatement","src":"19851:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2042,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"19891:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2053,"nodeType":"IfStatement","src":"19887:61:7","trueBody":{"id":2052,"nodeType":"Block","src":"19907:41:7","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2048,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"19925:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2051,"nodeType":"ExpressionStatement","src":"19925:8:7"}]}},{"expression":{"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"20368:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2056,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"20378:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ExpressionStatement","src":"20368:18:7"},{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2063,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22273:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22279:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22284:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2066,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22288:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"22273:23:7"},{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2074,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22382:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22388:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22393:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2077,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22397:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ExpressionStatement","src":"22382:23:7"},{"expression":{"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22493:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22499:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22504:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2088,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22508:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2095,"nodeType":"ExpressionStatement","src":"22493:23:7"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2096,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22602:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22608:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22613:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22617:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"22602:23:7"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22712:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22718:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22723:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2110,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22727:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ExpressionStatement","src":"22712:23:7"},{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2118,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22822:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22828:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"22833:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"22837:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"22822:23:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"23211:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"23232:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"23237:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2134,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"23241:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2130,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23216:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"23216:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1930,"id":2139,"nodeType":"Return","src":"23204:40:7"}]}]},"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"17783:292:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:7","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"a","nameLocation":"18102:1:7","nodeType":"VariableDeclaration","scope":2142,"src":"18094:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:7"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2142,"src":"18128:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:7"},"scope":2763,"src":"18080:5181:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"23434:171:7","statements":[{"id":2174,"nodeType":"UncheckedBlock","src":"23444:155:7","statements":[{"assignments":[2154],"declarations":[{"constant":false,"id":2154,"mutability":"mutable","name":"result","nameLocation":"23476:6:7","nodeType":"VariableDeclaration","scope":2174,"src":"23468:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2158,"initialValue":{"arguments":[{"id":2156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"23490:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2155,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2142,2176],"referencedDeclaration":2142,"src":"23485:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"23513:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2163,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"23555:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":2162,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"23538:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"23568:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"23577:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"23586:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2160,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23522:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"23522:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2152,"id":2173,"nodeType":"Return","src":"23506:82:7"}]}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"23267:86:7","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:7","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"a","nameLocation":"23380:1:7","nodeType":"VariableDeclaration","scope":2176,"src":"23372:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:7","nodeType":"VariableDeclaration","scope":2176,"src":"23383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"Rounding","nameLocations":["23383:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"23383:8:7"},"referencedDeclaration":1169,"src":"23383:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:7"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"23425:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:7"},"scope":2763,"src":"23358:247:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"23796:981:7","statements":[{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"result","nameLocation":"23814:6:7","nodeType":"VariableDeclaration","scope":2371,"src":"23806:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2187,"initialValue":{"hexValue":"30","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:7"},{"assignments":[2189],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"exp","nameLocation":"23842:3:7","nodeType":"VariableDeclaration","scope":2371,"src":"23834:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"nodeType":"VariableDeclarationStatement","src":"23834:11:7"},{"id":2368,"nodeType":"UncheckedBlock","src":"23855:893:7","statements":[{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2191,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"23879:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"23907:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2193,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23891:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"23891:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"23879:51:7"},{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"23944:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2208,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"23954:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"23944:13:7"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"23971:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2212,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"23981:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"23971:13:7"},{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2215,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"23999:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24026:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2217,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24010:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24010:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ExpressionStatement","src":"23999:49:7"},{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24062:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2232,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24072:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2234,"nodeType":"ExpressionStatement","src":"24062:13:7"},{"expression":{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24089:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2236,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24099:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ExpressionStatement","src":"24089:13:7"},{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24117:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24144:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2241,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24128:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24128:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"24117:49:7"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24180:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2256,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24190:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"24180:13:7"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24207:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2260,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24217:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2262,"nodeType":"ExpressionStatement","src":"24207:13:7"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24235:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24262:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2265,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24246:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24246:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"24235:49:7"},{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24298:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2280,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24308:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"24298:13:7"},{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24325:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2284,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24335:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"24325:13:7"},{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24353:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24363:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24363:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ExpressionStatement","src":"24353:47:7"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24414:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2304,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24424:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ExpressionStatement","src":"24414:13:7"},{"expression":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24441:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2308,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24451:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2310,"nodeType":"ExpressionStatement","src":"24441:13:7"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2311,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24469:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24495:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2313,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24479:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24479:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"24469:47:7"},{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24530:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2328,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24540:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"24530:13:7"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24557:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2332,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24567:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"24557:13:7"},{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24585:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24611:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24595:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24595:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2350,"nodeType":"ExpressionStatement","src":"24585:47:7"},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24646:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2352,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24656:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"24646:13:7"},{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24673:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2356,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"24683:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"24673:13:7"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24701:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"24727:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2360,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"24711:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"24711:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"24701:36:7"}]},{"expression":{"id":2369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"24764:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2183,"id":2370,"nodeType":"Return","src":"24757:13:7"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"23611:119:7","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:7","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"value","nameLocation":"23757:5:7","nodeType":"VariableDeclaration","scope":2372,"src":"23749:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:7"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"23787:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:7"},"scope":2763,"src":"23735:1042:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"25010:175:7","statements":[{"id":2404,"nodeType":"UncheckedBlock","src":"25020:159:7","statements":[{"assignments":[2384],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"result","nameLocation":"25052:6:7","nodeType":"VariableDeclaration","scope":2404,"src":"25044:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2388,"initialValue":{"arguments":[{"id":2386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"25066:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2372,2406],"referencedDeclaration":2372,"src":"25061:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"25093:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2393,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"25135:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":2392,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"25118:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"25153:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"25162:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"25102:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"25102:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2382,"id":2403,"nodeType":"Return","src":"25086:82:7"}]}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"24783:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:7","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"value","nameLocation":"24952:5:7","nodeType":"VariableDeclaration","scope":2406,"src":"24944:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:7","nodeType":"VariableDeclaration","scope":2406,"src":"24959:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":2377,"nodeType":"UserDefinedTypeName","pathNode":{"id":2376,"name":"Rounding","nameLocations":["24959:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"24959:8:7"},"referencedDeclaration":1169,"src":"24959:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:7"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"25001:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:7"},"scope":2763,"src":"24930:255:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"25378:854:7","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"result","nameLocation":"25396:6:7","nodeType":"VariableDeclaration","scope":2534,"src":"25388:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2417,"initialValue":{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:7"},{"id":2531,"nodeType":"UncheckedBlock","src":"25416:787:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25444:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2434,"nodeType":"IfStatement","src":"25440:103:7","trueBody":{"id":2433,"nodeType":"Block","src":"25463:80:7","statements":[{"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25481:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2428,"nodeType":"ExpressionStatement","src":"25481:17:7"},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"25516:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"nodeType":"ExpressionStatement","src":"25516:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25560:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"25556:103:7","trueBody":{"id":2450,"nodeType":"Block","src":"25579:80:7","statements":[{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25597:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"25597:17:7"},{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"25632:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"25632:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25676:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2468,"nodeType":"IfStatement","src":"25672:103:7","trueBody":{"id":2467,"nodeType":"Block","src":"25695:80:7","statements":[{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25713:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"25713:17:7"},{"expression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"25748:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2466,"nodeType":"ExpressionStatement","src":"25748:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25792:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"IfStatement","src":"25788:100:7","trueBody":{"id":2484,"nodeType":"Block","src":"25810:78:7","statements":[{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25828:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"25828:16:7"},{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"25862:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"25862:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25905:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"25901:100:7","trueBody":{"id":2501,"nodeType":"Block","src":"25923:78:7","statements":[{"expression":{"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"25941:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2496,"nodeType":"ExpressionStatement","src":"25941:16:7"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"25975:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"25975:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"26018:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2519,"nodeType":"IfStatement","src":"26014:100:7","trueBody":{"id":2518,"nodeType":"Block","src":"26036:78:7","statements":[{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"26054:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ExpressionStatement","src":"26054:16:7"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"26088:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"26088:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"26131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"nodeType":"IfStatement","src":"26127:66:7","trueBody":{"id":2529,"nodeType":"Block","src":"26149:44:7","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"26167:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"26167:11:7"}]}}]},{"expression":{"id":2532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"26219:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2533,"nodeType":"Return","src":"26212:13:7"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"25191:120:7","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:7","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"25339:5:7","nodeType":"VariableDeclaration","scope":2535,"src":"25331:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:7"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"25369:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:7"},"scope":2763,"src":"25316:916:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"26467:177:7","statements":[{"id":2567,"nodeType":"UncheckedBlock","src":"26477:161:7","statements":[{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"result","nameLocation":"26509:6:7","nodeType":"VariableDeclaration","scope":2567,"src":"26501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2551,"initialValue":{"arguments":[{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"26524:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2535,2569],"referencedDeclaration":2535,"src":"26518:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"26551:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2556,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"26593:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":2555,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"26576:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"26612:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"26621:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2553,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"26560:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"26560:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2545,"id":2566,"nodeType":"Return","src":"26544:83:7"}]}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"26238:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:7","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"value","nameLocation":"26409:5:7","nodeType":"VariableDeclaration","scope":2569,"src":"26401:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:7","nodeType":"VariableDeclaration","scope":2569,"src":"26416:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":2540,"nodeType":"UserDefinedTypeName","pathNode":{"id":2539,"name":"Rounding","nameLocations":["26416:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"26416:8:7"},"referencedDeclaration":1169,"src":"26416:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:7"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"26458:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:7"},"scope":2763,"src":"26386:258:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"26964:674:7","statements":[{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"result","nameLocation":"26982:6:7","nodeType":"VariableDeclaration","scope":2705,"src":"26974:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"initialValue":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:7"},{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:7","nodeType":"VariableDeclaration","scope":2705,"src":"27002:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"nodeType":"VariableDeclarationStatement","src":"27002:12:7"},{"id":2702,"nodeType":"UncheckedBlock","src":"27024:585:7","statements":[{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2584,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27048:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27071:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2585,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27055:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27055:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"27048:46:7"},{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27108:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27118:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"27108:20:7"},{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27142:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27152:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"27142:19:7"},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27176:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27199:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27183:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27183:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"27176:45:7"},{"expression":{"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27235:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27245:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"nodeType":"ExpressionStatement","src":"27235:19:7"},{"expression":{"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27268:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27278:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2635,"nodeType":"ExpressionStatement","src":"27268:18:7"},{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27301:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27324:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2637,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27308:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27308:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"27301:45:7"},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27360:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27370:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"27360:19:7"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27393:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27403:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"27393:18:7"},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2662,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27426:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27449:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27433:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27433:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2675,"nodeType":"ExpressionStatement","src":"27426:45:7"},{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27485:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27495:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"27485:19:7"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27518:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"27528:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"27518:18:7"},{"expression":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27551:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"27577:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2689,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27561:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27561:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2701,"nodeType":"ExpressionStatement","src":"27551:47:7"}]},{"expression":{"id":2703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"27625:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2576,"id":2704,"nodeType":"Return","src":"27618:13:7"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"26650:246:7","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:7","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"26925:5:7","nodeType":"VariableDeclaration","scope":2706,"src":"26917:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:7"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"26955:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:7"},"scope":2763,"src":"26901:737:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"27875:184:7","statements":[{"id":2741,"nodeType":"UncheckedBlock","src":"27885:168:7","statements":[{"assignments":[2718],"declarations":[{"constant":false,"id":2718,"mutability":"mutable","name":"result","nameLocation":"27917:6:7","nodeType":"VariableDeclaration","scope":2741,"src":"27909:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2722,"initialValue":{"arguments":[{"id":2720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"27933:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2706,2743],"referencedDeclaration":2706,"src":"27926:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"27960:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2727,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"28002:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":2726,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"27985:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1169_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"28021:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"28036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2724,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"27969:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"27969:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2716,"id":2740,"nodeType":"Return","src":"27953:89:7"}]}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"27644:144:7","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:7","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"value","nameLocation":"27817:5:7","nodeType":"VariableDeclaration","scope":2743,"src":"27809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:7","nodeType":"VariableDeclaration","scope":2743,"src":"27824:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":2711,"nodeType":"UserDefinedTypeName","pathNode":{"id":2710,"name":"Rounding","nameLocations":["27824:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"27824:8:7"},"referencedDeclaration":1169,"src":"27824:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:7"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"27866:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:7"},"scope":2763,"src":"27793:266:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2761,"nodeType":"Block","src":"28257:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2754,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"28280:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2752,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:7","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2751,"id":2760,"nodeType":"Return","src":"28267:31:7"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"28065:113:7","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:7","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:7","nodeType":"VariableDeclaration","scope":2762,"src":"28209:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"},"typeName":{"id":2746,"nodeType":"UserDefinedTypeName","pathNode":{"id":2745,"name":"Rounding","nameLocations":["28209:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1169,"src":"28209:8:7"},"referencedDeclaration":1169,"src":"28209:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1169","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:7"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"28251:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2749,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:7"},"scope":2763,"src":"28183:122:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2764,"src":"281:28026:7","usedErrors":[],"usedEvents":[]}],"src":"103:28205:7"},"id":7},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4528]},"id":4529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2765,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"218:550:8","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4528,"linearizedBaseContracts":[4528],"name":"SafeCast","nameLocation":"777:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"792:68:8","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2773,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:8","nodeType":"ErrorDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"bits","nameLocation":"908:4:8","nodeType":"VariableDeclaration","scope":2773,"src":"902:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2768,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"value","nameLocation":"922:5:8","nodeType":"VariableDeclaration","scope":2773,"src":"914:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:8"},"src":"865:64:8"},{"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"935:75:8","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2778,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:8","nodeType":"ErrorDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"value","nameLocation":"1056:5:8","nodeType":"VariableDeclaration","scope":2778,"src":"1049:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2775,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:8"},"src":"1015:48:8"},{"documentation":{"id":2779,"nodeType":"StructuredDocumentation","src":"1069:67:8","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2785,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:8","nodeType":"ErrorDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"bits","nameLocation":"1183:4:8","nodeType":"VariableDeclaration","scope":2785,"src":"1177:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2780,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"value","nameLocation":"1196:5:8","nodeType":"VariableDeclaration","scope":2785,"src":"1189:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2782,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:8"},"src":"1141:62:8"},{"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"1209:75:8","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2790,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:8","nodeType":"ErrorDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"value","nameLocation":"1331:5:8","nodeType":"VariableDeclaration","scope":2790,"src":"1323:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:8"},"src":"1289:49:8"},{"body":{"id":2817,"nodeType":"Block","src":"1695:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1709:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2800,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:8","memberName":"max","nodeType":"MemberAccess","src":"1717:17:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2811,"nodeType":"IfStatement","src":"1705:105:8","trueBody":{"id":2810,"nodeType":"Block","src":"1736:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1793:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2805,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1757:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2809,"nodeType":"RevertStatement","src":"1750:49:8"}]}},{"expression":{"arguments":[{"id":2814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1834:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2812,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{}}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2797,"id":2816,"nodeType":"Return","src":"1819:21:8"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"1344:280:8","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:8","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"value","nameLocation":"1656:5:8","nodeType":"VariableDeclaration","scope":2818,"src":"1648:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:8"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"1686:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2795,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:8"},"scope":4528,"src":"1629:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2845,"nodeType":"Block","src":"2204:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2828,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:8","memberName":"max","nodeType":"MemberAccess","src":"2226:17:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"2214:105:8","trueBody":{"id":2838,"nodeType":"Block","src":"2245:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2266:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"RevertStatement","src":"2259:49:8"}]}},{"expression":{"arguments":[{"id":2842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"2343:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2840,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:8","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2825,"id":2844,"nodeType":"Return","src":"2328:21:8"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"1853:280:8","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2846,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:8","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"value","nameLocation":"2165:5:8","nodeType":"VariableDeclaration","scope":2846,"src":"2157:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:8"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"2195:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2823,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:8"},"scope":4528,"src":"2138:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2873,"nodeType":"Block","src":"2713:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"2727:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2856,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:8","memberName":"max","nodeType":"MemberAccess","src":"2735:17:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"IfStatement","src":"2723:105:8","trueBody":{"id":2866,"nodeType":"Block","src":"2754:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"2811:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2861,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2775:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2865,"nodeType":"RevertStatement","src":"2768:49:8"}]}},{"expression":{"arguments":[{"id":2870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"2852:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2868,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:8","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2853,"id":2872,"nodeType":"Return","src":"2837:21:8"}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"2362:280:8","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:8","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"value","nameLocation":"2674:5:8","nodeType":"VariableDeclaration","scope":2874,"src":"2666:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:8"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2874,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2851,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:8"},"scope":4528,"src":"2647:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2901,"nodeType":"Block","src":"3222:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3236:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2884,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:8","memberName":"max","nodeType":"MemberAccess","src":"3244:17:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"3232:105:8","trueBody":{"id":2894,"nodeType":"Block","src":"3263:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3320:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"3284:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2893,"nodeType":"RevertStatement","src":"3277:49:8"}]}},{"expression":{"arguments":[{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3361:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2896,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:8","typeDescriptions":{}}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2881,"id":2900,"nodeType":"Return","src":"3346:21:8"}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"2871:280:8","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:8","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"value","nameLocation":"3183:5:8","nodeType":"VariableDeclaration","scope":2902,"src":"3175:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:8"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"3213:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2879,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:8"},"scope":4528,"src":"3156:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"3731:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3745:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2912,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2911,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:8","memberName":"max","nodeType":"MemberAccess","src":"3753:17:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"3741:105:8","trueBody":{"id":2922,"nodeType":"Block","src":"3772:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3829:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2917,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"3793:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"RevertStatement","src":"3786:49:8"}]}},{"expression":{"arguments":[{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3870:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2924,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:8","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2909,"id":2928,"nodeType":"Return","src":"3855:21:8"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"3380:280:8","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:8","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"value","nameLocation":"3692:5:8","nodeType":"VariableDeclaration","scope":2930,"src":"3684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:8"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"3722:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2907,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:8"},"scope":4528,"src":"3665:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2957,"nodeType":"Block","src":"4240:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4254:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2940,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2939,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:8","memberName":"max","nodeType":"MemberAccess","src":"4262:17:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"nodeType":"IfStatement","src":"4250:105:8","trueBody":{"id":2950,"nodeType":"Block","src":"4281:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4338:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2945,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4302:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"RevertStatement","src":"4295:49:8"}]}},{"expression":{"arguments":[{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4379:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2952,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:8","typeDescriptions":{}}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2937,"id":2956,"nodeType":"Return","src":"4364:21:8"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"3889:280:8","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2958,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:8","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"value","nameLocation":"4201:5:8","nodeType":"VariableDeclaration","scope":2958,"src":"4193:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:8"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2958,"src":"4231:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2935,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:8"},"scope":4528,"src":"4174:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2985,"nodeType":"Block","src":"4749:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2968,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2967,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:8","memberName":"max","nodeType":"MemberAccess","src":"4771:17:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2979,"nodeType":"IfStatement","src":"4759:105:8","trueBody":{"id":2978,"nodeType":"Block","src":"4790:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4847:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2973,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4811:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"RevertStatement","src":"4804:49:8"}]}},{"expression":{"arguments":[{"id":2982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4888:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2980,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:8","typeDescriptions":{}}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2965,"id":2984,"nodeType":"Return","src":"4873:21:8"}]},"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"4398:280:8","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2986,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:8","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"value","nameLocation":"4710:5:8","nodeType":"VariableDeclaration","scope":2986,"src":"4702:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:8"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2986,"src":"4740:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2963,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:8"},"scope":4528,"src":"4683:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"5258:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5272:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2996,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2995,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:8","memberName":"max","nodeType":"MemberAccess","src":"5280:17:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3007,"nodeType":"IfStatement","src":"5268:105:8","trueBody":{"id":3006,"nodeType":"Block","src":"5299:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5356:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"5320:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"RevertStatement","src":"5313:49:8"}]}},{"expression":{"arguments":[{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"5397:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3008,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:8","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2993,"id":3012,"nodeType":"Return","src":"5382:21:8"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"4907:280:8","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:8","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"value","nameLocation":"5219:5:8","nodeType":"VariableDeclaration","scope":3014,"src":"5211:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:8"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"5249:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2991,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:8"},"scope":4528,"src":"5192:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3041,"nodeType":"Block","src":"5767:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"5781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3024,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:8","memberName":"max","nodeType":"MemberAccess","src":"5789:17:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3035,"nodeType":"IfStatement","src":"5777:105:8","trueBody":{"id":3034,"nodeType":"Block","src":"5808:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"5865:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3029,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"5829:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"RevertStatement","src":"5822:49:8"}]}},{"expression":{"arguments":[{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"5906:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3036,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:8","typeDescriptions":{}}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3021,"id":3040,"nodeType":"Return","src":"5891:21:8"}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"5416:280:8","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:8","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"value","nameLocation":"5728:5:8","nodeType":"VariableDeclaration","scope":3042,"src":"5720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:8"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"5758:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3019,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:8"},"scope":4528,"src":"5701:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"6276:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6290:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3052,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:8","memberName":"max","nodeType":"MemberAccess","src":"6298:17:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"6286:105:8","trueBody":{"id":3062,"nodeType":"Block","src":"6317:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3057,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6338:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3061,"nodeType":"RevertStatement","src":"6331:49:8"}]}},{"expression":{"arguments":[{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6415:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3064,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:8","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3049,"id":3068,"nodeType":"Return","src":"6400:21:8"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"5925:280:8","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:8","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"value","nameLocation":"6237:5:8","nodeType":"VariableDeclaration","scope":3070,"src":"6229:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:8"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"6267:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3047,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:8"},"scope":4528,"src":"6210:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3097,"nodeType":"Block","src":"6785:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6799:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3080,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3079,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:8","memberName":"max","nodeType":"MemberAccess","src":"6807:17:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"nodeType":"IfStatement","src":"6795:105:8","trueBody":{"id":3090,"nodeType":"Block","src":"6826:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6883:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3085,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6847:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3089,"nodeType":"RevertStatement","src":"6840:49:8"}]}},{"expression":{"arguments":[{"id":3094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6924:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3092,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3077,"id":3096,"nodeType":"Return","src":"6909:21:8"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"6434:280:8","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:8","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"value","nameLocation":"6746:5:8","nodeType":"VariableDeclaration","scope":3098,"src":"6738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:8"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3098,"src":"6776:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3075,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:8"},"scope":4528,"src":"6719:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"7294:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"7308:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3108,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:8","memberName":"max","nodeType":"MemberAccess","src":"7316:17:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3119,"nodeType":"IfStatement","src":"7304:105:8","trueBody":{"id":3118,"nodeType":"Block","src":"7335:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"7392:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3113,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"7356:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3117,"nodeType":"RevertStatement","src":"7349:49:8"}]}},{"expression":{"arguments":[{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"7433:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3120,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:8","typeDescriptions":{}}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3105,"id":3124,"nodeType":"Return","src":"7418:21:8"}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"6943:280:8","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:8","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"value","nameLocation":"7255:5:8","nodeType":"VariableDeclaration","scope":3126,"src":"7247:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:8"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"7285:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3103,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:8"},"scope":4528,"src":"7228:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"7803:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7817:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3136,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3135,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:8","memberName":"max","nodeType":"MemberAccess","src":"7825:17:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3147,"nodeType":"IfStatement","src":"7813:105:8","trueBody":{"id":3146,"nodeType":"Block","src":"7844:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7901:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"7865:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"RevertStatement","src":"7858:49:8"}]}},{"expression":{"arguments":[{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7942:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3148,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:8","typeDescriptions":{}}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3133,"id":3152,"nodeType":"Return","src":"7927:21:8"}]},"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"7452:280:8","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:8","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"value","nameLocation":"7764:5:8","nodeType":"VariableDeclaration","scope":3154,"src":"7756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:8"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3154,"src":"7794:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3131,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:8"},"scope":4528,"src":"7737:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"8312:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"8326:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3164,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3163,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:8","memberName":"max","nodeType":"MemberAccess","src":"8334:17:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3175,"nodeType":"IfStatement","src":"8322:105:8","trueBody":{"id":3174,"nodeType":"Block","src":"8353:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"8410:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3169,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"8374:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"RevertStatement","src":"8367:49:8"}]}},{"expression":{"arguments":[{"id":3178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"8451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3176,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:8","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3161,"id":3180,"nodeType":"Return","src":"8436:21:8"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"7961:280:8","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:8","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"value","nameLocation":"8273:5:8","nodeType":"VariableDeclaration","scope":3182,"src":"8265:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:8"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"8303:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3159,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:8"},"scope":4528,"src":"8246:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"8821:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"8835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3192,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3191,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:8","memberName":"max","nodeType":"MemberAccess","src":"8843:17:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3203,"nodeType":"IfStatement","src":"8831:105:8","trueBody":{"id":3202,"nodeType":"Block","src":"8862:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"8919:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3197,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"8883:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"RevertStatement","src":"8876:49:8"}]}},{"expression":{"arguments":[{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"8960:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3204,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:8","typeDescriptions":{}}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3189,"id":3208,"nodeType":"Return","src":"8945:21:8"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"8470:280:8","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:8","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"value","nameLocation":"8782:5:8","nodeType":"VariableDeclaration","scope":3210,"src":"8774:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:8"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3210,"src":"8812:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3187,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:8"},"scope":4528,"src":"8755:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"9330:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9344:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3220,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3219,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:8","memberName":"max","nodeType":"MemberAccess","src":"9352:17:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"IfStatement","src":"9340:105:8","trueBody":{"id":3230,"nodeType":"Block","src":"9371:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9428:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9392:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"RevertStatement","src":"9385:49:8"}]}},{"expression":{"arguments":[{"id":3234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9469:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3232,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:8","typeDescriptions":{}}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3217,"id":3236,"nodeType":"Return","src":"9454:21:8"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"8979:280:8","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:8","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"value","nameLocation":"9291:5:8","nodeType":"VariableDeclaration","scope":3238,"src":"9283:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:8"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"9321:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3215,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:8"},"scope":4528,"src":"9264:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3265,"nodeType":"Block","src":"9839:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9853:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3248,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3247,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:8","memberName":"max","nodeType":"MemberAccess","src":"9861:17:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3259,"nodeType":"IfStatement","src":"9849:105:8","trueBody":{"id":3258,"nodeType":"Block","src":"9880:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9937:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3253,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9901:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3257,"nodeType":"RevertStatement","src":"9894:49:8"}]}},{"expression":{"arguments":[{"id":3262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"9978:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3260,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:8","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3245,"id":3264,"nodeType":"Return","src":"9963:21:8"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"9488:280:8","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3266,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:8","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"value","nameLocation":"9800:5:8","nodeType":"VariableDeclaration","scope":3266,"src":"9792:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:8"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3266,"src":"9830:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3243,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:8"},"scope":4528,"src":"9773:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"10348:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"10362:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3276,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3275,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:8","memberName":"max","nodeType":"MemberAccess","src":"10370:17:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3287,"nodeType":"IfStatement","src":"10358:105:8","trueBody":{"id":3286,"nodeType":"Block","src":"10389:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"10446:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3281,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10410:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3285,"nodeType":"RevertStatement","src":"10403:49:8"}]}},{"expression":{"arguments":[{"id":3290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"10487:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3288,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:8","typeDescriptions":{}}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3273,"id":3292,"nodeType":"Return","src":"10472:21:8"}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"9997:280:8","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:8","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"value","nameLocation":"10309:5:8","nodeType":"VariableDeclaration","scope":3294,"src":"10301:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:8"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"10339:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3271,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:8"},"scope":4528,"src":"10282:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"10857:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"10871:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3304,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3303,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:8","memberName":"max","nodeType":"MemberAccess","src":"10879:17:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3315,"nodeType":"IfStatement","src":"10867:105:8","trueBody":{"id":3314,"nodeType":"Block","src":"10898:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"10955:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3309,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10919:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3313,"nodeType":"RevertStatement","src":"10912:49:8"}]}},{"expression":{"arguments":[{"id":3318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"10996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3316,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:8","typeDescriptions":{}}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3301,"id":3320,"nodeType":"Return","src":"10981:21:8"}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"10506:280:8","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:8","nodeType":"FunctionDefinition","parameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"value","nameLocation":"10818:5:8","nodeType":"VariableDeclaration","scope":3322,"src":"10810:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:8"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3322,"src":"10848:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3299,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:8"},"scope":4528,"src":"10791:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3349,"nodeType":"Block","src":"11360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3332,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:8","memberName":"max","nodeType":"MemberAccess","src":"11382:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"IfStatement","src":"11370:103:8","trueBody":{"id":3342,"nodeType":"Block","src":"11400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3337,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"11421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3341,"nodeType":"RevertStatement","src":"11414:48:8"}]}},{"expression":{"arguments":[{"id":3346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3344,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:8","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3329,"id":3348,"nodeType":"Return","src":"11482:20:8"}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"11015:276:8","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"value","nameLocation":"11322:5:8","nodeType":"VariableDeclaration","scope":3350,"src":"11314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:8"},"returnParameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3350,"src":"11352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3327,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:8"},"scope":4528,"src":"11296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"11860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"11874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3360,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:8","memberName":"max","nodeType":"MemberAccess","src":"11882:16:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"11870:103:8","trueBody":{"id":3370,"nodeType":"Block","src":"11900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"11956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3365,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"11921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"RevertStatement","src":"11914:48:8"}]}},{"expression":{"arguments":[{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"11996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3372,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:8","typeDescriptions":{}}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3357,"id":3376,"nodeType":"Return","src":"11982:20:8"}]},"documentation":{"id":3351,"nodeType":"StructuredDocumentation","src":"11515:276:8","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"value","nameLocation":"11822:5:8","nodeType":"VariableDeclaration","scope":3378,"src":"11814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:8"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"11852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3355,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:8"},"scope":4528,"src":"11796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3405,"nodeType":"Block","src":"12360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"12374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3388,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:8","memberName":"max","nodeType":"MemberAccess","src":"12382:16:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3399,"nodeType":"IfStatement","src":"12370:103:8","trueBody":{"id":3398,"nodeType":"Block","src":"12400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"12456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3393,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"12421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3397,"nodeType":"RevertStatement","src":"12414:48:8"}]}},{"expression":{"arguments":[{"id":3402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"12496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3400,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:8","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3385,"id":3404,"nodeType":"Return","src":"12482:20:8"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"12015:276:8","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3406,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"value","nameLocation":"12322:5:8","nodeType":"VariableDeclaration","scope":3406,"src":"12314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:8"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3406,"src":"12352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3383,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:8"},"scope":4528,"src":"12296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3433,"nodeType":"Block","src":"12860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"12874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3416,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3415,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:8","memberName":"max","nodeType":"MemberAccess","src":"12882:16:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"12870:103:8","trueBody":{"id":3426,"nodeType":"Block","src":"12900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"12956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3421,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"12921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"RevertStatement","src":"12914:48:8"}]}},{"expression":{"arguments":[{"id":3430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"12996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3428,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:8","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3413,"id":3432,"nodeType":"Return","src":"12982:20:8"}]},"documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"12515:276:8","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"value","nameLocation":"12822:5:8","nodeType":"VariableDeclaration","scope":3434,"src":"12814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:8"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"12852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3411,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:8"},"scope":4528,"src":"12796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"13360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"13374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3444,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3443,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:8","memberName":"max","nodeType":"MemberAccess","src":"13382:16:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"IfStatement","src":"13370:103:8","trueBody":{"id":3454,"nodeType":"Block","src":"13400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"13456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3449,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"RevertStatement","src":"13414:48:8"}]}},{"expression":{"arguments":[{"id":3458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"13496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3456,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:8","typeDescriptions":{}}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3441,"id":3460,"nodeType":"Return","src":"13482:20:8"}]},"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"13015:276:8","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"value","nameLocation":"13322:5:8","nodeType":"VariableDeclaration","scope":3462,"src":"13314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:8"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"13352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3439,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:8"},"scope":4528,"src":"13296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3489,"nodeType":"Block","src":"13860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"13874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3472,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3471,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:8","memberName":"max","nodeType":"MemberAccess","src":"13882:16:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"nodeType":"IfStatement","src":"13870:103:8","trueBody":{"id":3482,"nodeType":"Block","src":"13900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"13956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3477,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3481,"nodeType":"RevertStatement","src":"13914:48:8"}]}},{"expression":{"arguments":[{"id":3486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"13996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3484,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:8","typeDescriptions":{}}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3469,"id":3488,"nodeType":"Return","src":"13982:20:8"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"13515:276:8","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3490,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"value","nameLocation":"13822:5:8","nodeType":"VariableDeclaration","scope":3490,"src":"13814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:8"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"13852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3467,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:8"},"scope":4528,"src":"13796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"14360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"14374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3500,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3499,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:8","memberName":"max","nodeType":"MemberAccess","src":"14382:16:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3511,"nodeType":"IfStatement","src":"14370:103:8","trueBody":{"id":3510,"nodeType":"Block","src":"14400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"14456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3505,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"14421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3509,"nodeType":"RevertStatement","src":"14414:48:8"}]}},{"expression":{"arguments":[{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"14496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3512,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:8","typeDescriptions":{}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3497,"id":3516,"nodeType":"Return","src":"14482:20:8"}]},"documentation":{"id":3491,"nodeType":"StructuredDocumentation","src":"14015:276:8","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"value","nameLocation":"14322:5:8","nodeType":"VariableDeclaration","scope":3518,"src":"14314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:8"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"14352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3495,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:8"},"scope":4528,"src":"14296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3545,"nodeType":"Block","src":"14860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"14874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3528,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:8","memberName":"max","nodeType":"MemberAccess","src":"14882:16:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"nodeType":"IfStatement","src":"14870:103:8","trueBody":{"id":3538,"nodeType":"Block","src":"14900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"14956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"14921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3537,"nodeType":"RevertStatement","src":"14914:48:8"}]}},{"expression":{"arguments":[{"id":3542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"14996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3540,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:8","typeDescriptions":{}}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3525,"id":3544,"nodeType":"Return","src":"14982:20:8"}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"14515:276:8","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"value","nameLocation":"14822:5:8","nodeType":"VariableDeclaration","scope":3546,"src":"14814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:8"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3546,"src":"14852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3523,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:8"},"scope":4528,"src":"14796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"15360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"15374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3556,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3555,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:8","memberName":"max","nodeType":"MemberAccess","src":"15382:16:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3567,"nodeType":"IfStatement","src":"15370:103:8","trueBody":{"id":3566,"nodeType":"Block","src":"15400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"15456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3561,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"15421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3565,"nodeType":"RevertStatement","src":"15414:48:8"}]}},{"expression":{"arguments":[{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"15496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3568,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:8","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3553,"id":3572,"nodeType":"Return","src":"15482:20:8"}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"15015:276:8","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"value","nameLocation":"15322:5:8","nodeType":"VariableDeclaration","scope":3574,"src":"15314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:8"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"15352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3551,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:8"},"scope":4528,"src":"15296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"15860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"15874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3584,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:8","memberName":"max","nodeType":"MemberAccess","src":"15882:16:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"15870:103:8","trueBody":{"id":3594,"nodeType":"Block","src":"15900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"15956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3589,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"15921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3593,"nodeType":"RevertStatement","src":"15914:48:8"}]}},{"expression":{"arguments":[{"id":3598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"15996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3596,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:8","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3581,"id":3600,"nodeType":"Return","src":"15982:20:8"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"15515:276:8","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"value","nameLocation":"15822:5:8","nodeType":"VariableDeclaration","scope":3602,"src":"15814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:8"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3602,"src":"15852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3579,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:8"},"scope":4528,"src":"15796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3629,"nodeType":"Block","src":"16360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"16374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3612,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:8","memberName":"max","nodeType":"MemberAccess","src":"16382:16:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"16370:103:8","trueBody":{"id":3622,"nodeType":"Block","src":"16400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"16456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"16421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3621,"nodeType":"RevertStatement","src":"16414:48:8"}]}},{"expression":{"arguments":[{"id":3626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"16496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3624,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:8","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3609,"id":3628,"nodeType":"Return","src":"16482:20:8"}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"16015:276:8","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"16322:5:8","nodeType":"VariableDeclaration","scope":3630,"src":"16314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:8"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3630,"src":"16352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3607,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:8"},"scope":4528,"src":"16296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3657,"nodeType":"Block","src":"16854:146:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16868:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3640,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:8","memberName":"max","nodeType":"MemberAccess","src":"16876:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"16864:101:8","trueBody":{"id":3650,"nodeType":"Block","src":"16893:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16948:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3645,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"16914:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"RevertStatement","src":"16907:47:8"}]}},{"expression":{"arguments":[{"id":3654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16987:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3652,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:8","typeDescriptions":{}}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3637,"id":3656,"nodeType":"Return","src":"16974:19:8"}]},"documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"16515:272:8","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:8","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"value","nameLocation":"16817:5:8","nodeType":"VariableDeclaration","scope":3658,"src":"16809:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:8"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3658,"src":"16847:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3635,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:8"},"scope":4528,"src":"16792:208:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3680,"nodeType":"Block","src":"17236:128:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"17250:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3674,"nodeType":"IfStatement","src":"17246:81:8","trueBody":{"id":3673,"nodeType":"Block","src":"17261:66:8","statements":[{"errorCall":{"arguments":[{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"17310:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3669,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"17282:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3672,"nodeType":"RevertStatement","src":"17275:41:8"}]}},{"expression":{"arguments":[{"id":3677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"17351:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:8","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3665,"id":3679,"nodeType":"Return","src":"17336:21:8"}]},"documentation":{"id":3659,"nodeType":"StructuredDocumentation","src":"17006:160:8","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:8","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"value","nameLocation":"17197:5:8","nodeType":"VariableDeclaration","scope":3681,"src":"17190:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3660,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:8"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3681,"src":"17227:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:8"},"scope":4528,"src":"17171:193:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"17761:150:8","statements":[{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"17771:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17791:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3690,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:8","typeDescriptions":{}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3695,"nodeType":"ExpressionStatement","src":"17771:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"17811:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17825:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3705,"nodeType":"IfStatement","src":"17807:98:8","trueBody":{"id":3704,"nodeType":"Block","src":"17832:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"17888:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3699,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"17853:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3703,"nodeType":"RevertStatement","src":"17846:48:8"}]}}]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"17370:312:8","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:8","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"value","nameLocation":"17712:5:8","nodeType":"VariableDeclaration","scope":3707,"src":"17705:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3683,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:8"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:8","nodeType":"VariableDeclaration","scope":3707,"src":"17742:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3686,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:8"},"scope":4528,"src":"17687:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"18308:150:8","statements":[{"expression":{"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"18318:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"18338:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3716,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:8","typeDescriptions":{}}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3721,"nodeType":"ExpressionStatement","src":"18318:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"18358:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"18372:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"18354:98:8","trueBody":{"id":3730,"nodeType":"Block","src":"18379:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"18435:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3725,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"18400:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"RevertStatement","src":"18393:48:8"}]}}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"17917:312:8","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:8","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"value","nameLocation":"18259:5:8","nodeType":"VariableDeclaration","scope":3733,"src":"18252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3709,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:8"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:8","nodeType":"VariableDeclaration","scope":3733,"src":"18289:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3712,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:8"},"scope":4528,"src":"18234:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"18855:150:8","statements":[{"expression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"18865:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"18885:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3742,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:8","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3747,"nodeType":"ExpressionStatement","src":"18865:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"18905:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"18919:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3757,"nodeType":"IfStatement","src":"18901:98:8","trueBody":{"id":3756,"nodeType":"Block","src":"18926:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"18982:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3751,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"18947:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3755,"nodeType":"RevertStatement","src":"18940:48:8"}]}}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"18464:312:8","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:8","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"value","nameLocation":"18806:5:8","nodeType":"VariableDeclaration","scope":3759,"src":"18799:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3735,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:8"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:8","nodeType":"VariableDeclaration","scope":3759,"src":"18836:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3738,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:8"},"scope":4528,"src":"18781:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3784,"nodeType":"Block","src":"19402:150:8","statements":[{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"19412:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"19432:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3768,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:8","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3773,"nodeType":"ExpressionStatement","src":"19412:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"19452:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"19466:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"19448:98:8","trueBody":{"id":3782,"nodeType":"Block","src":"19473:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"19529:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3777,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"19494:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3781,"nodeType":"RevertStatement","src":"19487:48:8"}]}}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"19011:312:8","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:8","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"value","nameLocation":"19353:5:8","nodeType":"VariableDeclaration","scope":3785,"src":"19346:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3761,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:8"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:8","nodeType":"VariableDeclaration","scope":3785,"src":"19383:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3764,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:8"},"scope":4528,"src":"19328:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"19949:150:8","statements":[{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"19959:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"19979:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3794,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:8","typeDescriptions":{}}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3799,"nodeType":"ExpressionStatement","src":"19959:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"19999:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"20013:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3809,"nodeType":"IfStatement","src":"19995:98:8","trueBody":{"id":3808,"nodeType":"Block","src":"20020:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"20076:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3803,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"20041:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3807,"nodeType":"RevertStatement","src":"20034:48:8"}]}}]},"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"19558:312:8","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:8","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"value","nameLocation":"19900:5:8","nodeType":"VariableDeclaration","scope":3811,"src":"19893:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3787,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:8"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:8","nodeType":"VariableDeclaration","scope":3811,"src":"19930:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3790,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:8"},"scope":4528,"src":"19875:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3836,"nodeType":"Block","src":"20496:150:8","statements":[{"expression":{"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"20506:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"20526:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3820,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:8","typeDescriptions":{}}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3825,"nodeType":"ExpressionStatement","src":"20506:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"20546:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"20560:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3835,"nodeType":"IfStatement","src":"20542:98:8","trueBody":{"id":3834,"nodeType":"Block","src":"20567:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"20623:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3829,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"20588:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3833,"nodeType":"RevertStatement","src":"20581:48:8"}]}}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"20105:312:8","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3837,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:8","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"value","nameLocation":"20447:5:8","nodeType":"VariableDeclaration","scope":3837,"src":"20440:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3813,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:8"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:8","nodeType":"VariableDeclaration","scope":3837,"src":"20477:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3816,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:8"},"scope":4528,"src":"20422:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"21043:150:8","statements":[{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"21053:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"21073:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3846,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:8","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3851,"nodeType":"ExpressionStatement","src":"21053:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"21093:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"21107:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"IfStatement","src":"21089:98:8","trueBody":{"id":3860,"nodeType":"Block","src":"21114:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"21170:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3855,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"21135:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3859,"nodeType":"RevertStatement","src":"21128:48:8"}]}}]},"documentation":{"id":3838,"nodeType":"StructuredDocumentation","src":"20652:312:8","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:8","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"value","nameLocation":"20994:5:8","nodeType":"VariableDeclaration","scope":3863,"src":"20987:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3839,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:8"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:8","nodeType":"VariableDeclaration","scope":3863,"src":"21024:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3842,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:8"},"scope":4528,"src":"20969:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"21590:150:8","statements":[{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"21600:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"21620:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3872,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:8","typeDescriptions":{}}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3877,"nodeType":"ExpressionStatement","src":"21600:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"21640:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"21654:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3887,"nodeType":"IfStatement","src":"21636:98:8","trueBody":{"id":3886,"nodeType":"Block","src":"21661:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"21717:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3881,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"21682:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3885,"nodeType":"RevertStatement","src":"21675:48:8"}]}}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"21199:312:8","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:8","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"21541:5:8","nodeType":"VariableDeclaration","scope":3889,"src":"21534:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3865,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:8"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:8","nodeType":"VariableDeclaration","scope":3889,"src":"21571:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3868,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:8"},"scope":4528,"src":"21516:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"22137:150:8","statements":[{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"22147:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"22167:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3898,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:8","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3903,"nodeType":"ExpressionStatement","src":"22147:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"22187:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"22201:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3913,"nodeType":"IfStatement","src":"22183:98:8","trueBody":{"id":3912,"nodeType":"Block","src":"22208:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"22264:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3907,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"22229:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3911,"nodeType":"RevertStatement","src":"22222:48:8"}]}}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"21746:312:8","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:8","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"value","nameLocation":"22088:5:8","nodeType":"VariableDeclaration","scope":3915,"src":"22081:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3891,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:8"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:8","nodeType":"VariableDeclaration","scope":3915,"src":"22118:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3894,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:8"},"scope":4528,"src":"22063:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"22684:150:8","statements":[{"expression":{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"22694:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"22714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3924,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:8","typeDescriptions":{}}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3929,"nodeType":"ExpressionStatement","src":"22694:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"22734:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"22748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3939,"nodeType":"IfStatement","src":"22730:98:8","trueBody":{"id":3938,"nodeType":"Block","src":"22755:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"22811:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3933,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"22776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3937,"nodeType":"RevertStatement","src":"22769:48:8"}]}}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"22293:312:8","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:8","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"value","nameLocation":"22635:5:8","nodeType":"VariableDeclaration","scope":3941,"src":"22628:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3917,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:8"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:8","nodeType":"VariableDeclaration","scope":3941,"src":"22665:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3920,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:8"},"scope":4528,"src":"22610:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"23231:150:8","statements":[{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"23241:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"23261:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3950,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:8","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3955,"nodeType":"ExpressionStatement","src":"23241:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"23281:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"23295:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3965,"nodeType":"IfStatement","src":"23277:98:8","trueBody":{"id":3964,"nodeType":"Block","src":"23302:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"23358:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"23323:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"RevertStatement","src":"23316:48:8"}]}}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"22840:312:8","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:8","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"value","nameLocation":"23182:5:8","nodeType":"VariableDeclaration","scope":3967,"src":"23175:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3943,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:8"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:8","nodeType":"VariableDeclaration","scope":3967,"src":"23212:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3946,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:8"},"scope":4528,"src":"23157:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3992,"nodeType":"Block","src":"23778:150:8","statements":[{"expression":{"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"23788:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23808:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3976,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:8","typeDescriptions":{}}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3981,"nodeType":"ExpressionStatement","src":"23788:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"23828:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23842:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3991,"nodeType":"IfStatement","src":"23824:98:8","trueBody":{"id":3990,"nodeType":"Block","src":"23849:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23905:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"23870:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3989,"nodeType":"RevertStatement","src":"23863:48:8"}]}}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"23387:312:8","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:8","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"value","nameLocation":"23729:5:8","nodeType":"VariableDeclaration","scope":3993,"src":"23722:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3969,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:8"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:8","nodeType":"VariableDeclaration","scope":3993,"src":"23759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3972,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:8"},"scope":4528,"src":"23704:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4018,"nodeType":"Block","src":"24325:150:8","statements":[{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"24335:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24355:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4002,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:8","typeDescriptions":{}}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4007,"nodeType":"ExpressionStatement","src":"24335:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"24375:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24389:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4017,"nodeType":"IfStatement","src":"24371:98:8","trueBody":{"id":4016,"nodeType":"Block","src":"24396:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"24452:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"24417:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4015,"nodeType":"RevertStatement","src":"24410:48:8"}]}}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"23934:312:8","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:8","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"value","nameLocation":"24276:5:8","nodeType":"VariableDeclaration","scope":4019,"src":"24269:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3995,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:8"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:8","nodeType":"VariableDeclaration","scope":4019,"src":"24306:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3998,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:8"},"scope":4528,"src":"24251:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4044,"nodeType":"Block","src":"24872:150:8","statements":[{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24882:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"24902:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4028,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:8","typeDescriptions":{}}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4033,"nodeType":"ExpressionStatement","src":"24882:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"24922:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"24936:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4043,"nodeType":"IfStatement","src":"24918:98:8","trueBody":{"id":4042,"nodeType":"Block","src":"24943:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"24999:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"24964:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4041,"nodeType":"RevertStatement","src":"24957:48:8"}]}}]},"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"24481:312:8","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:8","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"value","nameLocation":"24823:5:8","nodeType":"VariableDeclaration","scope":4045,"src":"24816:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4021,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:8"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:8","nodeType":"VariableDeclaration","scope":4045,"src":"24853:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4024,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:8"},"scope":4528,"src":"24798:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4070,"nodeType":"Block","src":"25419:150:8","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25429:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"25449:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4054,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:8","typeDescriptions":{}}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4059,"nodeType":"ExpressionStatement","src":"25429:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25469:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"25483:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"25465:98:8","trueBody":{"id":4068,"nodeType":"Block","src":"25490:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"25546:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"25511:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"RevertStatement","src":"25504:48:8"}]}}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"25028:312:8","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:8","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"value","nameLocation":"25370:5:8","nodeType":"VariableDeclaration","scope":4071,"src":"25363:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4047,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:8"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:8","nodeType":"VariableDeclaration","scope":4071,"src":"25400:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4050,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:8"},"scope":4528,"src":"25345:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4096,"nodeType":"Block","src":"25966:150:8","statements":[{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"25976:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"25996:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4080,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:8","typeDescriptions":{}}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4085,"nodeType":"ExpressionStatement","src":"25976:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"26016:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"26030:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4095,"nodeType":"IfStatement","src":"26012:98:8","trueBody":{"id":4094,"nodeType":"Block","src":"26037:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"26093:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"26058:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4093,"nodeType":"RevertStatement","src":"26051:48:8"}]}}]},"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"25575:312:8","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:8","nodeType":"FunctionDefinition","parameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"value","nameLocation":"25917:5:8","nodeType":"VariableDeclaration","scope":4097,"src":"25910:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4073,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:8"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:8","nodeType":"VariableDeclaration","scope":4097,"src":"25947:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4076,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:8"},"scope":4528,"src":"25892:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4122,"nodeType":"Block","src":"26513:150:8","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"26523:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"26543:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4106,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:8","typeDescriptions":{}}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4111,"nodeType":"ExpressionStatement","src":"26523:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"26563:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"26577:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4121,"nodeType":"IfStatement","src":"26559:98:8","trueBody":{"id":4120,"nodeType":"Block","src":"26584:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"26640:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"26605:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4119,"nodeType":"RevertStatement","src":"26598:48:8"}]}}]},"documentation":{"id":4098,"nodeType":"StructuredDocumentation","src":"26122:312:8","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:8","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"value","nameLocation":"26464:5:8","nodeType":"VariableDeclaration","scope":4123,"src":"26457:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4099,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:8"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:8","nodeType":"VariableDeclaration","scope":4123,"src":"26494:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4102,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:8"},"scope":4528,"src":"26439:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4148,"nodeType":"Block","src":"27060:150:8","statements":[{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"27070:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"27090:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4132,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:8","typeDescriptions":{}}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4137,"nodeType":"ExpressionStatement","src":"27070:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"27110:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"27124:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4147,"nodeType":"IfStatement","src":"27106:98:8","trueBody":{"id":4146,"nodeType":"Block","src":"27131:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"27187:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"27152:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4145,"nodeType":"RevertStatement","src":"27145:48:8"}]}}]},"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"26669:312:8","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:8","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"value","nameLocation":"27011:5:8","nodeType":"VariableDeclaration","scope":4149,"src":"27004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4125,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:8"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:8","nodeType":"VariableDeclaration","scope":4149,"src":"27041:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4128,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:8"},"scope":4528,"src":"26986:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4174,"nodeType":"Block","src":"27607:150:8","statements":[{"expression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"27617:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"27637:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4158,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:8","typeDescriptions":{}}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4163,"nodeType":"ExpressionStatement","src":"27617:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"27657:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"27671:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4173,"nodeType":"IfStatement","src":"27653:98:8","trueBody":{"id":4172,"nodeType":"Block","src":"27678:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"27734:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"27699:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4171,"nodeType":"RevertStatement","src":"27692:48:8"}]}}]},"documentation":{"id":4150,"nodeType":"StructuredDocumentation","src":"27216:312:8","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:8","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"value","nameLocation":"27558:5:8","nodeType":"VariableDeclaration","scope":4175,"src":"27551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4151,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:8"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:8","nodeType":"VariableDeclaration","scope":4175,"src":"27588:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4154,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:8"},"scope":4528,"src":"27533:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4200,"nodeType":"Block","src":"28147:148:8","statements":[{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"28157:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"28176:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4184,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:8","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4189,"nodeType":"ExpressionStatement","src":"28157:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"28196:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"28210:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4199,"nodeType":"IfStatement","src":"28192:97:8","trueBody":{"id":4198,"nodeType":"Block","src":"28217:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"28272:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"28238:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"RevertStatement","src":"28231:47:8"}]}}]},"documentation":{"id":4176,"nodeType":"StructuredDocumentation","src":"27763:307:8","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:8","nodeType":"FunctionDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"value","nameLocation":"28099:5:8","nodeType":"VariableDeclaration","scope":4201,"src":"28092:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4177,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:8"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:8","nodeType":"VariableDeclaration","scope":4201,"src":"28129:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4180,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:8"},"scope":4528,"src":"28075:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"28685:148:8","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"28695:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"28714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4210,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:8","typeDescriptions":{}}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4215,"nodeType":"ExpressionStatement","src":"28695:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"28734:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"28748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4225,"nodeType":"IfStatement","src":"28730:97:8","trueBody":{"id":4224,"nodeType":"Block","src":"28755:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"28810:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"28776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4223,"nodeType":"RevertStatement","src":"28769:47:8"}]}}]},"documentation":{"id":4202,"nodeType":"StructuredDocumentation","src":"28301:307:8","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:8","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"value","nameLocation":"28637:5:8","nodeType":"VariableDeclaration","scope":4227,"src":"28630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4203,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:8"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:8","nodeType":"VariableDeclaration","scope":4227,"src":"28667:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4206,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:8"},"scope":4528,"src":"28613:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"29223:148:8","statements":[{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"29233:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"29252:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4236,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:8","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4241,"nodeType":"ExpressionStatement","src":"29233:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"29272:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"29286:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4251,"nodeType":"IfStatement","src":"29268:97:8","trueBody":{"id":4250,"nodeType":"Block","src":"29293:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"29348:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"29314:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4249,"nodeType":"RevertStatement","src":"29307:47:8"}]}}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"28839:307:8","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:8","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"value","nameLocation":"29175:5:8","nodeType":"VariableDeclaration","scope":4253,"src":"29168:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4229,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:8"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:8","nodeType":"VariableDeclaration","scope":4253,"src":"29205:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4232,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:8"},"scope":4528,"src":"29151:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"29761:148:8","statements":[{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"29771:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"29790:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4262,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:8","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4267,"nodeType":"ExpressionStatement","src":"29771:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"29810:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"29824:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4277,"nodeType":"IfStatement","src":"29806:97:8","trueBody":{"id":4276,"nodeType":"Block","src":"29831:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"29886:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"29852:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4275,"nodeType":"RevertStatement","src":"29845:47:8"}]}}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"29377:307:8","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:8","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"value","nameLocation":"29713:5:8","nodeType":"VariableDeclaration","scope":4279,"src":"29706:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4255,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:8"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:8","nodeType":"VariableDeclaration","scope":4279,"src":"29743:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4258,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:8"},"scope":4528,"src":"29689:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4304,"nodeType":"Block","src":"30299:148:8","statements":[{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"30309:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"30328:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4288,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:8","typeDescriptions":{}}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4293,"nodeType":"ExpressionStatement","src":"30309:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"30348:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"30362:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4303,"nodeType":"IfStatement","src":"30344:97:8","trueBody":{"id":4302,"nodeType":"Block","src":"30369:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"30424:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"30390:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4301,"nodeType":"RevertStatement","src":"30383:47:8"}]}}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"29915:307:8","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:8","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"value","nameLocation":"30251:5:8","nodeType":"VariableDeclaration","scope":4305,"src":"30244:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4281,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:8"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:8","nodeType":"VariableDeclaration","scope":4305,"src":"30281:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4284,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:8"},"scope":4528,"src":"30227:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4330,"nodeType":"Block","src":"30837:148:8","statements":[{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"30847:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"30866:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4314,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:8","typeDescriptions":{}}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4319,"nodeType":"ExpressionStatement","src":"30847:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"30886:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"30900:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4329,"nodeType":"IfStatement","src":"30882:97:8","trueBody":{"id":4328,"nodeType":"Block","src":"30907:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"30962:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"30928:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4327,"nodeType":"RevertStatement","src":"30921:47:8"}]}}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"30453:307:8","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:8","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"value","nameLocation":"30789:5:8","nodeType":"VariableDeclaration","scope":4331,"src":"30782:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4307,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:8"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:8","nodeType":"VariableDeclaration","scope":4331,"src":"30819:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4310,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:8"},"scope":4528,"src":"30765:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"31375:148:8","statements":[{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"31385:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"31404:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4340,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:8","typeDescriptions":{}}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4345,"nodeType":"ExpressionStatement","src":"31385:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"31424:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"31438:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"IfStatement","src":"31420:97:8","trueBody":{"id":4354,"nodeType":"Block","src":"31445:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"31500:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"31466:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4353,"nodeType":"RevertStatement","src":"31459:47:8"}]}}]},"documentation":{"id":4332,"nodeType":"StructuredDocumentation","src":"30991:307:8","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:8","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"value","nameLocation":"31327:5:8","nodeType":"VariableDeclaration","scope":4357,"src":"31320:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4333,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:8"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:8","nodeType":"VariableDeclaration","scope":4357,"src":"31357:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4336,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:8"},"scope":4528,"src":"31303:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"31913:148:8","statements":[{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"31923:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"31942:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4366,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:8","typeDescriptions":{}}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4371,"nodeType":"ExpressionStatement","src":"31923:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"31962:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"31976:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"IfStatement","src":"31958:97:8","trueBody":{"id":4380,"nodeType":"Block","src":"31983:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"32038:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"32004:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4379,"nodeType":"RevertStatement","src":"31997:47:8"}]}}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"31529:307:8","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:8","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"value","nameLocation":"31865:5:8","nodeType":"VariableDeclaration","scope":4383,"src":"31858:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4359,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:8"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:8","nodeType":"VariableDeclaration","scope":4383,"src":"31895:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4362,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:8"},"scope":4528,"src":"31841:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4408,"nodeType":"Block","src":"32451:148:8","statements":[{"expression":{"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"32461:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"32480:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4392,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:8","typeDescriptions":{}}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4397,"nodeType":"ExpressionStatement","src":"32461:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"32500:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"32514:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4407,"nodeType":"IfStatement","src":"32496:97:8","trueBody":{"id":4406,"nodeType":"Block","src":"32521:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"32576:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"32542:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4405,"nodeType":"RevertStatement","src":"32535:47:8"}]}}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"32067:307:8","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:8","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"value","nameLocation":"32403:5:8","nodeType":"VariableDeclaration","scope":4409,"src":"32396:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4385,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:8"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:8","nodeType":"VariableDeclaration","scope":4409,"src":"32433:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4388,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:8"},"scope":4528,"src":"32379:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"32989:148:8","statements":[{"expression":{"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"32999:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"33018:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4418,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:8","typeDescriptions":{}}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4423,"nodeType":"ExpressionStatement","src":"32999:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"33038:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"33052:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4433,"nodeType":"IfStatement","src":"33034:97:8","trueBody":{"id":4432,"nodeType":"Block","src":"33059:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"33114:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"33080:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4431,"nodeType":"RevertStatement","src":"33073:47:8"}]}}]},"documentation":{"id":4410,"nodeType":"StructuredDocumentation","src":"32605:307:8","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:8","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"value","nameLocation":"32941:5:8","nodeType":"VariableDeclaration","scope":4435,"src":"32934:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4411,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:8"},"returnParameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:8","nodeType":"VariableDeclaration","scope":4435,"src":"32971:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4414,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:8"},"scope":4528,"src":"32917:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4460,"nodeType":"Block","src":"33527:148:8","statements":[{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"33537:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"33556:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4444,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:8","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4449,"nodeType":"ExpressionStatement","src":"33537:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"33576:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"33590:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"33572:97:8","trueBody":{"id":4458,"nodeType":"Block","src":"33597:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"33652:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"33618:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4457,"nodeType":"RevertStatement","src":"33611:47:8"}]}}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"33143:307:8","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:8","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"value","nameLocation":"33479:5:8","nodeType":"VariableDeclaration","scope":4461,"src":"33472:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4437,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:8"},"returnParameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:8","nodeType":"VariableDeclaration","scope":4461,"src":"33509:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4440,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:8"},"scope":4528,"src":"33455:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4486,"nodeType":"Block","src":"34058:146:8","statements":[{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"34068:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"34086:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4470,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:8","typeDescriptions":{}}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4475,"nodeType":"ExpressionStatement","src":"34068:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"34106:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"34120:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"nodeType":"IfStatement","src":"34102:96:8","trueBody":{"id":4484,"nodeType":"Block","src":"34127:71:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"34181:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"34148:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"RevertStatement","src":"34141:46:8"}]}}]},"documentation":{"id":4462,"nodeType":"StructuredDocumentation","src":"33681:302:8","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:8","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"34011:5:8","nodeType":"VariableDeclaration","scope":4487,"src":"34004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4463,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:8"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:8","nodeType":"VariableDeclaration","scope":4487,"src":"34041:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4466,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:8"},"scope":4528,"src":"33988:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"34444:250:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"34557:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4499,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:8","memberName":"max","nodeType":"MemberAccess","src":"34573:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:8","typeDescriptions":{}}},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4510,"nodeType":"IfStatement","src":"34553:105:8","trueBody":{"id":4509,"nodeType":"Block","src":"34592:66:8","statements":[{"errorCall":{"arguments":[{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"34641:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4505,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"34613:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4508,"nodeType":"RevertStatement","src":"34606:41:8"}]}},{"expression":{"arguments":[{"id":4513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"34681:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4511,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:8","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4494,"id":4515,"nodeType":"Return","src":"34667:20:8"}]},"documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"34210:165:8","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:8","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"value","nameLocation":"34406:5:8","nodeType":"VariableDeclaration","scope":4517,"src":"34398:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:8"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"34436:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4492,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:8"},"scope":4528,"src":"34380:314:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"34853:87:8","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:8","statements":[{"nodeType":"YulAssignment","src":"34902:22:8","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:8"},"nodeType":"YulFunctionCall","src":"34914:9:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:8"},"nodeType":"YulFunctionCall","src":"34907:17:8"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4520,"isOffset":false,"isSlot":false,"src":"34921:1:8","valueSize":1},{"declaration":4523,"isOffset":false,"isSlot":false,"src":"34902:1:8","valueSize":1}],"flags":["memory-safe"],"id":4525,"nodeType":"InlineAssembly","src":"34863:71:8"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"34700:90:8","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:8","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"b","nameLocation":"34816:1:8","nodeType":"VariableDeclaration","scope":4527,"src":"34811:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4519,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:8"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"u","nameLocation":"34850:1:8","nodeType":"VariableDeclaration","scope":4527,"src":"34842:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:8"},"scope":4528,"src":"34795:145:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4529,"src":"769:34173:8","usedErrors":[2773,2778,2785,2790],"usedEvents":[]}],"src":"192:34751:8"},"id":8},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[4528],"SignedMath":[4672]},"id":4673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4530,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4673,"sourceUnit":4529,"src":"135:40:9","symbolAliases":[{"foreign":{"id":4531,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"143:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"177:80:9","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4672,"linearizedBaseContracts":[4672],"name":"SignedMath","nameLocation":"266:10:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":4562,"nodeType":"Block","src":"746:215:9","statements":[{"id":4561,"nodeType":"UncheckedBlock","src":"756:199:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"894:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"900:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"904:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":4554,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"932:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4552,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"916:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4528_$","typeString":"type(library SafeCast)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4527,"src":"916:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4550,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:9","typeDescriptions":{}}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4544,"id":4560,"nodeType":"Return","src":"887:57:9"}]}]},"documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"283:374:9","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:9","nodeType":"FunctionDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"condition","nameLocation":"684:9:9","nodeType":"VariableDeclaration","scope":4563,"src":"679:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4535,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"a","nameLocation":"702:1:9","nodeType":"VariableDeclaration","scope":4563,"src":"695:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4537,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"b","nameLocation":"712:1:9","nodeType":"VariableDeclaration","scope":4563,"src":"705:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4539,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:9"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"738:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4542,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:9"},"scope":4672,"src":"662:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"1102:44:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1127:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"1131:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1134:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"1137:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4573,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"1119:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4572,"id":4580,"nodeType":"Return","src":"1112:27:9"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"967:66:9","text":" @dev Returns the largest of two signed numbers."},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:9","nodeType":"FunctionDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"a","nameLocation":"1058:1:9","nodeType":"VariableDeclaration","scope":4582,"src":"1051:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4565,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"b","nameLocation":"1068:1:9","nodeType":"VariableDeclaration","scope":4582,"src":"1061:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4567,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:9"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4582,"src":"1094:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4570,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:9"},"scope":4672,"src":"1038:108:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"1288:44:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"1313:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4594,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"1317:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"1320:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"1323:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"1305:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4591,"id":4599,"nodeType":"Return","src":"1298:27:9"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"1152:67:9","text":" @dev Returns the smallest of two signed numbers."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:9","nodeType":"FunctionDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"a","nameLocation":"1244:1:9","nodeType":"VariableDeclaration","scope":4601,"src":"1237:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4584,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4587,"mutability":"mutable","name":"b","nameLocation":"1254:1:9","nodeType":"VariableDeclaration","scope":4601,"src":"1247:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4586,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:9"},"returnParameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4601,"src":"1280:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4589,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:9"},"scope":4672,"src":"1224:108:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"1537:162:9","statements":[{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"x","nameLocation":"1606:1:9","nodeType":"VariableDeclaration","scope":4644,"src":"1599:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4611,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4625,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1611:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1615:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1622:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1626:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:9"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4626,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"1651:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4631,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"1671:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:9","typeDescriptions":{}}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4627,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:9","typeDescriptions":{}}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"1685:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1689:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4610,"id":4643,"nodeType":"Return","src":"1644:48:9"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"1338:126:9","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:9","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"a","nameLocation":"1493:1:9","nodeType":"VariableDeclaration","scope":4645,"src":"1486:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4603,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"b","nameLocation":"1503:1:9","nodeType":"VariableDeclaration","scope":4645,"src":"1496:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4605,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:9"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"1529:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4608,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:9"},"scope":4672,"src":"1469:230:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4670,"nodeType":"Block","src":"1843:767:9","statements":[{"id":4669,"nodeType":"UncheckedBlock","src":"1853:751:9","statements":[{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"mask","nameLocation":"2424:4:9","nodeType":"VariableDeclaration","scope":4669,"src":"2417:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4653,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4658,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2431:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"2576:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4662,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"2580:4:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4665,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"2588:4:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:9","typeDescriptions":{}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4652,"id":4668,"nodeType":"Return","src":"2560:33:9"}]}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"1705:78:9","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4671,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:9","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"n","nameLocation":"1808:1:9","nodeType":"VariableDeclaration","scope":4671,"src":"1801:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4647,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:9"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4671,"src":"1834:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:9"},"scope":4672,"src":"1788:822:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4673,"src":"258:2354:9","usedErrors":[],"usedEvents":[]}],"src":"109:2504:9"},"id":9},"contracts/PikaPay.sol":{"ast":{"absolutePath":"contracts/PikaPay.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"Math":[2763],"PikaFractionalAttestationToken":[4742],"PikaPay":[5055],"SignedMath":[4672],"Strings":[1157]},"id":5056,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":4674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"39:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5056,"sourceUnit":652,"src":"65:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":4676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5056,"sourceUnit":1158,"src":"121:51:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4677,"name":"ERC20","nameLocations":["217:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"217:5:10"},"id":4678,"nodeType":"InheritanceSpecifier","src":"217:5:10"}],"canonicalName":"PikaFractionalAttestationToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4742,"linearizedBaseContracts":[4742,651,41,755,729,785],"name":"PikaFractionalAttestationToken","nameLocation":"183:30:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3804eea0","id":4681,"mutability":"mutable","name":"pikaPay","nameLocation":"244:7:10","nodeType":"VariableDeclaration","scope":4742,"src":"229:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"},"typeName":{"id":4680,"nodeType":"UserDefinedTypeName","pathNode":{"id":4679,"name":"PikaPay","nameLocations":["229:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5055,"src":"229:7:10"},"referencedDeclaration":5055,"src":"229:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},"visibility":"public"},{"constant":false,"functionSelector":"4972134a","id":4683,"mutability":"mutable","name":"batchId","nameLocation":"272:7:10","nodeType":"VariableDeclaration","scope":4742,"src":"257:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":4719,"nodeType":"Block","src":"503:99:10","statements":[{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"513:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4706,"name":"_pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"523:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},"src":"513:18:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},"id":4708,"nodeType":"ExpressionStatement","src":"513:18:10"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4710,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"551:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"541:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"541:18:10"},{"expression":{"arguments":[{"expression":{"id":4714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"575:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"579:6:10","memberName":"sender","nodeType":"MemberAccess","src":"575:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4716,"name":"_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"587:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4713,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"569:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4718,"nodeType":"ExpressionStatement","src":"569:26:10"}]},"id":4720,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"hexValue":"50696b615061792042617463682023","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"422:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b","typeString":"literal_string \"PikaPay Batch #\""},"value":"PikaPay Batch #"},{"arguments":[{"id":4699,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"458:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4697,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"441:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1157_$","typeString":"type(library Strings)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"449:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":905,"src":"441:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"441:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b","typeString":"literal_string \"PikaPay Batch #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"408:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4693,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:10","typeDescriptions":{}}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"415:6:10","memberName":"concat","nodeType":"MemberAccess","src":"408:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"408:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"53464154","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"482:6:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff4088a1c29d28d8b661f286506af7a0050317a8054e0c211117fe55082495b3","typeString":"literal_string \"SFAT\""},"value":"SFAT"}],"id":4703,"kind":"baseConstructorSpecifier","modifierName":{"id":4692,"name":"ERC20","nameLocations":["389:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"389:5:10"},"nodeType":"ModifierInvocation","src":"389:109:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"_pikaPay","nameLocation":"315:8:10","nodeType":"VariableDeclaration","scope":4720,"src":"307:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"},"typeName":{"id":4685,"nodeType":"UserDefinedTypeName","pathNode":{"id":4684,"name":"PikaPay","nameLocations":["307:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5055,"src":"307:7:10"},"referencedDeclaration":5055,"src":"307:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},"visibility":"internal"},{"constant":false,"id":4688,"mutability":"mutable","name":"_batchId","nameLocation":"341:8:10","nodeType":"VariableDeclaration","scope":4720,"src":"333:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4690,"mutability":"mutable","name":"_supply","nameLocation":"367:7:10","nodeType":"VariableDeclaration","scope":4720,"src":"359:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"297:83:10"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[],"src":"503:0:10"},"scope":4742,"src":"286:316:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4740,"nodeType":"Block","src":"710:150:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4730,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"741:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"745:6:10","memberName":"sender","nodeType":"MemberAccess","src":"741:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4734,"name":"pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"763:7:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}],"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"755:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4732,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:10","typeDescriptions":{}}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"741:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792050696b615061792063616e207472616e736665722050696b614672616374696f6e616c4174746573746174696f6e546f6b656e","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"785:58:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_12c3996a1b2f9b75f23a8b643495018f51e47e8800f828b0c58e6c86d22d4aa3","typeString":"literal_string \"Only PikaPay can transfer PikaFractionalAttestationToken\""},"value":"Only PikaPay can transfer PikaFractionalAttestationToken"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12c3996a1b2f9b75f23a8b643495018f51e47e8800f828b0c58e6c86d22d4aa3","typeString":"literal_string \"Only PikaPay can transfer PikaFractionalAttestationToken\""}],"id":4729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"720:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:133:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4739,"nodeType":"ExpressionStatement","src":"720:133:10"}]},"id":4741,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"617:20:10","nodeType":"FunctionDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"647:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4721,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"664:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4741,"src":"681:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"637:57:10"},"returnParameters":{"id":4728,"nodeType":"ParameterList","parameters":[],"src":"710:0:10"},"scope":4742,"src":"608:252:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5056,"src":"174:688:10","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]},{"abstract":false,"baseContracts":[],"canonicalName":"PikaPay","contractDependencies":[4742],"contractKind":"contract","fullyImplemented":true,"id":5055,"linearizedBaseContracts":[5055],"name":"PikaPay","nameLocation":"873:7:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PikaPay.Batch","id":4757,"members":[{"constant":false,"id":4744,"mutability":"mutable","name":"batchId","nameLocation":"918:7:10","nodeType":"VariableDeclaration","scope":4757,"src":"910:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"squirrelFractionalAttestationToken","nameLocation":"966:34:10","nodeType":"VariableDeclaration","scope":4757,"src":"935:65:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"},"typeName":{"id":4746,"nodeType":"UserDefinedTypeName","pathNode":{"id":4745,"name":"PikaFractionalAttestationToken","nameLocations":["935:30:10"],"nodeType":"IdentifierPath","referencedDeclaration":4742,"src":"935:30:10"},"referencedDeclaration":4742,"src":"935:30:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"attestation","nameLocation":"1017:11:10","nodeType":"VariableDeclaration","scope":4757,"src":"1010:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4748,"name":"string","nodeType":"ElementaryTypeName","src":"1010:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"totalAmount","nameLocation":"1046:11:10","nodeType":"VariableDeclaration","scope":4757,"src":"1038:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"unwithdrawnAmount","nameLocation":"1075:17:10","nodeType":"VariableDeclaration","scope":4757,"src":"1067:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"token","nameLocation":"1108:5:10","nodeType":"VariableDeclaration","scope":4757,"src":"1102:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":4755,"nodeType":"UserDefinedTypeName","pathNode":{"id":4754,"name":"ERC20","nameLocations":["1102:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"1102:5:10"},"referencedDeclaration":651,"src":"1102:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"internal"}],"name":"Batch","nameLocation":"894:5:10","nodeType":"StructDefinition","scope":5055,"src":"887:274:10","visibility":"public"},{"constant":false,"functionSelector":"88c46fb8","id":4760,"mutability":"mutable","name":"numberOfBatches","nameLocation":"1182:15:10","nodeType":"VariableDeclaration","scope":5055,"src":"1167:34:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"b32c4d8d","id":4765,"mutability":"mutable","name":"batches","nameLocation":"1240:7:10","nodeType":"VariableDeclaration","scope":5055,"src":"1207:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch)"},"typeName":{"id":4764,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1207:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4763,"nodeType":"UserDefinedTypeName","pathNode":{"id":4762,"name":"Batch","nameLocations":["1226:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":4757,"src":"1226:5:10"},"referencedDeclaration":4757,"src":"1226:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage_ptr","typeString":"struct PikaPay.Batch"}}},"visibility":"public"},{"constant":false,"functionSelector":"e2015d5c","id":4771,"mutability":"mutable","name":"beneficiaryBalance","nameLocation":"1308:18:10","nodeType":"VariableDeclaration","scope":5055,"src":"1253:73:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":4770,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1253:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4769,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4767,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"89947f2c40e2bc19d51f690ba9378f7947cd741cac5f4f825d93e683ce24c5fb","id":4779,"name":"Deposit","nameLocation":"1339:7:10","nodeType":"EventDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"1355:7:10","nodeType":"VariableDeclaration","scope":4779,"src":"1347:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4775,"indexed":false,"mutability":"mutable","name":"attestation","nameLocation":"1371:11:10","nodeType":"VariableDeclaration","scope":4779,"src":"1364:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4774,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4777,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1392:6:10","nodeType":"VariableDeclaration","scope":4779,"src":"1384:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1384:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:53:10"},"src":"1333:67:10"},{"anonymous":false,"eventSelector":"8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d788","id":4791,"name":"AttestedWithdrawal","nameLocation":"1412:18:10","nodeType":"EventDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"1448:7:10","nodeType":"VariableDeclaration","scope":4791,"src":"1440:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1473:8:10","nodeType":"VariableDeclaration","scope":4791,"src":"1465:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4782,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4785,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1499:6:10","nodeType":"VariableDeclaration","scope":4791,"src":"1491:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4787,"indexed":false,"mutability":"mutable","name":"attestation","nameLocation":"1522:11:10","nodeType":"VariableDeclaration","scope":4791,"src":"1515:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4786,"name":"string","nodeType":"ElementaryTypeName","src":"1515:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4789,"indexed":false,"mutability":"mutable","name":"meta","nameLocation":"1550:4:10","nodeType":"VariableDeclaration","scope":4791,"src":"1543:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4788,"name":"string","nodeType":"ElementaryTypeName","src":"1543:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1430:130:10"},"src":"1406:155:10"},{"anonymous":false,"eventSelector":"0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c61","id":4801,"name":"PrivateWithdrawal","nameLocation":"1573:17:10","nodeType":"EventDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"1608:7:10","nodeType":"VariableDeclaration","scope":4801,"src":"1600:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4795,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1633:8:10","nodeType":"VariableDeclaration","scope":4801,"src":"1625:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"1625:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4797,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1659:6:10","nodeType":"VariableDeclaration","scope":4801,"src":"1651:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4799,"indexed":false,"mutability":"mutable","name":"meta","nameLocation":"1682:4:10","nodeType":"VariableDeclaration","scope":4801,"src":"1675:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4798,"name":"string","nodeType":"ElementaryTypeName","src":"1675:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1590:102:10"},"src":"1567:126:10"},{"body":{"id":4804,"nodeType":"Block","src":"1713:2:10","statements":[]},"id":4805,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4802,"nodeType":"ParameterList","parameters":[],"src":"1710:2:10"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[],"src":"1713:0:10"},"scope":5055,"src":"1699:16:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4876,"nodeType":"Block","src":"1890:772:10","statements":[{"expression":{"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4814,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"1900:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1900:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4817,"nodeType":"ExpressionStatement","src":"1900:20:10"},{"assignments":[4820],"declarations":[{"constant":false,"id":4820,"mutability":"mutable","name":"token","nameLocation":"1936:5:10","nodeType":"VariableDeclaration","scope":4876,"src":"1930:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":4819,"nodeType":"UserDefinedTypeName","pathNode":{"id":4818,"name":"ERC20","nameLocations":["1930:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"1930:5:10"},"referencedDeclaration":651,"src":"1930:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"internal"}],"id":4824,"initialValue":{"arguments":[{"id":4822,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"1950:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4821,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1944:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$651_$","typeString":"type(contract ERC20)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"nodeType":"VariableDeclarationStatement","src":"1930:34:10"},{"expression":{"arguments":[{"expression":{"id":4828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2027:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2031:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2027:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2047:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}],"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2039:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4830,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:10","typeDescriptions":{}}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2039:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4834,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4825,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2008:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2014:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":334,"src":"2008:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4836,"nodeType":"ExpressionStatement","src":"2008:54:10"},{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"tokenContract","nameLocation":"2158:13:10","nodeType":"VariableDeclaration","scope":4876,"src":"2127:44:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"},"typeName":{"id":4838,"nodeType":"UserDefinedTypeName","pathNode":{"id":4837,"name":"PikaFractionalAttestationToken","nameLocations":["2127:30:10"],"nodeType":"IdentifierPath","referencedDeclaration":4742,"src":"2127:30:10"},"referencedDeclaration":4742,"src":"2127:30:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}},"visibility":"internal"}],"id":4847,"initialValue":{"arguments":[{"id":4843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2226:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"}},{"id":4844,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2248:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4845,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$5055","typeString":"contract PikaPay"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2174:34:10","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_PikaPay_$5055_$_t_uint256_$_t_uint256_$returns$_t_contract$_PikaFractionalAttestationToken_$4742_$","typeString":"function (contract PikaPay,uint256,uint256) returns (contract PikaFractionalAttestationToken)"},"typeName":{"id":4841,"nodeType":"UserDefinedTypeName","pathNode":{"id":4840,"name":"PikaFractionalAttestationToken","nameLocations":["2178:30:10"],"nodeType":"IdentifierPath","referencedDeclaration":4742,"src":"2178:30:10"},"referencedDeclaration":4742,"src":"2178:30:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}},"nodeType":"VariableDeclarationStatement","src":"2127:175:10"},{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4848,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2312:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":4850,"indexExpression":{"id":4849,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2320:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2312:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4852,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2358:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4853,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"2387:13:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}},{"id":4854,"name":"_attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"2414:12:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":4855,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4856,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2461:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4857,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2482:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}],"id":4851,"name":"Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"2339:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Batch_$4757_storage_ptr_$","typeString":"type(struct PikaPay.Batch storage pointer)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2339:187:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_memory_ptr","typeString":"struct PikaPay.Batch memory"}},"src":"2312:214:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":4860,"nodeType":"ExpressionStatement","src":"2312:214:10"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4861,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2536:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4865,"indexExpression":{"id":4862,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2555:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2536:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4866,"indexExpression":{"expression":{"id":4863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2572:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2576:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2572:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2536:47:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4867,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2586:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2536:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"2536:57:10"},{"eventCall":{"arguments":[{"id":4871,"name":"numberOfBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"2616:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4872,"name":"_attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"2633:12:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":4873,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"2647:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2608:7:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,uint256)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"EmitStatement","src":"2603:52:10"}]},"functionSelector":"f3db9fe5","id":4877,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1773:7:10","nodeType":"FunctionDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1798:13:10","nodeType":"VariableDeclaration","scope":4877,"src":"1790:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"_attestation","nameLocation":"1837:12:10","nodeType":"VariableDeclaration","scope":4877,"src":"1821:28:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4808,"name":"string","nodeType":"ElementaryTypeName","src":"1821:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"_amount","nameLocation":"1867:7:10","nodeType":"VariableDeclaration","scope":4877,"src":"1859:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1780:100:10"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[],"src":"1890:0:10"},"scope":5055,"src":"1764:898:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4915,"nodeType":"Block","src":"2846:250:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4887,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2877:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4889,"indexExpression":{"id":4888,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"2896:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2877:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4892,"indexExpression":{"expression":{"id":4890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2906:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2910:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2906:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2877:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4893,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"2921:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2877:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2856:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:118:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4897,"nodeType":"ExpressionStatement","src":"2856:118:10"},{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4898,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"2984:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4902,"indexExpression":{"id":4899,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"3003:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2984:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4903,"indexExpression":{"expression":{"id":4900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3013:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3017:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3013:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2984:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4904,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2984:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ExpressionStatement","src":"2984:51:10"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4907,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"3045:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4910,"indexExpression":{"id":4908,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"3064:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3045:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4911,"indexExpression":{"id":4909,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"3074:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3045:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4912,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"3082:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3045:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"3045:44:10"}]},"functionSelector":"21f7500f","id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"transferBeneficialOwnership","nameLocation":"2731:27:10","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"_batchId","nameLocation":"2776:8:10","nodeType":"VariableDeclaration","scope":4916,"src":"2768:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"_to","nameLocation":"2802:3:10","nodeType":"VariableDeclaration","scope":4916,"src":"2794:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4880,"name":"address","nodeType":"ElementaryTypeName","src":"2794:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"_amount","nameLocation":"2823:7:10","nodeType":"VariableDeclaration","scope":4916,"src":"2815:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2758:78:10"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[],"src":"2846:0:10"},"scope":5055,"src":"2722:374:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4991,"nodeType":"Block","src":"3313:808:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4926,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"3344:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4928,"indexExpression":{"id":4927,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3363:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3344:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4931,"indexExpression":{"expression":{"id":4929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3373:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3377:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3373:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3344:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4932,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3344:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3409:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3323:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:118:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4936,"nodeType":"ExpressionStatement","src":"3323:118:10"},{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4937,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"3479:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":4941,"indexExpression":{"id":4938,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3498:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3479:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4942,"indexExpression":{"expression":{"id":4939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3508:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3512:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3508:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3479:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4943,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3479:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4945,"nodeType":"ExpressionStatement","src":"3479:51:10"},{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4946,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"3540:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":4948,"indexExpression":{"id":4947,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3548:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3540:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":4949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3558:17:10","memberName":"unwithdrawnAmount","nodeType":"MemberAccess","referencedDeclaration":4753,"src":"3540:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4950,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3540:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4952,"nodeType":"ExpressionStatement","src":"3540:46:10"},{"assignments":[4955],"declarations":[{"constant":false,"id":4955,"mutability":"mutable","name":"token","nameLocation":"3664:5:10","nodeType":"VariableDeclaration","scope":4991,"src":"3658:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":4954,"nodeType":"UserDefinedTypeName","pathNode":{"id":4953,"name":"ERC20","nameLocations":["3658:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"3658:5:10"},"referencedDeclaration":651,"src":"3658:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"internal"}],"id":4960,"initialValue":{"expression":{"baseExpression":{"id":4956,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"3672:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":4958,"indexExpression":{"id":4957,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3680:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3672:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":4959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3690:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4756,"src":"3672:23:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"nodeType":"VariableDeclarationStatement","src":"3658:37:10"},{"expression":{"arguments":[{"expression":{"id":4964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3761:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3765:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3761:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4966,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3773:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4961,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"3746:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3752:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"3746:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3746:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4968,"nodeType":"ExpressionStatement","src":"3746:35:10"},{"expression":{"arguments":[{"expression":{"id":4974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3921:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3921:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4976,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"3933:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":4969,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"3859:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":4971,"indexExpression":{"id":4970,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3867:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3859:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":4972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3877:34:10","memberName":"squirrelFractionalAttestationToken","nodeType":"MemberAccess","referencedDeclaration":4747,"src":"3859:52:10","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$4742","typeString":"contract PikaFractionalAttestationToken"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3912:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"3859:61:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:82:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4978,"nodeType":"ExpressionStatement","src":"3859:82:10"},{"eventCall":{"arguments":[{"id":4980,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"3989:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4011:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4015:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4011:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4983,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"4035:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4984,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4056:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":4986,"indexExpression":{"id":4985,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"4064:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4056:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":4987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4074:11:10","memberName":"attestation","nodeType":"MemberAccess","referencedDeclaration":4749,"src":"4056:29:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":4988,"name":"_meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"4099:5:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":4979,"name":"AttestedWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3957:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory,string memory)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:157:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4990,"nodeType":"EmitStatement","src":"3952:162:10"}]},"functionSelector":"05476414","id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawWithAttestation","nameLocation":"3192:23:10","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"_batchId","nameLocation":"3233:8:10","nodeType":"VariableDeclaration","scope":4992,"src":"3225:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"_amount","nameLocation":"3259:7:10","nodeType":"VariableDeclaration","scope":4992,"src":"3251:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4922,"mutability":"mutable","name":"_meta","nameLocation":"3292:5:10","nodeType":"VariableDeclaration","scope":4992,"src":"3276:21:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4921,"name":"string","nodeType":"ElementaryTypeName","src":"3276:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3215:88:10"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[],"src":"3313:0:10"},"scope":5055,"src":"3183:938:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5053,"nodeType":"Block","src":"4322:604:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5002,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4353:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":5004,"indexExpression":{"id":5003,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4372:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4353:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5007,"indexExpression":{"expression":{"id":5005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4382:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4386:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4382:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4353:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5008,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4353:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4418:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4332:118:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"ExpressionStatement","src":"4332:118:10"},{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5013,"name":"beneficiaryBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"4488:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":5017,"indexExpression":{"id":5014,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4507:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4488:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5018,"indexExpression":{"expression":{"id":5015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4517:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4521:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4517:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4488:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5019,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4532:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4488:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ExpressionStatement","src":"4488:51:10"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5022,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":5024,"indexExpression":{"id":5023,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4557:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4549:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":5025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4567:17:10","memberName":"unwithdrawnAmount","nodeType":"MemberAccess","referencedDeclaration":4753,"src":"4549:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5026,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4588:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4549:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"4549:46:10"},{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"token","nameLocation":"4673:5:10","nodeType":"VariableDeclaration","scope":5053,"src":"4667:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"},"typeName":{"id":5030,"nodeType":"UserDefinedTypeName","pathNode":{"id":5029,"name":"ERC20","nameLocations":["4667:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"4667:5:10"},"referencedDeclaration":651,"src":"4667:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"visibility":"internal"}],"id":5036,"initialValue":{"expression":{"baseExpression":{"id":5032,"name":"batches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4681:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$4757_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":5034,"indexExpression":{"id":5033,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4689:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4681:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$4757_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":5035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4699:5:10","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4756,"src":"4681:23:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"nodeType":"VariableDeclarationStatement","src":"4667:37:10"},{"expression":{"arguments":[{"expression":{"id":5040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4770:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4774:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4770:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5042,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5037,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"4755:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$651","typeString":"contract ERC20"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4761:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"4755:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4755:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"ExpressionStatement","src":"4755:35:10"},{"eventCall":{"arguments":[{"id":5046,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"4837:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4859:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4863:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4859:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5049,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5050,"name":"_meta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"4904:5:10","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":5045,"name":"PrivateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"4806:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:113:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5052,"nodeType":"EmitStatement","src":"4801:118:10"}]},"functionSelector":"f791e478","id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawPrivately","nameLocation":"4207:17:10","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"_batchId","nameLocation":"4242:8:10","nodeType":"VariableDeclaration","scope":5054,"src":"4234:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4996,"mutability":"mutable","name":"_amount","nameLocation":"4268:7:10","nodeType":"VariableDeclaration","scope":5054,"src":"4260:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"_meta","nameLocation":"4301:5:10","nodeType":"VariableDeclaration","scope":5054,"src":"4285:21:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4997,"name":"string","nodeType":"ElementaryTypeName","src":"4285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4224:88:10"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[],"src":"4322:0:10"},"scope":5055,"src":"4198:728:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5056,"src":"864:4064:10","usedErrors":[],"usedEvents":[4779,4791,4801]}],"src":"39:4890:10"},"id":10}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220977b3701748da23dbba655a370057edb773ff990e6a7aa3961d6f0a0d2800e0964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 PUSH28 0x3701748DA23DBBA655A370057EDB773FF990E6A7AA3961D6F0A0D280 0xE MULMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/PikaPay.sol":{"PikaFractionalAttestationToken":{"abi":[{"inputs":[{"internalType":"contract PikaPay","name":"_pikaPay","type":"address"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_supply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pikaPay","outputs":[{"internalType":"contract PikaPay","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_4720":{"entryPoint":null,"id":4720,"parameterSlots":3,"returnSlots":0},"@_mint_491":{"entryPoint":519,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":1024,"id":458,"parameterSlots":3,"returnSlots":0},"@log10_2535":{"entryPoint":660,"id":2535,"parameterSlots":1,"returnSlots":1},"@toString_905":{"entryPoint":296,"id":905,"parameterSlots":1,"returnSlots":1},"abi_decode_t_contract$_PikaPay_$5055_fromMemory":{"entryPoint":1687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_PikaPay_$5055t_uint256t_uint256_fromMemory":{"entryPoint":1769,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_to_t_bytes15_nonPadded_inplace_fromStack":{"entryPoint":1861,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3122,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3183,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2209,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1899,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1910,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3046,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2520,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1621,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_PikaPay_$5055":{"entryPoint":1641,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1589,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1710,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2481,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2675,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1921,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2230,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2156,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2645,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2613,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2999,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2906,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2109,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2062,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2395,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1584,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":2246,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2453,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2259,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2405,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_PikaPay_$5055":{"entryPoint":1661,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1720,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2448,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10499:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:81:11","statements":[{"nodeType":"YulAssignment","src":"389:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:11"},"nodeType":"YulFunctionCall","src":"400:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:126:11"},{"body":{"nodeType":"YulBlock","src":"511:51:11","statements":[{"nodeType":"YulAssignment","src":"521:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:11"},"nodeType":"YulFunctionCall","src":"532:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:11","type":""}],"src":"466:96:11"},{"body":{"nodeType":"YulBlock","src":"629:51:11","statements":[{"nodeType":"YulAssignment","src":"639:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"668:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"650:17:11"},"nodeType":"YulFunctionCall","src":"650:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"639:7:11"}]}]},"name":"cleanup_t_contract$_PikaPay_$5055","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"621:7:11","type":""}],"src":"568:112:11"},{"body":{"nodeType":"YulBlock","src":"745:95:11","statements":[{"body":{"nodeType":"YulBlock","src":"818:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:11"},"nodeType":"YulFunctionCall","src":"820:12:11"},"nodeType":"YulExpressionStatement","src":"820:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"809:5:11"}],"functionName":{"name":"cleanup_t_contract$_PikaPay_$5055","nodeType":"YulIdentifier","src":"775:33:11"},"nodeType":"YulFunctionCall","src":"775:40:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"765:2:11"},"nodeType":"YulFunctionCall","src":"765:51:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"758:6:11"},"nodeType":"YulFunctionCall","src":"758:59:11"},"nodeType":"YulIf","src":"755:79:11"}]},"name":"validator_revert_t_contract$_PikaPay_$5055","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"738:5:11","type":""}],"src":"686:154:11"},{"body":{"nodeType":"YulBlock","src":"925:96:11","statements":[{"nodeType":"YulAssignment","src":"935:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"950:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"944:5:11"},"nodeType":"YulFunctionCall","src":"944:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"935:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:11"}],"functionName":{"name":"validator_revert_t_contract$_PikaPay_$5055","nodeType":"YulIdentifier","src":"966:42:11"},"nodeType":"YulFunctionCall","src":"966:49:11"},"nodeType":"YulExpressionStatement","src":"966:49:11"}]},"name":"abi_decode_t_contract$_PikaPay_$5055_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"903:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"911:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"919:5:11","type":""}],"src":"846:175:11"},{"body":{"nodeType":"YulBlock","src":"1072:32:11","statements":[{"nodeType":"YulAssignment","src":"1082:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1093:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1082:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1054:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1064:7:11","type":""}],"src":"1027:77:11"},{"body":{"nodeType":"YulBlock","src":"1153:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1210:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1219:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1222:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1212:6:11"},"nodeType":"YulFunctionCall","src":"1212:12:11"},"nodeType":"YulExpressionStatement","src":"1212:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1176:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1201:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1183:17:11"},"nodeType":"YulFunctionCall","src":"1183:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1173:2:11"},"nodeType":"YulFunctionCall","src":"1173:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1166:6:11"},"nodeType":"YulFunctionCall","src":"1166:43:11"},"nodeType":"YulIf","src":"1163:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1146:5:11","type":""}],"src":"1110:122:11"},{"body":{"nodeType":"YulBlock","src":"1301:80:11","statements":[{"nodeType":"YulAssignment","src":"1311:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1320:5:11"},"nodeType":"YulFunctionCall","src":"1320:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1311:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1369:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1342:26:11"},"nodeType":"YulFunctionCall","src":"1342:33:11"},"nodeType":"YulExpressionStatement","src":"1342:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1279:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1287:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:11","type":""}],"src":"1238:143:11"},{"body":{"nodeType":"YulBlock","src":"1514:568:11","statements":[{"body":{"nodeType":"YulBlock","src":"1560:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1562:77:11"},"nodeType":"YulFunctionCall","src":"1562:79:11"},"nodeType":"YulExpressionStatement","src":"1562:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1535:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1544:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:11"},"nodeType":"YulFunctionCall","src":"1531:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1556:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1527:3:11"},"nodeType":"YulFunctionCall","src":"1527:32:11"},"nodeType":"YulIf","src":"1524:119:11"},{"nodeType":"YulBlock","src":"1653:144:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1668:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1682:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1672:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1697:90:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1759:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1770:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1755:3:11"},"nodeType":"YulFunctionCall","src":"1755:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1779:7:11"}],"functionName":{"name":"abi_decode_t_contract$_PikaPay_$5055_fromMemory","nodeType":"YulIdentifier","src":"1707:47:11"},"nodeType":"YulFunctionCall","src":"1707:80:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1697:6:11"}]}]},{"nodeType":"YulBlock","src":"1807:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1822:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1836:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1826:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1852:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1909:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:11"},"nodeType":"YulFunctionCall","src":"1894:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1918:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1862:31:11"},"nodeType":"YulFunctionCall","src":"1862:64:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1852:6:11"}]}]},{"nodeType":"YulBlock","src":"1946:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1961:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1975:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1965:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1991:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2037:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2048:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2033:3:11"},"nodeType":"YulFunctionCall","src":"2033:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2057:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2001:31:11"},"nodeType":"YulFunctionCall","src":"2001:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1991:6:11"}]}]}]},"name":"abi_decode_tuple_t_contract$_PikaPay_$5055t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1468:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1479:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1491:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1499:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1507:6:11","type":""}],"src":"1387:695:11"},{"body":{"nodeType":"YulBlock","src":"2235:46:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2252:3:11"},{"hexValue":"50696b615061792042617463682023","kind":"string","nodeType":"YulLiteral","src":"2257:17:11","type":"","value":"PikaPay Batch #"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2245:6:11"},"nodeType":"YulFunctionCall","src":"2245:30:11"},"nodeType":"YulExpressionStatement","src":"2245:30:11"}]},"name":"abi_encode_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_to_t_bytes15_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2230:3:11","type":""}],"src":"2088:193:11"},{"body":{"nodeType":"YulBlock","src":"2346:40:11","statements":[{"nodeType":"YulAssignment","src":"2357:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2373:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2367:5:11"},"nodeType":"YulFunctionCall","src":"2367:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2357:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2329:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2339:6:11","type":""}],"src":"2287:99:11"},{"body":{"nodeType":"YulBlock","src":"2506:34:11","statements":[{"nodeType":"YulAssignment","src":"2516:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"2531:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2516:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2478:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"2483:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2494:11:11","type":""}],"src":"2392:148:11"},{"body":{"nodeType":"YulBlock","src":"2608:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2618:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2627:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2622:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2687:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2712:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2717:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2708:3:11"},"nodeType":"YulFunctionCall","src":"2708:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2731:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2736:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2727:3:11"},"nodeType":"YulFunctionCall","src":"2727:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2721:5:11"},"nodeType":"YulFunctionCall","src":"2721:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2701:6:11"},"nodeType":"YulFunctionCall","src":"2701:39:11"},"nodeType":"YulExpressionStatement","src":"2701:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2648:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"2651:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2645:2:11"},"nodeType":"YulFunctionCall","src":"2645:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2659:19:11","statements":[{"nodeType":"YulAssignment","src":"2661:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2670:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2666:3:11"},"nodeType":"YulFunctionCall","src":"2666:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2661:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2641:3:11","statements":[]},"src":"2637:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2770:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2775:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:11"},"nodeType":"YulFunctionCall","src":"2766:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"2784:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2759:6:11"},"nodeType":"YulFunctionCall","src":"2759:27:11"},"nodeType":"YulExpressionStatement","src":"2759:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2590:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2595:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"2600:6:11","type":""}],"src":"2546:246:11"},{"body":{"nodeType":"YulBlock","src":"2908:280:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2918:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2965:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2932:32:11"},"nodeType":"YulFunctionCall","src":"2932:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2922:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2980:96:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3064:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3069:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2987:76:11"},"nodeType":"YulFunctionCall","src":"2987:89:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2980:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3124:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3131:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3120:3:11"},"nodeType":"YulFunctionCall","src":"3120:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"3138:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3143:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3085:34:11"},"nodeType":"YulFunctionCall","src":"3085:65:11"},"nodeType":"YulExpressionStatement","src":"3085:65:11"},{"nodeType":"YulAssignment","src":"3159:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3170:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3175:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3166:3:11"},"nodeType":"YulFunctionCall","src":"3166:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3159:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2889:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2896:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2904:3:11","type":""}],"src":"2798:390:11"},{"body":{"nodeType":"YulBlock","src":"3421:315:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3566:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_to_t_bytes15_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3432:132:11"},"nodeType":"YulFunctionCall","src":"3432:138:11"},"nodeType":"YulExpressionStatement","src":"3432:138:11"},{"nodeType":"YulAssignment","src":"3579:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3590:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3595:2:11","type":"","value":"15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3586:3:11"},"nodeType":"YulFunctionCall","src":"3586:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3579:3:11"}]},{"nodeType":"YulAssignment","src":"3608:102:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3697:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"3706:3:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3615:81:11"},"nodeType":"YulFunctionCall","src":"3615:95:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3608:3:11"}]},{"nodeType":"YulAssignment","src":"3720:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"3727:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3720:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3400:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3406:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3417:3:11","type":""}],"src":"3194:542:11"},{"body":{"nodeType":"YulBlock","src":"3770:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3787:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3790:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3780:6:11"},"nodeType":"YulFunctionCall","src":"3780:88:11"},"nodeType":"YulExpressionStatement","src":"3780:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3884:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3887:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3877:6:11"},"nodeType":"YulFunctionCall","src":"3877:15:11"},"nodeType":"YulExpressionStatement","src":"3877:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3908:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3911:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3901:6:11"},"nodeType":"YulFunctionCall","src":"3901:15:11"},"nodeType":"YulExpressionStatement","src":"3901:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3742:180:11"},{"body":{"nodeType":"YulBlock","src":"3956:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3973:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3976:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3966:6:11"},"nodeType":"YulFunctionCall","src":"3966:88:11"},"nodeType":"YulExpressionStatement","src":"3966:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4073:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4063:6:11"},"nodeType":"YulFunctionCall","src":"4063:15:11"},"nodeType":"YulExpressionStatement","src":"4063:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4094:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4097:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4087:6:11"},"nodeType":"YulFunctionCall","src":"4087:15:11"},"nodeType":"YulExpressionStatement","src":"4087:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3928:180:11"},{"body":{"nodeType":"YulBlock","src":"4165:269:11","statements":[{"nodeType":"YulAssignment","src":"4175:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4189:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"4195:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4185:3:11"},"nodeType":"YulFunctionCall","src":"4185:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4175:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"4206:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4236:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"4242:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4232:3:11"},"nodeType":"YulFunctionCall","src":"4232:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4210:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4283:51:11","statements":[{"nodeType":"YulAssignment","src":"4297:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4311:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4319:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4307:3:11"},"nodeType":"YulFunctionCall","src":"4307:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4297:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4263:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4256:6:11"},"nodeType":"YulFunctionCall","src":"4256:26:11"},"nodeType":"YulIf","src":"4253:81:11"},{"body":{"nodeType":"YulBlock","src":"4386:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4400:16:11"},"nodeType":"YulFunctionCall","src":"4400:18:11"},"nodeType":"YulExpressionStatement","src":"4400:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4350:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4373:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4381:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4370:2:11"},"nodeType":"YulFunctionCall","src":"4370:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4347:2:11"},"nodeType":"YulFunctionCall","src":"4347:38:11"},"nodeType":"YulIf","src":"4344:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4149:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4158:6:11","type":""}],"src":"4114:320:11"},{"body":{"nodeType":"YulBlock","src":"4494:87:11","statements":[{"nodeType":"YulAssignment","src":"4504:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4512:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4504:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4532:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4535:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4525:6:11"},"nodeType":"YulFunctionCall","src":"4525:14:11"},"nodeType":"YulExpressionStatement","src":"4525:14:11"},{"nodeType":"YulAssignment","src":"4548:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4566:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4569:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4556:9:11"},"nodeType":"YulFunctionCall","src":"4556:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4548:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4481:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4489:4:11","type":""}],"src":"4440:141:11"},{"body":{"nodeType":"YulBlock","src":"4631:49:11","statements":[{"nodeType":"YulAssignment","src":"4641:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4659:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4666:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4655:3:11"},"nodeType":"YulFunctionCall","src":"4655:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"4671:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4651:3:11"},"nodeType":"YulFunctionCall","src":"4651:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4641:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4614:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4624:6:11","type":""}],"src":"4587:93:11"},{"body":{"nodeType":"YulBlock","src":"4739:54:11","statements":[{"nodeType":"YulAssignment","src":"4749:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4774:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"4780:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4770:3:11"},"nodeType":"YulFunctionCall","src":"4770:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4749:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4714:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"4720:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4730:8:11","type":""}],"src":"4686:107:11"},{"body":{"nodeType":"YulBlock","src":"4875:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4885:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4906:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"4918:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4902:3:11"},"nodeType":"YulFunctionCall","src":"4902:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4889:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4929:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4960:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4971:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4941:18:11"},"nodeType":"YulFunctionCall","src":"4941:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4933:4:11","type":""}]},{"nodeType":"YulAssignment","src":"5047:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5078:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5089:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5059:18:11"},"nodeType":"YulFunctionCall","src":"5059:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5047:8:11"}]},{"nodeType":"YulAssignment","src":"5107:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5120:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5131:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5127:3:11"},"nodeType":"YulFunctionCall","src":"5127:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5116:3:11"},"nodeType":"YulFunctionCall","src":"5116:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5107:5:11"}]},{"nodeType":"YulAssignment","src":"5146:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5159:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5170:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"5180:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5166:3:11"},"nodeType":"YulFunctionCall","src":"5166:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5156:2:11"},"nodeType":"YulFunctionCall","src":"5156:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5146:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4836:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4843:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4855:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4868:6:11","type":""}],"src":"4799:393:11"},{"body":{"nodeType":"YulBlock","src":"5230:28:11","statements":[{"nodeType":"YulAssignment","src":"5240:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5247:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5240:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5216:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5226:3:11","type":""}],"src":"5198:60:11"},{"body":{"nodeType":"YulBlock","src":"5324:82:11","statements":[{"nodeType":"YulAssignment","src":"5334:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5392:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5374:17:11"},"nodeType":"YulFunctionCall","src":"5374:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5365:8:11"},"nodeType":"YulFunctionCall","src":"5365:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5347:17:11"},"nodeType":"YulFunctionCall","src":"5347:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5334:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5304:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5314:9:11","type":""}],"src":"5264:142:11"},{"body":{"nodeType":"YulBlock","src":"5459:28:11","statements":[{"nodeType":"YulAssignment","src":"5469:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"5476:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5469:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5445:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5455:3:11","type":""}],"src":"5412:75:11"},{"body":{"nodeType":"YulBlock","src":"5569:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5579:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5634:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5603:30:11"},"nodeType":"YulFunctionCall","src":"5603:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5583:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5658:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5698:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5692:5:11"},"nodeType":"YulFunctionCall","src":"5692:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5705:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5737:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5713:23:11"},"nodeType":"YulFunctionCall","src":"5713:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5664:27:11"},"nodeType":"YulFunctionCall","src":"5664:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5651:6:11"},"nodeType":"YulFunctionCall","src":"5651:105:11"},"nodeType":"YulExpressionStatement","src":"5651:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5546:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5552:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5560:7:11","type":""}],"src":"5493:269:11"},{"body":{"nodeType":"YulBlock","src":"5817:24:11","statements":[{"nodeType":"YulAssignment","src":"5827:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5834:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5827:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5813:3:11","type":""}],"src":"5768:73:11"},{"body":{"nodeType":"YulBlock","src":"5900:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5910:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5924:30:11"},"nodeType":"YulFunctionCall","src":"5924:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5914:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6009:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6015:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6023:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5965:43:11"},"nodeType":"YulFunctionCall","src":"5965:65:11"},"nodeType":"YulExpressionStatement","src":"5965:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5886:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5892:6:11","type":""}],"src":"5847:189:11"},{"body":{"nodeType":"YulBlock","src":"6092:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"6159:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6203:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6210:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6173:29:11"},"nodeType":"YulFunctionCall","src":"6173:39:11"},"nodeType":"YulExpressionStatement","src":"6173:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6112:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"6119:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6109:2:11"},"nodeType":"YulFunctionCall","src":"6109:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6124:26:11","statements":[{"nodeType":"YulAssignment","src":"6126:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6139:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6146:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6135:3:11"},"nodeType":"YulFunctionCall","src":"6135:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6126:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6106:2:11","statements":[]},"src":"6102:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6080:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6087:3:11","type":""}],"src":"6042:186:11"},{"body":{"nodeType":"YulBlock","src":"6313:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"6339:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6353:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6401:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6369:31:11"},"nodeType":"YulFunctionCall","src":"6369:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6357:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6420:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6443:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6471:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6453:17:11"},"nodeType":"YulFunctionCall","src":"6453:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6439:3:11"},"nodeType":"YulFunctionCall","src":"6439:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6424:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6640:27:11","statements":[{"nodeType":"YulAssignment","src":"6642:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6657:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6642:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6624:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"6636:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6621:2:11"},"nodeType":"YulFunctionCall","src":"6621:18:11"},"nodeType":"YulIf","src":"6618:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6709:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6726:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6754:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6736:17:11"},"nodeType":"YulFunctionCall","src":"6736:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6722:3:11"},"nodeType":"YulFunctionCall","src":"6722:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6680:28:11"},"nodeType":"YulFunctionCall","src":"6680:80:11"},"nodeType":"YulExpressionStatement","src":"6680:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6330:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6335:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6327:2:11"},"nodeType":"YulFunctionCall","src":"6327:11:11"},"nodeType":"YulIf","src":"6324:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6289:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"6296:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6301:10:11","type":""}],"src":"6234:543:11"},{"body":{"nodeType":"YulBlock","src":"6846:54:11","statements":[{"nodeType":"YulAssignment","src":"6856:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6881:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"6887:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6877:3:11"},"nodeType":"YulFunctionCall","src":"6877:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6856:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6821:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"6827:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6837:8:11","type":""}],"src":"6783:117:11"},{"body":{"nodeType":"YulBlock","src":"6957:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6967:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7016:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7019:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7012:3:11"},"nodeType":"YulFunctionCall","src":"7012:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7031:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7027:3:11"},"nodeType":"YulFunctionCall","src":"7027:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6983:28:11"},"nodeType":"YulFunctionCall","src":"6983:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6979:3:11"},"nodeType":"YulFunctionCall","src":"6979:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6971:4:11","type":""}]},{"nodeType":"YulAssignment","src":"7044:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7058:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"7064:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7054:3:11"},"nodeType":"YulFunctionCall","src":"7054:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7044:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6934:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6940:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6950:6:11","type":""}],"src":"6906:169:11"},{"body":{"nodeType":"YulBlock","src":"7161:214:11","statements":[{"nodeType":"YulAssignment","src":"7294:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7321:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"7327:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7302:18:11"},"nodeType":"YulFunctionCall","src":"7302:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7294:4:11"}]},{"nodeType":"YulAssignment","src":"7340:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7351:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7361:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7364:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7357:3:11"},"nodeType":"YulFunctionCall","src":"7357:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7348:2:11"},"nodeType":"YulFunctionCall","src":"7348:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7340:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7142:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"7148:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7156:4:11","type":""}],"src":"7080:295:11"},{"body":{"nodeType":"YulBlock","src":"7472:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7483:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7530:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7497:32:11"},"nodeType":"YulFunctionCall","src":"7497:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7487:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7619:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7621:16:11"},"nodeType":"YulFunctionCall","src":"7621:18:11"},"nodeType":"YulExpressionStatement","src":"7621:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7591:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7599:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7588:2:11"},"nodeType":"YulFunctionCall","src":"7588:30:11"},"nodeType":"YulIf","src":"7585:56:11"},{"nodeType":"YulVariableDeclaration","src":"7651:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7697:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7691:5:11"},"nodeType":"YulFunctionCall","src":"7691:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7665:25:11"},"nodeType":"YulFunctionCall","src":"7665:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7655:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7796:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7802:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"7810:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7750:45:11"},"nodeType":"YulFunctionCall","src":"7750:67:11"},"nodeType":"YulExpressionStatement","src":"7750:67:11"},{"nodeType":"YulVariableDeclaration","src":"7827:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7844:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7831:9:11","type":""}]},{"nodeType":"YulAssignment","src":"7855:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7868:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7855:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7919:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7933:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7952:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7964:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7960:3:11"},"nodeType":"YulFunctionCall","src":"7960:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7948:3:11"},"nodeType":"YulFunctionCall","src":"7948:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7937:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7984:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8030:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7998:31:11"},"nodeType":"YulFunctionCall","src":"7998:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7988:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8048:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8057:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8052:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8116:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8141:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8159:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8164:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8155:3:11"},"nodeType":"YulFunctionCall","src":"8155:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8149:5:11"},"nodeType":"YulFunctionCall","src":"8149:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8134:6:11"},"nodeType":"YulFunctionCall","src":"8134:42:11"},"nodeType":"YulExpressionStatement","src":"8134:42:11"},{"nodeType":"YulAssignment","src":"8193:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8207:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8215:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8203:3:11"},"nodeType":"YulFunctionCall","src":"8203:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8193:6:11"}]},{"nodeType":"YulAssignment","src":"8234:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8251:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8262:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8247:3:11"},"nodeType":"YulFunctionCall","src":"8247:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8234:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8082:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8085:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8079:2:11"},"nodeType":"YulFunctionCall","src":"8079:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8094:21:11","statements":[{"nodeType":"YulAssignment","src":"8096:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8105:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"8108:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8101:3:11"},"nodeType":"YulFunctionCall","src":"8101:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8096:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"8075:3:11","statements":[]},"src":"8071:208:11"},{"body":{"nodeType":"YulBlock","src":"8315:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8333:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8360:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8365:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8356:3:11"},"nodeType":"YulFunctionCall","src":"8356:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8350:5:11"},"nodeType":"YulFunctionCall","src":"8350:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8337:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8400:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8427:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8442:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8450:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8438:3:11"},"nodeType":"YulFunctionCall","src":"8438:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8408:18:11"},"nodeType":"YulFunctionCall","src":"8408:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8393:6:11"},"nodeType":"YulFunctionCall","src":"8393:64:11"},"nodeType":"YulExpressionStatement","src":"8393:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8298:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8307:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8295:2:11"},"nodeType":"YulFunctionCall","src":"8295:19:11"},"nodeType":"YulIf","src":"8292:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8491:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8505:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8513:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8501:3:11"},"nodeType":"YulFunctionCall","src":"8501:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"8517:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8497:3:11"},"nodeType":"YulFunctionCall","src":"8497:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8484:6:11"},"nodeType":"YulFunctionCall","src":"8484:36:11"},"nodeType":"YulExpressionStatement","src":"8484:36:11"}]},"nodeType":"YulCase","src":"7912:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7917:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8547:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8561:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8574:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8565:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8598:67:11","statements":[{"nodeType":"YulAssignment","src":"8616:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8635:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8640:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:11"},"nodeType":"YulFunctionCall","src":"8631:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8625:5:11"},"nodeType":"YulFunctionCall","src":"8625:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8616:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8591:6:11"},"nodeType":"YulIf","src":"8588:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8685:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8744:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"8751:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8691:52:11"},"nodeType":"YulFunctionCall","src":"8691:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8678:6:11"},"nodeType":"YulFunctionCall","src":"8678:81:11"},"nodeType":"YulExpressionStatement","src":"8678:81:11"}]},"nodeType":"YulCase","src":"8539:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7892:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7900:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7889:2:11"},"nodeType":"YulFunctionCall","src":"7889:14:11"},"nodeType":"YulSwitch","src":"7882:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7461:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"7467:3:11","type":""}],"src":"7380:1395:11"},{"body":{"nodeType":"YulBlock","src":"8809:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8826:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8829:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8819:6:11"},"nodeType":"YulFunctionCall","src":"8819:88:11"},"nodeType":"YulExpressionStatement","src":"8819:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8923:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8926:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8916:6:11"},"nodeType":"YulFunctionCall","src":"8916:15:11"},"nodeType":"YulExpressionStatement","src":"8916:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8947:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8950:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8940:6:11"},"nodeType":"YulFunctionCall","src":"8940:15:11"},"nodeType":"YulExpressionStatement","src":"8940:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"8781:180:11"},{"body":{"nodeType":"YulBlock","src":"9032:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9049:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9072:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9054:17:11"},"nodeType":"YulFunctionCall","src":"9054:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9042:6:11"},"nodeType":"YulFunctionCall","src":"9042:37:11"},"nodeType":"YulExpressionStatement","src":"9042:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9020:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9027:3:11","type":""}],"src":"8967:118:11"},{"body":{"nodeType":"YulBlock","src":"9189:124:11","statements":[{"nodeType":"YulAssignment","src":"9199:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9211:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9222:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:11"},"nodeType":"YulFunctionCall","src":"9207:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9199:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9279:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9292:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9303:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9288:3:11"},"nodeType":"YulFunctionCall","src":"9288:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9235:43:11"},"nodeType":"YulFunctionCall","src":"9235:71:11"},"nodeType":"YulExpressionStatement","src":"9235:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9161:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9173:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9184:4:11","type":""}],"src":"9091:222:11"},{"body":{"nodeType":"YulBlock","src":"9347:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9364:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9367:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9357:6:11"},"nodeType":"YulFunctionCall","src":"9357:88:11"},"nodeType":"YulExpressionStatement","src":"9357:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9461:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9464:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9454:6:11"},"nodeType":"YulFunctionCall","src":"9454:15:11"},"nodeType":"YulExpressionStatement","src":"9454:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9485:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9488:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9478:6:11"},"nodeType":"YulFunctionCall","src":"9478:15:11"},"nodeType":"YulExpressionStatement","src":"9478:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9319:180:11"},{"body":{"nodeType":"YulBlock","src":"9549:147:11","statements":[{"nodeType":"YulAssignment","src":"9559:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9582:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9564:17:11"},"nodeType":"YulFunctionCall","src":"9564:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9559:1:11"}]},{"nodeType":"YulAssignment","src":"9593:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9616:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9598:17:11"},"nodeType":"YulFunctionCall","src":"9598:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9593:1:11"}]},{"nodeType":"YulAssignment","src":"9627:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9638:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9641:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9634:3:11"},"nodeType":"YulFunctionCall","src":"9634:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9627:3:11"}]},{"body":{"nodeType":"YulBlock","src":"9667:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9669:16:11"},"nodeType":"YulFunctionCall","src":"9669:18:11"},"nodeType":"YulExpressionStatement","src":"9669:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9659:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"9662:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9656:2:11"},"nodeType":"YulFunctionCall","src":"9656:10:11"},"nodeType":"YulIf","src":"9653:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9536:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9539:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9545:3:11","type":""}],"src":"9505:191:11"},{"body":{"nodeType":"YulBlock","src":"9767:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9784:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9807:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9789:17:11"},"nodeType":"YulFunctionCall","src":"9789:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9777:6:11"},"nodeType":"YulFunctionCall","src":"9777:37:11"},"nodeType":"YulExpressionStatement","src":"9777:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9755:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9762:3:11","type":""}],"src":"9702:118:11"},{"body":{"nodeType":"YulBlock","src":"9980:288:11","statements":[{"nodeType":"YulAssignment","src":"9990:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10013:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9998:3:11"},"nodeType":"YulFunctionCall","src":"9998:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9990:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10070:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10083:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10094:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10079:3:11"},"nodeType":"YulFunctionCall","src":"10079:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10026:43:11"},"nodeType":"YulFunctionCall","src":"10026:71:11"},"nodeType":"YulExpressionStatement","src":"10026:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10151:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10164:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10175:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10160:3:11"},"nodeType":"YulFunctionCall","src":"10160:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10107:43:11"},"nodeType":"YulFunctionCall","src":"10107:72:11"},"nodeType":"YulExpressionStatement","src":"10107:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10233:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10246:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10257:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10242:3:11"},"nodeType":"YulFunctionCall","src":"10242:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10189:43:11"},"nodeType":"YulFunctionCall","src":"10189:72:11"},"nodeType":"YulExpressionStatement","src":"10189:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9936:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9948:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9956:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9964:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9975:4:11","type":""}],"src":"9826:442:11"},{"body":{"nodeType":"YulBlock","src":"10372:124:11","statements":[{"nodeType":"YulAssignment","src":"10382:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10394:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10405:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10390:3:11"},"nodeType":"YulFunctionCall","src":"10390:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10382:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10462:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10475:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10486:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:11"},"nodeType":"YulFunctionCall","src":"10471:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10418:43:11"},"nodeType":"YulFunctionCall","src":"10418:71:11"},"nodeType":"YulExpressionStatement","src":"10418:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10344:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10356:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10367:4:11","type":""}],"src":"10274:222:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PikaPay_$5055(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PikaPay_$5055(value) {\n        if iszero(eq(value, cleanup_t_contract$_PikaPay_$5055(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PikaPay_$5055_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PikaPay_$5055(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PikaPay_$5055t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PikaPay_$5055_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_to_t_bytes15_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \"PikaPay Batch #\")\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_4183af2f345f059c23ad31d1abcb244802fa212f332d8422ce582221ddb9301b_to_t_bytes15_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 15)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001be938038062001be98339818101604052810190620000379190620006e9565b62000048826200012860201b60201c565b6040516020016200005a9190620007e4565b6040516020818303038152906040526040518060400160405280600481526020017f53464154000000000000000000000000000000000000000000000000000000008152508160039081620000b0919062000a73565b508060049081620000c2919062000a73565b50505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055506200011f33826200020760201b60201c565b50505062000c8c565b6060600060016200013f846200029460201b60201c565b01905060008167ffffffffffffffff8111156200016157620001606200080e565b5b6040519080825280601f01601f191660200182016040528015620001945781602001600182028036833780820191505090505b509050600082602001820190505b600115620001fc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581620001ef57620001ee62000b5a565b5b04945060008503620001a2575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200027c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000273919062000b9a565b60405180910390fd5b62000290600083836200040060201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310620002f6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381620002ec57620002eb62000b5a565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062000337576d04ee2d6d415b85acef810000000083816200032d576200032c62000b5a565b5b0492506020810190505b662386f26fc1000083106200036a57662386f26fc10000838162000360576200035f62000b5a565b5b0492506010810190505b6305f5e100831062000397576305f5e10083816200038d576200038c62000b5a565b5b0492506008810190505b6127108310620003c0576127108381620003b657620003b562000b5a565b5b0492506004810190505b60648310620003e75760648381620003dd57620003dc62000b5a565b5b0492506002810190505b600a8310620003f7576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200045657806002600082825462000449919062000be6565b925050819055506200052c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004e5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004dc9392919062000c32565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620005775780600260008282540392505081905550620005c4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000623919062000c6f565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006628262000635565b9050919050565b6000620006768262000655565b9050919050565b620006888162000669565b81146200069457600080fd5b50565b600081519050620006a8816200067d565b92915050565b6000819050919050565b620006c381620006ae565b8114620006cf57600080fd5b50565b600081519050620006e381620006b8565b92915050565b60008060006060848603121562000705576200070462000630565b5b6000620007158682870162000697565b93505060206200072886828701620006d2565b92505060406200073b86828701620006d2565b9150509250925092565b7f50696b6150617920426174636820230000000000000000000000000000000000815250565b600081519050919050565b600081905092915050565b60005b83811015620007a157808201518184015260208101905062000784565b60008484015250505050565b6000620007ba826200076b565b620007c6818562000776565b9350620007d881856020860162000781565b80840191505092915050565b6000620007f18262000745565b600f82019150620008038284620007ad565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200088557607f821691505b6020821081036200089b576200089a6200083d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008c6565b620009118683620008c6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620009546200094e6200094884620006ae565b62000929565b620006ae565b9050919050565b6000819050919050565b620009708362000933565b620009886200097f826200095b565b848454620008d3565b825550505050565b600090565b6200099f62000990565b620009ac81848462000965565b505050565b5b81811015620009d457620009c860008262000995565b600181019050620009b2565b5050565b601f82111562000a2357620009ed81620008a1565b620009f884620008b6565b8101602085101562000a08578190505b62000a2062000a1785620008b6565b830182620009b1565b50505b505050565b600082821c905092915050565b600062000a486000198460080262000a28565b1980831691505092915050565b600062000a63838362000a35565b9150826002028217905092915050565b62000a7e826200076b565b67ffffffffffffffff81111562000a9a5762000a996200080e565b5b62000aa682546200086c565b62000ab3828285620009d8565b600060209050601f83116001811462000aeb576000841562000ad6578287015190505b62000ae2858262000a55565b86555062000b52565b601f19841662000afb86620008a1565b60005b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a35565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b62000b948162000655565b82525050565b600060208201905062000bb1600083018462000b89565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bf382620006ae565b915062000c0083620006ae565b925082820190508082111562000c1b5762000c1a62000bb7565b5b92915050565b62000c2c81620006ae565b82525050565b600060608201905062000c49600083018662000b89565b62000c58602083018562000c21565b62000c67604083018462000c21565b949350505050565b600060208201905062000c86600083018462000c21565b92915050565b610f4d8062000c9c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea26469706673582212208bd1ca38ceb8c7b529731c70596a0e5437ab20f96309cc116154f1835af5c0da64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BE9 CODESIZE SUB DUP1 PUSH3 0x1BE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH3 0x48 DUP3 PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5346415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB0 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC2 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x11F CALLER DUP3 PUSH3 0x207 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x13F DUP5 PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x161 JUMPI PUSH3 0x160 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x194 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1FC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1EF JUMPI PUSH3 0x1EE PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1A2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x273 SWAP2 SWAP1 PUSH3 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x290 PUSH1 0x0 DUP4 DUP4 PUSH3 0x400 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x2F6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x2EC JUMPI PUSH3 0x2EB PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x337 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x32D JUMPI PUSH3 0x32C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x36A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x360 JUMPI PUSH3 0x35F PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x397 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x38D JUMPI PUSH3 0x38C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x3C0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x3B6 JUMPI PUSH3 0x3B5 PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x3E7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x3DD JUMPI PUSH3 0x3DC PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x3F7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x456 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x449 SWAP2 SWAP1 PUSH3 0xBE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x52C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4E5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x577 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x5C4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x623 SWAP2 SWAP1 PUSH3 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x662 DUP3 PUSH3 0x635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x676 DUP3 PUSH3 0x655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x688 DUP2 PUSH3 0x669 JUMP JUMPDEST DUP2 EQ PUSH3 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6A8 DUP2 PUSH3 0x67D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C3 DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP2 EQ PUSH3 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6E3 DUP2 PUSH3 0x6B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x705 JUMPI PUSH3 0x704 PUSH3 0x630 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x715 DUP7 DUP3 DUP8 ADD PUSH3 0x697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x728 DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x73B DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B6150617920426174636820230000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7BA DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH3 0x7C6 DUP2 DUP6 PUSH3 0x776 JUMP JUMPDEST SWAP4 POP PUSH3 0x7D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x781 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F1 DUP3 PUSH3 0x745 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP2 POP PUSH3 0x803 DUP3 DUP5 PUSH3 0x7AD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x885 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x89B JUMPI PUSH3 0x89A PUSH3 0x83D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x905 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8C6 JUMP JUMPDEST PUSH3 0x911 DUP7 DUP4 PUSH3 0x8C6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x954 PUSH3 0x94E PUSH3 0x948 DUP5 PUSH3 0x6AE JUMP JUMPDEST PUSH3 0x929 JUMP JUMPDEST PUSH3 0x6AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x970 DUP4 PUSH3 0x933 JUMP JUMPDEST PUSH3 0x988 PUSH3 0x97F DUP3 PUSH3 0x95B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8D3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x99F PUSH3 0x990 JUMP JUMPDEST PUSH3 0x9AC DUP2 DUP5 DUP5 PUSH3 0x965 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9D4 JUMPI PUSH3 0x9C8 PUSH1 0x0 DUP3 PUSH3 0x995 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA23 JUMPI PUSH3 0x9ED DUP2 PUSH3 0x8A1 JUMP JUMPDEST PUSH3 0x9F8 DUP5 PUSH3 0x8B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA08 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA20 PUSH3 0xA17 DUP6 PUSH3 0x8B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9B1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA48 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA28 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA63 DUP4 DUP4 PUSH3 0xA35 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA7E DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA9A JUMPI PUSH3 0xA99 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH3 0xAA6 DUP3 SLOAD PUSH3 0x86C JUMP JUMPDEST PUSH3 0xAB3 DUP3 DUP3 DUP6 PUSH3 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAEB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xAD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAE2 DUP6 DUP3 PUSH3 0xA55 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAFB DUP7 PUSH3 0x8A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB25 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAFE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB45 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB41 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA35 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xB94 DUP2 PUSH3 0x655 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xBF3 DUP3 PUSH3 0x6AE JUMP JUMPDEST SWAP2 POP PUSH3 0xC00 DUP4 PUSH3 0x6AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC1B JUMPI PUSH3 0xC1A PUSH3 0xBB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC2C DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC49 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB89 JUMP JUMPDEST PUSH3 0xC58 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC21 JUMP JUMPDEST PUSH3 0xC67 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC86 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH3 0xC9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xD1 0xCA CODESIZE 0xCE 0xB8 0xC7 0xB5 0x29 PUSH20 0x1C70596A0E5437AB20F96309CC116154F1835AF5 0xC0 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"174:688:10:-:0;;;286:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;441:26;458:8;441:16;;;:26;;:::i;:::-;408:60;;;;;;;;:::i;:::-;;;;;;;;;;;;;1601:113:1;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;523:8:10::1;513:7;;:18;;;;;;;;;;;;;;;;;;551:8;541:7;:18;;;;569:26;575:10;587:7;569:5;;;:26;;:::i;:::-;286:316:::0;;;174:688;;637:632:6;693:13;742:14;779:1;759:17;770:5;759:10;;;:17;;:::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;7458:208:1:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;25316:916:7:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;6008:1107:1:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:77::-;1064:7;1093:5;1082:16;;1027:77;;;:::o;1110:122::-;1183:24;1201:5;1183:24;:::i;:::-;1176:5;1173:35;1163:63;;1222:1;1219;1212:12;1163:63;1110:122;:::o;1238:143::-;1295:5;1326:6;1320:13;1311:22;;1342:33;1369:5;1342:33;:::i;:::-;1238:143;;;;:::o;1387:695::-;1491:6;1499;1507;1556:2;1544:9;1535:7;1531:23;1527:32;1524:119;;;1562:79;;:::i;:::-;1524:119;1682:1;1707:80;1779:7;1770:6;1759:9;1755:22;1707:80;:::i;:::-;1697:90;;1653:144;1836:2;1862:64;1918:7;1909:6;1898:9;1894:22;1862:64;:::i;:::-;1852:74;;1807:129;1975:2;2001:64;2057:7;2048:6;2037:9;2033:22;2001:64;:::i;:::-;1991:74;;1946:129;1387:695;;;;;:::o;2088:193::-;2257:17;2252:3;2245:30;2088:193;:::o;2287:99::-;2339:6;2373:5;2367:12;2357:22;;2287:99;;;:::o;2392:148::-;2494:11;2531:3;2516:18;;2392:148;;;;:::o;2546:246::-;2627:1;2637:113;2651:6;2648:1;2645:13;2637:113;;;2736:1;2731:3;2727:11;2721:18;2717:1;2712:3;2708:11;2701:39;2673:2;2670:1;2666:10;2661:15;;2637:113;;;2784:1;2775:6;2770:3;2766:16;2759:27;2608:184;2546:246;;;:::o;2798:390::-;2904:3;2932:39;2965:5;2932:39;:::i;:::-;2987:89;3069:6;3064:3;2987:89;:::i;:::-;2980:96;;3085:65;3143:6;3138:3;3131:4;3124:5;3120:16;3085:65;:::i;:::-;3175:6;3170:3;3166:16;3159:23;;2908:280;2798:390;;;;:::o;3194:542::-;3417:3;3432:138;3566:3;3432:138;:::i;:::-;3595:2;3590:3;3586:12;3579:19;;3615:95;3706:3;3697:6;3615:95;:::i;:::-;3608:102;;3727:3;3720:10;;3194:542;;;;:::o;3742:180::-;3790:77;3787:1;3780:88;3887:4;3884:1;3877:15;3911:4;3908:1;3901:15;3928:180;3976:77;3973:1;3966:88;4073:4;4070:1;4063:15;4097:4;4094:1;4087:15;4114:320;4158:6;4195:1;4189:4;4185:12;4175:22;;4242:1;4236:4;4232:12;4263:18;4253:81;;4319:4;4311:6;4307:17;4297:27;;4253:81;4381:2;4373:6;4370:14;4350:18;4347:38;4344:84;;4400:18;;:::i;:::-;4344:84;4165:269;4114:320;;;:::o;4440:141::-;4489:4;4512:3;4504:11;;4535:3;4532:1;4525:14;4569:4;4566:1;4556:18;4548:26;;4440:141;;;:::o;4587:93::-;4624:6;4671:2;4666;4659:5;4655:14;4651:23;4641:33;;4587:93;;;:::o;4686:107::-;4730:8;4780:5;4774:4;4770:16;4749:37;;4686:107;;;;:::o;4799:393::-;4868:6;4918:1;4906:10;4902:18;4941:97;4971:66;4960:9;4941:97;:::i;:::-;5059:39;5089:8;5078:9;5059:39;:::i;:::-;5047:51;;5131:4;5127:9;5120:5;5116:21;5107:30;;5180:4;5170:8;5166:19;5159:5;5156:30;5146:40;;4875:317;;4799:393;;;;;:::o;5198:60::-;5226:3;5247:5;5240:12;;5198:60;;;:::o;5264:142::-;5314:9;5347:53;5365:34;5374:24;5392:5;5374:24;:::i;:::-;5365:34;:::i;:::-;5347:53;:::i;:::-;5334:66;;5264:142;;;:::o;5412:75::-;5455:3;5476:5;5469:12;;5412:75;;;:::o;5493:269::-;5603:39;5634:7;5603:39;:::i;:::-;5664:91;5713:41;5737:16;5713:41;:::i;:::-;5705:6;5698:4;5692:11;5664:91;:::i;:::-;5658:4;5651:105;5569:193;5493:269;;;:::o;5768:73::-;5813:3;5768:73;:::o;5847:189::-;5924:32;;:::i;:::-;5965:65;6023:6;6015;6009:4;5965:65;:::i;:::-;5900:136;5847:189;;:::o;6042:186::-;6102:120;6119:3;6112:5;6109:14;6102:120;;;6173:39;6210:1;6203:5;6173:39;:::i;:::-;6146:1;6139:5;6135:13;6126:22;;6102:120;;;6042:186;;:::o;6234:543::-;6335:2;6330:3;6327:11;6324:446;;;6369:38;6401:5;6369:38;:::i;:::-;6453:29;6471:10;6453:29;:::i;:::-;6443:8;6439:44;6636:2;6624:10;6621:18;6618:49;;;6657:8;6642:23;;6618:49;6680:80;6736:22;6754:3;6736:22;:::i;:::-;6726:8;6722:37;6709:11;6680:80;:::i;:::-;6339:431;;6324:446;6234:543;;;:::o;6783:117::-;6837:8;6887:5;6881:4;6877:16;6856:37;;6783:117;;;;:::o;6906:169::-;6950:6;6983:51;7031:1;7027:6;7019:5;7016:1;7012:13;6983:51;:::i;:::-;6979:56;7064:4;7058;7054:15;7044:25;;6957:118;6906:169;;;;:::o;7080:295::-;7156:4;7302:29;7327:3;7321:4;7302:29;:::i;:::-;7294:37;;7364:3;7361:1;7357:11;7351:4;7348:21;7340:29;;7080:295;;;;:::o;7380:1395::-;7497:37;7530:3;7497:37;:::i;:::-;7599:18;7591:6;7588:30;7585:56;;;7621:18;;:::i;:::-;7585:56;7665:38;7697:4;7691:11;7665:38;:::i;:::-;7750:67;7810:6;7802;7796:4;7750:67;:::i;:::-;7844:1;7868:4;7855:17;;7900:2;7892:6;7889:14;7917:1;7912:618;;;;8574:1;8591:6;8588:77;;;8640:9;8635:3;8631:19;8625:26;8616:35;;8588:77;8691:67;8751:6;8744:5;8691:67;:::i;:::-;8685:4;8678:81;8547:222;7882:887;;7912:618;7964:4;7960:9;7952:6;7948:22;7998:37;8030:4;7998:37;:::i;:::-;8057:1;8071:208;8085:7;8082:1;8079:14;8071:208;;;8164:9;8159:3;8155:19;8149:26;8141:6;8134:42;8215:1;8207:6;8203:14;8193:24;;8262:2;8251:9;8247:18;8234:31;;8108:4;8105:1;8101:12;8096:17;;8071:208;;;8307:6;8298:7;8295:19;8292:179;;;8365:9;8360:3;8356:19;8350:26;8408:48;8450:4;8442:6;8438:17;8427:9;8408:48;:::i;:::-;8400:6;8393:64;8315:156;8292:179;8517:1;8513;8505:6;8501:14;8497:22;8491:4;8484:36;7919:611;;;7882:887;;7472:1303;;;7380:1395;;:::o;8781:180::-;8829:77;8826:1;8819:88;8926:4;8923:1;8916:15;8950:4;8947:1;8940:15;8967:118;9054:24;9072:5;9054:24;:::i;:::-;9049:3;9042:37;8967:118;;:::o;9091:222::-;9184:4;9222:2;9211:9;9207:18;9199:26;;9235:71;9303:1;9292:9;9288:17;9279:6;9235:71;:::i;:::-;9091:222;;;;:::o;9319:180::-;9367:77;9364:1;9357:88;9464:4;9461:1;9454:15;9488:4;9485:1;9478:15;9505:191;9545:3;9564:20;9582:1;9564:20;:::i;:::-;9559:25;;9598:20;9616:1;9598:20;:::i;:::-;9593:25;;9641:1;9638;9634:9;9627:16;;9662:3;9659:1;9656:10;9653:36;;;9669:18;;:::i;:::-;9653:36;9505:191;;;;:::o;9702:118::-;9789:24;9807:5;9789:24;:::i;:::-;9784:3;9777:37;9702:118;;:::o;9826:442::-;9975:4;10013:2;10002:9;9998:18;9990:26;;10026:71;10094:1;10083:9;10079:17;10070:6;10026:71;:::i;:::-;10107:72;10175:2;10164:9;10160:18;10151:6;10107:72;:::i;:::-;10189;10257:2;10246:9;10242:18;10233:6;10189:72;:::i;:::-;9826:442;;;;;;:::o;10274:222::-;10367:4;10405:2;10394:9;10390:18;10382:26;;10418:71;10486:1;10475:9;10471:17;10462:6;10418:71;:::i;:::-;10274:222;;;;:::o;174:688:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":1281,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":1691,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":1273,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":1299,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":1447,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":2162,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":1138,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":740,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":885,"id":237,"parameterSlots":1,"returnSlots":1},"@batchId_4683":{"entryPoint":879,"id":4683,"parameterSlots":0,"returnSlots":0},"@decimals_215":{"entryPoint":832,"id":215,"parameterSlots":0,"returnSlots":1},"@name_197":{"entryPoint":594,"id":197,"parameterSlots":0,"returnSlots":1},"@pikaPay_4681":{"entryPoint":841,"id":4681,"parameterSlots":0,"returnSlots":0},"@symbol_206":{"entryPoint":957,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":775,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":785,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":1103,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3507,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3202,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3042,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3118,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack":{"entryPoint":3420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3160,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3682,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_PikaPay_$5055__to_t_address__fromStack_reversed":{"entryPoint":3435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2711,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2722,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3106,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2894,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2988,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3285,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaPay_$5055_to_t_address":{"entryPoint":3402,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3384,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3350,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2739,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3618,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":3340,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3764,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3571,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2889,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2781,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2944,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2998,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8283:11","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:11","statements":[{"nodeType":"YulAssignment","src":"77:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:11"},"nodeType":"YulFunctionCall","src":"87:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:11","type":""}],"src":"7:99:11"},{"body":{"nodeType":"YulBlock","src":"208:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:11"},"nodeType":"YulFunctionCall","src":"218:19:11"},"nodeType":"YulExpressionStatement","src":"218:19:11"},{"nodeType":"YulAssignment","src":"246:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:11"},"nodeType":"YulFunctionCall","src":"261:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:11","type":""}],"src":"112:169:11"},{"body":{"nodeType":"YulBlock","src":"349:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:11"},"nodeType":"YulFunctionCall","src":"449:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:11"},"nodeType":"YulFunctionCall","src":"468:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:11"},"nodeType":"YulFunctionCall","src":"462:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:11"},"nodeType":"YulFunctionCall","src":"442:39:11"},"nodeType":"YulExpressionStatement","src":"442:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:11"},"nodeType":"YulFunctionCall","src":"386:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:11","statements":[{"nodeType":"YulAssignment","src":"402:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:11"},"nodeType":"YulFunctionCall","src":"407:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:11","statements":[]},"src":"378:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:11"},"nodeType":"YulFunctionCall","src":"507:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:11"},"nodeType":"YulFunctionCall","src":"500:27:11"},"nodeType":"YulExpressionStatement","src":"500:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:11","type":""}],"src":"287:246:11"},{"body":{"nodeType":"YulBlock","src":"587:54:11","statements":[{"nodeType":"YulAssignment","src":"597:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:11"},"nodeType":"YulFunctionCall","src":"611:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:11"},"nodeType":"YulFunctionCall","src":"627:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:11"},"nodeType":"YulFunctionCall","src":"607:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:11","type":""}],"src":"539:102:11"},{"body":{"nodeType":"YulBlock","src":"739:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:11"},"nodeType":"YulFunctionCall","src":"763:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:11","type":""}]},{"nodeType":"YulAssignment","src":"811:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:11"},"nodeType":"YulFunctionCall","src":"818:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:11"},"nodeType":"YulFunctionCall","src":"933:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:11"},"nodeType":"YulFunctionCall","src":"898:65:11"},"nodeType":"YulExpressionStatement","src":"898:65:11"},{"nodeType":"YulAssignment","src":"972:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:11"},"nodeType":"YulFunctionCall","src":"988:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:11"},"nodeType":"YulFunctionCall","src":"979:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:11","type":""}],"src":"647:377:11"},{"body":{"nodeType":"YulBlock","src":"1148:195:11","statements":[{"nodeType":"YulAssignment","src":"1158:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:11"},"nodeType":"YulFunctionCall","src":"1166:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:11"},"nodeType":"YulFunctionCall","src":"1201:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:11"},"nodeType":"YulFunctionCall","src":"1220:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:11"},"nodeType":"YulFunctionCall","src":"1194:47:11"},"nodeType":"YulExpressionStatement","src":"1194:47:11"},{"nodeType":"YulAssignment","src":"1250:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:11"},"nodeType":"YulFunctionCall","src":"1258:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:11","type":""}],"src":"1030:313:11"},{"body":{"nodeType":"YulBlock","src":"1389:35:11","statements":[{"nodeType":"YulAssignment","src":"1399:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:11"},"nodeType":"YulFunctionCall","src":"1409:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:11","type":""}],"src":"1349:75:11"},{"body":{"nodeType":"YulBlock","src":"1519:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:11"},"nodeType":"YulFunctionCall","src":"1529:12:11"},"nodeType":"YulExpressionStatement","src":"1529:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:11"},{"body":{"nodeType":"YulBlock","src":"1642:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:11"},"nodeType":"YulFunctionCall","src":"1652:12:11"},"nodeType":"YulExpressionStatement","src":"1652:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:11"},{"body":{"nodeType":"YulBlock","src":"1721:81:11","statements":[{"nodeType":"YulAssignment","src":"1731:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:11"},"nodeType":"YulFunctionCall","src":"1742:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:11","type":""}],"src":"1676:126:11"},{"body":{"nodeType":"YulBlock","src":"1853:51:11","statements":[{"nodeType":"YulAssignment","src":"1863:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:11"},"nodeType":"YulFunctionCall","src":"1874:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:11","type":""}],"src":"1808:96:11"},{"body":{"nodeType":"YulBlock","src":"1953:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:11"},"nodeType":"YulFunctionCall","src":"2012:12:11"},"nodeType":"YulExpressionStatement","src":"2012:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:11"},"nodeType":"YulFunctionCall","src":"1983:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:11"},"nodeType":"YulFunctionCall","src":"1973:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:11"},"nodeType":"YulFunctionCall","src":"1966:43:11"},"nodeType":"YulIf","src":"1963:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:11","type":""}],"src":"1910:122:11"},{"body":{"nodeType":"YulBlock","src":"2090:87:11","statements":[{"nodeType":"YulAssignment","src":"2100:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:11"},"nodeType":"YulFunctionCall","src":"2109:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:11"},"nodeType":"YulFunctionCall","src":"2138:33:11"},"nodeType":"YulExpressionStatement","src":"2138:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:11","type":""}],"src":"2038:139:11"},{"body":{"nodeType":"YulBlock","src":"2228:32:11","statements":[{"nodeType":"YulAssignment","src":"2238:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:11","type":""}],"src":"2183:77:11"},{"body":{"nodeType":"YulBlock","src":"2309:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:11"},"nodeType":"YulFunctionCall","src":"2368:12:11"},"nodeType":"YulExpressionStatement","src":"2368:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:11"},"nodeType":"YulFunctionCall","src":"2339:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:11"},"nodeType":"YulFunctionCall","src":"2329:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:11"},"nodeType":"YulFunctionCall","src":"2322:43:11"},"nodeType":"YulIf","src":"2319:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:11","type":""}],"src":"2266:122:11"},{"body":{"nodeType":"YulBlock","src":"2446:87:11","statements":[{"nodeType":"YulAssignment","src":"2456:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:11"},"nodeType":"YulFunctionCall","src":"2465:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:11"},"nodeType":"YulFunctionCall","src":"2494:33:11"},"nodeType":"YulExpressionStatement","src":"2494:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:11","type":""}],"src":"2394:139:11"},{"body":{"nodeType":"YulBlock","src":"2622:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:11"},"nodeType":"YulFunctionCall","src":"2670:79:11"},"nodeType":"YulExpressionStatement","src":"2670:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:32:11"},"nodeType":"YulIf","src":"2632:119:11"},{"nodeType":"YulBlock","src":"2761:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:11"},"nodeType":"YulFunctionCall","src":"2836:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:11"},"nodeType":"YulFunctionCall","src":"2815:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:11"}]}]},{"nodeType":"YulBlock","src":"2888:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:11"},"nodeType":"YulFunctionCall","src":"2943:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:11","type":""}],"src":"2539:474:11"},{"body":{"nodeType":"YulBlock","src":"3061:48:11","statements":[{"nodeType":"YulAssignment","src":"3071:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:11"},"nodeType":"YulFunctionCall","src":"3089:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:11"},"nodeType":"YulFunctionCall","src":"3082:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:11","type":""}],"src":"3019:90:11"},{"body":{"nodeType":"YulBlock","src":"3174:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:11"},"nodeType":"YulFunctionCall","src":"3196:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:11"},"nodeType":"YulFunctionCall","src":"3184:34:11"},"nodeType":"YulExpressionStatement","src":"3184:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:11","type":""}],"src":"3115:109:11"},{"body":{"nodeType":"YulBlock","src":"3322:118:11","statements":[{"nodeType":"YulAssignment","src":"3332:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:11"},"nodeType":"YulFunctionCall","src":"3340:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:11"},"nodeType":"YulFunctionCall","src":"3415:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:11"},"nodeType":"YulFunctionCall","src":"3368:65:11"},"nodeType":"YulExpressionStatement","src":"3368:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:11","type":""}],"src":"3230:210:11"},{"body":{"nodeType":"YulBlock","src":"3511:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:11"},"nodeType":"YulFunctionCall","src":"3533:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:11"},"nodeType":"YulFunctionCall","src":"3521:37:11"},"nodeType":"YulExpressionStatement","src":"3521:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:11","type":""}],"src":"3446:118:11"},{"body":{"nodeType":"YulBlock","src":"3668:124:11","statements":[{"nodeType":"YulAssignment","src":"3678:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:11"},"nodeType":"YulFunctionCall","src":"3686:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:11"},"nodeType":"YulFunctionCall","src":"3767:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:11"},"nodeType":"YulFunctionCall","src":"3714:71:11"},"nodeType":"YulExpressionStatement","src":"3714:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:11","type":""}],"src":"3570:222:11"},{"body":{"nodeType":"YulBlock","src":"3898:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:11"},"nodeType":"YulFunctionCall","src":"3946:79:11"},"nodeType":"YulExpressionStatement","src":"3946:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:11"},"nodeType":"YulFunctionCall","src":"3911:32:11"},"nodeType":"YulIf","src":"3908:119:11"},{"nodeType":"YulBlock","src":"4037:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:11"},"nodeType":"YulFunctionCall","src":"4091:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:11"}]}]},{"nodeType":"YulBlock","src":"4164:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:11"},"nodeType":"YulFunctionCall","src":"4240:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:11"},"nodeType":"YulFunctionCall","src":"4219:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:11"}]}]},{"nodeType":"YulBlock","src":"4292:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:11"},"nodeType":"YulFunctionCall","src":"4368:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:11"},"nodeType":"YulFunctionCall","src":"4347:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:11","type":""}],"src":"3798:619:11"},{"body":{"nodeType":"YulBlock","src":"4466:43:11","statements":[{"nodeType":"YulAssignment","src":"4476:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:11","type":""}],"src":"4423:86:11"},{"body":{"nodeType":"YulBlock","src":"4576:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:11"},"nodeType":"YulFunctionCall","src":"4598:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:11"},"nodeType":"YulFunctionCall","src":"4586:35:11"},"nodeType":"YulExpressionStatement","src":"4586:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:11","type":""}],"src":"4515:112:11"},{"body":{"nodeType":"YulBlock","src":"4727:120:11","statements":[{"nodeType":"YulAssignment","src":"4737:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:11"},"nodeType":"YulFunctionCall","src":"4745:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:11"},"nodeType":"YulFunctionCall","src":"4822:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:11"},"nodeType":"YulFunctionCall","src":"4773:67:11"},"nodeType":"YulExpressionStatement","src":"4773:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:11","type":""}],"src":"4633:214:11"},{"body":{"nodeType":"YulBlock","src":"4885:28:11","statements":[{"nodeType":"YulAssignment","src":"4895:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4902:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4895:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4871:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4881:3:11","type":""}],"src":"4853:60:11"},{"body":{"nodeType":"YulBlock","src":"4979:82:11","statements":[{"nodeType":"YulAssignment","src":"4989:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5047:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5029:17:11"},"nodeType":"YulFunctionCall","src":"5029:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5020:8:11"},"nodeType":"YulFunctionCall","src":"5020:34:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5002:17:11"},"nodeType":"YulFunctionCall","src":"5002:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4989:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4959:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4969:9:11","type":""}],"src":"4919:142:11"},{"body":{"nodeType":"YulBlock","src":"5127:66:11","statements":[{"nodeType":"YulAssignment","src":"5137:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5181:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5150:30:11"},"nodeType":"YulFunctionCall","src":"5150:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5137:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5107:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5117:9:11","type":""}],"src":"5067:126:11"},{"body":{"nodeType":"YulBlock","src":"5275:66:11","statements":[{"nodeType":"YulAssignment","src":"5285:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5298:30:11"},"nodeType":"YulFunctionCall","src":"5298:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5285:9:11"}]}]},"name":"convert_t_contract$_PikaPay_$5055_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5255:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5265:9:11","type":""}],"src":"5199:142:11"},{"body":{"nodeType":"YulBlock","src":"5428:82:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5445:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5497:5:11"}],"functionName":{"name":"convert_t_contract$_PikaPay_$5055_to_t_address","nodeType":"YulIdentifier","src":"5450:46:11"},"nodeType":"YulFunctionCall","src":"5450:53:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5438:6:11"},"nodeType":"YulFunctionCall","src":"5438:66:11"},"nodeType":"YulExpressionStatement","src":"5438:66:11"}]},"name":"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5416:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5423:3:11","type":""}],"src":"5347:163:11"},{"body":{"nodeType":"YulBlock","src":"5630:140:11","statements":[{"nodeType":"YulAssignment","src":"5640:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:11"},"nodeType":"YulFunctionCall","src":"5648:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5640:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5736:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5749:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5760:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5745:3:11"},"nodeType":"YulFunctionCall","src":"5745:17:11"}],"functionName":{"name":"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5676:59:11"},"nodeType":"YulFunctionCall","src":"5676:87:11"},"nodeType":"YulExpressionStatement","src":"5676:87:11"}]},"name":"abi_encode_tuple_t_contract$_PikaPay_$5055__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5602:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5614:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5625:4:11","type":""}],"src":"5516:254:11"},{"body":{"nodeType":"YulBlock","src":"5842:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"5888:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5890:77:11"},"nodeType":"YulFunctionCall","src":"5890:79:11"},"nodeType":"YulExpressionStatement","src":"5890:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5863:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5859:3:11"},"nodeType":"YulFunctionCall","src":"5859:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5855:3:11"},"nodeType":"YulFunctionCall","src":"5855:32:11"},"nodeType":"YulIf","src":"5852:119:11"},{"nodeType":"YulBlock","src":"5981:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5996:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6010:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6000:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6025:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6071:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:11"},"nodeType":"YulFunctionCall","src":"6056:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6080:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6035:20:11"},"nodeType":"YulFunctionCall","src":"6035:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6025:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5812:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5823:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5835:6:11","type":""}],"src":"5776:329:11"},{"body":{"nodeType":"YulBlock","src":"6194:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"6240:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6242:77:11"},"nodeType":"YulFunctionCall","src":"6242:79:11"},"nodeType":"YulExpressionStatement","src":"6242:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6215:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6224:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6211:3:11"},"nodeType":"YulFunctionCall","src":"6211:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6236:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6207:3:11"},"nodeType":"YulFunctionCall","src":"6207:32:11"},"nodeType":"YulIf","src":"6204:119:11"},{"nodeType":"YulBlock","src":"6333:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6348:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6362:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6352:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6377:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6412:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6423:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6408:3:11"},"nodeType":"YulFunctionCall","src":"6408:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6432:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6387:20:11"},"nodeType":"YulFunctionCall","src":"6387:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6377:6:11"}]}]},{"nodeType":"YulBlock","src":"6460:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6475:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6489:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6479:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6505:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6551:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:11"},"nodeType":"YulFunctionCall","src":"6536:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6560:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6515:20:11"},"nodeType":"YulFunctionCall","src":"6515:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6505:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6156:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6167:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6179:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6187:6:11","type":""}],"src":"6111:474:11"},{"body":{"nodeType":"YulBlock","src":"6619:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6636:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6639:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6629:6:11"},"nodeType":"YulFunctionCall","src":"6629:88:11"},"nodeType":"YulExpressionStatement","src":"6629:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6733:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6736:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6726:6:11"},"nodeType":"YulFunctionCall","src":"6726:15:11"},"nodeType":"YulExpressionStatement","src":"6726:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6757:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6760:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6750:6:11"},"nodeType":"YulFunctionCall","src":"6750:15:11"},"nodeType":"YulExpressionStatement","src":"6750:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6591:180:11"},{"body":{"nodeType":"YulBlock","src":"6828:269:11","statements":[{"nodeType":"YulAssignment","src":"6838:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6852:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"6858:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6848:3:11"},"nodeType":"YulFunctionCall","src":"6848:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6838:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6869:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6899:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"6905:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6895:3:11"},"nodeType":"YulFunctionCall","src":"6895:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6873:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6946:51:11","statements":[{"nodeType":"YulAssignment","src":"6960:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6974:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6982:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6970:3:11"},"nodeType":"YulFunctionCall","src":"6970:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6960:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6926:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6919:6:11"},"nodeType":"YulFunctionCall","src":"6919:26:11"},"nodeType":"YulIf","src":"6916:81:11"},{"body":{"nodeType":"YulBlock","src":"7049:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7063:16:11"},"nodeType":"YulFunctionCall","src":"7063:18:11"},"nodeType":"YulExpressionStatement","src":"7063:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7013:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7036:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7044:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7033:2:11"},"nodeType":"YulFunctionCall","src":"7033:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7010:2:11"},"nodeType":"YulFunctionCall","src":"7010:38:11"},"nodeType":"YulIf","src":"7007:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6812:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6821:6:11","type":""}],"src":"6777:320:11"},{"body":{"nodeType":"YulBlock","src":"7168:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7185:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7208:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7190:17:11"},"nodeType":"YulFunctionCall","src":"7190:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7178:6:11"},"nodeType":"YulFunctionCall","src":"7178:37:11"},"nodeType":"YulExpressionStatement","src":"7178:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7156:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7163:3:11","type":""}],"src":"7103:118:11"},{"body":{"nodeType":"YulBlock","src":"7381:288:11","statements":[{"nodeType":"YulAssignment","src":"7391:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7403:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7414:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7399:3:11"},"nodeType":"YulFunctionCall","src":"7399:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7391:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7471:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7495:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7480:3:11"},"nodeType":"YulFunctionCall","src":"7480:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7427:43:11"},"nodeType":"YulFunctionCall","src":"7427:71:11"},"nodeType":"YulExpressionStatement","src":"7427:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7552:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:11"},"nodeType":"YulFunctionCall","src":"7561:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7508:43:11"},"nodeType":"YulFunctionCall","src":"7508:72:11"},"nodeType":"YulExpressionStatement","src":"7508:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7634:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7647:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7658:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7643:3:11"},"nodeType":"YulFunctionCall","src":"7643:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7590:43:11"},"nodeType":"YulFunctionCall","src":"7590:72:11"},"nodeType":"YulExpressionStatement","src":"7590:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7337:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7349:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7357:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7365:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7376:4:11","type":""}],"src":"7227:442:11"},{"body":{"nodeType":"YulBlock","src":"7773:124:11","statements":[{"nodeType":"YulAssignment","src":"7783:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7795:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7806:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:11"},"nodeType":"YulFunctionCall","src":"7791:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7783:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7863:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7876:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7887:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7872:3:11"},"nodeType":"YulFunctionCall","src":"7872:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7819:43:11"},"nodeType":"YulFunctionCall","src":"7819:71:11"},"nodeType":"YulExpressionStatement","src":"7819:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7745:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7757:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7768:4:11","type":""}],"src":"7675:222:11"},{"body":{"nodeType":"YulBlock","src":"7931:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7948:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7951:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7941:6:11"},"nodeType":"YulFunctionCall","src":"7941:88:11"},"nodeType":"YulExpressionStatement","src":"7941:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8045:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8048:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8038:6:11"},"nodeType":"YulFunctionCall","src":"8038:15:11"},"nodeType":"YulExpressionStatement","src":"8038:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8072:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8062:6:11"},"nodeType":"YulFunctionCall","src":"8062:15:11"},"nodeType":"YulExpressionStatement","src":"8062:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7903:180:11"},{"body":{"nodeType":"YulBlock","src":"8133:147:11","statements":[{"nodeType":"YulAssignment","src":"8143:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8166:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8148:17:11"},"nodeType":"YulFunctionCall","src":"8148:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8143:1:11"}]},{"nodeType":"YulAssignment","src":"8177:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8200:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8182:17:11"},"nodeType":"YulFunctionCall","src":"8182:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8177:1:11"}]},{"nodeType":"YulAssignment","src":"8211:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8222:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"8225:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8218:3:11"},"nodeType":"YulFunctionCall","src":"8218:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8211:3:11"}]},{"body":{"nodeType":"YulBlock","src":"8251:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8253:16:11"},"nodeType":"YulFunctionCall","src":"8253:18:11"},"nodeType":"YulExpressionStatement","src":"8253:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8243:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"8246:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8240:2:11"},"nodeType":"YulFunctionCall","src":"8240:10:11"},"nodeType":"YulIf","src":"8237:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8120:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"8123:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8129:3:11","type":""}],"src":"8089:191:11"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PikaPay_$5055_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaPay_$5055_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PikaPay_$5055__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea26469706673582212208bd1ca38ceb8c7b529731c70596a0e5437ab20f96309cc116154f1835af5c0da64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xD1 0xCA CODESIZE 0xCE 0xB8 0xC7 0xB5 0x29 PUSH20 0x1C70596A0E5437AB20F96309CC116154F1835AF5 0xC0 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"174:688:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:22:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;229:22:10:-;;;;;;;;;;;;;:::o;257:::-;;;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:60::-;4881:3;4902:5;4895:12;;4853:60;;;:::o;4919:142::-;4969:9;5002:53;5020:34;5029:24;5047:5;5029:24;:::i;:::-;5020:34;:::i;:::-;5002:53;:::i;:::-;4989:66;;4919:142;;;:::o;5067:126::-;5117:9;5150:37;5181:5;5150:37;:::i;:::-;5137:50;;5067:126;;;:::o;5199:142::-;5265:9;5298:37;5329:5;5298:37;:::i;:::-;5285:50;;5199:142;;;:::o;5347:163::-;5450:53;5497:5;5450:53;:::i;:::-;5445:3;5438:66;5347:163;;:::o;5516:254::-;5625:4;5663:2;5652:9;5648:18;5640:26;;5676:87;5760:1;5749:9;5745:17;5736:6;5676:87;:::i;:::-;5516:254;;;;:::o;5776:329::-;5835:6;5884:2;5872:9;5863:7;5859:23;5855:32;5852:119;;;5890:79;;:::i;:::-;5852:119;6010:1;6035:53;6080:7;6071:6;6060:9;6056:22;6035:53;:::i;:::-;6025:63;;5981:117;5776:329;;;;:::o;6111:474::-;6179:6;6187;6236:2;6224:9;6215:7;6211:23;6207:32;6204:119;;;6242:79;;:::i;:::-;6204:119;6362:1;6387:53;6432:7;6423:6;6412:9;6408:22;6387:53;:::i;:::-;6377:63;;6333:117;6489:2;6515:53;6560:7;6551:6;6540:9;6536:22;6515:53;:::i;:::-;6505:63;;6460:118;6111:474;;;;;:::o;6591:180::-;6639:77;6636:1;6629:88;6736:4;6733:1;6726:15;6760:4;6757:1;6750:15;6777:320;6821:6;6858:1;6852:4;6848:12;6838:22;;6905:1;6899:4;6895:12;6926:18;6916:81;;6982:4;6974:6;6970:17;6960:27;;6916:81;7044:2;7036:6;7033:14;7013:18;7010:38;7007:84;;7063:18;;:::i;:::-;7007:84;6828:269;6777:320;;;:::o;7103:118::-;7190:24;7208:5;7190:24;:::i;:::-;7185:3;7178:37;7103:118;;:::o;7227:442::-;7376:4;7414:2;7403:9;7399:18;7391:26;;7427:71;7495:1;7484:9;7480:17;7471:6;7427:71;:::i;:::-;7508:72;7576:2;7565:9;7561:18;7552:6;7508:72;:::i;:::-;7590;7658:2;7647:9;7643:18;7634:6;7590:72;:::i;:::-;7227:442;;;;;;:::o;7675:222::-;7768:4;7806:2;7795:9;7791:18;7783:26;;7819:71;7887:1;7876:9;7872:17;7863:6;7819:71;:::i;:::-;7675:222;;;;:::o;7903:180::-;7951:77;7948:1;7941:88;8048:4;8045:1;8038:15;8072:4;8069:1;8062:15;8089:191;8129:3;8148:20;8166:1;8148:20;:::i;:::-;8143:25;;8182:20;8200:1;8182:20;:::i;:::-;8177:25;;8225:1;8222;8218:9;8211:16;;8246:3;8243:1;8240:10;8237:36;;;8253:18;;:::i;:::-;8237:36;8089:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchId()":"4972134a","decimals()":"313ce567","name()":"06fdde03","pikaPay()":"3804eea0","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PikaPay\",\"name\":\"_pikaPay\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pikaPay\",\"outputs\":[{\"internalType\":\"contract PikaPay\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PikaPay.sol\":\"PikaFractionalAttestationToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/PikaPay.sol\":{\"keccak256\":\"0xfb32258f5bf4f87616b9c268fe652b13dcabb81b8e0d2609728fa1f9b592ca1e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f7e6595af7d34222c3831840251090ebb3a665a898ff4c2afdd022333d4c3798\",\"dweb:/ipfs/QmcApRHJt35PykSArkgzVp98HdWzqpn3MzV9HA7qgfMG68\"]}},\"version\":1}"},"PikaPay":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"attestation","type":"string"},{"indexed":false,"internalType":"string","name":"meta","type":"string"}],"name":"AttestedWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"string","name":"attestation","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"meta","type":"string"}],"name":"PrivateWithdrawal","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"batches","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"contract PikaFractionalAttestationToken","name":"squirrelFractionalAttestationToken","type":"address"},{"internalType":"string","name":"attestation","type":"string"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint256","name":"unwithdrawnAmount","type":"uint256"},{"internalType":"contract ERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"beneficiaryBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"string","name":"_attestation","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numberOfBatches","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferBeneficialOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_meta","type":"string"}],"name":"withdrawPrivately","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_meta","type":"string"}],"name":"withdrawWithAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4805":{"entryPoint":null,"id":4805,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040526000805534801561001457600080fd5b506134e7806100246000396000f3fe60806040523480156200001157600080fd5b5060043610620000885760003560e01c8063b32c4d8d1162000063578063b32c4d8d14620000ef578063e2015d5c146200012a578063f3db9fe51462000160578063f791e47814620001805762000088565b806305476414146200008d57806321f7500f14620000ad57806388c46fb814620000cd575b600080fd5b620000ab6004803603810190620000a5919062000d42565b620001a0565b005b620000cb6004803603810190620000c5919062000e27565b620004a6565b005b620000d762000613565b604051620000e6919062000e94565b60405180910390f35b6200010d600480360381019062000107919062000eb1565b62000619565b60405162000121969594939291906200100d565b60405180910390f35b62000148600480360381019062000142919062001081565b62000725565b60405162000157919062000e94565b60405180910390f35b6200017e6004803603810190620001789190620010c8565b6200074a565b005b6200019e600480360381019062000198919062000d42565b62000a4c565b005b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101562000236576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200022d9062001198565b60405180910390fd5b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002989190620011e9565b9250508190555082600160008681526020019081526020016000206004016000828254620002c79190620011e9565b9250508190555060006001600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016200034692919062001235565b6020604051808303816000875af115801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c91906200129f565b506001600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016200040092919062001235565b6020604051808303816000875af115801562000420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044691906200129f565b507f8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d788853386600160008a8152602001908152602001600020600201878760405162000497969594939291906200141c565b60405180910390a15050505050565b806002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156200053c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005339062001198565b60405180910390fd5b806002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200059e9190620011e9565b92505081905550806002600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000607919062001489565b92505081905550505050565b60005481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546200066a9062001300565b80601f0160208091040260200160405190810160405280929190818152602001828054620006989062001300565b8015620006e95780601f10620006bd57610100808354040283529160200191620006e9565b820191906000526020600020905b815481529060010190602001808311620006cb57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6002602052816000526040600020602052806000526040600020600091509150505481565b60016000808282546200075e919062001489565b9250508190555060008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401620007a993929190620014c4565b6020604051808303816000875af1158015620007c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ef91906200129f565b5060003060005484604051620008059062000c81565b620008139392919062001526565b604051809103906000f08015801562000830573d6000803e3d6000fd5b5090506040518060c0016040528060005481526020018273ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018481526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816200094e919062001745565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505082600260008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f89947f2c40e2bc19d51f690ba9378f7947cd741cac5f4f825d93e683ce24c5fb60005486868660405162000a3c94939291906200182c565b60405180910390a1505050505050565b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101562000ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ad99062001198565b60405180910390fd5b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000b449190620011e9565b925050819055508260016000868152602001908152602001600020600401600082825462000b739190620011e9565b9250508190555060006001600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040162000bf292919062001235565b6020604051808303816000875af115801562000c12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c3891906200129f565b507f0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c61853386868660405162000c7295949392919062001872565b60405180910390a15050505050565b611be980620018c983390190565b600080fd5b600080fd5b6000819050919050565b62000cae8162000c99565b811462000cba57600080fd5b50565b60008135905062000cce8162000ca3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011262000cfc5762000cfb62000cd4565b5b8235905067ffffffffffffffff81111562000d1c5762000d1b62000cd9565b5b60208301915083600182028301111562000d3b5762000d3a62000cde565b5b9250929050565b6000806000806060858703121562000d5f5762000d5e62000c8f565b5b600062000d6f8782880162000cbd565b945050602062000d828782880162000cbd565b935050604085013567ffffffffffffffff81111562000da65762000da562000c94565b5b62000db48782880162000ce3565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000def8262000dc2565b9050919050565b62000e018162000de2565b811462000e0d57600080fd5b50565b60008135905062000e218162000df6565b92915050565b60008060006060848603121562000e435762000e4262000c8f565b5b600062000e538682870162000cbd565b935050602062000e668682870162000e10565b925050604062000e798682870162000cbd565b9150509250925092565b62000e8e8162000c99565b82525050565b600060208201905062000eab600083018462000e83565b92915050565b60006020828403121562000eca5762000ec962000c8f565b5b600062000eda8482850162000cbd565b91505092915050565b6000819050919050565b600062000f0e62000f0862000f028462000dc2565b62000ee3565b62000dc2565b9050919050565b600062000f228262000eed565b9050919050565b600062000f368262000f15565b9050919050565b62000f488162000f29565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000f8a57808201518184015260208101905062000f6d565b60008484015250505050565b6000601f19601f8301169050919050565b600062000fb48262000f4e565b62000fc0818562000f59565b935062000fd281856020860162000f6a565b62000fdd8162000f96565b840191505092915050565b600062000ff58262000f15565b9050919050565b620010078162000fe8565b82525050565b600060c08201905062001024600083018962000e83565b62001033602083018862000f3d565b818103604083015262001047818762000fa7565b905062001058606083018662000e83565b62001067608083018562000e83565b6200107660a083018462000ffc565b979650505050505050565b600080604083850312156200109b576200109a62000c8f565b5b6000620010ab8582860162000cbd565b9250506020620010be8582860162000e10565b9150509250929050565b60008060008060608587031215620010e557620010e462000c8f565b5b6000620010f58782880162000e10565b945050602085013567ffffffffffffffff81111562001119576200111862000c94565b5b620011278782880162000ce3565b935093505060406200113c8782880162000cbd565b91505092959194509250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006200118060148362000f59565b91506200118d8262001148565b602082019050919050565b60006020820190508181036000830152620011b38162001171565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620011f68262000c99565b9150620012038362000c99565b92508282039050818111156200121e576200121d620011ba565b5b92915050565b6200122f8162000de2565b82525050565b60006040820190506200124c600083018562001224565b6200125b602083018462000e83565b9392505050565b60008115159050919050565b620012798162001262565b81146200128557600080fd5b50565b60008151905062001299816200126e565b92915050565b600060208284031215620012b857620012b762000c8f565b5b6000620012c88482850162001288565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200131957607f821691505b6020821081036200132f576200132e620012d1565b5b50919050565b60008190508160005260206000209050919050565b60008154620013598162001300565b62001365818662000f59565b945060018216600081146200138357600181146200139a57620013d1565b60ff198316865281151560200286019350620013d1565b620013a58562001335565b60005b83811015620013c957815481890152600182019150602081019050620013a8565b808801955050505b50505092915050565b82818337600083830152505050565b6000620013f7838562000f59565b935062001406838584620013da565b620014118362000f96565b840190509392505050565b600060a08201905062001433600083018962000e83565b62001442602083018862001224565b62001451604083018762000e83565b81810360608301526200146581866200134a565b905081810360808301526200147c818486620013e9565b9050979650505050505050565b6000620014968262000c99565b9150620014a38362000c99565b9250828201905080821115620014be57620014bd620011ba565b5b92915050565b6000606082019050620014db600083018662001224565b620014ea602083018562001224565b620014f9604083018462000e83565b949350505050565b60006200150e8262000f15565b9050919050565b620015208162001501565b82525050565b60006060820190506200153d600083018662001515565b6200154c602083018562000e83565b6200155b604083018462000e83565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b600060088302620015e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620015a2565b620015ed8683620015a2565b95508019841693508086168417925050509392505050565b600062001626620016206200161a8462000c99565b62000ee3565b62000c99565b9050919050565b6000819050919050565b620016428362001605565b6200165a62001651826200162d565b848454620015af565b825550505050565b600090565b6200167162001662565b6200167e81848462001637565b505050565b5b81811015620016a6576200169a60008262001667565b60018101905062001684565b5050565b601f821115620016f557620016bf8162001335565b620016ca8462001592565b81016020851015620016da578190505b620016f2620016e98562001592565b83018262001683565b50505b505050565b600082821c905092915050565b60006200171a60001984600802620016fa565b1980831691505092915050565b600062001735838362001707565b9150826002028217905092915050565b620017508262000f4e565b67ffffffffffffffff8111156200176c576200176b62001563565b5b62001778825462001300565b62001785828285620016aa565b600060209050601f831160018114620017bd5760008415620017a8578287015190505b620017b4858262001727565b86555062001824565b601f198416620017cd8662001335565b60005b82811015620017f757848901518255600182019150602085019450602081019050620017d0565b8683101562001817578489015162001813601f89168262001707565b8355505b6001600288020188555050505b505050505050565b600060608201905062001843600083018762000e83565b818103602083015262001858818587620013e9565b905062001869604083018462000e83565b95945050505050565b600060808201905062001889600083018862000e83565b62001898602083018762001224565b620018a7604083018662000e83565b8181036060830152620018bc818486620013e9565b9050969550505050505056fe60806040523480156200001157600080fd5b5060405162001be938038062001be98339818101604052810190620000379190620006e9565b62000048826200012860201b60201c565b6040516020016200005a9190620007e4565b6040516020818303038152906040526040518060400160405280600481526020017f53464154000000000000000000000000000000000000000000000000000000008152508160039081620000b0919062000a73565b508060049081620000c2919062000a73565b50505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055506200011f33826200020760201b60201c565b50505062000c8c565b6060600060016200013f846200029460201b60201c565b01905060008167ffffffffffffffff8111156200016157620001606200080e565b5b6040519080825280601f01601f191660200182016040528015620001945781602001600182028036833780820191505090505b509050600082602001820190505b600115620001fc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581620001ef57620001ee62000b5a565b5b04945060008503620001a2575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200027c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000273919062000b9a565b60405180910390fd5b62000290600083836200040060201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310620002f6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381620002ec57620002eb62000b5a565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062000337576d04ee2d6d415b85acef810000000083816200032d576200032c62000b5a565b5b0492506020810190505b662386f26fc1000083106200036a57662386f26fc10000838162000360576200035f62000b5a565b5b0492506010810190505b6305f5e100831062000397576305f5e10083816200038d576200038c62000b5a565b5b0492506008810190505b6127108310620003c0576127108381620003b657620003b562000b5a565b5b0492506004810190505b60648310620003e75760648381620003dd57620003dc62000b5a565b5b0492506002810190505b600a8310620003f7576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200045657806002600082825462000449919062000be6565b925050819055506200052c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004e5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004dc9392919062000c32565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620005775780600260008282540392505081905550620005c4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000623919062000c6f565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006628262000635565b9050919050565b6000620006768262000655565b9050919050565b620006888162000669565b81146200069457600080fd5b50565b600081519050620006a8816200067d565b92915050565b6000819050919050565b620006c381620006ae565b8114620006cf57600080fd5b50565b600081519050620006e381620006b8565b92915050565b60008060006060848603121562000705576200070462000630565b5b6000620007158682870162000697565b93505060206200072886828701620006d2565b92505060406200073b86828701620006d2565b9150509250925092565b7f50696b6150617920426174636820230000000000000000000000000000000000815250565b600081519050919050565b600081905092915050565b60005b83811015620007a157808201518184015260208101905062000784565b60008484015250505050565b6000620007ba826200076b565b620007c6818562000776565b9350620007d881856020860162000781565b80840191505092915050565b6000620007f18262000745565b600f82019150620008038284620007ad565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200088557607f821691505b6020821081036200089b576200089a6200083d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008c6565b620009118683620008c6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620009546200094e6200094884620006ae565b62000929565b620006ae565b9050919050565b6000819050919050565b620009708362000933565b620009886200097f826200095b565b848454620008d3565b825550505050565b600090565b6200099f62000990565b620009ac81848462000965565b505050565b5b81811015620009d457620009c860008262000995565b600181019050620009b2565b5050565b601f82111562000a2357620009ed81620008a1565b620009f884620008b6565b8101602085101562000a08578190505b62000a2062000a1785620008b6565b830182620009b1565b50505b505050565b600082821c905092915050565b600062000a486000198460080262000a28565b1980831691505092915050565b600062000a63838362000a35565b9150826002028217905092915050565b62000a7e826200076b565b67ffffffffffffffff81111562000a9a5762000a996200080e565b5b62000aa682546200086c565b62000ab3828285620009d8565b600060209050601f83116001811462000aeb576000841562000ad6578287015190505b62000ae2858262000a55565b86555062000b52565b601f19841662000afb86620008a1565b60005b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a35565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b62000b948162000655565b82525050565b600060208201905062000bb1600083018462000b89565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bf382620006ae565b915062000c0083620006ae565b925082820190508082111562000c1b5762000c1a62000bb7565b5b92915050565b62000c2c81620006ae565b82525050565b600060608201905062000c49600083018662000b89565b62000c58602083018562000c21565b62000c67604083018462000c21565b949350505050565b600060208201905062000c86600083018462000c21565b92915050565b610f4d8062000c9c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea26469706673582212208bd1ca38ceb8c7b529731c70596a0e5437ab20f96309cc116154f1835af5c0da64736f6c63430008140033a2646970667358221220021134c45fa886630727c5a6da2ec385b9a2fca000061760573101d57e78fafd64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E7 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB32C4D8D GT PUSH3 0x63 JUMPI DUP1 PUSH4 0xB32C4D8D EQ PUSH3 0xEF JUMPI DUP1 PUSH4 0xE2015D5C EQ PUSH3 0x12A JUMPI DUP1 PUSH4 0xF3DB9FE5 EQ PUSH3 0x160 JUMPI DUP1 PUSH4 0xF791E478 EQ PUSH3 0x180 JUMPI PUSH3 0x88 JUMP JUMPDEST DUP1 PUSH4 0x5476414 EQ PUSH3 0x8D JUMPI DUP1 PUSH4 0x21F7500F EQ PUSH3 0xAD JUMPI DUP1 PUSH4 0x88C46FB8 EQ PUSH3 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0xD42 JUMP JUMPDEST PUSH3 0x1A0 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0xE27 JUMP JUMPDEST PUSH3 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xD7 PUSH3 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE6 SWAP2 SWAP1 PUSH3 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x107 SWAP2 SWAP1 PUSH3 0xEB1 JUMP JUMPDEST PUSH3 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x121 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x142 SWAP2 SWAP1 PUSH3 0x1081 JUMP JUMPDEST PUSH3 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x157 SWAP2 SWAP1 PUSH3 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x178 SWAP2 SWAP1 PUSH3 0x10C8 JUMP JUMPDEST PUSH3 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x198 SWAP2 SWAP1 PUSH3 0xD42 JUMP JUMPDEST PUSH3 0xA4C JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x22D SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x298 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2C7 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x346 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x400 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x420 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x446 SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH32 0x8EB386EA7CBDB4A91109CEA5FED53B6B02F667C149086A609AD4347FB0A5D788 DUP6 CALLER DUP7 PUSH1 0x1 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x497 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x533 SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x59E SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x607 SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH3 0x66A SWAP1 PUSH3 0x1300 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x698 SWAP1 PUSH3 0x1300 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6E9 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x6BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x6CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH3 0x75E SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x14C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7EF SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH1 0x0 ADDRESS PUSH1 0x0 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH3 0x805 SWAP1 PUSH3 0xC81 JUMP JUMPDEST PUSH3 0x813 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x830 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH3 0x94E SWAP2 SWAP1 PUSH3 0x1745 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x89947F2C40E2BC19D51F690BA9378F7947CD741CAC5F4F825D93E683CE24C5FB PUSH1 0x0 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0xA3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD9 SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xB44 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xB73 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBF2 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC38 SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH32 0xB27B8AED46D863AA21F1C0DD0CA6804E332CE068329761DE4584F4F59740C61 DUP6 CALLER DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0xC72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP1 PUSH3 0x18C9 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCAE DUP2 PUSH3 0xC99 JUMP JUMPDEST DUP2 EQ PUSH3 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xCCE DUP2 PUSH3 0xCA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0xCFC JUMPI PUSH3 0xCFB PUSH3 0xCD4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xD1C JUMPI PUSH3 0xD1B PUSH3 0xCD9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0xD3B JUMPI PUSH3 0xD3A PUSH3 0xCDE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xD5F JUMPI PUSH3 0xD5E PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xD6F DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0xD82 DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xDA6 JUMPI PUSH3 0xDA5 PUSH3 0xC94 JUMP JUMPDEST JUMPDEST PUSH3 0xDB4 DUP8 DUP3 DUP9 ADD PUSH3 0xCE3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDEF DUP3 PUSH3 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE01 DUP2 PUSH3 0xDE2 JUMP JUMPDEST DUP2 EQ PUSH3 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE21 DUP2 PUSH3 0xDF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0xE43 JUMPI PUSH3 0xE42 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xE53 DUP7 DUP3 DUP8 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0xE66 DUP7 DUP3 DUP8 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0xE79 DUP7 DUP3 DUP8 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0xE8E DUP2 PUSH3 0xC99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xEAB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xECA JUMPI PUSH3 0xEC9 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEDA DUP5 DUP3 DUP6 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF0E PUSH3 0xF08 PUSH3 0xF02 DUP5 PUSH3 0xDC2 JUMP JUMPDEST PUSH3 0xEE3 JUMP JUMPDEST PUSH3 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF22 DUP3 PUSH3 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF36 DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF48 DUP2 PUSH3 0xF29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xF8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xF6D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB4 DUP3 PUSH3 0xF4E JUMP JUMPDEST PUSH3 0xFC0 DUP2 DUP6 PUSH3 0xF59 JUMP JUMPDEST SWAP4 POP PUSH3 0xFD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xF6A JUMP JUMPDEST PUSH3 0xFDD DUP2 PUSH3 0xF96 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF5 DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1007 DUP2 PUSH3 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x1024 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1033 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0xF3D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x1047 DUP2 DUP8 PUSH3 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH3 0x1058 PUSH1 0x60 DUP4 ADD DUP7 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1067 PUSH1 0x80 DUP4 ADD DUP6 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1076 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0xFFC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x109B JUMPI PUSH3 0x109A PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10AB DUP6 DUP3 DUP7 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x10BE DUP6 DUP3 DUP7 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x10E5 JUMPI PUSH3 0x10E4 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10F5 DUP8 DUP3 DUP9 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1119 JUMPI PUSH3 0x1118 PUSH3 0xC94 JUMP JUMPDEST JUMPDEST PUSH3 0x1127 DUP8 DUP3 DUP9 ADD PUSH3 0xCE3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH3 0x113C DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1180 PUSH1 0x14 DUP4 PUSH3 0xF59 JUMP JUMPDEST SWAP2 POP PUSH3 0x118D DUP3 PUSH3 0x1148 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11B3 DUP2 PUSH3 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x11F6 DUP3 PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP PUSH3 0x1203 DUP4 PUSH3 0xC99 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x121E JUMPI PUSH3 0x121D PUSH3 0x11BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x122F DUP2 PUSH3 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x124C PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x125B PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1279 DUP2 PUSH3 0x1262 JUMP JUMPDEST DUP2 EQ PUSH3 0x1285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1299 DUP2 PUSH3 0x126E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B8 JUMPI PUSH3 0x12B7 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C8 DUP5 DUP3 DUP6 ADD PUSH3 0x1288 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1319 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x132F JUMPI PUSH3 0x132E PUSH3 0x12D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x1359 DUP2 PUSH3 0x1300 JUMP JUMPDEST PUSH3 0x1365 DUP2 DUP7 PUSH3 0xF59 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH3 0x1383 JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x139A JUMPI PUSH3 0x13D1 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH3 0x13D1 JUMP JUMPDEST PUSH3 0x13A5 DUP6 PUSH3 0x1335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x13C9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x13A8 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13F7 DUP4 DUP6 PUSH3 0xF59 JUMP JUMPDEST SWAP4 POP PUSH3 0x1406 DUP4 DUP6 DUP5 PUSH3 0x13DA JUMP JUMPDEST PUSH3 0x1411 DUP4 PUSH3 0xF96 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1433 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1442 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x1451 PUSH1 0x40 DUP4 ADD DUP8 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x1465 DUP2 DUP7 PUSH3 0x134A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x147C DUP2 DUP5 DUP7 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1496 DUP3 PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP PUSH3 0x14A3 DUP4 PUSH3 0xC99 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x14BE JUMPI PUSH3 0x14BD PUSH3 0x11BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x14DB PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x14EA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x14F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x150E DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1520 DUP2 PUSH3 0x1501 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x153D PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1515 JUMP JUMPDEST PUSH3 0x154C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x155B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x15E1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x15A2 JUMP JUMPDEST PUSH3 0x15ED DUP7 DUP4 PUSH3 0x15A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1626 PUSH3 0x1620 PUSH3 0x161A DUP5 PUSH3 0xC99 JUMP JUMPDEST PUSH3 0xEE3 JUMP JUMPDEST PUSH3 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1642 DUP4 PUSH3 0x1605 JUMP JUMPDEST PUSH3 0x165A PUSH3 0x1651 DUP3 PUSH3 0x162D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x15AF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1671 PUSH3 0x1662 JUMP JUMPDEST PUSH3 0x167E DUP2 DUP5 DUP5 PUSH3 0x1637 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16A6 JUMPI PUSH3 0x169A PUSH1 0x0 DUP3 PUSH3 0x1667 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x16F5 JUMPI PUSH3 0x16BF DUP2 PUSH3 0x1335 JUMP JUMPDEST PUSH3 0x16CA DUP5 PUSH3 0x1592 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x16DA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x16F2 PUSH3 0x16E9 DUP6 PUSH3 0x1592 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1683 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x171A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x16FA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1735 DUP4 DUP4 PUSH3 0x1707 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1750 DUP3 PUSH3 0xF4E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x176C JUMPI PUSH3 0x176B PUSH3 0x1563 JUMP JUMPDEST JUMPDEST PUSH3 0x1778 DUP3 SLOAD PUSH3 0x1300 JUMP JUMPDEST PUSH3 0x1785 DUP3 DUP3 DUP6 PUSH3 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x17BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x17A8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x17B4 DUP6 DUP3 PUSH3 0x1727 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1824 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x17CD DUP7 PUSH3 0x1335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x17F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x17D0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1817 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1813 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1707 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1843 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x1858 DUP2 DUP6 DUP8 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP PUSH3 0x1869 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1889 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1898 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x18A7 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x18BC DUP2 DUP5 DUP7 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BE9 CODESIZE SUB DUP1 PUSH3 0x1BE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH3 0x48 DUP3 PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5346415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB0 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC2 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x11F CALLER DUP3 PUSH3 0x207 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x13F DUP5 PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x161 JUMPI PUSH3 0x160 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x194 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1FC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1EF JUMPI PUSH3 0x1EE PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1A2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x273 SWAP2 SWAP1 PUSH3 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x290 PUSH1 0x0 DUP4 DUP4 PUSH3 0x400 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x2F6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x2EC JUMPI PUSH3 0x2EB PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x337 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x32D JUMPI PUSH3 0x32C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x36A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x360 JUMPI PUSH3 0x35F PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x397 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x38D JUMPI PUSH3 0x38C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x3C0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x3B6 JUMPI PUSH3 0x3B5 PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x3E7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x3DD JUMPI PUSH3 0x3DC PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x3F7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x456 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x449 SWAP2 SWAP1 PUSH3 0xBE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x52C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4E5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x577 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x5C4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x623 SWAP2 SWAP1 PUSH3 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x662 DUP3 PUSH3 0x635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x676 DUP3 PUSH3 0x655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x688 DUP2 PUSH3 0x669 JUMP JUMPDEST DUP2 EQ PUSH3 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6A8 DUP2 PUSH3 0x67D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C3 DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP2 EQ PUSH3 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6E3 DUP2 PUSH3 0x6B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x705 JUMPI PUSH3 0x704 PUSH3 0x630 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x715 DUP7 DUP3 DUP8 ADD PUSH3 0x697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x728 DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x73B DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B6150617920426174636820230000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7BA DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH3 0x7C6 DUP2 DUP6 PUSH3 0x776 JUMP JUMPDEST SWAP4 POP PUSH3 0x7D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x781 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F1 DUP3 PUSH3 0x745 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP2 POP PUSH3 0x803 DUP3 DUP5 PUSH3 0x7AD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x885 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x89B JUMPI PUSH3 0x89A PUSH3 0x83D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x905 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8C6 JUMP JUMPDEST PUSH3 0x911 DUP7 DUP4 PUSH3 0x8C6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x954 PUSH3 0x94E PUSH3 0x948 DUP5 PUSH3 0x6AE JUMP JUMPDEST PUSH3 0x929 JUMP JUMPDEST PUSH3 0x6AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x970 DUP4 PUSH3 0x933 JUMP JUMPDEST PUSH3 0x988 PUSH3 0x97F DUP3 PUSH3 0x95B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8D3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x99F PUSH3 0x990 JUMP JUMPDEST PUSH3 0x9AC DUP2 DUP5 DUP5 PUSH3 0x965 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9D4 JUMPI PUSH3 0x9C8 PUSH1 0x0 DUP3 PUSH3 0x995 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA23 JUMPI PUSH3 0x9ED DUP2 PUSH3 0x8A1 JUMP JUMPDEST PUSH3 0x9F8 DUP5 PUSH3 0x8B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA08 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA20 PUSH3 0xA17 DUP6 PUSH3 0x8B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9B1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA48 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA28 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA63 DUP4 DUP4 PUSH3 0xA35 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA7E DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA9A JUMPI PUSH3 0xA99 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH3 0xAA6 DUP3 SLOAD PUSH3 0x86C JUMP JUMPDEST PUSH3 0xAB3 DUP3 DUP3 DUP6 PUSH3 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAEB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xAD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAE2 DUP6 DUP3 PUSH3 0xA55 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAFB DUP7 PUSH3 0x8A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB25 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAFE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB45 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB41 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA35 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xB94 DUP2 PUSH3 0x655 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xBF3 DUP3 PUSH3 0x6AE JUMP JUMPDEST SWAP2 POP PUSH3 0xC00 DUP4 PUSH3 0x6AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC1B JUMPI PUSH3 0xC1A PUSH3 0xBB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC2C DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC49 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB89 JUMP JUMPDEST PUSH3 0xC58 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC21 JUMP JUMPDEST PUSH3 0xC67 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC86 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH3 0xC9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xD1 0xCA CODESIZE 0xCE 0xB8 0xC7 0xB5 0x29 PUSH20 0x1C70596A0E5437AB20F96309CC116154F1835AF5 0xC0 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL GT CALLVALUE 0xC4 PUSH0 0xA8 DUP7 PUSH4 0x727C5A6 0xDA 0x2E 0xC3 DUP6 0xB9 LOG2 0xFC LOG0 STOP MOD OR PUSH1 0x57 BALANCE ADD 0xD5 PUSH31 0x78FAFD64736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"864:4064:10:-:0;;;1200:1;1167:34;;1699:16;;;;;;;;;;864:4064;;;;;;"},"deployedBytecode":{"functionDebugData":{"@batches_4765":{"entryPoint":1561,"id":4765,"parameterSlots":0,"returnSlots":0},"@beneficiaryBalance_4771":{"entryPoint":1829,"id":4771,"parameterSlots":0,"returnSlots":0},"@deposit_4877":{"entryPoint":1866,"id":4877,"parameterSlots":4,"returnSlots":0},"@numberOfBatches_4760":{"entryPoint":1555,"id":4760,"parameterSlots":0,"returnSlots":0},"@transferBeneficialOwnership_4916":{"entryPoint":1190,"id":4916,"parameterSlots":3,"returnSlots":0},"@withdrawPrivately_5054":{"entryPoint":2636,"id":5054,"parameterSlots":4,"returnSlots":0},"@withdrawWithAttestation_4992":{"entryPoint":416,"id":4992,"parameterSlots":4,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":3261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_calldata_ptrt_uint256":{"entryPoint":4296,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":4225,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256":{"entryPoint":3623,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr":{"entryPoint":3394,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4644,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack":{"entryPoint":4092,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address_fromStack":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack":{"entryPoint":5397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5097,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":4938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack":{"entryPoint":4465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5316,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4661,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_PikaPay_$5055_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5414,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6258,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5148,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$4742_t_string_memory_ptr_t_uint256_t_uint256_t_contract$_ERC20_$651__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":4109,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":6188,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4917,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3918,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3929,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5257,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4585,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":5802,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4706,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3522,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3225,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":5763,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ERC20_$651_to_t_address":{"entryPoint":4072,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address":{"entryPoint":3881,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaPay_$5055_to_t_address":{"entryPoint":5377,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3861,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3821,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":5637,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5957,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5082,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3946,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":5522,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4864,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":5927,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":3811,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":5895,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4538,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4817,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5475,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":5677,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3284,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3294,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3220,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3215,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3990,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":5538,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":5882,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":5735,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5":{"entryPoint":4424,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":5551,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":5687,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3574,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3235,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":5730,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21020:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"379:32:11","statements":[{"nodeType":"YulAssignment","src":"389:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:11","type":""}],"src":"334:77:11"},{"body":{"nodeType":"YulBlock","src":"460:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:11"},"nodeType":"YulFunctionCall","src":"519:12:11"},"nodeType":"YulExpressionStatement","src":"519:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:11"},"nodeType":"YulFunctionCall","src":"490:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:11"},"nodeType":"YulFunctionCall","src":"480:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:11"},"nodeType":"YulFunctionCall","src":"473:43:11"},"nodeType":"YulIf","src":"470:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:11","type":""}],"src":"417:122:11"},{"body":{"nodeType":"YulBlock","src":"597:87:11","statements":[{"nodeType":"YulAssignment","src":"607:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:11"},"nodeType":"YulFunctionCall","src":"616:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:11"},"nodeType":"YulFunctionCall","src":"645:33:11"},"nodeType":"YulExpressionStatement","src":"645:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:11","type":""}],"src":"545:139:11"},{"body":{"nodeType":"YulBlock","src":"779:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"789:6:11"},"nodeType":"YulFunctionCall","src":"789:12:11"},"nodeType":"YulExpressionStatement","src":"789:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"690:117:11"},{"body":{"nodeType":"YulBlock","src":"902:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"919:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"922:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"912:6:11"},"nodeType":"YulFunctionCall","src":"912:12:11"},"nodeType":"YulExpressionStatement","src":"912:12:11"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"813:117:11"},{"body":{"nodeType":"YulBlock","src":"1025:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1042:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1045:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1035:6:11"},"nodeType":"YulFunctionCall","src":"1035:12:11"},"nodeType":"YulExpressionStatement","src":"1035:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"936:117:11"},{"body":{"nodeType":"YulBlock","src":"1148:478:11","statements":[{"body":{"nodeType":"YulBlock","src":"1197:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1199:77:11"},"nodeType":"YulFunctionCall","src":"1199:79:11"},"nodeType":"YulExpressionStatement","src":"1199:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1176:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1184:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1172:3:11"},"nodeType":"YulFunctionCall","src":"1172:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"1191:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1168:3:11"},"nodeType":"YulFunctionCall","src":"1168:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:11"},"nodeType":"YulFunctionCall","src":"1161:35:11"},"nodeType":"YulIf","src":"1158:122:11"},{"nodeType":"YulAssignment","src":"1289:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1312:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1299:12:11"},"nodeType":"YulFunctionCall","src":"1299:20:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1289:6:11"}]},{"body":{"nodeType":"YulBlock","src":"1362:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1364:77:11"},"nodeType":"YulFunctionCall","src":"1364:79:11"},"nodeType":"YulExpressionStatement","src":"1364:79:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1334:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1342:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1331:2:11"},"nodeType":"YulFunctionCall","src":"1331:30:11"},"nodeType":"YulIf","src":"1328:117:11"},{"nodeType":"YulAssignment","src":"1454:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1470:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1478:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:11"},"nodeType":"YulFunctionCall","src":"1466:17:11"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1454:8:11"}]},{"body":{"nodeType":"YulBlock","src":"1537:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1539:77:11"},"nodeType":"YulFunctionCall","src":"1539:79:11"},"nodeType":"YulExpressionStatement","src":"1539:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1502:8:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1516:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1524:4:11","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1512:3:11"},"nodeType":"YulFunctionCall","src":"1512:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1498:3:11"},"nodeType":"YulFunctionCall","src":"1498:32:11"},{"name":"end","nodeType":"YulIdentifier","src":"1532:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1495:2:11"},"nodeType":"YulFunctionCall","src":"1495:41:11"},"nodeType":"YulIf","src":"1492:128:11"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1115:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1123:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1131:8:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1141:6:11","type":""}],"src":"1073:553:11"},{"body":{"nodeType":"YulBlock","src":"1752:699:11","statements":[{"body":{"nodeType":"YulBlock","src":"1798:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1800:77:11"},"nodeType":"YulFunctionCall","src":"1800:79:11"},"nodeType":"YulExpressionStatement","src":"1800:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1773:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1782:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1769:3:11"},"nodeType":"YulFunctionCall","src":"1769:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1794:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1765:3:11"},"nodeType":"YulFunctionCall","src":"1765:32:11"},"nodeType":"YulIf","src":"1762:119:11"},{"nodeType":"YulBlock","src":"1891:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1906:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1920:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1935:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1981:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:11"},"nodeType":"YulFunctionCall","src":"1966:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1990:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1945:20:11"},"nodeType":"YulFunctionCall","src":"1945:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1935:6:11"}]}]},{"nodeType":"YulBlock","src":"2018:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2033:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2047:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2037:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2063:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2098:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2109:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2094:3:11"},"nodeType":"YulFunctionCall","src":"2094:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2118:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2073:20:11"},"nodeType":"YulFunctionCall","src":"2073:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2063:6:11"}]}]},{"nodeType":"YulBlock","src":"2146:298:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2161:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:11"},"nodeType":"YulFunctionCall","src":"2188:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2175:12:11"},"nodeType":"YulFunctionCall","src":"2175:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2165:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2254:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2256:77:11"},"nodeType":"YulFunctionCall","src":"2256:79:11"},"nodeType":"YulExpressionStatement","src":"2256:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2226:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2234:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2223:2:11"},"nodeType":"YulFunctionCall","src":"2223:30:11"},"nodeType":"YulIf","src":"2220:117:11"},{"nodeType":"YulAssignment","src":"2351:83:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2406:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2402:3:11"},"nodeType":"YulFunctionCall","src":"2402:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2426:7:11"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"2369:32:11"},"nodeType":"YulFunctionCall","src":"2369:65:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2351:6:11"},{"name":"value3","nodeType":"YulIdentifier","src":"2359:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1698:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1709:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1721:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1729:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1737:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1745:6:11","type":""}],"src":"1632:819:11"},{"body":{"nodeType":"YulBlock","src":"2502:81:11","statements":[{"nodeType":"YulAssignment","src":"2512:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2527:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2534:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2523:3:11"},"nodeType":"YulFunctionCall","src":"2523:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2512:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2494:7:11","type":""}],"src":"2457:126:11"},{"body":{"nodeType":"YulBlock","src":"2634:51:11","statements":[{"nodeType":"YulAssignment","src":"2644:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2673:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2655:17:11"},"nodeType":"YulFunctionCall","src":"2655:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2644:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2616:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2626:7:11","type":""}],"src":"2589:96:11"},{"body":{"nodeType":"YulBlock","src":"2734:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"2791:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2800:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2803:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2793:6:11"},"nodeType":"YulFunctionCall","src":"2793:12:11"},"nodeType":"YulExpressionStatement","src":"2793:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2757:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2782:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2764:17:11"},"nodeType":"YulFunctionCall","src":"2764:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2754:2:11"},"nodeType":"YulFunctionCall","src":"2754:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2747:6:11"},"nodeType":"YulFunctionCall","src":"2747:43:11"},"nodeType":"YulIf","src":"2744:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2727:5:11","type":""}],"src":"2691:122:11"},{"body":{"nodeType":"YulBlock","src":"2871:87:11","statements":[{"nodeType":"YulAssignment","src":"2881:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2903:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2890:12:11"},"nodeType":"YulFunctionCall","src":"2890:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2881:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2946:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2919:26:11"},"nodeType":"YulFunctionCall","src":"2919:33:11"},"nodeType":"YulExpressionStatement","src":"2919:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2849:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2857:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2865:5:11","type":""}],"src":"2819:139:11"},{"body":{"nodeType":"YulBlock","src":"3064:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"3110:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3112:77:11"},"nodeType":"YulFunctionCall","src":"3112:79:11"},"nodeType":"YulExpressionStatement","src":"3112:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3085:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3094:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3081:3:11"},"nodeType":"YulFunctionCall","src":"3081:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3106:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3077:3:11"},"nodeType":"YulFunctionCall","src":"3077:32:11"},"nodeType":"YulIf","src":"3074:119:11"},{"nodeType":"YulBlock","src":"3203:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3218:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3232:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3222:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3247:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3282:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3293:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3278:3:11"},"nodeType":"YulFunctionCall","src":"3278:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3302:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3257:20:11"},"nodeType":"YulFunctionCall","src":"3257:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3247:6:11"}]}]},{"nodeType":"YulBlock","src":"3330:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3345:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3359:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3349:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3375:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3410:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3421:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:11"},"nodeType":"YulFunctionCall","src":"3406:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3430:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3385:20:11"},"nodeType":"YulFunctionCall","src":"3385:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3375:6:11"}]}]},{"nodeType":"YulBlock","src":"3458:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3473:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3487:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3477:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3503:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3538:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3549:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3534:3:11"},"nodeType":"YulFunctionCall","src":"3534:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3558:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3513:20:11"},"nodeType":"YulFunctionCall","src":"3513:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3503:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3018:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3029:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3041:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3049:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3057:6:11","type":""}],"src":"2964:619:11"},{"body":{"nodeType":"YulBlock","src":"3654:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3671:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3694:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3676:17:11"},"nodeType":"YulFunctionCall","src":"3676:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3664:6:11"},"nodeType":"YulFunctionCall","src":"3664:37:11"},"nodeType":"YulExpressionStatement","src":"3664:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3642:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3649:3:11","type":""}],"src":"3589:118:11"},{"body":{"nodeType":"YulBlock","src":"3811:124:11","statements":[{"nodeType":"YulAssignment","src":"3821:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3833:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3844:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3829:3:11"},"nodeType":"YulFunctionCall","src":"3829:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3821:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3901:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3914:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3925:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3910:3:11"},"nodeType":"YulFunctionCall","src":"3910:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3857:43:11"},"nodeType":"YulFunctionCall","src":"3857:71:11"},"nodeType":"YulExpressionStatement","src":"3857:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3783:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3795:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3806:4:11","type":""}],"src":"3713:222:11"},{"body":{"nodeType":"YulBlock","src":"4007:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"4053:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4055:77:11"},"nodeType":"YulFunctionCall","src":"4055:79:11"},"nodeType":"YulExpressionStatement","src":"4055:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4028:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4037:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4024:3:11"},"nodeType":"YulFunctionCall","src":"4024:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4049:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4020:3:11"},"nodeType":"YulFunctionCall","src":"4020:32:11"},"nodeType":"YulIf","src":"4017:119:11"},{"nodeType":"YulBlock","src":"4146:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4161:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4175:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4165:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4190:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4225:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4236:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:11"},"nodeType":"YulFunctionCall","src":"4221:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4245:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4200:20:11"},"nodeType":"YulFunctionCall","src":"4200:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4190:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3977:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3988:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4000:6:11","type":""}],"src":"3941:329:11"},{"body":{"nodeType":"YulBlock","src":"4308:28:11","statements":[{"nodeType":"YulAssignment","src":"4318:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"4325:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4318:3:11"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4294:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4304:3:11","type":""}],"src":"4276:60:11"},{"body":{"nodeType":"YulBlock","src":"4402:82:11","statements":[{"nodeType":"YulAssignment","src":"4412:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4470:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4452:17:11"},"nodeType":"YulFunctionCall","src":"4452:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4443:8:11"},"nodeType":"YulFunctionCall","src":"4443:34:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4425:17:11"},"nodeType":"YulFunctionCall","src":"4425:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4412:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4382:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4392:9:11","type":""}],"src":"4342:142:11"},{"body":{"nodeType":"YulBlock","src":"4550:66:11","statements":[{"nodeType":"YulAssignment","src":"4560:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4604:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4573:30:11"},"nodeType":"YulFunctionCall","src":"4573:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4560:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4530:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4540:9:11","type":""}],"src":"4490:126:11"},{"body":{"nodeType":"YulBlock","src":"4721:66:11","statements":[{"nodeType":"YulAssignment","src":"4731:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4775:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4744:30:11"},"nodeType":"YulFunctionCall","src":"4744:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4731:9:11"}]}]},"name":"convert_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4701:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4711:9:11","type":""}],"src":"4622:165:11"},{"body":{"nodeType":"YulBlock","src":"4897:105:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4914:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4989:5:11"}],"functionName":{"name":"convert_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address","nodeType":"YulIdentifier","src":"4919:69:11"},"nodeType":"YulFunctionCall","src":"4919:76:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4907:6:11"},"nodeType":"YulFunctionCall","src":"4907:89:11"},"nodeType":"YulExpressionStatement","src":"4907:89:11"}]},"name":"abi_encode_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4885:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4892:3:11","type":""}],"src":"4793:209:11"},{"body":{"nodeType":"YulBlock","src":"5067:40:11","statements":[{"nodeType":"YulAssignment","src":"5078:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5094:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5088:5:11"},"nodeType":"YulFunctionCall","src":"5088:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5078:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5050:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5060:6:11","type":""}],"src":"5008:99:11"},{"body":{"nodeType":"YulBlock","src":"5209:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5226:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5231:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5219:6:11"},"nodeType":"YulFunctionCall","src":"5219:19:11"},"nodeType":"YulExpressionStatement","src":"5219:19:11"},{"nodeType":"YulAssignment","src":"5247:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5266:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5271:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5262:3:11"},"nodeType":"YulFunctionCall","src":"5262:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5247:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5181:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"5186:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5197:11:11","type":""}],"src":"5113:169:11"},{"body":{"nodeType":"YulBlock","src":"5350:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5360:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5369:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5364:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5429:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5454:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"5459:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5450:3:11"},"nodeType":"YulFunctionCall","src":"5450:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5473:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"5478:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5469:3:11"},"nodeType":"YulFunctionCall","src":"5469:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5463:5:11"},"nodeType":"YulFunctionCall","src":"5463:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5443:6:11"},"nodeType":"YulFunctionCall","src":"5443:39:11"},"nodeType":"YulExpressionStatement","src":"5443:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5390:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"5393:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5387:2:11"},"nodeType":"YulFunctionCall","src":"5387:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5401:19:11","statements":[{"nodeType":"YulAssignment","src":"5403:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5412:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"5415:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:11"},"nodeType":"YulFunctionCall","src":"5408:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5403:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"5383:3:11","statements":[]},"src":"5379:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5512:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5517:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:11"},"nodeType":"YulFunctionCall","src":"5508:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"5526:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:11"},"nodeType":"YulFunctionCall","src":"5501:27:11"},"nodeType":"YulExpressionStatement","src":"5501:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5332:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5337:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"5342:6:11","type":""}],"src":"5288:246:11"},{"body":{"nodeType":"YulBlock","src":"5588:54:11","statements":[{"nodeType":"YulAssignment","src":"5598:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5616:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:11"},"nodeType":"YulFunctionCall","src":"5612:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5632:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5628:3:11"},"nodeType":"YulFunctionCall","src":"5628:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5608:3:11"},"nodeType":"YulFunctionCall","src":"5608:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5598:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5571:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5581:6:11","type":""}],"src":"5540:102:11"},{"body":{"nodeType":"YulBlock","src":"5740:285:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5797:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5764:32:11"},"nodeType":"YulFunctionCall","src":"5764:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5754:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5812:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5878:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5883:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5819:58:11"},"nodeType":"YulFunctionCall","src":"5819:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5812:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5938:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5945:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5934:3:11"},"nodeType":"YulFunctionCall","src":"5934:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"5952:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5957:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5899:34:11"},"nodeType":"YulFunctionCall","src":"5899:65:11"},"nodeType":"YulExpressionStatement","src":"5899:65:11"},{"nodeType":"YulAssignment","src":"5973:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5984:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6011:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5989:21:11"},"nodeType":"YulFunctionCall","src":"5989:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5980:3:11"},"nodeType":"YulFunctionCall","src":"5980:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5973:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5721:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5728:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5736:3:11","type":""}],"src":"5648:377:11"},{"body":{"nodeType":"YulBlock","src":"6104:66:11","statements":[{"nodeType":"YulAssignment","src":"6114:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6158:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"6127:30:11"},"nodeType":"YulFunctionCall","src":"6127:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6114:9:11"}]}]},"name":"convert_t_contract$_ERC20_$651_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6084:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6094:9:11","type":""}],"src":"6031:139:11"},{"body":{"nodeType":"YulBlock","src":"6254:79:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6271:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6320:5:11"}],"functionName":{"name":"convert_t_contract$_ERC20_$651_to_t_address","nodeType":"YulIdentifier","src":"6276:43:11"},"nodeType":"YulFunctionCall","src":"6276:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6264:6:11"},"nodeType":"YulFunctionCall","src":"6264:63:11"},"nodeType":"YulExpressionStatement","src":"6264:63:11"}]},"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6242:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6249:3:11","type":""}],"src":"6176:157:11"},{"body":{"nodeType":"YulBlock","src":"6649:660:11","statements":[{"nodeType":"YulAssignment","src":"6659:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6671:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6682:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6667:3:11"},"nodeType":"YulFunctionCall","src":"6667:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6659:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6740:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6764:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:11"},"nodeType":"YulFunctionCall","src":"6749:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6696:43:11"},"nodeType":"YulFunctionCall","src":"6696:71:11"},"nodeType":"YulExpressionStatement","src":"6696:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6860:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6873:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6869:3:11"},"nodeType":"YulFunctionCall","src":"6869:18:11"}],"functionName":{"name":"abi_encode_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6777:82:11"},"nodeType":"YulFunctionCall","src":"6777:111:11"},"nodeType":"YulExpressionStatement","src":"6777:111:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6909:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6920:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6905:3:11"},"nodeType":"YulFunctionCall","src":"6905:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6929:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6935:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6925:3:11"},"nodeType":"YulFunctionCall","src":"6925:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6898:6:11"},"nodeType":"YulFunctionCall","src":"6898:48:11"},"nodeType":"YulExpressionStatement","src":"6898:48:11"},{"nodeType":"YulAssignment","src":"6955:86:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7027:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"7036:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6963:63:11"},"nodeType":"YulFunctionCall","src":"6963:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6955:4:11"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7095:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7108:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7119:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7104:3:11"},"nodeType":"YulFunctionCall","src":"7104:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7051:43:11"},"nodeType":"YulFunctionCall","src":"7051:72:11"},"nodeType":"YulExpressionStatement","src":"7051:72:11"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7177:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7190:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7201:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7186:3:11"},"nodeType":"YulFunctionCall","src":"7186:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7133:43:11"},"nodeType":"YulFunctionCall","src":"7133:73:11"},"nodeType":"YulExpressionStatement","src":"7133:73:11"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"7273:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7286:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7297:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7282:3:11"},"nodeType":"YulFunctionCall","src":"7282:19:11"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7216:56:11"},"nodeType":"YulFunctionCall","src":"7216:86:11"},"nodeType":"YulExpressionStatement","src":"7216:86:11"}]},"name":"abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$4742_t_string_memory_ptr_t_uint256_t_uint256_t_contract$_ERC20_$651__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6581:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6593:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6601:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6609:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6617:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6625:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6633:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6644:4:11","type":""}],"src":"6339:970:11"},{"body":{"nodeType":"YulBlock","src":"7398:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"7444:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7446:77:11"},"nodeType":"YulFunctionCall","src":"7446:79:11"},"nodeType":"YulExpressionStatement","src":"7446:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7419:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7428:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7415:3:11"},"nodeType":"YulFunctionCall","src":"7415:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7440:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7411:3:11"},"nodeType":"YulFunctionCall","src":"7411:32:11"},"nodeType":"YulIf","src":"7408:119:11"},{"nodeType":"YulBlock","src":"7537:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7552:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7566:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7556:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7581:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7616:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7627:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7612:3:11"},"nodeType":"YulFunctionCall","src":"7612:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7636:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7591:20:11"},"nodeType":"YulFunctionCall","src":"7591:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7581:6:11"}]}]},{"nodeType":"YulBlock","src":"7664:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7679:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7693:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7683:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7709:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7744:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7755:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7740:3:11"},"nodeType":"YulFunctionCall","src":"7740:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7764:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7719:20:11"},"nodeType":"YulFunctionCall","src":"7719:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7709:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7360:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7371:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7383:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7391:6:11","type":""}],"src":"7315:474:11"},{"body":{"nodeType":"YulBlock","src":"7915:699:11","statements":[{"body":{"nodeType":"YulBlock","src":"7961:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7963:77:11"},"nodeType":"YulFunctionCall","src":"7963:79:11"},"nodeType":"YulExpressionStatement","src":"7963:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7936:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7945:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7932:3:11"},"nodeType":"YulFunctionCall","src":"7932:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7957:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7928:3:11"},"nodeType":"YulFunctionCall","src":"7928:32:11"},"nodeType":"YulIf","src":"7925:119:11"},{"nodeType":"YulBlock","src":"8054:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8069:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8083:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8073:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8098:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8133:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8144:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8129:3:11"},"nodeType":"YulFunctionCall","src":"8129:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8153:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8108:20:11"},"nodeType":"YulFunctionCall","src":"8108:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8098:6:11"}]}]},{"nodeType":"YulBlock","src":"8181:298:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8196:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8227:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8238:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8223:3:11"},"nodeType":"YulFunctionCall","src":"8223:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8210:12:11"},"nodeType":"YulFunctionCall","src":"8210:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8200:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8289:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8291:77:11"},"nodeType":"YulFunctionCall","src":"8291:79:11"},"nodeType":"YulExpressionStatement","src":"8291:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8261:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8269:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8258:2:11"},"nodeType":"YulFunctionCall","src":"8258:30:11"},"nodeType":"YulIf","src":"8255:117:11"},{"nodeType":"YulAssignment","src":"8386:83:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8441:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8452:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8437:3:11"},"nodeType":"YulFunctionCall","src":"8437:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8461:7:11"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"8404:32:11"},"nodeType":"YulFunctionCall","src":"8404:65:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8386:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8394:6:11"}]}]},{"nodeType":"YulBlock","src":"8489:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8504:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8518:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8508:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8534:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8569:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8580:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8565:3:11"},"nodeType":"YulFunctionCall","src":"8565:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8589:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8544:20:11"},"nodeType":"YulFunctionCall","src":"8544:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8534:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7861:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7872:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7884:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7892:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7900:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7908:6:11","type":""}],"src":"7795:819:11"},{"body":{"nodeType":"YulBlock","src":"8726:64:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8748:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8756:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8744:3:11"},"nodeType":"YulFunctionCall","src":"8744:14:11"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"8760:22:11","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8737:6:11"},"nodeType":"YulFunctionCall","src":"8737:46:11"},"nodeType":"YulExpressionStatement","src":"8737:46:11"}]},"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8718:6:11","type":""}],"src":"8620:170:11"},{"body":{"nodeType":"YulBlock","src":"8942:220:11","statements":[{"nodeType":"YulAssignment","src":"8952:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9018:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9023:2:11","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8959:58:11"},"nodeType":"YulFunctionCall","src":"8959:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8952:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9124:3:11"}],"functionName":{"name":"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","nodeType":"YulIdentifier","src":"9035:88:11"},"nodeType":"YulFunctionCall","src":"9035:93:11"},"nodeType":"YulExpressionStatement","src":"9035:93:11"},{"nodeType":"YulAssignment","src":"9137:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9148:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9153:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9144:3:11"},"nodeType":"YulFunctionCall","src":"9144:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9137:3:11"}]}]},"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8930:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8938:3:11","type":""}],"src":"8796:366:11"},{"body":{"nodeType":"YulBlock","src":"9339:248:11","statements":[{"nodeType":"YulAssignment","src":"9349:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9361:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9372:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9357:3:11"},"nodeType":"YulFunctionCall","src":"9357:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9349:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9396:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9407:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9392:3:11"},"nodeType":"YulFunctionCall","src":"9392:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9415:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9421:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9411:3:11"},"nodeType":"YulFunctionCall","src":"9411:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9385:6:11"},"nodeType":"YulFunctionCall","src":"9385:47:11"},"nodeType":"YulExpressionStatement","src":"9385:47:11"},{"nodeType":"YulAssignment","src":"9441:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9575:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9449:124:11"},"nodeType":"YulFunctionCall","src":"9449:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9441:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9319:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9334:4:11","type":""}],"src":"9168:419:11"},{"body":{"nodeType":"YulBlock","src":"9621:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9638:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9641:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9631:6:11"},"nodeType":"YulFunctionCall","src":"9631:88:11"},"nodeType":"YulExpressionStatement","src":"9631:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9735:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9738:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9728:6:11"},"nodeType":"YulFunctionCall","src":"9728:15:11"},"nodeType":"YulExpressionStatement","src":"9728:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9759:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9762:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9752:6:11"},"nodeType":"YulFunctionCall","src":"9752:15:11"},"nodeType":"YulExpressionStatement","src":"9752:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9593:180:11"},{"body":{"nodeType":"YulBlock","src":"9824:149:11","statements":[{"nodeType":"YulAssignment","src":"9834:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9857:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9839:17:11"},"nodeType":"YulFunctionCall","src":"9839:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9834:1:11"}]},{"nodeType":"YulAssignment","src":"9868:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9891:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9873:17:11"},"nodeType":"YulFunctionCall","src":"9873:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9868:1:11"}]},{"nodeType":"YulAssignment","src":"9902:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9914:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9917:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9910:3:11"},"nodeType":"YulFunctionCall","src":"9910:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9902:4:11"}]},{"body":{"nodeType":"YulBlock","src":"9944:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9946:16:11"},"nodeType":"YulFunctionCall","src":"9946:18:11"},"nodeType":"YulExpressionStatement","src":"9946:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9935:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"9941:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9932:2:11"},"nodeType":"YulFunctionCall","src":"9932:11:11"},"nodeType":"YulIf","src":"9929:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9810:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9813:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9819:4:11","type":""}],"src":"9779:194:11"},{"body":{"nodeType":"YulBlock","src":"10044:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10061:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10084:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10066:17:11"},"nodeType":"YulFunctionCall","src":"10066:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10054:6:11"},"nodeType":"YulFunctionCall","src":"10054:37:11"},"nodeType":"YulExpressionStatement","src":"10054:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10032:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10039:3:11","type":""}],"src":"9979:118:11"},{"body":{"nodeType":"YulBlock","src":"10229:206:11","statements":[{"nodeType":"YulAssignment","src":"10239:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10251:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10262:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10247:3:11"},"nodeType":"YulFunctionCall","src":"10247:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10239:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10319:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10332:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10343:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10328:3:11"},"nodeType":"YulFunctionCall","src":"10328:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10275:43:11"},"nodeType":"YulFunctionCall","src":"10275:71:11"},"nodeType":"YulExpressionStatement","src":"10275:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10400:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10413:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10424:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10409:3:11"},"nodeType":"YulFunctionCall","src":"10409:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10356:43:11"},"nodeType":"YulFunctionCall","src":"10356:72:11"},"nodeType":"YulExpressionStatement","src":"10356:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10193:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10205:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10213:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10224:4:11","type":""}],"src":"10103:332:11"},{"body":{"nodeType":"YulBlock","src":"10483:48:11","statements":[{"nodeType":"YulAssignment","src":"10493:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10518:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10511:6:11"},"nodeType":"YulFunctionCall","src":"10511:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10504:6:11"},"nodeType":"YulFunctionCall","src":"10504:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10493:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10465:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10475:7:11","type":""}],"src":"10441:90:11"},{"body":{"nodeType":"YulBlock","src":"10577:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"10631:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10640:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10643:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10633:6:11"},"nodeType":"YulFunctionCall","src":"10633:12:11"},"nodeType":"YulExpressionStatement","src":"10633:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10600:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10622:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10607:14:11"},"nodeType":"YulFunctionCall","src":"10607:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10597:2:11"},"nodeType":"YulFunctionCall","src":"10597:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10590:6:11"},"nodeType":"YulFunctionCall","src":"10590:40:11"},"nodeType":"YulIf","src":"10587:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10570:5:11","type":""}],"src":"10537:116:11"},{"body":{"nodeType":"YulBlock","src":"10719:77:11","statements":[{"nodeType":"YulAssignment","src":"10729:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10744:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10738:5:11"},"nodeType":"YulFunctionCall","src":"10738:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10729:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10784:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10760:23:11"},"nodeType":"YulFunctionCall","src":"10760:30:11"},"nodeType":"YulExpressionStatement","src":"10760:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10697:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10705:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10713:5:11","type":""}],"src":"10659:137:11"},{"body":{"nodeType":"YulBlock","src":"10876:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"10922:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10924:77:11"},"nodeType":"YulFunctionCall","src":"10924:79:11"},"nodeType":"YulExpressionStatement","src":"10924:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10897:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10906:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10893:3:11"},"nodeType":"YulFunctionCall","src":"10893:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10918:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10889:3:11"},"nodeType":"YulFunctionCall","src":"10889:32:11"},"nodeType":"YulIf","src":"10886:119:11"},{"nodeType":"YulBlock","src":"11015:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11030:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11044:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11034:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11059:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11102:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11113:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11098:3:11"},"nodeType":"YulFunctionCall","src":"11098:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11122:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11069:28:11"},"nodeType":"YulFunctionCall","src":"11069:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11059:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10846:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10857:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10869:6:11","type":""}],"src":"10802:345:11"},{"body":{"nodeType":"YulBlock","src":"11181:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11198:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11201:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11191:6:11"},"nodeType":"YulFunctionCall","src":"11191:88:11"},"nodeType":"YulExpressionStatement","src":"11191:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11295:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11298:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11288:6:11"},"nodeType":"YulFunctionCall","src":"11288:15:11"},"nodeType":"YulExpressionStatement","src":"11288:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11319:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11322:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11312:6:11"},"nodeType":"YulFunctionCall","src":"11312:15:11"},"nodeType":"YulExpressionStatement","src":"11312:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11153:180:11"},{"body":{"nodeType":"YulBlock","src":"11390:269:11","statements":[{"nodeType":"YulAssignment","src":"11400:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11414:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11420:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11410:3:11"},"nodeType":"YulFunctionCall","src":"11410:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11400:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11431:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11461:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11467:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11457:3:11"},"nodeType":"YulFunctionCall","src":"11457:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11435:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11508:51:11","statements":[{"nodeType":"YulAssignment","src":"11522:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11536:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11544:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11532:3:11"},"nodeType":"YulFunctionCall","src":"11532:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11522:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11488:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11481:6:11"},"nodeType":"YulFunctionCall","src":"11481:26:11"},"nodeType":"YulIf","src":"11478:81:11"},{"body":{"nodeType":"YulBlock","src":"11611:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11625:16:11"},"nodeType":"YulFunctionCall","src":"11625:18:11"},"nodeType":"YulExpressionStatement","src":"11625:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11575:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11598:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11606:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11595:2:11"},"nodeType":"YulFunctionCall","src":"11595:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11572:2:11"},"nodeType":"YulFunctionCall","src":"11572:38:11"},"nodeType":"YulIf","src":"11569:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11374:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11383:6:11","type":""}],"src":"11339:320:11"},{"body":{"nodeType":"YulBlock","src":"11719:87:11","statements":[{"nodeType":"YulAssignment","src":"11729:11:11","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11737:3:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11729:4:11"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11757:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11760:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11750:6:11"},"nodeType":"YulFunctionCall","src":"11750:14:11"},"nodeType":"YulExpressionStatement","src":"11750:14:11"},{"nodeType":"YulAssignment","src":"11773:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11791:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11794:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11781:9:11"},"nodeType":"YulFunctionCall","src":"11781:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11773:4:11"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11706:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11714:4:11","type":""}],"src":"11665:141:11"},{"body":{"nodeType":"YulBlock","src":"11925:742:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11935:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11958:5:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11952:5:11"},"nodeType":"YulFunctionCall","src":"11952:12:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"11939:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11973:50:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12013:9:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11987:25:11"},"nodeType":"YulFunctionCall","src":"11987:36:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11977:6:11","type":""}]},{"nodeType":"YulAssignment","src":"12032:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12098:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12103:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12039:58:11"},"nodeType":"YulFunctionCall","src":"12039:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12032:3:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12159:157:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12212:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12221:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12236:4:11","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12232:3:11"},"nodeType":"YulFunctionCall","src":"12232:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12217:3:11"},"nodeType":"YulFunctionCall","src":"12217:25:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12205:6:11"},"nodeType":"YulFunctionCall","src":"12205:38:11"},"nodeType":"YulExpressionStatement","src":"12205:38:11"},{"nodeType":"YulAssignment","src":"12256:50:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12267:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12276:4:11","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12296:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12289:6:11"},"nodeType":"YulFunctionCall","src":"12289:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12282:6:11"},"nodeType":"YulFunctionCall","src":"12282:22:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12272:3:11"},"nodeType":"YulFunctionCall","src":"12272:33:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12263:3:11"},"nodeType":"YulFunctionCall","src":"12263:43:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12256:3:11"}]}]},"nodeType":"YulCase","src":"12152:164:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12157:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"12332:329:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12377:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12424:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"12392:31:11"},"nodeType":"YulFunctionCall","src":"12392:38:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"12381:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12443:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12452:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12447:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12510:110:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12539:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"12544:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12535:3:11"},"nodeType":"YulFunctionCall","src":"12535:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12554:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12548:5:11"},"nodeType":"YulFunctionCall","src":"12548:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12528:6:11"},"nodeType":"YulFunctionCall","src":"12528:35:11"},"nodeType":"YulExpressionStatement","src":"12528:35:11"},{"nodeType":"YulAssignment","src":"12580:26:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12595:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"12604:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12591:3:11"},"nodeType":"YulFunctionCall","src":"12591:15:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12580:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12477:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"12480:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12474:2:11"},"nodeType":"YulFunctionCall","src":"12474:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12488:21:11","statements":[{"nodeType":"YulAssignment","src":"12490:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12499:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"12502:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12495:3:11"},"nodeType":"YulFunctionCall","src":"12495:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12490:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"12470:3:11","statements":[]},"src":"12466:154:11"},{"nodeType":"YulAssignment","src":"12633:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12644:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"12649:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12640:3:11"},"nodeType":"YulFunctionCall","src":"12640:11:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12633:3:11"}]}]},"nodeType":"YulCase","src":"12325:336:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12330:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12130:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12141:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12126:3:11"},"nodeType":"YulFunctionCall","src":"12126:17:11"},"nodeType":"YulSwitch","src":"12119:542:11"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11906:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11913:3:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11921:3:11","type":""}],"src":"11836:831:11"},{"body":{"nodeType":"YulBlock","src":"12737:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12760:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"12765:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12770:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12747:12:11"},"nodeType":"YulFunctionCall","src":"12747:30:11"},"nodeType":"YulExpressionStatement","src":"12747:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12797:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"12802:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12793:3:11"},"nodeType":"YulFunctionCall","src":"12793:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"12811:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12786:6:11"},"nodeType":"YulFunctionCall","src":"12786:27:11"},"nodeType":"YulExpressionStatement","src":"12786:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12719:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12724:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12729:6:11","type":""}],"src":"12673:146:11"},{"body":{"nodeType":"YulBlock","src":"12951:215:11","statements":[{"nodeType":"YulAssignment","src":"12961:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13027:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13032:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12968:58:11"},"nodeType":"YulFunctionCall","src":"12968:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12961:3:11"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13086:5:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13093:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13098:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13049:36:11"},"nodeType":"YulFunctionCall","src":"13049:56:11"},"nodeType":"YulExpressionStatement","src":"13049:56:11"},{"nodeType":"YulAssignment","src":"13114:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13125:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13152:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13130:21:11"},"nodeType":"YulFunctionCall","src":"13130:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13121:3:11"},"nodeType":"YulFunctionCall","src":"13121:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13114:3:11"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12924:5:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12931:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12939:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12947:3:11","type":""}],"src":"12849:317:11"},{"body":{"nodeType":"YulBlock","src":"13429:603:11","statements":[{"nodeType":"YulAssignment","src":"13439:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13451:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13462:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13447:3:11"},"nodeType":"YulFunctionCall","src":"13447:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13439:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13520:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13533:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13544:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13529:3:11"},"nodeType":"YulFunctionCall","src":"13529:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13476:43:11"},"nodeType":"YulFunctionCall","src":"13476:71:11"},"nodeType":"YulExpressionStatement","src":"13476:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13601:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13614:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13625:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13610:3:11"},"nodeType":"YulFunctionCall","src":"13610:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13557:43:11"},"nodeType":"YulFunctionCall","src":"13557:72:11"},"nodeType":"YulExpressionStatement","src":"13557:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13683:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13696:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13707:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13692:3:11"},"nodeType":"YulFunctionCall","src":"13692:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13639:43:11"},"nodeType":"YulFunctionCall","src":"13639:72:11"},"nodeType":"YulExpressionStatement","src":"13639:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13732:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13743:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13728:3:11"},"nodeType":"YulFunctionCall","src":"13728:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13752:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13758:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13748:3:11"},"nodeType":"YulFunctionCall","src":"13748:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13721:6:11"},"nodeType":"YulFunctionCall","src":"13721:48:11"},"nodeType":"YulExpressionStatement","src":"13721:48:11"},{"nodeType":"YulAssignment","src":"13778:83:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13847:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"13856:4:11"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13786:60:11"},"nodeType":"YulFunctionCall","src":"13786:75:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13778:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13882:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13893:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13878:3:11"},"nodeType":"YulFunctionCall","src":"13878:19:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13903:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13909:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13899:3:11"},"nodeType":"YulFunctionCall","src":"13899:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13871:6:11"},"nodeType":"YulFunctionCall","src":"13871:49:11"},"nodeType":"YulExpressionStatement","src":"13871:49:11"},{"nodeType":"YulAssignment","src":"13929:96:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14003:6:11"},{"name":"value5","nodeType":"YulIdentifier","src":"14011:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"14020:4:11"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13937:65:11"},"nodeType":"YulFunctionCall","src":"13937:88:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13929:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13361:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13373:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13381:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13389:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13397:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13405:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13413:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13424:4:11","type":""}],"src":"13172:860:11"},{"body":{"nodeType":"YulBlock","src":"14082:147:11","statements":[{"nodeType":"YulAssignment","src":"14092:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14115:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14097:17:11"},"nodeType":"YulFunctionCall","src":"14097:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14092:1:11"}]},{"nodeType":"YulAssignment","src":"14126:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14149:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14131:17:11"},"nodeType":"YulFunctionCall","src":"14131:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14126:1:11"}]},{"nodeType":"YulAssignment","src":"14160:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14171:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"14174:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:11"},"nodeType":"YulFunctionCall","src":"14167:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14160:3:11"}]},{"body":{"nodeType":"YulBlock","src":"14200:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14202:16:11"},"nodeType":"YulFunctionCall","src":"14202:18:11"},"nodeType":"YulExpressionStatement","src":"14202:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14192:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"14195:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14189:2:11"},"nodeType":"YulFunctionCall","src":"14189:10:11"},"nodeType":"YulIf","src":"14186:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14069:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"14072:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14078:3:11","type":""}],"src":"14038:191:11"},{"body":{"nodeType":"YulBlock","src":"14389:288:11","statements":[{"nodeType":"YulAssignment","src":"14399:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14411:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14422:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14407:3:11"},"nodeType":"YulFunctionCall","src":"14407:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14399:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14479:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14492:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14503:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14488:3:11"},"nodeType":"YulFunctionCall","src":"14488:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14435:43:11"},"nodeType":"YulFunctionCall","src":"14435:71:11"},"nodeType":"YulExpressionStatement","src":"14435:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14560:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14573:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14584:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14569:3:11"},"nodeType":"YulFunctionCall","src":"14569:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14516:43:11"},"nodeType":"YulFunctionCall","src":"14516:72:11"},"nodeType":"YulExpressionStatement","src":"14516:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14642:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14655:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14666:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:11"},"nodeType":"YulFunctionCall","src":"14651:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14598:43:11"},"nodeType":"YulFunctionCall","src":"14598:72:11"},"nodeType":"YulExpressionStatement","src":"14598:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14345:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14357:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14365:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14373:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14384:4:11","type":""}],"src":"14235:442:11"},{"body":{"nodeType":"YulBlock","src":"14759:66:11","statements":[{"nodeType":"YulAssignment","src":"14769:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14813:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"14782:30:11"},"nodeType":"YulFunctionCall","src":"14782:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"14769:9:11"}]}]},"name":"convert_t_contract$_PikaPay_$5055_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14739:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"14749:9:11","type":""}],"src":"14683:142:11"},{"body":{"nodeType":"YulBlock","src":"14912:82:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14929:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14981:5:11"}],"functionName":{"name":"convert_t_contract$_PikaPay_$5055_to_t_address","nodeType":"YulIdentifier","src":"14934:46:11"},"nodeType":"YulFunctionCall","src":"14934:53:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14922:6:11"},"nodeType":"YulFunctionCall","src":"14922:66:11"},"nodeType":"YulExpressionStatement","src":"14922:66:11"}]},"name":"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14900:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14907:3:11","type":""}],"src":"14831:163:11"},{"body":{"nodeType":"YulBlock","src":"15170:304:11","statements":[{"nodeType":"YulAssignment","src":"15180:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15192:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15203:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15188:3:11"},"nodeType":"YulFunctionCall","src":"15188:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15180:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15276:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15289:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15300:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15285:3:11"},"nodeType":"YulFunctionCall","src":"15285:17:11"}],"functionName":{"name":"abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15216:59:11"},"nodeType":"YulFunctionCall","src":"15216:87:11"},"nodeType":"YulExpressionStatement","src":"15216:87:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15357:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15370:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15381:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15366:3:11"},"nodeType":"YulFunctionCall","src":"15366:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15313:43:11"},"nodeType":"YulFunctionCall","src":"15313:72:11"},"nodeType":"YulExpressionStatement","src":"15313:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15439:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15452:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15463:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15448:3:11"},"nodeType":"YulFunctionCall","src":"15448:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15395:43:11"},"nodeType":"YulFunctionCall","src":"15395:72:11"},"nodeType":"YulExpressionStatement","src":"15395:72:11"}]},"name":"abi_encode_tuple_t_contract$_PikaPay_$5055_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15126:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15138:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15146:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15154:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15165:4:11","type":""}],"src":"15000:474:11"},{"body":{"nodeType":"YulBlock","src":"15508:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15525:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15528:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15518:6:11"},"nodeType":"YulFunctionCall","src":"15518:88:11"},"nodeType":"YulExpressionStatement","src":"15518:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15622:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15625:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15615:6:11"},"nodeType":"YulFunctionCall","src":"15615:15:11"},"nodeType":"YulExpressionStatement","src":"15615:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15646:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15649:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15639:6:11"},"nodeType":"YulFunctionCall","src":"15639:15:11"},"nodeType":"YulExpressionStatement","src":"15639:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15480:180:11"},{"body":{"nodeType":"YulBlock","src":"15710:49:11","statements":[{"nodeType":"YulAssignment","src":"15720:33:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15738:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15745:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15734:3:11"},"nodeType":"YulFunctionCall","src":"15734:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"15750:2:11","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15730:3:11"},"nodeType":"YulFunctionCall","src":"15730:23:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15720:6:11"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15693:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"15703:6:11","type":""}],"src":"15666:93:11"},{"body":{"nodeType":"YulBlock","src":"15818:54:11","statements":[{"nodeType":"YulAssignment","src":"15828:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"15853:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"15859:5:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15849:3:11"},"nodeType":"YulFunctionCall","src":"15849:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"15828:8:11"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"15793:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"15799:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"15809:8:11","type":""}],"src":"15765:107:11"},{"body":{"nodeType":"YulBlock","src":"15954:317:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15964:35:11","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"15985:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"15997:1:11","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15981:3:11"},"nodeType":"YulFunctionCall","src":"15981:18:11"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"15968:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16008:109:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"16039:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16050:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"16020:18:11"},"nodeType":"YulFunctionCall","src":"16020:97:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"16012:4:11","type":""}]},{"nodeType":"YulAssignment","src":"16126:51:11","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"16157:9:11"},{"name":"toInsert","nodeType":"YulIdentifier","src":"16168:8:11"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"16138:18:11"},"nodeType":"YulFunctionCall","src":"16138:39:11"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"16126:8:11"}]},{"nodeType":"YulAssignment","src":"16186:30:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16199:5:11"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"16210:4:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16206:3:11"},"nodeType":"YulFunctionCall","src":"16206:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16195:3:11"},"nodeType":"YulFunctionCall","src":"16195:21:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16186:5:11"}]},{"nodeType":"YulAssignment","src":"16225:40:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16238:5:11"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"16249:8:11"},{"name":"mask","nodeType":"YulIdentifier","src":"16259:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16245:3:11"},"nodeType":"YulFunctionCall","src":"16245:19:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16235:2:11"},"nodeType":"YulFunctionCall","src":"16235:30:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16225:6:11"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15915:5:11","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"15922:10:11","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"15934:8:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"15947:6:11","type":""}],"src":"15878:393:11"},{"body":{"nodeType":"YulBlock","src":"16337:82:11","statements":[{"nodeType":"YulAssignment","src":"16347:66:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16405:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16387:17:11"},"nodeType":"YulFunctionCall","src":"16387:24:11"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"16378:8:11"},"nodeType":"YulFunctionCall","src":"16378:34:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16360:17:11"},"nodeType":"YulFunctionCall","src":"16360:53:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16347:9:11"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16317:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16327:9:11","type":""}],"src":"16277:142:11"},{"body":{"nodeType":"YulBlock","src":"16472:28:11","statements":[{"nodeType":"YulAssignment","src":"16482:12:11","value":{"name":"value","nodeType":"YulIdentifier","src":"16489:5:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16482:3:11"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16458:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16468:3:11","type":""}],"src":"16425:75:11"},{"body":{"nodeType":"YulBlock","src":"16582:193:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16592:63:11","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"16647:7:11"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16616:30:11"},"nodeType":"YulFunctionCall","src":"16616:39:11"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"16596:16:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16671:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16711:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16705:5:11"},"nodeType":"YulFunctionCall","src":"16705:11:11"},{"name":"offset","nodeType":"YulIdentifier","src":"16718:6:11"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"16750:16:11"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"16726:23:11"},"nodeType":"YulFunctionCall","src":"16726:41:11"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"16677:27:11"},"nodeType":"YulFunctionCall","src":"16677:91:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16664:6:11"},"nodeType":"YulFunctionCall","src":"16664:105:11"},"nodeType":"YulExpressionStatement","src":"16664:105:11"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16559:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"16565:6:11","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"16573:7:11","type":""}],"src":"16506:269:11"},{"body":{"nodeType":"YulBlock","src":"16830:24:11","statements":[{"nodeType":"YulAssignment","src":"16840:8:11","value":{"kind":"number","nodeType":"YulLiteral","src":"16847:1:11","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16840:3:11"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16826:3:11","type":""}],"src":"16781:73:11"},{"body":{"nodeType":"YulBlock","src":"16913:136:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16923:46:11","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"16937:30:11"},"nodeType":"YulFunctionCall","src":"16937:32:11"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"16927:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17022:4:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17028:6:11"},{"name":"zero_0","nodeType":"YulIdentifier","src":"17036:6:11"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16978:43:11"},"nodeType":"YulFunctionCall","src":"16978:65:11"},"nodeType":"YulExpressionStatement","src":"16978:65:11"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16899:4:11","type":""},{"name":"offset","nodeType":"YulTypedName","src":"16905:6:11","type":""}],"src":"16860:189:11"},{"body":{"nodeType":"YulBlock","src":"17105:136:11","statements":[{"body":{"nodeType":"YulBlock","src":"17172:63:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17216:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"17223:1:11","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"17186:29:11"},"nodeType":"YulFunctionCall","src":"17186:39:11"},"nodeType":"YulExpressionStatement","src":"17186:39:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17125:5:11"},{"name":"end","nodeType":"YulIdentifier","src":"17132:3:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17122:2:11"},"nodeType":"YulFunctionCall","src":"17122:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17137:26:11","statements":[{"nodeType":"YulAssignment","src":"17139:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17152:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"17159:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17148:3:11"},"nodeType":"YulFunctionCall","src":"17148:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17139:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"17119:2:11","statements":[]},"src":"17115:120:11"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17093:5:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"17100:3:11","type":""}],"src":"17055:186:11"},{"body":{"nodeType":"YulBlock","src":"17326:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"17352:431:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17366:54:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17414:5:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"17382:31:11"},"nodeType":"YulFunctionCall","src":"17382:38:11"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"17370:8:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17433:63:11","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"17456:8:11"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17484:10:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"17466:17:11"},"nodeType":"YulFunctionCall","src":"17466:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17452:3:11"},"nodeType":"YulFunctionCall","src":"17452:44:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17437:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"17653:27:11","statements":[{"nodeType":"YulAssignment","src":"17655:23:11","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"17670:8:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17655:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17637:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"17649:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17634:2:11"},"nodeType":"YulFunctionCall","src":"17634:18:11"},"nodeType":"YulIf","src":"17631:49:11"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17722:11:11"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"17739:8:11"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17767:3:11"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"17749:17:11"},"nodeType":"YulFunctionCall","src":"17749:22:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17735:3:11"},"nodeType":"YulFunctionCall","src":"17735:37:11"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"17693:28:11"},"nodeType":"YulFunctionCall","src":"17693:80:11"},"nodeType":"YulExpressionStatement","src":"17693:80:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17343:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17348:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17340:2:11"},"nodeType":"YulFunctionCall","src":"17340:11:11"},"nodeType":"YulIf","src":"17337:446:11"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17302:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"17309:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17314:10:11","type":""}],"src":"17247:543:11"},{"body":{"nodeType":"YulBlock","src":"17859:54:11","statements":[{"nodeType":"YulAssignment","src":"17869:37:11","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"17894:4:11"},{"name":"value","nodeType":"YulIdentifier","src":"17900:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17890:3:11"},"nodeType":"YulFunctionCall","src":"17890:16:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"17869:8:11"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"17834:4:11","type":""},{"name":"value","nodeType":"YulTypedName","src":"17840:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"17850:8:11","type":""}],"src":"17796:117:11"},{"body":{"nodeType":"YulBlock","src":"17970:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17980:68:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18029:1:11","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"18032:5:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18025:3:11"},"nodeType":"YulFunctionCall","src":"18025:13:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18044:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18040:3:11"},"nodeType":"YulFunctionCall","src":"18040:6:11"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"17996:28:11"},"nodeType":"YulFunctionCall","src":"17996:51:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17992:3:11"},"nodeType":"YulFunctionCall","src":"17992:56:11"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"17984:4:11","type":""}]},{"nodeType":"YulAssignment","src":"18057:25:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18071:4:11"},{"name":"mask","nodeType":"YulIdentifier","src":"18077:4:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18067:3:11"},"nodeType":"YulFunctionCall","src":"18067:15:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18057:6:11"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17947:4:11","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"17953:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17963:6:11","type":""}],"src":"17919:169:11"},{"body":{"nodeType":"YulBlock","src":"18174:214:11","statements":[{"nodeType":"YulAssignment","src":"18307:37:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18334:4:11"},{"name":"len","nodeType":"YulIdentifier","src":"18340:3:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"18315:18:11"},"nodeType":"YulFunctionCall","src":"18315:29:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18307:4:11"}]},{"nodeType":"YulAssignment","src":"18353:29:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18364:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18374:1:11","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"18377:3:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18370:3:11"},"nodeType":"YulFunctionCall","src":"18370:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18361:2:11"},"nodeType":"YulFunctionCall","src":"18361:21:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18353:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18155:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"18161:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18169:4:11","type":""}],"src":"18093:295:11"},{"body":{"nodeType":"YulBlock","src":"18485:1303:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18496:51:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18543:3:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18510:32:11"},"nodeType":"YulFunctionCall","src":"18510:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18500:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18632:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18634:16:11"},"nodeType":"YulFunctionCall","src":"18634:18:11"},"nodeType":"YulExpressionStatement","src":"18634:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18604:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18612:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18601:2:11"},"nodeType":"YulFunctionCall","src":"18601:30:11"},"nodeType":"YulIf","src":"18598:56:11"},{"nodeType":"YulVariableDeclaration","src":"18664:52:11","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18710:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18704:5:11"},"nodeType":"YulFunctionCall","src":"18704:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18678:25:11"},"nodeType":"YulFunctionCall","src":"18678:38:11"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"18668:6:11","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18809:4:11"},{"name":"oldLen","nodeType":"YulIdentifier","src":"18815:6:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"18823:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"18763:45:11"},"nodeType":"YulFunctionCall","src":"18763:67:11"},"nodeType":"YulExpressionStatement","src":"18763:67:11"},{"nodeType":"YulVariableDeclaration","src":"18840:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18857:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18844:9:11","type":""}]},{"nodeType":"YulAssignment","src":"18868:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18881:4:11","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18868:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18932:611:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18946:37:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18965:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18977:4:11","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18973:3:11"},"nodeType":"YulFunctionCall","src":"18973:9:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18961:3:11"},"nodeType":"YulFunctionCall","src":"18961:22:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18950:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18997:51:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19043:4:11"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"19011:31:11"},"nodeType":"YulFunctionCall","src":"19011:37:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19001:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19061:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19070:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19065:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19129:163:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19154:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19172:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19177:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19168:3:11"},"nodeType":"YulFunctionCall","src":"19168:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19162:5:11"},"nodeType":"YulFunctionCall","src":"19162:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19147:6:11"},"nodeType":"YulFunctionCall","src":"19147:42:11"},"nodeType":"YulExpressionStatement","src":"19147:42:11"},{"nodeType":"YulAssignment","src":"19206:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19220:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19228:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19216:3:11"},"nodeType":"YulFunctionCall","src":"19216:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19206:6:11"}]},{"nodeType":"YulAssignment","src":"19247:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19264:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19275:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19260:3:11"},"nodeType":"YulFunctionCall","src":"19260:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19247:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19095:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"19098:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19092:2:11"},"nodeType":"YulFunctionCall","src":"19092:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19107:21:11","statements":[{"nodeType":"YulAssignment","src":"19109:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19118:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"19121:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19114:3:11"},"nodeType":"YulFunctionCall","src":"19114:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19109:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"19088:3:11","statements":[]},"src":"19084:208:11"},{"body":{"nodeType":"YulBlock","src":"19328:156:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19346:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19373:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19378:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19369:3:11"},"nodeType":"YulFunctionCall","src":"19369:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19363:5:11"},"nodeType":"YulFunctionCall","src":"19363:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19350:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19413:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19440:9:11"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19455:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19463:4:11","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19451:3:11"},"nodeType":"YulFunctionCall","src":"19451:17:11"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"19421:18:11"},"nodeType":"YulFunctionCall","src":"19421:48:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19406:6:11"},"nodeType":"YulFunctionCall","src":"19406:64:11"},"nodeType":"YulExpressionStatement","src":"19406:64:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19311:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"19320:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19308:2:11"},"nodeType":"YulFunctionCall","src":"19308:19:11"},"nodeType":"YulIf","src":"19305:179:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19504:4:11"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19518:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19526:1:11","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19514:3:11"},"nodeType":"YulFunctionCall","src":"19514:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"19530:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19510:3:11"},"nodeType":"YulFunctionCall","src":"19510:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19497:6:11"},"nodeType":"YulFunctionCall","src":"19497:36:11"},"nodeType":"YulExpressionStatement","src":"19497:36:11"}]},"nodeType":"YulCase","src":"18925:618:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18930:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19560:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19574:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19587:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19578:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19611:67:11","statements":[{"nodeType":"YulAssignment","src":"19629:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19648:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19653:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19644:3:11"},"nodeType":"YulFunctionCall","src":"19644:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19638:5:11"},"nodeType":"YulFunctionCall","src":"19638:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19629:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19604:6:11"},"nodeType":"YulIf","src":"19601:77:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19698:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19757:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"19764:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19704:52:11"},"nodeType":"YulFunctionCall","src":"19704:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19691:6:11"},"nodeType":"YulFunctionCall","src":"19691:81:11"},"nodeType":"YulExpressionStatement","src":"19691:81:11"}]},"nodeType":"YulCase","src":"19552:230:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18905:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18913:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18902:2:11"},"nodeType":"YulFunctionCall","src":"18902:14:11"},"nodeType":"YulSwitch","src":"18895:887:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18474:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"18480:3:11","type":""}],"src":"18393:1395:11"},{"body":{"nodeType":"YulBlock","src":"19978:369:11","statements":[{"nodeType":"YulAssignment","src":"19988:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20000:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20011:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19996:3:11"},"nodeType":"YulFunctionCall","src":"19996:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19988:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20068:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20081:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20092:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20077:3:11"},"nodeType":"YulFunctionCall","src":"20077:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20024:43:11"},"nodeType":"YulFunctionCall","src":"20024:71:11"},"nodeType":"YulExpressionStatement","src":"20024:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20116:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20127:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20112:3:11"},"nodeType":"YulFunctionCall","src":"20112:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20136:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20142:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20132:3:11"},"nodeType":"YulFunctionCall","src":"20132:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20105:6:11"},"nodeType":"YulFunctionCall","src":"20105:48:11"},"nodeType":"YulExpressionStatement","src":"20105:48:11"},{"nodeType":"YulAssignment","src":"20162:96:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20236:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"20244:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"20253:4:11"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20170:65:11"},"nodeType":"YulFunctionCall","src":"20170:88:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20162:4:11"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20312:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20325:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20336:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20321:3:11"},"nodeType":"YulFunctionCall","src":"20321:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20268:43:11"},"nodeType":"YulFunctionCall","src":"20268:72:11"},"nodeType":"YulExpressionStatement","src":"20268:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19926:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19938:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19946:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19954:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19962:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19973:4:11","type":""}],"src":"19794:553:11"},{"body":{"nodeType":"YulBlock","src":"20565:452:11","statements":[{"nodeType":"YulAssignment","src":"20575:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20587:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20598:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20583:3:11"},"nodeType":"YulFunctionCall","src":"20583:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20575:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20656:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20669:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20680:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20665:3:11"},"nodeType":"YulFunctionCall","src":"20665:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20612:43:11"},"nodeType":"YulFunctionCall","src":"20612:71:11"},"nodeType":"YulExpressionStatement","src":"20612:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20737:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20750:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20761:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20746:3:11"},"nodeType":"YulFunctionCall","src":"20746:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20693:43:11"},"nodeType":"YulFunctionCall","src":"20693:72:11"},"nodeType":"YulExpressionStatement","src":"20693:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20819:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20832:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20843:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20828:3:11"},"nodeType":"YulFunctionCall","src":"20828:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20775:43:11"},"nodeType":"YulFunctionCall","src":"20775:72:11"},"nodeType":"YulExpressionStatement","src":"20775:72:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20868:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20879:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20864:3:11"},"nodeType":"YulFunctionCall","src":"20864:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20888:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20894:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20884:3:11"},"nodeType":"YulFunctionCall","src":"20884:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20857:6:11"},"nodeType":"YulFunctionCall","src":"20857:48:11"},"nodeType":"YulExpressionStatement","src":"20857:48:11"},{"nodeType":"YulAssignment","src":"20914:96:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20988:6:11"},{"name":"value4","nodeType":"YulIdentifier","src":"20996:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"21005:4:11"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20922:65:11"},"nodeType":"YulFunctionCall","src":"20922:88:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20914:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20505:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20517:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20525:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20533:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20541:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20549:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20560:4:11","type":""}],"src":"20353:664:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$4742_t_string_memory_ptr_t_uint256_t_uint256_t_contract$_ERC20_$651__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_PikaFractionalAttestationToken_$4742_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function convert_t_contract$_PikaPay_$5055_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaPay_$5055_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PikaPay_$5055_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_PikaPay_$5055_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_string_calldata_ptr__to_t_uint256_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060043610620000885760003560e01c8063b32c4d8d1162000063578063b32c4d8d14620000ef578063e2015d5c146200012a578063f3db9fe51462000160578063f791e47814620001805762000088565b806305476414146200008d57806321f7500f14620000ad57806388c46fb814620000cd575b600080fd5b620000ab6004803603810190620000a5919062000d42565b620001a0565b005b620000cb6004803603810190620000c5919062000e27565b620004a6565b005b620000d762000613565b604051620000e6919062000e94565b60405180910390f35b6200010d600480360381019062000107919062000eb1565b62000619565b60405162000121969594939291906200100d565b60405180910390f35b62000148600480360381019062000142919062001081565b62000725565b60405162000157919062000e94565b60405180910390f35b6200017e6004803603810190620001789190620010c8565b6200074a565b005b6200019e600480360381019062000198919062000d42565b62000a4c565b005b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101562000236576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200022d9062001198565b60405180910390fd5b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002989190620011e9565b9250508190555082600160008681526020019081526020016000206004016000828254620002c79190620011e9565b9250508190555060006001600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016200034692919062001235565b6020604051808303816000875af115801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c91906200129f565b506001600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016200040092919062001235565b6020604051808303816000875af115801562000420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044691906200129f565b507f8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d788853386600160008a8152602001908152602001600020600201878760405162000497969594939291906200141c565b60405180910390a15050505050565b806002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156200053c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005339062001198565b60405180910390fd5b806002600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200059e9190620011e9565b92505081905550806002600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000607919062001489565b92505081905550505050565b60005481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546200066a9062001300565b80601f0160208091040260200160405190810160405280929190818152602001828054620006989062001300565b8015620006e95780601f10620006bd57610100808354040283529160200191620006e9565b820191906000526020600020905b815481529060010190602001808311620006cb57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6002602052816000526040600020602052806000526040600020600091509150505481565b60016000808282546200075e919062001489565b9250508190555060008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401620007a993929190620014c4565b6020604051808303816000875af1158015620007c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ef91906200129f565b5060003060005484604051620008059062000c81565b620008139392919062001526565b604051809103906000f08015801562000830573d6000803e3d6000fd5b5090506040518060c0016040528060005481526020018273ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018481526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816200094e919062001745565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505082600260008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f89947f2c40e2bc19d51f690ba9378f7947cd741cac5f4f825d93e683ce24c5fb60005486868660405162000a3c94939291906200182c565b60405180910390a1505050505050565b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101562000ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ad99062001198565b60405180910390fd5b826002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000b449190620011e9565b925050819055508260016000868152602001908152602001600020600401600082825462000b739190620011e9565b9250508190555060006001600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040162000bf292919062001235565b6020604051808303816000875af115801562000c12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c3891906200129f565b507f0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c61853386868660405162000c7295949392919062001872565b60405180910390a15050505050565b611be980620018c983390190565b600080fd5b600080fd5b6000819050919050565b62000cae8162000c99565b811462000cba57600080fd5b50565b60008135905062000cce8162000ca3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011262000cfc5762000cfb62000cd4565b5b8235905067ffffffffffffffff81111562000d1c5762000d1b62000cd9565b5b60208301915083600182028301111562000d3b5762000d3a62000cde565b5b9250929050565b6000806000806060858703121562000d5f5762000d5e62000c8f565b5b600062000d6f8782880162000cbd565b945050602062000d828782880162000cbd565b935050604085013567ffffffffffffffff81111562000da65762000da562000c94565b5b62000db48782880162000ce3565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000def8262000dc2565b9050919050565b62000e018162000de2565b811462000e0d57600080fd5b50565b60008135905062000e218162000df6565b92915050565b60008060006060848603121562000e435762000e4262000c8f565b5b600062000e538682870162000cbd565b935050602062000e668682870162000e10565b925050604062000e798682870162000cbd565b9150509250925092565b62000e8e8162000c99565b82525050565b600060208201905062000eab600083018462000e83565b92915050565b60006020828403121562000eca5762000ec962000c8f565b5b600062000eda8482850162000cbd565b91505092915050565b6000819050919050565b600062000f0e62000f0862000f028462000dc2565b62000ee3565b62000dc2565b9050919050565b600062000f228262000eed565b9050919050565b600062000f368262000f15565b9050919050565b62000f488162000f29565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000f8a57808201518184015260208101905062000f6d565b60008484015250505050565b6000601f19601f8301169050919050565b600062000fb48262000f4e565b62000fc0818562000f59565b935062000fd281856020860162000f6a565b62000fdd8162000f96565b840191505092915050565b600062000ff58262000f15565b9050919050565b620010078162000fe8565b82525050565b600060c08201905062001024600083018962000e83565b62001033602083018862000f3d565b818103604083015262001047818762000fa7565b905062001058606083018662000e83565b62001067608083018562000e83565b6200107660a083018462000ffc565b979650505050505050565b600080604083850312156200109b576200109a62000c8f565b5b6000620010ab8582860162000cbd565b9250506020620010be8582860162000e10565b9150509250929050565b60008060008060608587031215620010e557620010e462000c8f565b5b6000620010f58782880162000e10565b945050602085013567ffffffffffffffff81111562001119576200111862000c94565b5b620011278782880162000ce3565b935093505060406200113c8782880162000cbd565b91505092959194509250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006200118060148362000f59565b91506200118d8262001148565b602082019050919050565b60006020820190508181036000830152620011b38162001171565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620011f68262000c99565b9150620012038362000c99565b92508282039050818111156200121e576200121d620011ba565b5b92915050565b6200122f8162000de2565b82525050565b60006040820190506200124c600083018562001224565b6200125b602083018462000e83565b9392505050565b60008115159050919050565b620012798162001262565b81146200128557600080fd5b50565b60008151905062001299816200126e565b92915050565b600060208284031215620012b857620012b762000c8f565b5b6000620012c88482850162001288565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200131957607f821691505b6020821081036200132f576200132e620012d1565b5b50919050565b60008190508160005260206000209050919050565b60008154620013598162001300565b62001365818662000f59565b945060018216600081146200138357600181146200139a57620013d1565b60ff198316865281151560200286019350620013d1565b620013a58562001335565b60005b83811015620013c957815481890152600182019150602081019050620013a8565b808801955050505b50505092915050565b82818337600083830152505050565b6000620013f7838562000f59565b935062001406838584620013da565b620014118362000f96565b840190509392505050565b600060a08201905062001433600083018962000e83565b62001442602083018862001224565b62001451604083018762000e83565b81810360608301526200146581866200134a565b905081810360808301526200147c818486620013e9565b9050979650505050505050565b6000620014968262000c99565b9150620014a38362000c99565b9250828201905080821115620014be57620014bd620011ba565b5b92915050565b6000606082019050620014db600083018662001224565b620014ea602083018562001224565b620014f9604083018462000e83565b949350505050565b60006200150e8262000f15565b9050919050565b620015208162001501565b82525050565b60006060820190506200153d600083018662001515565b6200154c602083018562000e83565b6200155b604083018462000e83565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b600060088302620015e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620015a2565b620015ed8683620015a2565b95508019841693508086168417925050509392505050565b600062001626620016206200161a8462000c99565b62000ee3565b62000c99565b9050919050565b6000819050919050565b620016428362001605565b6200165a62001651826200162d565b848454620015af565b825550505050565b600090565b6200167162001662565b6200167e81848462001637565b505050565b5b81811015620016a6576200169a60008262001667565b60018101905062001684565b5050565b601f821115620016f557620016bf8162001335565b620016ca8462001592565b81016020851015620016da578190505b620016f2620016e98562001592565b83018262001683565b50505b505050565b600082821c905092915050565b60006200171a60001984600802620016fa565b1980831691505092915050565b600062001735838362001707565b9150826002028217905092915050565b620017508262000f4e565b67ffffffffffffffff8111156200176c576200176b62001563565b5b62001778825462001300565b62001785828285620016aa565b600060209050601f831160018114620017bd5760008415620017a8578287015190505b620017b4858262001727565b86555062001824565b601f198416620017cd8662001335565b60005b82811015620017f757848901518255600182019150602085019450602081019050620017d0565b8683101562001817578489015162001813601f89168262001707565b8355505b6001600288020188555050505b505050505050565b600060608201905062001843600083018762000e83565b818103602083015262001858818587620013e9565b905062001869604083018462000e83565b95945050505050565b600060808201905062001889600083018862000e83565b62001898602083018762001224565b620018a7604083018662000e83565b8181036060830152620018bc818486620013e9565b9050969550505050505056fe60806040523480156200001157600080fd5b5060405162001be938038062001be98339818101604052810190620000379190620006e9565b62000048826200012860201b60201c565b6040516020016200005a9190620007e4565b6040516020818303038152906040526040518060400160405280600481526020017f53464154000000000000000000000000000000000000000000000000000000008152508160039081620000b0919062000a73565b508060049081620000c2919062000a73565b50505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055506200011f33826200020760201b60201c565b50505062000c8c565b6060600060016200013f846200029460201b60201c565b01905060008167ffffffffffffffff8111156200016157620001606200080e565b5b6040519080825280601f01601f191660200182016040528015620001945781602001600182028036833780820191505090505b509050600082602001820190505b600115620001fc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581620001ef57620001ee62000b5a565b5b04945060008503620001a2575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200027c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000273919062000b9a565b60405180910390fd5b62000290600083836200040060201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310620002f6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381620002ec57620002eb62000b5a565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831062000337576d04ee2d6d415b85acef810000000083816200032d576200032c62000b5a565b5b0492506020810190505b662386f26fc1000083106200036a57662386f26fc10000838162000360576200035f62000b5a565b5b0492506010810190505b6305f5e100831062000397576305f5e10083816200038d576200038c62000b5a565b5b0492506008810190505b6127108310620003c0576127108381620003b657620003b562000b5a565b5b0492506004810190505b60648310620003e75760648381620003dd57620003dc62000b5a565b5b0492506002810190505b600a8310620003f7576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200045657806002600082825462000449919062000be6565b925050819055506200052c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004e5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004dc9392919062000c32565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620005775780600260008282540392505081905550620005c4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000623919062000c6f565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006628262000635565b9050919050565b6000620006768262000655565b9050919050565b620006888162000669565b81146200069457600080fd5b50565b600081519050620006a8816200067d565b92915050565b6000819050919050565b620006c381620006ae565b8114620006cf57600080fd5b50565b600081519050620006e381620006b8565b92915050565b60008060006060848603121562000705576200070462000630565b5b6000620007158682870162000697565b93505060206200072886828701620006d2565b92505060406200073b86828701620006d2565b9150509250925092565b7f50696b6150617920426174636820230000000000000000000000000000000000815250565b600081519050919050565b600081905092915050565b60005b83811015620007a157808201518184015260208101905062000784565b60008484015250505050565b6000620007ba826200076b565b620007c6818562000776565b9350620007d881856020860162000781565b80840191505092915050565b6000620007f18262000745565b600f82019150620008038284620007ad565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200088557607f821691505b6020821081036200089b576200089a6200083d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008c6565b620009118683620008c6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620009546200094e6200094884620006ae565b62000929565b620006ae565b9050919050565b6000819050919050565b620009708362000933565b620009886200097f826200095b565b848454620008d3565b825550505050565b600090565b6200099f62000990565b620009ac81848462000965565b505050565b5b81811015620009d457620009c860008262000995565b600181019050620009b2565b5050565b601f82111562000a2357620009ed81620008a1565b620009f884620008b6565b8101602085101562000a08578190505b62000a2062000a1785620008b6565b830182620009b1565b50505b505050565b600082821c905092915050565b600062000a486000198460080262000a28565b1980831691505092915050565b600062000a63838362000a35565b9150826002028217905092915050565b62000a7e826200076b565b67ffffffffffffffff81111562000a9a5762000a996200080e565b5b62000aa682546200086c565b62000ab3828285620009d8565b600060209050601f83116001811462000aeb576000841562000ad6578287015190505b62000ae2858262000a55565b86555062000b52565b601f19841662000afb86620008a1565b60005b8281101562000b255784890151825560018201915060208501945060208101905062000afe565b8683101562000b45578489015162000b41601f89168262000a35565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b62000b948162000655565b82525050565b600060208201905062000bb1600083018462000b89565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bf382620006ae565b915062000c0083620006ae565b925082820190508082111562000c1b5762000c1a62000bb7565b5b92915050565b62000c2c81620006ae565b82525050565b600060608201905062000c49600083018662000b89565b62000c58602083018562000c21565b62000c67604083018462000c21565b949350505050565b600060208201905062000c86600083018462000c21565b92915050565b610f4d8062000c9c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea26469706673582212208bd1ca38ceb8c7b529731c70596a0e5437ab20f96309cc116154f1835af5c0da64736f6c63430008140033a2646970667358221220021134c45fa886630727c5a6da2ec385b9a2fca000061760573101d57e78fafd64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB32C4D8D GT PUSH3 0x63 JUMPI DUP1 PUSH4 0xB32C4D8D EQ PUSH3 0xEF JUMPI DUP1 PUSH4 0xE2015D5C EQ PUSH3 0x12A JUMPI DUP1 PUSH4 0xF3DB9FE5 EQ PUSH3 0x160 JUMPI DUP1 PUSH4 0xF791E478 EQ PUSH3 0x180 JUMPI PUSH3 0x88 JUMP JUMPDEST DUP1 PUSH4 0x5476414 EQ PUSH3 0x8D JUMPI DUP1 PUSH4 0x21F7500F EQ PUSH3 0xAD JUMPI DUP1 PUSH4 0x88C46FB8 EQ PUSH3 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0xD42 JUMP JUMPDEST PUSH3 0x1A0 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0xE27 JUMP JUMPDEST PUSH3 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xD7 PUSH3 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE6 SWAP2 SWAP1 PUSH3 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x107 SWAP2 SWAP1 PUSH3 0xEB1 JUMP JUMPDEST PUSH3 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x121 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x142 SWAP2 SWAP1 PUSH3 0x1081 JUMP JUMPDEST PUSH3 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x157 SWAP2 SWAP1 PUSH3 0xE94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x178 SWAP2 SWAP1 PUSH3 0x10C8 JUMP JUMPDEST PUSH3 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH3 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x198 SWAP2 SWAP1 PUSH3 0xD42 JUMP JUMPDEST PUSH3 0xA4C JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x22D SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x298 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2C7 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x346 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x400 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x420 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x446 SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH32 0x8EB386EA7CBDB4A91109CEA5FED53B6B02F667C149086A609AD4347FB0A5D788 DUP6 CALLER DUP7 PUSH1 0x1 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x497 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0x53C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x533 SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x59E SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x607 SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH3 0x66A SWAP1 PUSH3 0x1300 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x698 SWAP1 PUSH3 0x1300 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6E9 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x6BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x6CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH3 0x75E SWAP2 SWAP1 PUSH3 0x1489 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x14C4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7EF SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH1 0x0 ADDRESS PUSH1 0x0 SLOAD DUP5 PUSH1 0x40 MLOAD PUSH3 0x805 SWAP1 PUSH3 0xC81 JUMP JUMPDEST PUSH3 0x813 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x830 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH3 0x94E SWAP2 SWAP1 PUSH3 0x1745 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x89947F2C40E2BC19D51F690BA9378F7947CD741CAC5F4F825D93E683CE24C5FB PUSH1 0x0 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0xA3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH3 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD9 SWAP1 PUSH3 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xB44 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xB73 SWAP2 SWAP1 PUSH3 0x11E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBF2 SWAP3 SWAP2 SWAP1 PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xC38 SWAP2 SWAP1 PUSH3 0x129F JUMP JUMPDEST POP PUSH32 0xB27B8AED46D863AA21F1C0DD0CA6804E332CE068329761DE4584F4F59740C61 DUP6 CALLER DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0xC72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP1 PUSH3 0x18C9 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xCAE DUP2 PUSH3 0xC99 JUMP JUMPDEST DUP2 EQ PUSH3 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xCCE DUP2 PUSH3 0xCA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0xCFC JUMPI PUSH3 0xCFB PUSH3 0xCD4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xD1C JUMPI PUSH3 0xD1B PUSH3 0xCD9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0xD3B JUMPI PUSH3 0xD3A PUSH3 0xCDE JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xD5F JUMPI PUSH3 0xD5E PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xD6F DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0xD82 DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xDA6 JUMPI PUSH3 0xDA5 PUSH3 0xC94 JUMP JUMPDEST JUMPDEST PUSH3 0xDB4 DUP8 DUP3 DUP9 ADD PUSH3 0xCE3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDEF DUP3 PUSH3 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE01 DUP2 PUSH3 0xDE2 JUMP JUMPDEST DUP2 EQ PUSH3 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xE21 DUP2 PUSH3 0xDF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0xE43 JUMPI PUSH3 0xE42 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xE53 DUP7 DUP3 DUP8 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0xE66 DUP7 DUP3 DUP8 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0xE79 DUP7 DUP3 DUP8 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0xE8E DUP2 PUSH3 0xC99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xEAB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xECA JUMPI PUSH3 0xEC9 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xEDA DUP5 DUP3 DUP6 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF0E PUSH3 0xF08 PUSH3 0xF02 DUP5 PUSH3 0xDC2 JUMP JUMPDEST PUSH3 0xEE3 JUMP JUMPDEST PUSH3 0xDC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF22 DUP3 PUSH3 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF36 DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF48 DUP2 PUSH3 0xF29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xF8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xF6D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB4 DUP3 PUSH3 0xF4E JUMP JUMPDEST PUSH3 0xFC0 DUP2 DUP6 PUSH3 0xF59 JUMP JUMPDEST SWAP4 POP PUSH3 0xFD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xF6A JUMP JUMPDEST PUSH3 0xFDD DUP2 PUSH3 0xF96 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFF5 DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1007 DUP2 PUSH3 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x1024 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1033 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0xF3D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x1047 DUP2 DUP8 PUSH3 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH3 0x1058 PUSH1 0x60 DUP4 ADD DUP7 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1067 PUSH1 0x80 DUP4 ADD DUP6 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1076 PUSH1 0xA0 DUP4 ADD DUP5 PUSH3 0xFFC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x109B JUMPI PUSH3 0x109A PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10AB DUP6 DUP3 DUP7 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x10BE DUP6 DUP3 DUP7 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x10E5 JUMPI PUSH3 0x10E4 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10F5 DUP8 DUP3 DUP9 ADD PUSH3 0xE10 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1119 JUMPI PUSH3 0x1118 PUSH3 0xC94 JUMP JUMPDEST JUMPDEST PUSH3 0x1127 DUP8 DUP3 DUP9 ADD PUSH3 0xCE3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH3 0x113C DUP8 DUP3 DUP9 ADD PUSH3 0xCBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1180 PUSH1 0x14 DUP4 PUSH3 0xF59 JUMP JUMPDEST SWAP2 POP PUSH3 0x118D DUP3 PUSH3 0x1148 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11B3 DUP2 PUSH3 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x11F6 DUP3 PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP PUSH3 0x1203 DUP4 PUSH3 0xC99 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x121E JUMPI PUSH3 0x121D PUSH3 0x11BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x122F DUP2 PUSH3 0xDE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x124C PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x125B PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1279 DUP2 PUSH3 0x1262 JUMP JUMPDEST DUP2 EQ PUSH3 0x1285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1299 DUP2 PUSH3 0x126E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B8 JUMPI PUSH3 0x12B7 PUSH3 0xC8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x12C8 DUP5 DUP3 DUP6 ADD PUSH3 0x1288 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1319 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x132F JUMPI PUSH3 0x132E PUSH3 0x12D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x1359 DUP2 PUSH3 0x1300 JUMP JUMPDEST PUSH3 0x1365 DUP2 DUP7 PUSH3 0xF59 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH3 0x1383 JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x139A JUMPI PUSH3 0x13D1 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH3 0x13D1 JUMP JUMPDEST PUSH3 0x13A5 DUP6 PUSH3 0x1335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x13C9 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x13A8 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13F7 DUP4 DUP6 PUSH3 0xF59 JUMP JUMPDEST SWAP4 POP PUSH3 0x1406 DUP4 DUP6 DUP5 PUSH3 0x13DA JUMP JUMPDEST PUSH3 0x1411 DUP4 PUSH3 0xF96 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1433 PUSH1 0x0 DUP4 ADD DUP10 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1442 PUSH1 0x20 DUP4 ADD DUP9 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x1451 PUSH1 0x40 DUP4 ADD DUP8 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x1465 DUP2 DUP7 PUSH3 0x134A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH3 0x147C DUP2 DUP5 DUP7 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1496 DUP3 PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP PUSH3 0x14A3 DUP4 PUSH3 0xC99 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x14BE JUMPI PUSH3 0x14BD PUSH3 0x11BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x14DB PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x14EA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x14F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x150E DUP3 PUSH3 0xF15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1520 DUP2 PUSH3 0x1501 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x153D PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x1515 JUMP JUMPDEST PUSH3 0x154C PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x155B PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x15E1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x15A2 JUMP JUMPDEST PUSH3 0x15ED DUP7 DUP4 PUSH3 0x15A2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1626 PUSH3 0x1620 PUSH3 0x161A DUP5 PUSH3 0xC99 JUMP JUMPDEST PUSH3 0xEE3 JUMP JUMPDEST PUSH3 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1642 DUP4 PUSH3 0x1605 JUMP JUMPDEST PUSH3 0x165A PUSH3 0x1651 DUP3 PUSH3 0x162D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x15AF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x1671 PUSH3 0x1662 JUMP JUMPDEST PUSH3 0x167E DUP2 DUP5 DUP5 PUSH3 0x1637 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x16A6 JUMPI PUSH3 0x169A PUSH1 0x0 DUP3 PUSH3 0x1667 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x1684 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x16F5 JUMPI PUSH3 0x16BF DUP2 PUSH3 0x1335 JUMP JUMPDEST PUSH3 0x16CA DUP5 PUSH3 0x1592 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x16DA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x16F2 PUSH3 0x16E9 DUP6 PUSH3 0x1592 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x1683 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x171A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x16FA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1735 DUP4 DUP4 PUSH3 0x1707 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1750 DUP3 PUSH3 0xF4E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x176C JUMPI PUSH3 0x176B PUSH3 0x1563 JUMP JUMPDEST JUMPDEST PUSH3 0x1778 DUP3 SLOAD PUSH3 0x1300 JUMP JUMPDEST PUSH3 0x1785 DUP3 DUP3 DUP6 PUSH3 0x16AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x17BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x17A8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x17B4 DUP6 DUP3 PUSH3 0x1727 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1824 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x17CD DUP7 PUSH3 0x1335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x17F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x17D0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1817 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1813 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x1707 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1843 PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0x1858 DUP2 DUP6 DUP8 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP PUSH3 0x1869 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xE83 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0x1889 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xE83 JUMP JUMPDEST PUSH3 0x1898 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1224 JUMP JUMPDEST PUSH3 0x18A7 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xE83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x18BC DUP2 DUP5 DUP7 PUSH3 0x13E9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BE9 CODESIZE SUB DUP1 PUSH3 0x1BE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x6E9 JUMP JUMPDEST PUSH3 0x48 DUP3 PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5346415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB0 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC2 SWAP2 SWAP1 PUSH3 0xA73 JUMP JUMPDEST POP POP POP DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x11F CALLER DUP3 PUSH3 0x207 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xC8C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH3 0x13F DUP5 PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x161 JUMPI PUSH3 0x160 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x194 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH3 0x1FC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH3 0x1EF JUMPI PUSH3 0x1EE PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH3 0x1A2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x273 SWAP2 SWAP1 PUSH3 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x290 PUSH1 0x0 DUP4 DUP4 PUSH3 0x400 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH3 0x2F6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH3 0x2EC JUMPI PUSH3 0x2EB PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH3 0x337 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH3 0x32D JUMPI PUSH3 0x32C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH3 0x36A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH3 0x360 JUMPI PUSH3 0x35F PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH3 0x397 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH3 0x38D JUMPI PUSH3 0x38C PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH3 0x3C0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH3 0x3B6 JUMPI PUSH3 0x3B5 PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH3 0x3E7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH3 0x3DD JUMPI PUSH3 0x3DC PUSH3 0xB5A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH3 0x3F7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x456 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x449 SWAP2 SWAP1 PUSH3 0xBE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x52C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4E5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x577 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x5C4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x623 SWAP2 SWAP1 PUSH3 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x662 DUP3 PUSH3 0x635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x676 DUP3 PUSH3 0x655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x688 DUP2 PUSH3 0x669 JUMP JUMPDEST DUP2 EQ PUSH3 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6A8 DUP2 PUSH3 0x67D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C3 DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP2 EQ PUSH3 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x6E3 DUP2 PUSH3 0x6B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x705 JUMPI PUSH3 0x704 PUSH3 0x630 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x715 DUP7 DUP3 DUP8 ADD PUSH3 0x697 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x728 DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x73B DUP7 DUP3 DUP8 ADD PUSH3 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B6150617920426174636820230000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x7A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7BA DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH3 0x7C6 DUP2 DUP6 PUSH3 0x776 JUMP JUMPDEST SWAP4 POP PUSH3 0x7D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x781 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7F1 DUP3 PUSH3 0x745 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP2 POP PUSH3 0x803 DUP3 DUP5 PUSH3 0x7AD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x885 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x89B JUMPI PUSH3 0x89A PUSH3 0x83D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x905 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8C6 JUMP JUMPDEST PUSH3 0x911 DUP7 DUP4 PUSH3 0x8C6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x954 PUSH3 0x94E PUSH3 0x948 DUP5 PUSH3 0x6AE JUMP JUMPDEST PUSH3 0x929 JUMP JUMPDEST PUSH3 0x6AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x970 DUP4 PUSH3 0x933 JUMP JUMPDEST PUSH3 0x988 PUSH3 0x97F DUP3 PUSH3 0x95B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8D3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x99F PUSH3 0x990 JUMP JUMPDEST PUSH3 0x9AC DUP2 DUP5 DUP5 PUSH3 0x965 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9D4 JUMPI PUSH3 0x9C8 PUSH1 0x0 DUP3 PUSH3 0x995 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x9B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA23 JUMPI PUSH3 0x9ED DUP2 PUSH3 0x8A1 JUMP JUMPDEST PUSH3 0x9F8 DUP5 PUSH3 0x8B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA08 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA20 PUSH3 0xA17 DUP6 PUSH3 0x8B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x9B1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA48 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA28 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA63 DUP4 DUP4 PUSH3 0xA35 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA7E DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA9A JUMPI PUSH3 0xA99 PUSH3 0x80E JUMP JUMPDEST JUMPDEST PUSH3 0xAA6 DUP3 SLOAD PUSH3 0x86C JUMP JUMPDEST PUSH3 0xAB3 DUP3 DUP3 DUP6 PUSH3 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAEB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xAD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAE2 DUP6 DUP3 PUSH3 0xA55 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAFB DUP7 PUSH3 0x8A1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB25 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAFE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB45 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB41 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA35 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xB94 DUP2 PUSH3 0x655 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xBF3 DUP3 PUSH3 0x6AE JUMP JUMPDEST SWAP2 POP PUSH3 0xC00 DUP4 PUSH3 0x6AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC1B JUMPI PUSH3 0xC1A PUSH3 0xBB7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC2C DUP2 PUSH3 0x6AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC49 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xB89 JUMP JUMPDEST PUSH3 0xC58 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC21 JUMP JUMPDEST PUSH3 0xC67 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC86 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH3 0xC9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xD1 0xCA CODESIZE 0xCE 0xB8 0xC7 0xB5 0x29 PUSH20 0x1C70596A0E5437AB20F96309CC116154F1835AF5 0xC0 0xDA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL GT CALLVALUE 0xC4 PUSH0 0xA8 DUP7 PUSH4 0x727C5A6 0xDA 0x2E 0xC3 DUP6 0xB9 LOG2 0xFC LOG0 STOP MOD OR PUSH1 0x57 BALANCE ADD 0xD5 PUSH31 0x78FAFD64736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"864:4064:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3183:938;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2722:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1167:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1207:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1253:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1764:898;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4198:728;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3183:938;3388:7;3344:18;:28;3363:8;3344:28;;;;;;;;;;;:40;3373:10;3344:40;;;;;;;;;;;;;;;;:51;;3323:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3523:7;3479:18;:28;3498:8;3479:28;;;;;;;;;;;:40;3508:10;3479:40;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;3579:7;3540;:17;3548:8;3540:17;;;;;;;;;;;:35;;;:46;;;;;;;:::i;:::-;;;;;;;;3658:11;3672:7;:17;3680:8;3672:17;;;;;;;;;;;:23;;;;;;;;;;;;3658:37;;3746:5;:14;;;3761:10;3773:7;3746:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3859:7;:17;3867:8;3859:17;;;;;;;;;;;:52;;;;;;;;;;;;:61;;;3921:10;3933:7;3859:82;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3957:157;3989:8;4011:10;4035:7;4056;:17;4064:8;4056:17;;;;;;;;;;;:29;;4099:5;;3957:157;;;;;;;;;;;:::i;:::-;;;;;;;;3313:808;3183:938;;;;:::o;2722:374::-;2921:7;2877:18;:28;2896:8;2877:28;;;;;;;;;;;:40;2906:10;2877:40;;;;;;;;;;;;;;;;:51;;2856:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3028:7;2984:18;:28;3003:8;2984:28;;;;;;;;;;;:40;3013:10;2984:40;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;3082:7;3045:18;:28;3064:8;3045:28;;;;;;;;;;;:33;3074:3;3045:33;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;2722:374;;;:::o;1167:34::-;;;;:::o;1207:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1253:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1764:898::-;1919:1;1900:15;;:20;;;;;;;:::i;:::-;;;;;;;;1930:11;1950:13;1930:34;;2008:5;:18;;;2027:10;2047:4;2054:7;2008:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2127:44;2226:4;2248:15;;2281:7;2174:128;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2127:175;;2339:187;;;;;;;;2358:15;;2339:187;;;;2387:13;2339:187;;;;;;2414:12;;2339:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:7;2339:187;;;;2461:7;2339:187;;;;2482:5;2339:187;;;;;2312:7;:24;2320:15;;2312:24;;;;;;;;;;;:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2586:7;2536:18;:35;2555:15;;2536:35;;;;;;;;;;;:47;2572:10;2536:47;;;;;;;;;;;;;;;:57;;;;2608:47;2616:15;;2633:12;;2647:7;2608:47;;;;;;;;;:::i;:::-;;;;;;;;1890:772;;1764:898;;;;:::o;4198:728::-;4397:7;4353:18;:28;4372:8;4353:28;;;;;;;;;;;:40;4382:10;4353:40;;;;;;;;;;;;;;;;:51;;4332:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;4532:7;4488:18;:28;4507:8;4488:28;;;;;;;;;;;:40;4517:10;4488:40;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;4588:7;4549;:17;4557:8;4549:17;;;;;;;;;;;:35;;;:46;;;;;;;:::i;:::-;;;;;;;;4667:11;4681:7;:17;4689:8;4681:17;;;;;;;;;;;:23;;;;;;;;;;;;4667:37;;4755:5;:14;;;4770:10;4782:7;4755:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4806:113;4837:8;4859:10;4883:7;4904:5;;4806:113;;;;;;;;;;:::i;:::-;;;;;;;;4322:604;4198:728;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:11:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:117;922:1;919;912:12;936:117;1045:1;1042;1035:12;1073:553;1131:8;1141:6;1191:3;1184:4;1176:6;1172:17;1168:27;1158:122;;1199:79;;:::i;:::-;1158:122;1312:6;1299:20;1289:30;;1342:18;1334:6;1331:30;1328:117;;;1364:79;;:::i;:::-;1328:117;1478:4;1470:6;1466:17;1454:29;;1532:3;1524:4;1516:6;1512:17;1502:8;1498:32;1495:41;1492:128;;;1539:79;;:::i;:::-;1492:128;1073:553;;;;;:::o;1632:819::-;1721:6;1729;1737;1745;1794:2;1782:9;1773:7;1769:23;1765:32;1762:119;;;1800:79;;:::i;:::-;1762:119;1920:1;1945:53;1990:7;1981:6;1970:9;1966:22;1945:53;:::i;:::-;1935:63;;1891:117;2047:2;2073:53;2118:7;2109:6;2098:9;2094:22;2073:53;:::i;:::-;2063:63;;2018:118;2203:2;2192:9;2188:18;2175:32;2234:18;2226:6;2223:30;2220:117;;;2256:79;;:::i;:::-;2220:117;2369:65;2426:7;2417:6;2406:9;2402:22;2369:65;:::i;:::-;2351:83;;;;2146:298;1632:819;;;;;;;:::o;2457:126::-;2494:7;2534:42;2527:5;2523:54;2512:65;;2457:126;;;:::o;2589:96::-;2626:7;2655:24;2673:5;2655:24;:::i;:::-;2644:35;;2589:96;;;:::o;2691:122::-;2764:24;2782:5;2764:24;:::i;:::-;2757:5;2754:35;2744:63;;2803:1;2800;2793:12;2744:63;2691:122;:::o;2819:139::-;2865:5;2903:6;2890:20;2881:29;;2919:33;2946:5;2919:33;:::i;:::-;2819:139;;;;:::o;2964:619::-;3041:6;3049;3057;3106:2;3094:9;3085:7;3081:23;3077:32;3074:119;;;3112:79;;:::i;:::-;3074:119;3232:1;3257:53;3302:7;3293:6;3282:9;3278:22;3257:53;:::i;:::-;3247:63;;3203:117;3359:2;3385:53;3430:7;3421:6;3410:9;3406:22;3385:53;:::i;:::-;3375:63;;3330:118;3487:2;3513:53;3558:7;3549:6;3538:9;3534:22;3513:53;:::i;:::-;3503:63;;3458:118;2964:619;;;;;:::o;3589:118::-;3676:24;3694:5;3676:24;:::i;:::-;3671:3;3664:37;3589:118;;:::o;3713:222::-;3806:4;3844:2;3833:9;3829:18;3821:26;;3857:71;3925:1;3914:9;3910:17;3901:6;3857:71;:::i;:::-;3713:222;;;;:::o;3941:329::-;4000:6;4049:2;4037:9;4028:7;4024:23;4020:32;4017:119;;;4055:79;;:::i;:::-;4017:119;4175:1;4200:53;4245:7;4236:6;4225:9;4221:22;4200:53;:::i;:::-;4190:63;;4146:117;3941:329;;;;:::o;4276:60::-;4304:3;4325:5;4318:12;;4276:60;;;:::o;4342:142::-;4392:9;4425:53;4443:34;4452:24;4470:5;4452:24;:::i;:::-;4443:34;:::i;:::-;4425:53;:::i;:::-;4412:66;;4342:142;;;:::o;4490:126::-;4540:9;4573:37;4604:5;4573:37;:::i;:::-;4560:50;;4490:126;;;:::o;4622:165::-;4711:9;4744:37;4775:5;4744:37;:::i;:::-;4731:50;;4622:165;;;:::o;4793:209::-;4919:76;4989:5;4919:76;:::i;:::-;4914:3;4907:89;4793:209;;:::o;5008:99::-;5060:6;5094:5;5088:12;5078:22;;5008:99;;;:::o;5113:169::-;5197:11;5231:6;5226:3;5219:19;5271:4;5266:3;5262:14;5247:29;;5113:169;;;;:::o;5288:246::-;5369:1;5379:113;5393:6;5390:1;5387:13;5379:113;;;5478:1;5473:3;5469:11;5463:18;5459:1;5454:3;5450:11;5443:39;5415:2;5412:1;5408:10;5403:15;;5379:113;;;5526:1;5517:6;5512:3;5508:16;5501:27;5350:184;5288:246;;;:::o;5540:102::-;5581:6;5632:2;5628:7;5623:2;5616:5;5612:14;5608:28;5598:38;;5540:102;;;:::o;5648:377::-;5736:3;5764:39;5797:5;5764:39;:::i;:::-;5819:71;5883:6;5878:3;5819:71;:::i;:::-;5812:78;;5899:65;5957:6;5952:3;5945:4;5938:5;5934:16;5899:65;:::i;:::-;5989:29;6011:6;5989:29;:::i;:::-;5984:3;5980:39;5973:46;;5740:285;5648:377;;;;:::o;6031:139::-;6094:9;6127:37;6158:5;6127:37;:::i;:::-;6114:50;;6031:139;;;:::o;6176:157::-;6276:50;6320:5;6276:50;:::i;:::-;6271:3;6264:63;6176:157;;:::o;6339:970::-;6644:4;6682:3;6671:9;6667:19;6659:27;;6696:71;6764:1;6753:9;6749:17;6740:6;6696:71;:::i;:::-;6777:111;6884:2;6873:9;6869:18;6860:6;6777:111;:::i;:::-;6935:9;6929:4;6925:20;6920:2;6909:9;6905:18;6898:48;6963:78;7036:4;7027:6;6963:78;:::i;:::-;6955:86;;7051:72;7119:2;7108:9;7104:18;7095:6;7051:72;:::i;:::-;7133:73;7201:3;7190:9;7186:19;7177:6;7133:73;:::i;:::-;7216:86;7297:3;7286:9;7282:19;7273:6;7216:86;:::i;:::-;6339:970;;;;;;;;;:::o;7315:474::-;7383:6;7391;7440:2;7428:9;7419:7;7415:23;7411:32;7408:119;;;7446:79;;:::i;:::-;7408:119;7566:1;7591:53;7636:7;7627:6;7616:9;7612:22;7591:53;:::i;:::-;7581:63;;7537:117;7693:2;7719:53;7764:7;7755:6;7744:9;7740:22;7719:53;:::i;:::-;7709:63;;7664:118;7315:474;;;;;:::o;7795:819::-;7884:6;7892;7900;7908;7957:2;7945:9;7936:7;7932:23;7928:32;7925:119;;;7963:79;;:::i;:::-;7925:119;8083:1;8108:53;8153:7;8144:6;8133:9;8129:22;8108:53;:::i;:::-;8098:63;;8054:117;8238:2;8227:9;8223:18;8210:32;8269:18;8261:6;8258:30;8255:117;;;8291:79;;:::i;:::-;8255:117;8404:65;8461:7;8452:6;8441:9;8437:22;8404:65;:::i;:::-;8386:83;;;;8181:298;8518:2;8544:53;8589:7;8580:6;8569:9;8565:22;8544:53;:::i;:::-;8534:63;;8489:118;7795:819;;;;;;;:::o;8620:170::-;8760:22;8756:1;8748:6;8744:14;8737:46;8620:170;:::o;8796:366::-;8938:3;8959:67;9023:2;9018:3;8959:67;:::i;:::-;8952:74;;9035:93;9124:3;9035:93;:::i;:::-;9153:2;9148:3;9144:12;9137:19;;8796:366;;;:::o;9168:419::-;9334:4;9372:2;9361:9;9357:18;9349:26;;9421:9;9415:4;9411:20;9407:1;9396:9;9392:17;9385:47;9449:131;9575:4;9449:131;:::i;:::-;9441:139;;9168:419;;;:::o;9593:180::-;9641:77;9638:1;9631:88;9738:4;9735:1;9728:15;9762:4;9759:1;9752:15;9779:194;9819:4;9839:20;9857:1;9839:20;:::i;:::-;9834:25;;9873:20;9891:1;9873:20;:::i;:::-;9868:25;;9917:1;9914;9910:9;9902:17;;9941:1;9935:4;9932:11;9929:37;;;9946:18;;:::i;:::-;9929:37;9779:194;;;;:::o;9979:118::-;10066:24;10084:5;10066:24;:::i;:::-;10061:3;10054:37;9979:118;;:::o;10103:332::-;10224:4;10262:2;10251:9;10247:18;10239:26;;10275:71;10343:1;10332:9;10328:17;10319:6;10275:71;:::i;:::-;10356:72;10424:2;10413:9;10409:18;10400:6;10356:72;:::i;:::-;10103:332;;;;;:::o;10441:90::-;10475:7;10518:5;10511:13;10504:21;10493:32;;10441:90;;;:::o;10537:116::-;10607:21;10622:5;10607:21;:::i;:::-;10600:5;10597:32;10587:60;;10643:1;10640;10633:12;10587:60;10537:116;:::o;10659:137::-;10713:5;10744:6;10738:13;10729:22;;10760:30;10784:5;10760:30;:::i;:::-;10659:137;;;;:::o;10802:345::-;10869:6;10918:2;10906:9;10897:7;10893:23;10889:32;10886:119;;;10924:79;;:::i;:::-;10886:119;11044:1;11069:61;11122:7;11113:6;11102:9;11098:22;11069:61;:::i;:::-;11059:71;;11015:125;10802:345;;;;:::o;11153:180::-;11201:77;11198:1;11191:88;11298:4;11295:1;11288:15;11322:4;11319:1;11312:15;11339:320;11383:6;11420:1;11414:4;11410:12;11400:22;;11467:1;11461:4;11457:12;11488:18;11478:81;;11544:4;11536:6;11532:17;11522:27;;11478:81;11606:2;11598:6;11595:14;11575:18;11572:38;11569:84;;11625:18;;:::i;:::-;11569:84;11390:269;11339:320;;;:::o;11665:141::-;11714:4;11737:3;11729:11;;11760:3;11757:1;11750:14;11794:4;11791:1;11781:18;11773:26;;11665:141;;;:::o;11836:831::-;11921:3;11958:5;11952:12;11987:36;12013:9;11987:36;:::i;:::-;12039:71;12103:6;12098:3;12039:71;:::i;:::-;12032:78;;12141:1;12130:9;12126:17;12157:1;12152:164;;;;12330:1;12325:336;;;;12119:542;;12152:164;12236:4;12232:9;12221;12217:25;12212:3;12205:38;12296:6;12289:14;12282:22;12276:4;12272:33;12267:3;12263:43;12256:50;;12152:164;;12325:336;12392:38;12424:5;12392:38;:::i;:::-;12452:1;12466:154;12480:6;12477:1;12474:13;12466:154;;;12554:7;12548:14;12544:1;12539:3;12535:11;12528:35;12604:1;12595:7;12591:15;12580:26;;12502:4;12499:1;12495:12;12490:17;;12466:154;;;12649:1;12644:3;12640:11;12633:18;;12332:329;;12119:542;;11925:742;;11836:831;;;;:::o;12673:146::-;12770:6;12765:3;12760;12747:30;12811:1;12802:6;12797:3;12793:16;12786:27;12673:146;;;:::o;12849:317::-;12947:3;12968:71;13032:6;13027:3;12968:71;:::i;:::-;12961:78;;13049:56;13098:6;13093:3;13086:5;13049:56;:::i;:::-;13130:29;13152:6;13130:29;:::i;:::-;13125:3;13121:39;13114:46;;12849:317;;;;;:::o;13172:860::-;13424:4;13462:3;13451:9;13447:19;13439:27;;13476:71;13544:1;13533:9;13529:17;13520:6;13476:71;:::i;:::-;13557:72;13625:2;13614:9;13610:18;13601:6;13557:72;:::i;:::-;13639;13707:2;13696:9;13692:18;13683:6;13639:72;:::i;:::-;13758:9;13752:4;13748:20;13743:2;13732:9;13728:18;13721:48;13786:75;13856:4;13847:6;13786:75;:::i;:::-;13778:83;;13909:9;13903:4;13899:20;13893:3;13882:9;13878:19;13871:49;13937:88;14020:4;14011:6;14003;13937:88;:::i;:::-;13929:96;;13172:860;;;;;;;;;:::o;14038:191::-;14078:3;14097:20;14115:1;14097:20;:::i;:::-;14092:25;;14131:20;14149:1;14131:20;:::i;:::-;14126:25;;14174:1;14171;14167:9;14160:16;;14195:3;14192:1;14189:10;14186:36;;;14202:18;;:::i;:::-;14186:36;14038:191;;;;:::o;14235:442::-;14384:4;14422:2;14411:9;14407:18;14399:26;;14435:71;14503:1;14492:9;14488:17;14479:6;14435:71;:::i;:::-;14516:72;14584:2;14573:9;14569:18;14560:6;14516:72;:::i;:::-;14598;14666:2;14655:9;14651:18;14642:6;14598:72;:::i;:::-;14235:442;;;;;;:::o;14683:142::-;14749:9;14782:37;14813:5;14782:37;:::i;:::-;14769:50;;14683:142;;;:::o;14831:163::-;14934:53;14981:5;14934:53;:::i;:::-;14929:3;14922:66;14831:163;;:::o;15000:474::-;15165:4;15203:2;15192:9;15188:18;15180:26;;15216:87;15300:1;15289:9;15285:17;15276:6;15216:87;:::i;:::-;15313:72;15381:2;15370:9;15366:18;15357:6;15313:72;:::i;:::-;15395;15463:2;15452:9;15448:18;15439:6;15395:72;:::i;:::-;15000:474;;;;;;:::o;15480:180::-;15528:77;15525:1;15518:88;15625:4;15622:1;15615:15;15649:4;15646:1;15639:15;15666:93;15703:6;15750:2;15745;15738:5;15734:14;15730:23;15720:33;;15666:93;;;:::o;15765:107::-;15809:8;15859:5;15853:4;15849:16;15828:37;;15765:107;;;;:::o;15878:393::-;15947:6;15997:1;15985:10;15981:18;16020:97;16050:66;16039:9;16020:97;:::i;:::-;16138:39;16168:8;16157:9;16138:39;:::i;:::-;16126:51;;16210:4;16206:9;16199:5;16195:21;16186:30;;16259:4;16249:8;16245:19;16238:5;16235:30;16225:40;;15954:317;;15878:393;;;;;:::o;16277:142::-;16327:9;16360:53;16378:34;16387:24;16405:5;16387:24;:::i;:::-;16378:34;:::i;:::-;16360:53;:::i;:::-;16347:66;;16277:142;;;:::o;16425:75::-;16468:3;16489:5;16482:12;;16425:75;;;:::o;16506:269::-;16616:39;16647:7;16616:39;:::i;:::-;16677:91;16726:41;16750:16;16726:41;:::i;:::-;16718:6;16711:4;16705:11;16677:91;:::i;:::-;16671:4;16664:105;16582:193;16506:269;;;:::o;16781:73::-;16826:3;16781:73;:::o;16860:189::-;16937:32;;:::i;:::-;16978:65;17036:6;17028;17022:4;16978:65;:::i;:::-;16913:136;16860:189;;:::o;17055:186::-;17115:120;17132:3;17125:5;17122:14;17115:120;;;17186:39;17223:1;17216:5;17186:39;:::i;:::-;17159:1;17152:5;17148:13;17139:22;;17115:120;;;17055:186;;:::o;17247:543::-;17348:2;17343:3;17340:11;17337:446;;;17382:38;17414:5;17382:38;:::i;:::-;17466:29;17484:10;17466:29;:::i;:::-;17456:8;17452:44;17649:2;17637:10;17634:18;17631:49;;;17670:8;17655:23;;17631:49;17693:80;17749:22;17767:3;17749:22;:::i;:::-;17739:8;17735:37;17722:11;17693:80;:::i;:::-;17352:431;;17337:446;17247:543;;;:::o;17796:117::-;17850:8;17900:5;17894:4;17890:16;17869:37;;17796:117;;;;:::o;17919:169::-;17963:6;17996:51;18044:1;18040:6;18032:5;18029:1;18025:13;17996:51;:::i;:::-;17992:56;18077:4;18071;18067:15;18057:25;;17970:118;17919:169;;;;:::o;18093:295::-;18169:4;18315:29;18340:3;18334:4;18315:29;:::i;:::-;18307:37;;18377:3;18374:1;18370:11;18364:4;18361:21;18353:29;;18093:295;;;;:::o;18393:1395::-;18510:37;18543:3;18510:37;:::i;:::-;18612:18;18604:6;18601:30;18598:56;;;18634:18;;:::i;:::-;18598:56;18678:38;18710:4;18704:11;18678:38;:::i;:::-;18763:67;18823:6;18815;18809:4;18763:67;:::i;:::-;18857:1;18881:4;18868:17;;18913:2;18905:6;18902:14;18930:1;18925:618;;;;19587:1;19604:6;19601:77;;;19653:9;19648:3;19644:19;19638:26;19629:35;;19601:77;19704:67;19764:6;19757:5;19704:67;:::i;:::-;19698:4;19691:81;19560:222;18895:887;;18925:618;18977:4;18973:9;18965:6;18961:22;19011:37;19043:4;19011:37;:::i;:::-;19070:1;19084:208;19098:7;19095:1;19092:14;19084:208;;;19177:9;19172:3;19168:19;19162:26;19154:6;19147:42;19228:1;19220:6;19216:14;19206:24;;19275:2;19264:9;19260:18;19247:31;;19121:4;19118:1;19114:12;19109:17;;19084:208;;;19320:6;19311:7;19308:19;19305:179;;;19378:9;19373:3;19369:19;19363:26;19421:48;19463:4;19455:6;19451:17;19440:9;19421:48;:::i;:::-;19413:6;19406:64;19328:156;19305:179;19530:1;19526;19518:6;19514:14;19510:22;19504:4;19497:36;18932:611;;;18895:887;;18485:1303;;;18393:1395;;:::o;19794:553::-;19973:4;20011:2;20000:9;19996:18;19988:26;;20024:71;20092:1;20081:9;20077:17;20068:6;20024:71;:::i;:::-;20142:9;20136:4;20132:20;20127:2;20116:9;20112:18;20105:48;20170:88;20253:4;20244:6;20236;20170:88;:::i;:::-;20162:96;;20268:72;20336:2;20325:9;20321:18;20312:6;20268:72;:::i;:::-;19794:553;;;;;;;:::o;20353:664::-;20560:4;20598:3;20587:9;20583:19;20575:27;;20612:71;20680:1;20669:9;20665:17;20656:6;20612:71;:::i;:::-;20693:72;20761:2;20750:9;20746:18;20737:6;20693:72;:::i;:::-;20775;20843:2;20832:9;20828:18;20819:6;20775:72;:::i;:::-;20894:9;20888:4;20884:20;20879:2;20868:9;20864:18;20857:48;20922:88;21005:4;20996:6;20988;20922:88;:::i;:::-;20914:96;;20353:664;;;;;;;;:::o"},"methodIdentifiers":{"batches(uint256)":"b32c4d8d","beneficiaryBalance(uint256,address)":"e2015d5c","deposit(address,string,uint256)":"f3db9fe5","numberOfBatches()":"88c46fb8","transferBeneficialOwnership(uint256,address,uint256)":"21f7500f","withdrawPrivately(uint256,uint256,string)":"f791e478","withdrawWithAttestation(uint256,uint256,string)":"05476414"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestation\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"meta\",\"type\":\"string\"}],\"name\":\"AttestedWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestation\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"meta\",\"type\":\"string\"}],\"name\":\"PrivateWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"contract PikaFractionalAttestationToken\",\"name\":\"squirrelFractionalAttestationToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"attestation\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unwithdrawnAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaryBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_attestation\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferBeneficialOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_meta\",\"type\":\"string\"}],\"name\":\"withdrawPrivately\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_meta\",\"type\":\"string\"}],\"name\":\"withdrawWithAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PikaPay.sol\":\"PikaPay\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/PikaPay.sol\":{\"keccak256\":\"0xfb32258f5bf4f87616b9c268fe652b13dcabb81b8e0d2609728fa1f9b592ca1e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f7e6595af7d34222c3831840251090ebb3a665a898ff4c2afdd022333d4c3798\",\"dweb:/ipfs/QmcApRHJt35PykSArkgzVp98HdWzqpn3MzV9HA7qgfMG68\"]}},\"version\":1}"}}}}}