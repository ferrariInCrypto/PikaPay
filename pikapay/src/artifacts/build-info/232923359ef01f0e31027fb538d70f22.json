{"id":"232923359ef01f0e31027fb538d70f22","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PikaPay.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n// Written by: trevor@tk.co\n\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract PikaFractionalAttestationToken is ERC20 {\n    PikaPay public pikaPay;\n    uint256 public batchId;\n\n    // Constructor to initialize the Fractional Attestation Token with a unique batch ID\n    constructor(\n        PikaPay _pikaPay,\n        uint256 _batchId,\n        uint256 _initialSupply\n    )\n        ERC20(\n            string.concat(\n                \"PikaPay Fractional Batch #\",\n                Strings.toString(_batchId)\n            ),\n            \"PFAT\" // Token symbol PFAT = Pika Fractional Attestation Token\n        )\n    {\n        require(_initialSupply > 0, \"Initial supply must be greater than 0\");\n        pikaPay = _pikaPay;\n        batchId = _batchId;\n        _mint(msg.sender, _initialSupply); // Minting the initial token supply to the deployer\n    }\n\n    // Hook function to ensure only PikaPay can transfer this token type\n    // Hook function to ensure only PikaPay can transfer this token type\n    function _beforeTokenTransfer(address from) internal view {\n        require(\n            from == address(pikaPay),\n            \"Only PikaPay contract can initiate transfers.\"\n        );\n    }\n}\n\ncontract PikaPay  {\n    using SafeERC20 for ERC20;\n\n    // Struct to represent each Batch with its associated token and metadata\n    struct Batch {\n        uint256 batchId; // Unique batch identifier\n        PikaFractionalAttestationToken token; // Token representing fractional ownership\n        string attestationDetails; // Descriptive metadata or attestation\n        uint256 totalSupply; // Total token supply in this batch\n        uint256 remainingSupply; // Remaining supply available for withdrawal\n        bool isFinalized; // Tracks if the batch is finalized\n        address owner; // Owner of the batch\n    }\n\n    uint256 public totalBatches = 0; // Total number of batches created\n    mapping(uint256 => Batch) public batchRegistry; // Mapping to store batch information by ID\n    mapping(uint256 => mapping(address => uint256)) public beneficiaryBalances; // Tracks each user's balance in a specific batch\n\n    // Events for logging deposit, withdrawal, and batch updates\n    event BatchCreated(\n        uint256 batchId,\n        address indexed owner,\n        string attestationDetails,\n        uint256 totalAmount\n    );\n    event AttestedWithdrawal(\n        uint256 batchId,\n        address indexed beneficiary,\n        uint256 amount,\n        string attestation,\n        string metadata\n    );\n    event PrivateWithdrawal(\n        uint256 batchId,\n        address indexed beneficiary,\n        uint256 amount,\n        string metadata\n    );\n    event BatchFinalized(uint256 batchId);\n    event BatchUpdated(uint256 batchId, string updatedAttestationDetails);\n    event OwnershipTransferred(\n        uint256 batchId,\n        address indexed previousOwner,\n        address indexed newOwner,\n        uint256 amount\n    );\n\n    ERC20 public constant USDT =\n        ERC20(0x48db5c1155836dE945fB82b6A9CF82D91AC21f16); // Constant USDT token address\n\n    // Modifier to restrict actions to batch owners\n    modifier onlyBatchOwner(uint256 _batchId) {\n        require(\n            batchRegistry[_batchId].owner == msg.sender,\n            \"Caller is not the batch owner\"\n        );\n        _;\n    }\n\n    // Modifier to validate batch existence\n    modifier validBatchId(uint256 _batchId) {\n        require(_batchId > 0 && _batchId <= totalBatches, \"Invalid batch ID\");\n        _;\n    }\n\n    // Function to create a new batch with a custom attestation and deposit an initial supply of tokens\n    function createNewBatchWithAttestation(\n        string calldata _attestationDetails,\n        uint256 _depositAmount\n    ) external  {\n        // require(\n        //     bytes(_attestationDetails).length > 0,\n        //     \"Attestation details required\"\n        // );\n        require(_depositAmount > 0, \"Deposit amount must be greater than 0\");\n\n        totalBatches += 1;\n        USDT.safeTransferFrom(msg.sender, address(this), _depositAmount);\n\n        // Deploy a new instance of PikaFractionalAttestationToken for the batch\n        PikaFractionalAttestationToken token = new PikaFractionalAttestationToken(\n                this,\n                totalBatches,\n                _depositAmount\n            );\n\n        batchRegistry[totalBatches] = Batch({\n            batchId: totalBatches,\n            token: token,\n            attestationDetails: _attestationDetails,\n            totalSupply: _depositAmount,\n            remainingSupply: _depositAmount,\n            isFinalized: false,\n            owner: msg.sender\n        });\n\n        beneficiaryBalances[totalBatches][msg.sender] = _depositAmount; // Set the depositor as the initial owner\n        emit BatchCreated(\n            totalBatches,\n            msg.sender,\n            _attestationDetails,\n            _depositAmount\n        );\n    }\n\n    // Function to transfer the ownership of a portion of tokens to another beneficiary\n    function transferBatchOwnership(\n        uint256 _batchId,\n        address _newOwner,\n        uint256 _transferAmount\n    ) external  validBatchId(_batchId) onlyBatchOwner(_batchId) {\n        require(_newOwner != address(0), \"Invalid new owner address\");\n        require(\n            beneficiaryBalances[_batchId][msg.sender] >= _transferAmount,\n            \"Insufficient balance for transfer.\"\n        );\n\n        beneficiaryBalances[_batchId][msg.sender] -= _transferAmount;\n        beneficiaryBalances[_batchId][_newOwner] += _transferAmount;\n\n        emit OwnershipTransferred(\n            _batchId,\n            msg.sender,\n            _newOwner,\n            _transferAmount\n        );\n    }\n\n    // Withdraw tokens with attestation, emitting metadata for transparency\n    function withdrawWithAttestationProof(\n        uint256 _batchId,\n        uint256 _withdrawAmount,\n        string calldata _metadata\n    ) external  validBatchId(_batchId) {\n        Batch storage batch = batchRegistry[_batchId];\n        require(!batch.isFinalized, \"Batch has already been finalized.\");\n        require(\n            beneficiaryBalances[_batchId][msg.sender] >= _withdrawAmount,\n            \"Insufficient balance for withdrawal.\"\n        );\n\n        // Update the balances and transfer tokens\n        beneficiaryBalances[_batchId][msg.sender] -= _withdrawAmount;\n        batch.remainingSupply -= _withdrawAmount;\n\n        USDT.safeTransfer(msg.sender, _withdrawAmount);\n        batch.token.transfer(msg.sender, _withdrawAmount);\n\n        emit AttestedWithdrawal(\n            _batchId,\n            msg.sender,\n            _withdrawAmount,\n            batch.attestationDetails,\n            _metadata\n        );\n\n        // Finalize the batch if all tokens have been withdrawn\n        if (batch.remainingSupply == 0) {\n            finalizeBatch(_batchId);\n        }\n    }\n\n    // Withdraw tokens privately without attestation, providing optional metadata\n    function withdrawWithoutAttestation(\n        uint256 _batchId,\n        uint256 _withdrawAmount,\n        string calldata _metadata\n    ) external  validBatchId(_batchId) {\n        Batch storage batch = batchRegistry[_batchId];\n        require(!batch.isFinalized, \"Batch has already been finalized.\");\n        require(\n            beneficiaryBalances[_batchId][msg.sender] >= _withdrawAmount,\n            \"Insufficient balance for withdrawal.\"\n        );\n\n        // Update balances and transfer the partial amount\n        beneficiaryBalances[_batchId][msg.sender] -= _withdrawAmount;\n        batch.remainingSupply -= _withdrawAmount;\n\n        USDT.safeTransfer(msg.sender, _withdrawAmount);\n        emit PrivateWithdrawal(\n            _batchId,\n            msg.sender,\n            _withdrawAmount,\n            _metadata\n        );\n\n        // Finalize the batch if all tokens have been withdrawn\n        if (batch.remainingSupply == 0) {\n            finalizeBatch(_batchId);\n        }\n    }\n\n    // Finalize a batch when all tokens have been withdrawn to prevent further actions\n    function finalizeBatch(uint256 _batchId) internal {\n        Batch storage batch = batchRegistry[_batchId];\n        require(!batch.isFinalized, \"Batch is already finalized.\");\n        require(\n            batch.remainingSupply == 0,\n            \"There are still unwithdrawn tokens.\"\n        );\n\n        batch.isFinalized = true;\n        emit BatchFinalized(_batchId);\n    }\n\n    // Update attestation details of an existing batch before it is finalized\n    function modifyBatchAttestation(\n        uint256 _batchId,\n        string calldata _newAttestationDetails\n    ) external validBatchId(_batchId) onlyBatchOwner(_batchId) {\n        Batch storage batch = batchRegistry[_batchId];\n        require(\n            !batch.isFinalized,\n            \"Cannot update attestation for a finalized batch.\"\n        );\n\n        batch.attestationDetails = _newAttestationDetails;\n        emit BatchUpdated(_batchId, _newAttestationDetails);\n    }\n}\n"},"contracts/USDT.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract USDT is ERC20, Ownable, ERC20Permit {\n    constructor()\n        ERC20(\"USDT\", \"USDT\")\n        Ownable(msg.sender)\n        ERC20Permit(\"USDT\")\n    {\n        _mint(msg.sender, 1000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public  {\n        _mint(to, amount);\n    }\n}\n\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1908],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1909,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1908,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1908],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[3372],"IERC20":[992]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":3372,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,3372,992],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[926,935]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3372]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":3373,"src":"132:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":993,"src":"131:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[262]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":262,"linearizedBaseContracts":[262],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":242,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":261,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":261,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":261,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":261,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":261,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":261,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":261,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":262,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":263,"src":"133:605:4","usedErrors":[],"usedEvents":[242]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[399],"IERC20Errors":[304],"IERC721Errors":[352]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":274,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":274,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":274,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":274,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":279,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":279,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":284,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":284,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":293,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":293,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":293,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":293,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":298,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":298,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":303,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":303,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":400,"src":"280:1764:5","usedErrors":[274,279,284,293,298,303],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":352,"linearizedBaseContracts":[352],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":310,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":310,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":315,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":315,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":324,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":324,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":324,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":324,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":329,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":329,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":334,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":334,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":341,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":341,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":341,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":346,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":346,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":351,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":351,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":400,"src":"2190:2092:5","usedErrors":[310,315,324,329,334,341,346,351],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":399,"linearizedBaseContracts":[399],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":364,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":369,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":369,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":374,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":374,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":381,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":381,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":381,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":386,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":386,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":391,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":391,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":398,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":398,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":398,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":400,"src":"4430:2107:5","usedErrors":[364,369,374,381,386,391,398],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1908],"ERC20":[914],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172]},"id":915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":993,"src":"131:36:6","symbolAliases":[{"foreign":{"id":402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1173,"src":"168:63:6","symbolAliases":[{"foreign":{"id":404,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1909,"src":"232:48:6","symbolAliases":[{"foreign":{"id":406,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":400,"src":"281:65:6","symbolAliases":[{"foreign":{"id":408,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":411,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1908,"src":"1133:7:6"},"id":412,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":413,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1142:6:6"},"id":414,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":415,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1172,"src":"1150:14:6"},"id":416,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":417,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"1166:12:6"},"id":418,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914,304,1172,992,1908],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":422,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":914,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":428,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":914,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":427,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":426,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":430,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":914,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":432,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":914,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":914,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":450,"nodeType":"Block","src":"1657:57:6","statements":[{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":443,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1675:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":445,"nodeType":"ExpressionStatement","src":"1667:13:6"},{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1690:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":447,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"1700:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":449,"nodeType":"ExpressionStatement","src":"1690:17:6"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1425:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":451,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"name_","nameLocation":"1627:5:6","nodeType":"VariableDeclaration","scope":451,"src":"1613:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":436,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:6","nodeType":"VariableDeclaration","scope":451,"src":"1634:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:6"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1657:0:6"},"scope":914,"src":"1601:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1159],"body":{"id":459,"nodeType":"Block","src":"1839:29:6","statements":[{"expression":{"id":457,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1856:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"1849:12:6"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1720:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:6","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1792:2:6"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"1824:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:6"},"scope":914,"src":"1779:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":468,"nodeType":"Block","src":"2043:31:6","statements":[{"expression":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2060:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":465,"id":467,"nodeType":"Return","src":"2053:14:6"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1874:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:6","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1996:2:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"2028:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:6"},"scope":914,"src":"1981:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1171],"body":{"id":477,"nodeType":"Block","src":"2763:26:6","statements":[{"expression":{"hexValue":"3138","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":474,"id":476,"nodeType":"Return","src":"2773:9:6"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2080:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:6","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"2724:2:6"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2756:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":472,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:6"},"scope":914,"src":"2707:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[941],"body":{"id":486,"nodeType":"Block","src":"2910:36:6","statements":[{"expression":{"id":484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2927:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"2920:19:6"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2795:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"2869:2:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"2901:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:6"},"scope":914,"src":"2849:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":499,"nodeType":"Block","src":"3078:42:6","statements":[{"expression":{"baseExpression":{"id":495,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3095:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3105:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":498,"nodeType":"Return","src":"3088:25:6"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2952:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:6","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"account","nameLocation":"3031:7:6","nodeType":"VariableDeclaration","scope":500,"src":"3023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"3069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:6"},"scope":914,"src":"3004:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[959],"body":{"id":523,"nodeType":"Block","src":"3390:103:6","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"owner","nameLocation":"3408:5:6","nodeType":"VariableDeclaration","scope":523,"src":"3400:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"3416:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:6"},{"expression":{"arguments":[{"id":516,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3448:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3455:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"3438:27:6"},{"expression":{"hexValue":"74727565","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":509,"id":522,"nodeType":"Return","src":"3475:11:6"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"3126:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:6","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"to","nameLocation":"3341:2:6","nodeType":"VariableDeclaration","scope":524,"src":"3333:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"value","nameLocation":"3353:5:6","nodeType":"VariableDeclaration","scope":524,"src":"3345:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:6"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"3384:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:6"},"scope":914,"src":"3315:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":540,"nodeType":"Block","src":"3640:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":534,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3657:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":536,"indexExpression":{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3669:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":537,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3676:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":533,"id":539,"nodeType":"Return","src":"3650:34:6"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"3499:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:6","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3578:5:6","nodeType":"VariableDeclaration","scope":541,"src":"3570:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"3593:7:6","nodeType":"VariableDeclaration","scope":541,"src":"3585:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:6"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"3631:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:6"},"scope":914,"src":"3551:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[979],"body":{"id":564,"nodeType":"Block","src":"4077:107:6","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"4095:5:6","nodeType":"VariableDeclaration","scope":564,"src":"4087:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4103:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:6"},{"expression":{"arguments":[{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4134:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4141:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4150:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"4125:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"4125:31:6"},{"expression":{"hexValue":"74727565","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":550,"id":563,"nodeType":"Return","src":"4166:11:6"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3697:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"spender","nameLocation":"4023:7:6","nodeType":"VariableDeclaration","scope":565,"src":"4015:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"4040:5:6","nodeType":"VariableDeclaration","scope":565,"src":"4032:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"4071:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:6"},"scope":914,"src":"3998:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[991],"body":{"id":596,"nodeType":"Block","src":"4869:151:6","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"spender","nameLocation":"4887:7:6","nodeType":"VariableDeclaration","scope":596,"src":"4879:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4897:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:6"},{"expression":{"arguments":[{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4935:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4941:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4950:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4919:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"4919:37:6"},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4976:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4982:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4986:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4966:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"4966:26:6"},{"expression":{"hexValue":"74727565","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":576,"id":595,"nodeType":"Return","src":"5002:11:6"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"4190:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:6","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"from","nameLocation":"4806:4:6","nodeType":"VariableDeclaration","scope":597,"src":"4798:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"4820:2:6","nodeType":"VariableDeclaration","scope":597,"src":"4812:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"value","nameLocation":"4832:5:6","nodeType":"VariableDeclaration","scope":597,"src":"4824:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4863:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:6"},"scope":914,"src":"4776:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5462:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5476:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:6","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":621,"nodeType":"IfStatement","src":"5472:86:6","trueBody":{"id":620,"nodeType":"Block","src":"5496:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:6","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":613,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5517:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":619,"nodeType":"RevertStatement","src":"5510:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5571:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"5567:86:6","trueBody":{"id":635,"nodeType":"Block","src":"5589:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5610:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":634,"nodeType":"RevertStatement","src":"5603:39:6"}]}},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5670:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5676:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5680:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5662:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5662:24:6"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"5026:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:6","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5420:4:6","nodeType":"VariableDeclaration","scope":644,"src":"5412:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5434:2:6","nodeType":"VariableDeclaration","scope":644,"src":"5426:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"5446:5:6","nodeType":"VariableDeclaration","scope":644,"src":"5438:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:6"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5462:0:6"},"scope":914,"src":"5393:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"6083:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6097:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:6","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":691,"nodeType":"Block","src":"6271:362:6","statements":[{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:6","nodeType":"VariableDeclaration","scope":691,"src":"6285:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":670,"initialValue":{"baseExpression":{"id":667,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6307:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":669,"indexExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6317:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6340:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6354:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"6336:115:6","trueBody":{"id":680,"nodeType":"Block","src":"6361:90:6","statements":[{"errorCall":{"arguments":[{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6411:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6417:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6430:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":674,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6386:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":679,"nodeType":"RevertStatement","src":"6379:57:6"}]}},{"id":690,"nodeType":"UncheckedBlock","src":"6464:159:6","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6571:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":684,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6581:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6589:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6603:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"6571:37:6"}]}]},"id":692,"nodeType":"IfStatement","src":"6093:540:6","trueBody":{"id":664,"nodeType":"Block","src":"6117:148:6","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6233:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6249:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"6233:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6647:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:6","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":712,"nodeType":"Block","src":"6862:206:6","statements":[{"id":711,"nodeType":"UncheckedBlock","src":"6876:182:6","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":705,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7021:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":707,"indexExpression":{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7031:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7038:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"7021:22:6"}]}]},"id":713,"nodeType":"IfStatement","src":"6643:425:6","trueBody":{"id":704,"nodeType":"Block","src":"6665:191:6","statements":[{"id":703,"nodeType":"UncheckedBlock","src":"6679:167:6","statements":[{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":699,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6810:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6826:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"6810:21:6"}]}]}},{"eventCall":{"arguments":[{"id":715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"7092:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7098:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7102:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7083:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"EmitStatement","src":"7078:30:6"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5699:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"from","nameLocation":"6033:4:6","nodeType":"VariableDeclaration","scope":721,"src":"6025:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"to","nameLocation":"6047:2:6","nodeType":"VariableDeclaration","scope":721,"src":"6039:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"6059:5:6","nodeType":"VariableDeclaration","scope":721,"src":"6051:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"6083:0:6"},"scope":914,"src":"6008:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"7514:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7528:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:6","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"7524:91:6","trueBody":{"id":742,"nodeType":"Block","src":"7551:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:6","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7572:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":741,"nodeType":"RevertStatement","src":"7565:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7644:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7653:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7624:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"7624:35:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"7121:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"7481:7:6","nodeType":"VariableDeclaration","scope":754,"src":"7473:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"7498:5:6","nodeType":"VariableDeclaration","scope":754,"src":"7490:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7514:0:6"},"scope":914,"src":"7458:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"8040:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8054:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:6","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":776,"nodeType":"IfStatement","src":"8050:89:6","trueBody":{"id":775,"nodeType":"Block","src":"8077:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:6","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8098:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":774,"nodeType":"RevertStatement","src":"8091:37:6"}]}},{"expression":{"arguments":[{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8156:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:6","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"8177:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8148:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"8148:35:6"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"7672:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:6","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"account","nameLocation":"8007:7:6","nodeType":"VariableDeclaration","scope":787,"src":"7999:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"value","nameLocation":"8024:5:6","nodeType":"VariableDeclaration","scope":787,"src":"8016:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:6"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"8040:0:6"},"scope":914,"src":"7984:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"8800:54:6","statements":[{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8819:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8826:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"8810:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"8810:37:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"8196:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"8752:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8744:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"spender","nameLocation":"8767:7:6","nodeType":"VariableDeclaration","scope":805,"src":"8759:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"value","nameLocation":"8784:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8776:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"8800:0:6"},"scope":914,"src":"8726:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"9799:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9813:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:6","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"9809:89:6","trueBody":{"id":830,"nodeType":"Block","src":"9834:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:6","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9855:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":829,"nodeType":"RevertStatement","src":"9848:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9911:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:6","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"9907:90:6","trueBody":{"id":845,"nodeType":"Block","src":"9934:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"9955:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":844,"nodeType":"RevertStatement","src":"9948:38:6"}]}},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":847,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"10006:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":850,"indexExpression":{"id":848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"10018:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":851,"indexExpression":{"id":849,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10025:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10036:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"10006:35:6"},{"condition":{"id":855,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"10055:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"10051:76:6","trueBody":{"id":862,"nodeType":"Block","src":"10066:61:6","statements":[{"eventCall":{"arguments":[{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"10094:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10101:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10110:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"10085:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"EmitStatement","src":"10080:36:6"}]}}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"8860:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:6","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"9727:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9719:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"9742:7:6","nodeType":"VariableDeclaration","scope":865,"src":"9734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"9759:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9751:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:6","nodeType":"VariableDeclaration","scope":865,"src":"9766:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"9799:0:6"},"scope":914,"src":"9701:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"10504:388:6","statements":[{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:6","nodeType":"VariableDeclaration","scope":912,"src":"10514:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":878,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10551:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10558:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10541:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10580:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:6","memberName":"max","nodeType":"MemberAccess","src":"10600:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"10576:310:6","trueBody":{"id":910,"nodeType":"Block","src":"10619:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10637:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10656:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":899,"nodeType":"IfStatement","src":"10633:130:6","trueBody":{"id":898,"nodeType":"Block","src":"10663:100:6","statements":[{"errorCall":{"arguments":[{"id":893,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10715:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10724:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10742:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10688:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":897,"nodeType":"RevertStatement","src":"10681:67:6"}]}},{"id":909,"nodeType":"UncheckedBlock","src":"10776:100:6","statements":[{"expression":{"arguments":[{"id":901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10813:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10820:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10829:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10848:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":900,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"10804:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"10804:57:6"}]}]}}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"10139:271:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"owner","nameLocation":"10448:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10440:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"spender","nameLocation":"10463:7:6","nodeType":"VariableDeclaration","scope":913,"src":"10455:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"value","nameLocation":"10480:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10472:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"10504:0:6"},"scope":914,"src":"10415:477:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":915,"src":"1106:9788:6","usedErrors":[274,279,284,293,298,303],"usedEvents":[926,935]}],"src":"105:10790:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":916,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":992,"linearizedBaseContracts":[992],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":926,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":926,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":926,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":926,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":935,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":935,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":935,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":935,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":992,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":949,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":992,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":959,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":959,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":992,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":969,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":969,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":992,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":979,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":979,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":979,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":992,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":991,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":991,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":991,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":992,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":993,"src":"204:2575:7","usedErrors":[],"usedEvents":[926,935]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3059],"EIP712":[3286],"ERC20":[914],"ERC20Permit":[1146],"IERC20Permit":[1208],"Nonces":[1998]},"id":1147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1209,"src":"148:48:8","symbolAliases":[{"foreign":{"id":995,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":915,"src":"197:35:8","symbolAliases":[{"foreign":{"id":997,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":3060,"src":"233:60:8","symbolAliases":[{"foreign":{"id":999,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":3287,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1001,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1999,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1003,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1006,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"931:5:8"},"id":1007,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1008,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"938:12:8"},"id":1009,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1010,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"952:6:8"},"id":1011,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1012,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"960:6:8"},"id":1013,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1146,"linearizedBaseContracts":[1146,1998,3286,262,1208,914,304,1172,992,1908],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1018,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1146,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1015,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1023,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1023,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1030,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1030,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1030,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1040,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1041,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1036,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1038,"kind":"baseConstructorSpecifier","modifierName":{"id":1035,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1041,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1032,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1146,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1193],"body":{"id":1117,"nodeType":"Block","src":"1872:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1061,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1904:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"1882:97:8","trueBody":{"id":1067,"nodeType":"Block","src":"1914:65:8","statements":[{"errorCall":{"arguments":[{"id":1064,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1959:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1063,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1935:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1066,"nodeType":"RevertStatement","src":"1928:40:8"}]}},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:8","nodeType":"VariableDeclaration","scope":1117,"src":"1989:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[{"arguments":[{"id":1074,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"2031:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2048:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2055:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2064:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2081:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1078,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"2071:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1081,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2089:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:8"},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"hash","nameLocation":"2118:4:8","nodeType":"VariableDeclaration","scope":1117,"src":"2110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1090,"initialValue":{"arguments":[{"id":1088,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2142:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1087,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"2125:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:8"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"signer","nameLocation":"2172:6:8","nodeType":"VariableDeclaration","scope":1117,"src":"2164:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1100,"initialValue":{"arguments":[{"id":1095,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2195:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1096,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2201:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1097,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2204:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1098,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1093,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"2181:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3059_$","typeString":"type(library ECDSA)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3009,"src":"2181:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2233:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"2219:88:8","trueBody":{"id":1109,"nodeType":"Block","src":"2240:67:8","statements":[{"errorCall":{"arguments":[{"id":1105,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2282:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1104,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2261:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1108,"nodeType":"RevertStatement","src":"2254:42:8"}]}},{"expression":{"arguments":[{"id":1112,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2326:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2333:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2342:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"2317:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"2317:31:8"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1635:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"1716:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1708:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"1739:7:8","nodeType":"VariableDeclaration","scope":1118,"src":"1731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1764:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:8","nodeType":"VariableDeclaration","scope":1118,"src":"1779:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"v","nameLocation":"1811:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1805:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1051,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"r","nameLocation":"1830:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"s","nameLocation":"1849:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1841:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:8"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"1872:0:8"},"scope":1146,"src":"1683:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1201,1957],"body":{"id":1134,"nodeType":"Block","src":"2509:43:8","statements":[{"expression":{"arguments":[{"id":1131,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2539:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1129,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1146_$","typeString":"type(contract super ERC20Permit)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"2526:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1128,"id":1133,"nodeType":"Return","src":"2519:26:8"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2361:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:8","nodeType":"FunctionDefinition","overrides":{"id":1125,"nodeType":"OverrideSpecifier","overrides":[{"id":1123,"name":"IERC20Permit","nameLocations":["2469:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"2469:12:8"},{"id":1124,"name":"Nonces","nameLocations":["2483:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"2483:6:8"}],"src":"2460:30:8"},"parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"owner","nameLocation":"2433:5:8","nodeType":"VariableDeclaration","scope":1135,"src":"2425:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:8"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"2500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:8"},"scope":1146,"src":"2409:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1207],"body":{"id":1144,"nodeType":"Block","src":"2727:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1141,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2744:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1140,"id":1143,"nodeType":"Return","src":"2737:27:8"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"2558:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:8","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2684:2:8"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2718:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:8"},"scope":1146,"src":"2659:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1147,"src":"898:1875:8","usedErrors":[274,279,284,293,298,303,1023,1030,1940,2064,2066,2722,2727,2732],"usedEvents":[242,926,935]}],"src":"122:2652:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[992],"IERC20Metadata":[1172]},"id":1173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1148,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1173,"sourceUnit":993,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1149,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1152,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"306:6:9"},"id":1153,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1172,"linearizedBaseContracts":[1172,992],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1156,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1172,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1162,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1172,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1171,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1168,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1172,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1173,"src":"278:405:9","usedErrors":[],"usedEvents":[926,935]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1208]},"id":1209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"149:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1208,"linearizedBaseContracts":[1208],"name":"IERC20Permit","nameLocation":"2125:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"2144:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1193,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:10","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"3032:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3024:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"spender","nameLocation":"3055:7:10","nodeType":"VariableDeclaration","scope":1193,"src":"3047:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"value","nameLocation":"3080:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3072:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:10","nodeType":"VariableDeclaration","scope":1193,"src":"3095:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"v","nameLocation":"3127:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3121:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1185,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"r","nameLocation":"3146:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"s","nameLocation":"3165:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3157:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:10"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"3181:0:10"},"scope":1208,"src":"2999:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"3188:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1201,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:10","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"owner","nameLocation":"3511:5:10","nodeType":"VariableDeclaration","scope":1201,"src":"3503:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:10"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"3541:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:10"},"scope":1208,"src":"3487:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"3556:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1207,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:10","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"3767:2:10"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"3793:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:10"},"scope":1208,"src":"3742:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1209,"src":"2115:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3682:10"},"id":10},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1878],"IERC1363":[229],"IERC20":[992],"SafeERC20":[1619]},"id":1620,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1210,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1620,"sourceUnit":993,"src":"141:37:11","symbolAliases":[{"foreign":{"id":1211,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"149:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1620,"sourceUnit":230,"src":"179:58:11","symbolAliases":[{"foreign":{"id":1213,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1620,"sourceUnit":1879,"src":"238:51:11","symbolAliases":[{"foreign":{"id":1215,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"246:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"291:458:11","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1619,"linearizedBaseContracts":[1619],"name":"SafeERC20","nameLocation":"758:9:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"774:65:11","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1222,"name":"SafeERC20FailedOperation","nameLocation":"850:24:11","nodeType":"ErrorDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"token","nameLocation":"883:5:11","nodeType":"VariableDeclaration","scope":1222,"src":"875:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:11"},"src":"844:46:11"},{"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"896:71:11","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1231,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:11","nodeType":"ErrorDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"spender","nameLocation":"1019:7:11","nodeType":"VariableDeclaration","scope":1231,"src":"1011:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:11","nodeType":"VariableDeclaration","scope":1231,"src":"1028:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:11","nodeType":"VariableDeclaration","scope":1231,"src":"1054:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:11"},"src":"972:109:11"},{"body":{"id":1254,"nodeType":"Block","src":"1343:88:11","statements":[{"expression":{"arguments":[{"id":1243,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1373:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1395:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"1395:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1412:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"1416:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1244,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1242,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1353:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"1353:71:11"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1087:179:11","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:11","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"token","nameLocation":"1300:5:11","nodeType":"VariableDeclaration","scope":1255,"src":"1293:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1234,"nodeType":"UserDefinedTypeName","pathNode":{"id":1233,"name":"IERC20","nameLocations":["1293:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1293:6:11"},"referencedDeclaration":992,"src":"1293:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"to","nameLocation":"1315:2:11","nodeType":"VariableDeclaration","scope":1255,"src":"1307:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"1327:5:11","nodeType":"VariableDeclaration","scope":1255,"src":"1319:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:11"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[],"src":"1343:0:11"},"scope":1619,"src":"1271:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1281,"nodeType":"Block","src":"1760:98:11","statements":[{"expression":{"arguments":[{"id":1269,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1790:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1272,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1812:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"1812:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1274,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"1833:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1839:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1843:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1268,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1770:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"ExpressionStatement","src":"1770:81:11"}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1437:228:11","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:11","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"token","nameLocation":"1703:5:11","nodeType":"VariableDeclaration","scope":1282,"src":"1696:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"IERC20","nameLocations":["1696:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1696:6:11"},"referencedDeclaration":992,"src":"1696:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"from","nameLocation":"1718:4:11","nodeType":"VariableDeclaration","scope":1282,"src":"1710:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"to","nameLocation":"1732:2:11","nodeType":"VariableDeclaration","scope":1282,"src":"1724:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"value","nameLocation":"1744:5:11","nodeType":"VariableDeclaration","scope":1282,"src":"1736:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:11"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"1760:0:11"},"scope":1619,"src":"1670:188:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"2600:139:11","statements":[{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:11","nodeType":"VariableDeclaration","scope":1312,"src":"2610:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1303,"initialValue":{"arguments":[{"arguments":[{"id":1299,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1619","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1619","typeString":"library SafeERC20"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:11","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"2664:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1295,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2633:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"2633:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:11"},{"expression":{"arguments":[{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2695:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"2702:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1307,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"2711:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"2726:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2682:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"2682:50:11"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1864:645:11","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:11","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"token","nameLocation":"2552:5:11","nodeType":"VariableDeclaration","scope":1313,"src":"2545:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1285,"nodeType":"UserDefinedTypeName","pathNode":{"id":1284,"name":"IERC20","nameLocations":["2545:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2545:6:11"},"referencedDeclaration":992,"src":"2545:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"spender","nameLocation":"2567:7:11","nodeType":"VariableDeclaration","scope":1313,"src":"2559:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"value","nameLocation":"2584:5:11","nodeType":"VariableDeclaration","scope":1313,"src":"2576:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:11"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"2600:0:11"},"scope":1619,"src":"2514:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"3505:370:11","statements":[{"id":1354,"nodeType":"UncheckedBlock","src":"3515:354:11","statements":[{"assignments":[1325],"declarations":[{"constant":false,"id":1325,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:11","nodeType":"VariableDeclaration","scope":1354,"src":"3539:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"arguments":[{"id":1330,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1619","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1619","typeString":"library SafeERC20"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:11","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3597:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1326,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3566:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"3566:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"3623:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1336,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3642:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"nodeType":"IfStatement","src":"3619:160:11","trueBody":{"id":1344,"nodeType":"Block","src":"3661:118:11","statements":[{"errorCall":{"arguments":[{"id":1339,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3719:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1340,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"3728:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1341,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3746:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1338,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3686:32:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1343,"nodeType":"RevertStatement","src":"3679:85:11"}]}},{"expression":{"arguments":[{"id":1347,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3805:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3812:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"3821:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1350,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3840:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1346,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"3792:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"3792:66:11"}]}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2745:657:11","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:11","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"token","nameLocation":"3445:5:11","nodeType":"VariableDeclaration","scope":1356,"src":"3438:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"IERC20","nameLocations":["3438:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"3438:6:11"},"referencedDeclaration":992,"src":"3438:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"spender","nameLocation":"3460:7:11","nodeType":"VariableDeclaration","scope":1356,"src":"3452:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:11","nodeType":"VariableDeclaration","scope":1356,"src":"3469:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:11"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"3505:0:11"},"scope":1619,"src":"3407:468:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1402,"nodeType":"Block","src":"4529:303:11","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:11","nodeType":"VariableDeclaration","scope":1402,"src":"4539:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"expression":{"id":1371,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4582:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"4582:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"4598:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"4607:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:11"},{"condition":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:11","subExpression":{"arguments":[{"id":1379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4654:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1380,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"4661:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1378,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4630:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"4625:201:11","trueBody":{"id":1400,"nodeType":"Block","src":"4676:150:11","statements":[{"expression":{"arguments":[{"id":1384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4710:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1387,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4732:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"4732:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1389,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"4748:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1385,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1383,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4690:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"ExpressionStatement","src":"4690:71:11"},{"expression":{"arguments":[{"id":1396,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4795:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1397,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"4802:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1395,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4775:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"4775:40:11"}]}}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"3881:566:11","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:11","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"token","nameLocation":"4481:5:11","nodeType":"VariableDeclaration","scope":1403,"src":"4474:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1359,"nodeType":"UserDefinedTypeName","pathNode":{"id":1358,"name":"IERC20","nameLocations":["4474:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"4474:6:11"},"referencedDeclaration":992,"src":"4474:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"spender","nameLocation":"4496:7:11","nodeType":"VariableDeclaration","scope":1403,"src":"4488:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"value","nameLocation":"4513:5:11","nodeType":"VariableDeclaration","scope":1403,"src":"4505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:11"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"4529:0:11"},"scope":1619,"src":"4452:380:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"5279:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1416,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5293:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:11","memberName":"code","nodeType":"MemberAccess","src":"5293:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:11","memberName":"length","nodeType":"MemberAccess","src":"5293:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:11","subExpression":{"arguments":[{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5402:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5406:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1432,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5413:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1428,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5380:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:11","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"5380:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1443,"nodeType":"IfStatement","src":"5375:117:11","trueBody":{"id":1442,"nodeType":"Block","src":"5420:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1438,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5474:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:11","typeDescriptions":{}}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1435,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"5441:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1441,"nodeType":"RevertStatement","src":"5434:47:11"}]}},"id":1444,"nodeType":"IfStatement","src":"5289:203:11","trueBody":{"id":1427,"nodeType":"Block","src":"5314:55:11","statements":[{"expression":{"arguments":[{"id":1422,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"5341:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1423,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"5348:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5352:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5328:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"5328:30:11"}]}}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"4838:333:11","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:11","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"token","nameLocation":"5217:5:11","nodeType":"VariableDeclaration","scope":1446,"src":"5208:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"IERC1363","nameLocations":["5208:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5208:8:11"},"referencedDeclaration":229,"src":"5208:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"to","nameLocation":"5232:2:11","nodeType":"VariableDeclaration","scope":1446,"src":"5224:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"value","nameLocation":"5244:5:11","nodeType":"VariableDeclaration","scope":1446,"src":"5236:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"data","nameLocation":"5264:4:11","nodeType":"VariableDeclaration","scope":1446,"src":"5251:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1412,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:11"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"5279:0:11"},"scope":1619,"src":"5176:322:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"6017:239:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6031:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:11","memberName":"code","nodeType":"MemberAccess","src":"6031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:11","memberName":"length","nodeType":"MemberAccess","src":"6031:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:11","subExpression":{"arguments":[{"id":1476,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6154:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6160:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6164:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6171:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1474,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"6128:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:11","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6128:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1490,"nodeType":"IfStatement","src":"6123:127:11","trueBody":{"id":1489,"nodeType":"Block","src":"6178:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1485,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"6232:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:11","typeDescriptions":{}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1482,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"6199:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1488,"nodeType":"RevertStatement","src":"6192:47:11"}]}},"id":1491,"nodeType":"IfStatement","src":"6027:223:11","trueBody":{"id":1473,"nodeType":"Block","src":"6052:65:11","statements":[{"expression":{"arguments":[{"id":1467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"6083:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6090:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6096:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6100:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6066:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1472,"nodeType":"ExpressionStatement","src":"6066:40:11"}]}}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"5504:341:11","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:11","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"token","nameLocation":"5904:5:11","nodeType":"VariableDeclaration","scope":1493,"src":"5895:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1449,"nodeType":"UserDefinedTypeName","pathNode":{"id":1448,"name":"IERC1363","nameLocations":["5895:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5895:8:11"},"referencedDeclaration":229,"src":"5895:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"from","nameLocation":"5927:4:11","nodeType":"VariableDeclaration","scope":1493,"src":"5919:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"to","nameLocation":"5949:2:11","nodeType":"VariableDeclaration","scope":1493,"src":"5941:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"value","nameLocation":"5969:5:11","nodeType":"VariableDeclaration","scope":1493,"src":"5961:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"data","nameLocation":"5997:4:11","nodeType":"VariableDeclaration","scope":1493,"src":"5984:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:11"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"6017:0:11"},"scope":1619,"src":"5850:406:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"7023:218:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7037:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:11","memberName":"code","nodeType":"MemberAccess","src":"7037:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:11","memberName":"length","nodeType":"MemberAccess","src":"7037:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:11","subExpression":{"arguments":[{"id":1520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7145:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7149:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"7156:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7124:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:11","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7124:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"7119:116:11","trueBody":{"id":1532,"nodeType":"Block","src":"7163:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7217:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:11","typeDescriptions":{}}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1525,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"7184:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1531,"nodeType":"RevertStatement","src":"7177:47:11"}]}},"id":1534,"nodeType":"IfStatement","src":"7033:202:11","trueBody":{"id":1517,"nodeType":"Block","src":"7058:55:11","statements":[{"expression":{"arguments":[{"id":1512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7085:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7092:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7096:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7072:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"7072:30:11"}]}}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"6262:654:11","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:11","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"token","nameLocation":"6961:5:11","nodeType":"VariableDeclaration","scope":1536,"src":"6952:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1496,"nodeType":"UserDefinedTypeName","pathNode":{"id":1495,"name":"IERC1363","nameLocations":["6952:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6952:8:11"},"referencedDeclaration":229,"src":"6952:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"to","nameLocation":"6976:2:11","nodeType":"VariableDeclaration","scope":1536,"src":"6968:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"value","nameLocation":"6988:5:11","nodeType":"VariableDeclaration","scope":1536,"src":"6980:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nameLocation":"7008:4:11","nodeType":"VariableDeclaration","scope":1536,"src":"6995:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:11"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"7023:0:11"},"scope":1619,"src":"6921:320:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"7808:650:11","statements":[{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:11","nodeType":"VariableDeclaration","scope":1576,"src":"7818:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1547,"nodeType":"VariableDeclarationStatement","src":"7818:18:11"},{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:11","nodeType":"VariableDeclaration","scope":1576,"src":"7846:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1550,"nodeType":"VariableDeclarationStatement","src":"7846:19:11"},{"AST":{"nativeSrc":"7900:396:11","nodeType":"YulBlock","src":"7900:396:11","statements":[{"nativeSrc":"7914:75:11","nodeType":"YulVariableDeclaration","src":"7914:75:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:11","nodeType":"YulIdentifier","src":"7934:3:11"},"nativeSrc":"7934:5:11","nodeType":"YulFunctionCall","src":"7934:5:11"},{"name":"token","nativeSrc":"7941:5:11","nodeType":"YulIdentifier","src":"7941:5:11"},{"kind":"number","nativeSrc":"7948:1:11","nodeType":"YulLiteral","src":"7948:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:11","nodeType":"YulIdentifier","src":"7955:4:11"},{"kind":"number","nativeSrc":"7961:4:11","nodeType":"YulLiteral","src":"7961:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:11","nodeType":"YulIdentifier","src":"7951:3:11"},"nativeSrc":"7951:15:11","nodeType":"YulFunctionCall","src":"7951:15:11"},{"arguments":[{"name":"data","nativeSrc":"7974:4:11","nodeType":"YulIdentifier","src":"7974:4:11"}],"functionName":{"name":"mload","nativeSrc":"7968:5:11","nodeType":"YulIdentifier","src":"7968:5:11"},"nativeSrc":"7968:11:11","nodeType":"YulFunctionCall","src":"7968:11:11"},{"kind":"number","nativeSrc":"7981:1:11","nodeType":"YulLiteral","src":"7981:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:11","nodeType":"YulLiteral","src":"7984:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:11","nodeType":"YulIdentifier","src":"7929:4:11"},"nativeSrc":"7929:60:11","nodeType":"YulFunctionCall","src":"7929:60:11"},"variables":[{"name":"success","nativeSrc":"7918:7:11","nodeType":"YulTypedName","src":"7918:7:11","type":""}]},{"body":{"nativeSrc":"8050:157:11","nodeType":"YulBlock","src":"8050:157:11","statements":[{"nativeSrc":"8068:22:11","nodeType":"YulVariableDeclaration","src":"8068:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:11","nodeType":"YulLiteral","src":"8085:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:11","nodeType":"YulIdentifier","src":"8079:5:11"},"nativeSrc":"8079:11:11","nodeType":"YulFunctionCall","src":"8079:11:11"},"variables":[{"name":"ptr","nativeSrc":"8072:3:11","nodeType":"YulTypedName","src":"8072:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:11","nodeType":"YulIdentifier","src":"8122:3:11"},{"kind":"number","nativeSrc":"8127:1:11","nodeType":"YulLiteral","src":"8127:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:11","nodeType":"YulIdentifier","src":"8130:14:11"},"nativeSrc":"8130:16:11","nodeType":"YulFunctionCall","src":"8130:16:11"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:11","nodeType":"YulIdentifier","src":"8107:14:11"},"nativeSrc":"8107:40:11","nodeType":"YulFunctionCall","src":"8107:40:11"},"nativeSrc":"8107:40:11","nodeType":"YulExpressionStatement","src":"8107:40:11"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:11","nodeType":"YulIdentifier","src":"8171:3:11"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:11","nodeType":"YulIdentifier","src":"8176:14:11"},"nativeSrc":"8176:16:11","nodeType":"YulFunctionCall","src":"8176:16:11"}],"functionName":{"name":"revert","nativeSrc":"8164:6:11","nodeType":"YulIdentifier","src":"8164:6:11"},"nativeSrc":"8164:29:11","nodeType":"YulFunctionCall","src":"8164:29:11"},"nativeSrc":"8164:29:11","nodeType":"YulExpressionStatement","src":"8164:29:11"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:11","nodeType":"YulIdentifier","src":"8041:7:11"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:11","nodeType":"YulIdentifier","src":"8034:6:11"},"nativeSrc":"8034:15:11","nodeType":"YulFunctionCall","src":"8034:15:11"},"nativeSrc":"8031:176:11","nodeType":"YulIf","src":"8031:176:11"},{"nativeSrc":"8220:30:11","nodeType":"YulAssignment","src":"8220:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:11","nodeType":"YulIdentifier","src":"8234:14:11"},"nativeSrc":"8234:16:11","nodeType":"YulFunctionCall","src":"8234:16:11"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:11","nodeType":"YulIdentifier","src":"8220:10:11"}]},{"nativeSrc":"8263:23:11","nodeType":"YulAssignment","src":"8263:23:11","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:11","nodeType":"YulLiteral","src":"8284:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:11","nodeType":"YulIdentifier","src":"8278:5:11"},"nativeSrc":"8278:8:11","nodeType":"YulFunctionCall","src":"8278:8:11"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:11","nodeType":"YulIdentifier","src":"8263:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1542,"isOffset":false,"isSlot":false,"src":"7955:4:11","valueSize":1},{"declaration":1542,"isOffset":false,"isSlot":false,"src":"7974:4:11","valueSize":1},{"declaration":1546,"isOffset":false,"isSlot":false,"src":"8220:10:11","valueSize":1},{"declaration":1549,"isOffset":false,"isSlot":false,"src":"8263:11:11","valueSize":1},{"declaration":1540,"isOffset":false,"isSlot":false,"src":"7941:5:11","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"7875:421:11"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"8310:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"8362:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1557,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"8336:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:11","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:11","memberName":"code","nodeType":"MemberAccess","src":"8328:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:11","memberName":"length","nodeType":"MemberAccess","src":"8328:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1575,"nodeType":"IfStatement","src":"8306:146:11","trueBody":{"id":1574,"nodeType":"Block","src":"8380:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"8434:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:11","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1567,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8401:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1573,"nodeType":"RevertStatement","src":"8394:47:11"}]}}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"7247:486:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:11","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"token","nameLocation":"7774:5:11","nodeType":"VariableDeclaration","scope":1577,"src":"7767:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1539,"nodeType":"UserDefinedTypeName","pathNode":{"id":1538,"name":"IERC20","nameLocations":["7767:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"7767:6:11"},"referencedDeclaration":992,"src":"7767:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"data","nameLocation":"7794:4:11","nodeType":"VariableDeclaration","scope":1577,"src":"7781:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1541,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:11"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"7808:0:11"},"scope":1619,"src":"7738:720:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1617,"nodeType":"Block","src":"9049:391:11","statements":[{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"success","nameLocation":"9064:7:11","nodeType":"VariableDeclaration","scope":1617,"src":"9059:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1588,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1590,"nodeType":"VariableDeclarationStatement","src":"9059:12:11"},{"assignments":[1592],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:11","nodeType":"VariableDeclaration","scope":1617,"src":"9081:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"nodeType":"VariableDeclarationStatement","src":"9081:18:11"},{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:11","nodeType":"VariableDeclaration","scope":1617,"src":"9109:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1596,"nodeType":"VariableDeclarationStatement","src":"9109:19:11"},{"AST":{"nativeSrc":"9163:174:11","nodeType":"YulBlock","src":"9163:174:11","statements":[{"nativeSrc":"9177:71:11","nodeType":"YulAssignment","src":"9177:71:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:11","nodeType":"YulIdentifier","src":"9193:3:11"},"nativeSrc":"9193:5:11","nodeType":"YulFunctionCall","src":"9193:5:11"},{"name":"token","nativeSrc":"9200:5:11","nodeType":"YulIdentifier","src":"9200:5:11"},{"kind":"number","nativeSrc":"9207:1:11","nodeType":"YulLiteral","src":"9207:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:11","nodeType":"YulIdentifier","src":"9214:4:11"},{"kind":"number","nativeSrc":"9220:4:11","nodeType":"YulLiteral","src":"9220:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:11","nodeType":"YulIdentifier","src":"9210:3:11"},"nativeSrc":"9210:15:11","nodeType":"YulFunctionCall","src":"9210:15:11"},{"arguments":[{"name":"data","nativeSrc":"9233:4:11","nodeType":"YulIdentifier","src":"9233:4:11"}],"functionName":{"name":"mload","nativeSrc":"9227:5:11","nodeType":"YulIdentifier","src":"9227:5:11"},"nativeSrc":"9227:11:11","nodeType":"YulFunctionCall","src":"9227:11:11"},{"kind":"number","nativeSrc":"9240:1:11","nodeType":"YulLiteral","src":"9240:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:11","nodeType":"YulLiteral","src":"9243:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:11","nodeType":"YulIdentifier","src":"9188:4:11"},"nativeSrc":"9188:60:11","nodeType":"YulFunctionCall","src":"9188:60:11"},"variableNames":[{"name":"success","nativeSrc":"9177:7:11","nodeType":"YulIdentifier","src":"9177:7:11"}]},{"nativeSrc":"9261:30:11","nodeType":"YulAssignment","src":"9261:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:11","nodeType":"YulIdentifier","src":"9275:14:11"},"nativeSrc":"9275:16:11","nodeType":"YulFunctionCall","src":"9275:16:11"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:11","nodeType":"YulIdentifier","src":"9261:10:11"}]},{"nativeSrc":"9304:23:11","nodeType":"YulAssignment","src":"9304:23:11","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:11","nodeType":"YulLiteral","src":"9325:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:11","nodeType":"YulIdentifier","src":"9319:5:11"},"nativeSrc":"9319:8:11","nodeType":"YulFunctionCall","src":"9319:8:11"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:11","nodeType":"YulIdentifier","src":"9304:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1583,"isOffset":false,"isSlot":false,"src":"9214:4:11","valueSize":1},{"declaration":1583,"isOffset":false,"isSlot":false,"src":"9233:4:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"9261:10:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"9304:11:11","valueSize":1},{"declaration":1589,"isOffset":false,"isSlot":false,"src":"9177:7:11","valueSize":1},{"declaration":1581,"isOffset":false,"isSlot":false,"src":"9200:5:11","valueSize":1}],"flags":["memory-safe"],"id":1597,"nodeType":"InlineAssembly","src":"9138:199:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"9353:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"9365:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9416:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1604,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9391:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:11","typeDescriptions":{}}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:11","memberName":"code","nodeType":"MemberAccess","src":"9383:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:11","memberName":"length","nodeType":"MemberAccess","src":"9383:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1587,"id":1616,"nodeType":"Return","src":"9346:87:11"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"8464:491:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:11","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"token","nameLocation":"9000:5:11","nodeType":"VariableDeclaration","scope":1618,"src":"8993:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"IERC20","nameLocations":["8993:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"8993:6:11"},"referencedDeclaration":992,"src":"8993:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"data","nameLocation":"9020:4:11","nodeType":"VariableDeclaration","scope":1618,"src":"9007:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:11"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"9043:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:11"},"scope":1619,"src":"8960:480:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1620,"src":"750:8692:11","usedErrors":[1222,1231],"usedEvents":[]}],"src":"115:9328:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1878],"Errors":[1930]},"id":1879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1621,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":1623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1879,"sourceUnit":1931,"src":"127:36:12","symbolAliases":[{"foreign":{"id":1622,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"135:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"165:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1878,"linearizedBaseContracts":[1878],"name":"Address","nameLocation":"241:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"255:75:12","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1629,"name":"AddressEmptyCode","nameLocation":"341:16:12","nodeType":"ErrorDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"target","nameLocation":"366:6:12","nodeType":"VariableDeclaration","scope":1629,"src":"358:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:12"},"src":"335:39:12"},{"body":{"id":1675,"nodeType":"Block","src":"1361:278:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1639,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:12","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1399:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1656,"nodeType":"IfStatement","src":"1371:125:12","trueBody":{"id":1655,"nodeType":"Block","src":"1407:89:12","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1649,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}],"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:12","typeDescriptions":{}}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:12","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1652,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1478:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1644,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1428:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1930_$","typeString":"type(library Errors)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:12","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"1428:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1654,"nodeType":"RevertStatement","src":"1421:64:12"}]}},{"assignments":[1658,null],"declarations":[{"constant":false,"id":1658,"mutability":"mutable","name":"success","nameLocation":"1512:7:12","nodeType":"VariableDeclaration","scope":1675,"src":"1507:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1665,"initialValue":{"arguments":[{"hexValue":"","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1659,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1525:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:12","memberName":"call","nodeType":"MemberAccess","src":"1525:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1547:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:12"},{"condition":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:12","subExpression":{"id":1666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"1573:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1674,"nodeType":"IfStatement","src":"1568:65:12","trueBody":{"id":1673,"nodeType":"Block","src":"1582:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1668,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1603:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1930_$","typeString":"type(library Errors)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:12","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1921,"src":"1603:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1672,"nodeType":"RevertStatement","src":"1596:26:12"}]}}]},"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"380:905:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:12","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:12","nodeType":"VariableDeclaration","scope":1676,"src":"1309:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"amount","nameLocation":"1344:6:12","nodeType":"VariableDeclaration","scope":1676,"src":"1336:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:12"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"1361:0:12"},"scope":1878,"src":"1290:349:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"2573:62:12","statements":[{"expression":{"arguments":[{"id":1687,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"2612:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2620:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1686,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"2590:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1685,"id":1691,"nodeType":"Return","src":"2583:45:12"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"1645:834:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:12","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"target","nameLocation":"2514:6:12","nodeType":"VariableDeclaration","scope":1693,"src":"2506:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"data","nameLocation":"2535:4:12","nodeType":"VariableDeclaration","scope":1693,"src":"2522:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:12"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"2559:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:12"},"scope":1878,"src":"2484:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"3072:294:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1705,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:12","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3110:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1724,"nodeType":"IfStatement","src":"3082:123:12","trueBody":{"id":1723,"nodeType":"Block","src":"3117:88:12","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1717,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1878","typeString":"library Address"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:12","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:12","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3188:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1712,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3138:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1930_$","typeString":"type(library Errors)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:12","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"3138:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1722,"nodeType":"RevertStatement","src":"3131:63:12"}]}},{"assignments":[1726,1728],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"success","nameLocation":"3220:7:12","nodeType":"VariableDeclaration","scope":1742,"src":"3215:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:12","nodeType":"VariableDeclaration","scope":1742,"src":"3229:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1735,"initialValue":{"arguments":[{"id":1733,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3282:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3256:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:12","memberName":"call","nodeType":"MemberAccess","src":"3256:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3275:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:12"},{"expression":{"arguments":[{"id":1737,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"3331:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3339:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1739,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3348:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1736,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"3304:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1704,"id":1741,"nodeType":"Return","src":"3297:62:12"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"2641:313:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:12","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"target","nameLocation":"2998:6:12","nodeType":"VariableDeclaration","scope":1743,"src":"2990:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"data","nameLocation":"3019:4:12","nodeType":"VariableDeclaration","scope":1743,"src":"3006:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1697,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"value","nameLocation":"3033:5:12","nodeType":"VariableDeclaration","scope":1743,"src":"3025:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:12"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"3058:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1702,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:12"},"scope":1878,"src":"2959:407:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"3605:154:12","statements":[{"assignments":[1754,1756],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"success","nameLocation":"3621:7:12","nodeType":"VariableDeclaration","scope":1768,"src":"3616:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:12","nodeType":"VariableDeclaration","scope":1768,"src":"3630:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1755,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1761,"initialValue":{"arguments":[{"id":1759,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3675:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1757,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3657:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:12","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:12"},{"expression":{"arguments":[{"id":1763,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3724:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3732:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1765,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3741:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1762,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"3697:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1752,"id":1767,"nodeType":"Return","src":"3690:62:12"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"3372:128:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1769,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:12","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"target","nameLocation":"3541:6:12","nodeType":"VariableDeclaration","scope":1769,"src":"3533:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"data","nameLocation":"3562:4:12","nodeType":"VariableDeclaration","scope":1769,"src":"3549:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:12"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1769,"src":"3591:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1750,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:12"},"scope":1878,"src":"3505:254:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"3997:156:12","statements":[{"assignments":[1780,1782],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"success","nameLocation":"4013:7:12","nodeType":"VariableDeclaration","scope":1794,"src":"4008:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1779,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:12","nodeType":"VariableDeclaration","scope":1794,"src":"4022:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1787,"initialValue":{"arguments":[{"id":1785,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4069:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1783,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4049:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:12","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:12"},{"expression":{"arguments":[{"id":1789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4118:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"4126:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1791,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4135:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1788,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4091:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1778,"id":1793,"nodeType":"Return","src":"4084:62:12"}]},"documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"3765:130:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:12","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"target","nameLocation":"3938:6:12","nodeType":"VariableDeclaration","scope":1795,"src":"3930:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"data","nameLocation":"3959:4:12","nodeType":"VariableDeclaration","scope":1795,"src":"3946:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:12"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"3983:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:12"},"scope":1878,"src":"3900:253:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"4579:424:12","statements":[{"condition":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:12","subExpression":{"id":1807,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"4594:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1832,"nodeType":"Block","src":"4653:344:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1814,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4841:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:12","memberName":"length","nodeType":"MemberAccess","src":"4841:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1818,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4867:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:12","memberName":"code","nodeType":"MemberAccess","src":"4867:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:12","memberName":"length","nodeType":"MemberAccess","src":"4867:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1829,"nodeType":"IfStatement","src":"4837:119:12","trueBody":{"id":1828,"nodeType":"Block","src":"4892:64:12","statements":[{"errorCall":{"arguments":[{"id":1825,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4934:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1824,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"4917:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1827,"nodeType":"RevertStatement","src":"4910:31:12"}]}},{"expression":{"id":1830,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4976:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1806,"id":1831,"nodeType":"Return","src":"4969:17:12"}]},"id":1833,"nodeType":"IfStatement","src":"4589:408:12","trueBody":{"id":1813,"nodeType":"Block","src":"4603:44:12","statements":[{"expression":{"arguments":[{"id":1810,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4625:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1809,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4617:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"4617:19:12"}]}}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"4159:257:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:12","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"target","nameLocation":"4474:6:12","nodeType":"VariableDeclaration","scope":1835,"src":"4466:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"success","nameLocation":"4495:7:12","nodeType":"VariableDeclaration","scope":1835,"src":"4490:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1799,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:12","nodeType":"VariableDeclaration","scope":1835,"src":"4512:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1801,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:12"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"4565:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:12"},"scope":1878,"src":"4421:582:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"5307:122:12","statements":[{"condition":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:12","subExpression":{"id":1845,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5322:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1854,"nodeType":"Block","src":"5381:42:12","statements":[{"expression":{"id":1852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5402:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1844,"id":1853,"nodeType":"Return","src":"5395:17:12"}]},"id":1855,"nodeType":"IfStatement","src":"5317:106:12","trueBody":{"id":1851,"nodeType":"Block","src":"5331:44:12","statements":[{"expression":{"arguments":[{"id":1848,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5353:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1847,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"5345:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"5345:19:12"}]}}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"5009:191:12","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:12","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"success","nameLocation":"5236:7:12","nodeType":"VariableDeclaration","scope":1857,"src":"5231:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1837,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:12","nodeType":"VariableDeclaration","scope":1857,"src":"5245:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1839,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:12"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"5293:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1842,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:12"},"scope":1878,"src":"5205:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"5598:432:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1863,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"5674:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:12","memberName":"length","nodeType":"MemberAccess","src":"5674:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1874,"nodeType":"Block","src":"5973:51:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1869,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5994:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1930_$","typeString":"type(library Errors)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:12","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1921,"src":"5994:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1873,"nodeType":"RevertStatement","src":"5987:26:12"}]},"id":1875,"nodeType":"IfStatement","src":"5670:354:12","trueBody":{"id":1868,"nodeType":"Block","src":"5697:270:12","statements":[{"AST":{"nativeSrc":"5824:133:12","nodeType":"YulBlock","src":"5824:133:12","statements":[{"nativeSrc":"5842:40:12","nodeType":"YulVariableDeclaration","src":"5842:40:12","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:12","nodeType":"YulIdentifier","src":"5871:10:12"}],"functionName":{"name":"mload","nativeSrc":"5865:5:12","nodeType":"YulIdentifier","src":"5865:5:12"},"nativeSrc":"5865:17:12","nodeType":"YulFunctionCall","src":"5865:17:12"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:12","nodeType":"YulTypedName","src":"5846:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:12","nodeType":"YulLiteral","src":"5910:2:12","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:12","nodeType":"YulIdentifier","src":"5914:10:12"}],"functionName":{"name":"add","nativeSrc":"5906:3:12","nodeType":"YulIdentifier","src":"5906:3:12"},"nativeSrc":"5906:19:12","nodeType":"YulFunctionCall","src":"5906:19:12"},{"name":"returndata_size","nativeSrc":"5927:15:12","nodeType":"YulIdentifier","src":"5927:15:12"}],"functionName":{"name":"revert","nativeSrc":"5899:6:12","nodeType":"YulIdentifier","src":"5899:6:12"},"nativeSrc":"5899:44:12","nodeType":"YulFunctionCall","src":"5899:44:12"},"nativeSrc":"5899:44:12","nodeType":"YulExpressionStatement","src":"5899:44:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1860,"isOffset":false,"isSlot":false,"src":"5871:10:12","valueSize":1},{"declaration":1860,"isOffset":false,"isSlot":false,"src":"5914:10:12","valueSize":1}],"flags":["memory-safe"],"id":1867,"nodeType":"InlineAssembly","src":"5799:158:12"}]}}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"5435:103:12","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:12","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:12","nodeType":"VariableDeclaration","scope":1877,"src":"5560:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:12"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"5598:0:12"},"scope":1878,"src":"5543:487:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1879,"src":"233:5799:12","usedErrors":[1629],"usedEvents":[]}],"src":"101:5932:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1908]},"id":1909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1880,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1908,"linearizedBaseContracts":[1908],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1889,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1885,"id":1888,"nodeType":"Return","src":"728:17:13"}]},"id":1890,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1890,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1908,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1894,"id":1897,"nodeType":"Return","src":"835:15:13"}]},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1908,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1906,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1903,"id":1905,"nodeType":"Return","src":"945:8:13"}]},"id":1907,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1907,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1908,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1909,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1930]},"id":1931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1910,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"126:284:14","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1930,"linearizedBaseContracts":[1930],"name":"Errors","nameLocation":"419:6:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"432:94:14","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1918,"name":"InsufficientBalance","nameLocation":"537:19:14","nodeType":"ErrorDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"balance","nameLocation":"565:7:14","nodeType":"VariableDeclaration","scope":1918,"src":"557:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"needed","nameLocation":"582:6:14","nodeType":"VariableDeclaration","scope":1918,"src":"574:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:14"},"src":"531:59:14"},{"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"596:89:14","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1921,"name":"FailedCall","nameLocation":"696:10:14","nodeType":"ErrorDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"706:2:14"},"src":"690:19:14"},{"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"715:46:14","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1924,"name":"FailedDeployment","nameLocation":"772:16:14","nodeType":"ErrorDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[],"src":"788:2:14"},"src":"766:25:14"},{"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"797:58:14","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1929,"name":"MissingPrecompile","nameLocation":"866:17:14","nodeType":"ErrorDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"884:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:14"},"src":"860:33:14"}],"scope":1931,"src":"411:484:14","usedErrors":[1918,1921,1924,1929],"usedEvents":[]}],"src":"100:796:14"},"id":14},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1998]},"id":1999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1932,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"125:83:15","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1998,"linearizedBaseContracts":[1998],"name":"Nonces","nameLocation":"227:6:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"240:90:15","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1940,"name":"InvalidAccountNonce","nameLocation":"341:19:15","nodeType":"ErrorDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"account","nameLocation":"369:7:15","nodeType":"VariableDeclaration","scope":1940,"src":"361:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:15","nodeType":"VariableDeclaration","scope":1940,"src":"378:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:15"},"src":"335:65:15"},{"constant":false,"id":1944,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:15","nodeType":"VariableDeclaration","scope":1998,"src":"406:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1943,"keyName":"account","keyNameLocation":"422:7:15","keyType":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1956,"nodeType":"Block","src":"607:38:15","statements":[{"expression":{"baseExpression":{"id":1952,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"624:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1954,"indexExpression":{"id":1953,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"632:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1951,"id":1955,"nodeType":"Return","src":"617:21:15"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"464:69:15","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:15","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"owner","nameLocation":"562:5:15","nodeType":"VariableDeclaration","scope":1957,"src":"554:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:15"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"598:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:15"},"scope":1998,"src":"538:107:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1971,"nodeType":"Block","src":"828:326:15","statements":[{"id":1970,"nodeType":"UncheckedBlock","src":"1031:117:15","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:15","subExpression":{"baseExpression":{"id":1965,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"1121:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1967,"indexExpression":{"id":1966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1129:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1964,"id":1969,"nodeType":"Return","src":"1114:23:15"}]}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"651:103:15","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:15","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"owner","nameLocation":"786:5:15","nodeType":"VariableDeclaration","scope":1972,"src":"778:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:15"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"819:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:15"},"scope":1998,"src":"759:395:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"1338:149:15","statements":[{"assignments":[1981],"declarations":[{"constant":false,"id":1981,"mutability":"mutable","name":"current","nameLocation":"1356:7:15","nodeType":"VariableDeclaration","scope":1996,"src":"1348:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1985,"initialValue":{"arguments":[{"id":1983,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"1376:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1982,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"1366:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1396:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1987,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"1405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"1392:89:15","trueBody":{"id":1994,"nodeType":"Block","src":"1414:67:15","statements":[{"errorCall":{"arguments":[{"id":1990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"1455:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1989,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1435:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1993,"nodeType":"RevertStatement","src":"1428:42:15"}]}}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"1160:100:15","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:15","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"owner","nameLocation":"1299:5:15","nodeType":"VariableDeclaration","scope":1997,"src":"1291:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:15","nodeType":"VariableDeclaration","scope":1997,"src":"1306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:15"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"1338:0:15"},"scope":1998,"src":"1265:222:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1999,"src":"209:1280:15","usedErrors":[1940],"usedEvents":[]}],"src":"99:1391:15"},"id":15},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2050]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2000,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"125:489:16","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2050,"linearizedBaseContracts":[2050],"name":"Panic","nameLocation":"665:5:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"677:36:16","text":"@dev generic / unspecified error"},"id":2005,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:16","nodeType":"VariableDeclaration","scope":2050,"src":"718:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"764:37:16","text":"@dev used by the assert() builtin"},"id":2009,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:16","nodeType":"VariableDeclaration","scope":2050,"src":"806:39:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"851:41:16","text":"@dev arithmetic underflow or overflow"},"id":2013,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:16","nodeType":"VariableDeclaration","scope":2050,"src":"897:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:16","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"950:35:16","text":"@dev division or modulo by zero"},"id":2017,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:16","nodeType":"VariableDeclaration","scope":2050,"src":"990:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"1045:30:16","text":"@dev enum conversion error"},"id":2021,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:16","nodeType":"VariableDeclaration","scope":2050,"src":"1080:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:16","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"1140:36:16","text":"@dev invalid encoding in storage"},"id":2025,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:16","nodeType":"VariableDeclaration","scope":2050,"src":"1181:55:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"1242:24:16","text":"@dev empty array pop"},"id":2029,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:16","nodeType":"VariableDeclaration","scope":2050,"src":"1271:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:16","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"1325:35:16","text":"@dev array out of bounds access"},"id":2033,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:16","nodeType":"VariableDeclaration","scope":2050,"src":"1365:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"1423:65:16","text":"@dev resource error (too large allocation or too large array)"},"id":2037,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:16","nodeType":"VariableDeclaration","scope":2050,"src":"1493:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"1546:42:16","text":"@dev calling invalid internal function"},"id":2041,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:16","nodeType":"VariableDeclaration","scope":2050,"src":"1593:58:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:16","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"1819:151:16","statements":[{"AST":{"nativeSrc":"1854:110:16","nodeType":"YulBlock","src":"1854:110:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:16","nodeType":"YulLiteral","src":"1875:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:16","nodeType":"YulLiteral","src":"1881:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:16","nodeType":"YulIdentifier","src":"1868:6:16"},"nativeSrc":"1868:24:16","nodeType":"YulFunctionCall","src":"1868:24:16"},"nativeSrc":"1868:24:16","nodeType":"YulExpressionStatement","src":"1868:24:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:16","nodeType":"YulLiteral","src":"1912:4:16","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:16","nodeType":"YulIdentifier","src":"1918:4:16"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:16","nodeType":"YulIdentifier","src":"1905:6:16"},"nativeSrc":"1905:18:16","nodeType":"YulFunctionCall","src":"1905:18:16"},"nativeSrc":"1905:18:16","nodeType":"YulExpressionStatement","src":"1905:18:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:16","nodeType":"YulLiteral","src":"1943:4:16","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:16","nodeType":"YulLiteral","src":"1949:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:16","nodeType":"YulIdentifier","src":"1936:6:16"},"nativeSrc":"1936:18:16","nodeType":"YulFunctionCall","src":"1936:18:16"},"nativeSrc":"1936:18:16","nodeType":"YulExpressionStatement","src":"1936:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2044,"isOffset":false,"isSlot":false,"src":"1918:4:16","valueSize":1}],"flags":["memory-safe"],"id":2047,"nodeType":"InlineAssembly","src":"1829:135:16"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"1658:113:16","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:16","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"code","nameLocation":"1799:4:16","nodeType":"VariableDeclaration","scope":2049,"src":"1791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:16"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[],"src":"1819:0:16"},"scope":2050,"src":"1776:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2051,"src":"657:1315:16","usedErrors":[],"usedEvents":[]}],"src":"99:1874:16"},"id":16},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2056],"ShortStrings":[2267],"StorageSlot":[2391]},"id":2268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2268,"sourceUnit":2392,"src":"132:46:17","symbolAliases":[{"foreign":{"id":2053,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"140:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2056,"name":"ShortString","nameLocation":"353:11:17","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:17","underlyingType":{"id":2055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2057,"nodeType":"StructuredDocumentation","src":"378:876:17","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2267,"linearizedBaseContracts":[2267],"name":"ShortStrings","nameLocation":"1263:12:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2060,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:17","nodeType":"VariableDeclaration","scope":2267,"src":"1345:111:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2064,"name":"StringTooLong","nameLocation":"1469:13:17","nodeType":"ErrorDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"str","nameLocation":"1490:3:17","nodeType":"VariableDeclaration","scope":2064,"src":"1483:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2061,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:17"},"src":"1463:32:17"},{"errorSelector":"b3512b0c","id":2066,"name":"InvalidShortString","nameLocation":"1506:18:17","nodeType":"ErrorDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"1524:2:17"},"src":"1500:27:17"},{"body":{"id":2109,"nodeType":"Block","src":"1786:208:17","statements":[{"assignments":[2076],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:17","nodeType":"VariableDeclaration","scope":2109,"src":"1796:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"id":2079,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1822:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2077,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:17","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2082,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1840:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:17","memberName":"length","nodeType":"MemberAccess","src":"1840:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"1836:72:17","trueBody":{"id":2090,"nodeType":"Block","src":"1858:50:17","statements":[{"errorCall":{"arguments":[{"id":2087,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1893:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2086,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1879:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2089,"nodeType":"RevertStatement","src":"1872:25:17"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2100,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1965:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:17","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:17","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2103,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1974:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:17","memberName":"length","nodeType":"MemberAccess","src":"1974:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:17","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2092,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1924:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2074,"id":2108,"nodeType":"Return","src":"1917:70:17"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"1533:170:17","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:17","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"str","nameLocation":"1745:3:17","nodeType":"VariableDeclaration","scope":2110,"src":"1731:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:17"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"1773:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2072,"nodeType":"UserDefinedTypeName","pathNode":{"id":2071,"name":"ShortString","nameLocations":["1773:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"1773:11:17"},"referencedDeclaration":2056,"src":"1773:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:17"},"scope":2267,"src":"1708:286:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"2152:304:17","statements":[{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"len","nameLocation":"2170:3:17","nodeType":"VariableDeclaration","scope":2135,"src":"2162:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2122,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2187:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2121,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:17"},{"assignments":[2126],"declarations":[{"constant":false,"id":2126,"mutability":"mutable","name":"str","nameLocation":"2294:3:17","nodeType":"VariableDeclaration","scope":2135,"src":"2280:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[{"hexValue":"3332","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:17"},{"AST":{"nativeSrc":"2349:81:17","nodeType":"YulBlock","src":"2349:81:17","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:17","nodeType":"YulIdentifier","src":"2370:3:17"},{"name":"len","nativeSrc":"2375:3:17","nodeType":"YulIdentifier","src":"2375:3:17"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:17","nodeType":"YulIdentifier","src":"2363:6:17"},"nativeSrc":"2363:16:17","nodeType":"YulFunctionCall","src":"2363:16:17"},"nativeSrc":"2363:16:17","nodeType":"YulExpressionStatement","src":"2363:16:17"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:17","nodeType":"YulIdentifier","src":"2403:3:17"},{"kind":"number","nativeSrc":"2408:4:17","nodeType":"YulLiteral","src":"2408:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:17","nodeType":"YulIdentifier","src":"2399:3:17"},"nativeSrc":"2399:14:17","nodeType":"YulFunctionCall","src":"2399:14:17"},{"name":"sstr","nativeSrc":"2415:4:17","nodeType":"YulIdentifier","src":"2415:4:17"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:17","nodeType":"YulIdentifier","src":"2392:6:17"},"nativeSrc":"2392:28:17","nodeType":"YulFunctionCall","src":"2392:28:17"},"nativeSrc":"2392:28:17","nodeType":"YulExpressionStatement","src":"2392:28:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2120,"isOffset":false,"isSlot":false,"src":"2375:3:17","valueSize":1},{"declaration":2114,"isOffset":false,"isSlot":false,"src":"2415:4:17","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2370:3:17","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2403:3:17","valueSize":1}],"flags":["memory-safe"],"id":2132,"nodeType":"InlineAssembly","src":"2324:106:17"},{"expression":{"id":2133,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2446:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2118,"id":2134,"nodeType":"Return","src":"2439:10:17"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"2000:73:17","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:17","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:17","nodeType":"VariableDeclaration","scope":2136,"src":"2096:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"ShortString","nameLocations":["2096:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2096:11:17"},"referencedDeclaration":2056,"src":"2096:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:17"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2136,"src":"2137:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:17"},"scope":2267,"src":"2078:378:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2167,"nodeType":"Block","src":"2598:175:17","statements":[{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"result","nameLocation":"2616:6:17","nodeType":"VariableDeclaration","scope":2167,"src":"2608:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2151,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"2652:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2149,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2633:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:17","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"2675:69:17","trueBody":{"id":2163,"nodeType":"Block","src":"2692:52:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2160,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2713:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2162,"nodeType":"RevertStatement","src":"2706:27:17"}]}},{"expression":{"id":2165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2760:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2144,"id":2166,"nodeType":"Return","src":"2753:13:17"}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"2462:61:17","text":" @dev Return the length of a `ShortString`."},"id":2168,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:17","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:17","nodeType":"VariableDeclaration","scope":2168,"src":"2548:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"ShortString","nameLocations":["2548:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2548:11:17"},"referencedDeclaration":2056,"src":"2548:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:17"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"2589:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:17"},"scope":2267,"src":"2528:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"2996:231:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3016:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:17","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:17","memberName":"length","nodeType":"MemberAccess","src":"3010:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2205,"nodeType":"Block","src":"3094:127:17","statements":[{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2194,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"3134:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2191,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"3108:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2391_$","typeString":"type(library StorageSlot)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:17","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2368,"src":"3108:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2288_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2288_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"3108:38:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3149:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2199,"nodeType":"ExpressionStatement","src":"3108:46:17"},{"expression":{"arguments":[{"id":2202,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3192:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2200,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3175:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2178,"id":2204,"nodeType":"Return","src":"3168:42:17"}]},"id":2206,"nodeType":"IfStatement","src":"3006:215:17","trueBody":{"id":2190,"nodeType":"Block","src":"3036:52:17","statements":[{"expression":{"arguments":[{"id":2187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3071:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2186,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"3057:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"functionReturnParameters":2178,"id":2189,"nodeType":"Return","src":"3050:27:17"}]}}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"2779:103:17","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:17","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"value","nameLocation":"2936:5:17","nodeType":"VariableDeclaration","scope":2208,"src":"2922:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2170,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"store","nameLocation":"2958:5:17","nodeType":"VariableDeclaration","scope":2208,"src":"2943:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2172,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:17"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"2983:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2176,"nodeType":"UserDefinedTypeName","pathNode":{"id":2175,"name":"ShortString","nameLocations":["2983:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2983:11:17"},"referencedDeclaration":2056,"src":"2983:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:17"},"scope":2267,"src":"2887:340:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"3467:158:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3500:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2219,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3481:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2223,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3510:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2232,"nodeType":"Block","src":"3582:37:17","statements":[{"expression":{"id":2230,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3603:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2218,"id":2231,"nodeType":"Return","src":"3596:12:17"}]},"id":2233,"nodeType":"IfStatement","src":"3477:142:17","trueBody":{"id":2229,"nodeType":"Block","src":"3529:47:17","statements":[{"expression":{"arguments":[{"id":2226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"3559:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2225,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3550:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2218,"id":2228,"nodeType":"Return","src":"3543:22:17"}]}}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"3233:120:17","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:17","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"3400:5:17","nodeType":"VariableDeclaration","scope":2235,"src":"3388:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"ShortString","nameLocations":["3388:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"3388:11:17"},"referencedDeclaration":2056,"src":"3388:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"store","nameLocation":"3422:5:17","nodeType":"VariableDeclaration","scope":2235,"src":"3407:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:17"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"3452:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2216,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:17"},"scope":2267,"src":"3358:267:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2265,"nodeType":"Block","src":"4105:174:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4138:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"expression":{"id":2246,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"4119:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"type(ShortString)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2250,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4148:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2263,"nodeType":"Block","src":"4222:51:17","statements":[{"expression":{"expression":{"arguments":[{"id":2259,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4249:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:17","typeDescriptions":{}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:17","memberName":"length","nodeType":"MemberAccess","src":"4243:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2262,"nodeType":"Return","src":"4236:26:17"}]},"id":2264,"nodeType":"IfStatement","src":"4115:158:17","trueBody":{"id":2256,"nodeType":"Block","src":"4167:49:17","statements":[{"expression":{"arguments":[{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"4199:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}],"id":2252,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"4188:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2245,"id":2255,"nodeType":"Return","src":"4181:24:17"}]}}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"3631:364:17","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:17","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"value","nameLocation":"4044:5:17","nodeType":"VariableDeclaration","scope":2266,"src":"4032:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":2238,"nodeType":"UserDefinedTypeName","pathNode":{"id":2237,"name":"ShortString","nameLocations":["4032:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"4032:11:17"},"referencedDeclaration":2056,"src":"4032:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"store","nameLocation":"4066:5:17","nodeType":"VariableDeclaration","scope":2266,"src":"4051:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2240,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:17"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2266,"src":"4096:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:17"},"scope":2267,"src":"4000:279:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2268,"src":"1255:3026:17","usedErrors":[2064,2066],"usedEvents":[]}],"src":"106:4176:17"},"id":17},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2391]},"id":2392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2269,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"219:1187:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2391,"linearizedBaseContracts":[2391],"name":"StorageSlot","nameLocation":"1415:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2273,"members":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"1470:5:18","nodeType":"VariableDeclaration","scope":2273,"src":"1462:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:18","nodeType":"StructDefinition","scope":2391,"src":"1433:49:18","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2276,"members":[{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"1522:5:18","nodeType":"VariableDeclaration","scope":2276,"src":"1517:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:18","nodeType":"StructDefinition","scope":2391,"src":"1488:46:18","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2279,"members":[{"constant":false,"id":2278,"mutability":"mutable","name":"value","nameLocation":"1577:5:18","nodeType":"VariableDeclaration","scope":2279,"src":"1569:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:18","nodeType":"StructDefinition","scope":2391,"src":"1540:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2282,"members":[{"constant":false,"id":2281,"mutability":"mutable","name":"value","nameLocation":"1632:5:18","nodeType":"VariableDeclaration","scope":2282,"src":"1624:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:18","nodeType":"StructDefinition","scope":2391,"src":"1595:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2285,"members":[{"constant":false,"id":2284,"mutability":"mutable","name":"value","nameLocation":"1685:5:18","nodeType":"VariableDeclaration","scope":2285,"src":"1678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2283,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:18","nodeType":"StructDefinition","scope":2391,"src":"1650:47:18","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2288,"members":[{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"1738:5:18","nodeType":"VariableDeclaration","scope":2288,"src":"1731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2286,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:18","nodeType":"StructDefinition","scope":2391,"src":"1703:47:18","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2291,"members":[{"constant":false,"id":2290,"mutability":"mutable","name":"value","nameLocation":"1789:5:18","nodeType":"VariableDeclaration","scope":2291,"src":"1783:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2289,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:18","nodeType":"StructDefinition","scope":2391,"src":"1756:45:18","visibility":"public"},{"body":{"id":2301,"nodeType":"Block","src":"1983:79:18","statements":[{"AST":{"nativeSrc":"2018:38:18","nodeType":"YulBlock","src":"2018:38:18","statements":[{"nativeSrc":"2032:14:18","nodeType":"YulAssignment","src":"2032:14:18","value":{"name":"slot","nativeSrc":"2042:4:18","nodeType":"YulIdentifier","src":"2042:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:18","nodeType":"YulIdentifier","src":"2032:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2298,"isOffset":false,"isSlot":true,"src":"2032:6:18","suffix":"slot","valueSize":1},{"declaration":2294,"isOffset":false,"isSlot":false,"src":"2042:4:18","valueSize":1}],"flags":["memory-safe"],"id":2300,"nodeType":"InlineAssembly","src":"1993:63:18"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"1807:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:18","nodeType":"FunctionDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"slot","nameLocation":"1931:4:18","nodeType":"VariableDeclaration","scope":2302,"src":"1923:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:18"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"r","nameLocation":"1980:1:18","nodeType":"VariableDeclaration","scope":2302,"src":"1960:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2273_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2297,"nodeType":"UserDefinedTypeName","pathNode":{"id":2296,"name":"AddressSlot","nameLocations":["1960:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"1960:11:18"},"referencedDeclaration":2273,"src":"1960:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2273_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:18"},"scope":2391,"src":"1899:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"2243:79:18","statements":[{"AST":{"nativeSrc":"2278:38:18","nodeType":"YulBlock","src":"2278:38:18","statements":[{"nativeSrc":"2292:14:18","nodeType":"YulAssignment","src":"2292:14:18","value":{"name":"slot","nativeSrc":"2302:4:18","nodeType":"YulIdentifier","src":"2302:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:18","nodeType":"YulIdentifier","src":"2292:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2309,"isOffset":false,"isSlot":true,"src":"2292:6:18","suffix":"slot","valueSize":1},{"declaration":2305,"isOffset":false,"isSlot":false,"src":"2302:4:18","valueSize":1}],"flags":["memory-safe"],"id":2311,"nodeType":"InlineAssembly","src":"2253:63:18"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"2068:86:18","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:18","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"slot","nameLocation":"2191:4:18","nodeType":"VariableDeclaration","scope":2313,"src":"2183:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:18"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"r","nameLocation":"2240:1:18","nodeType":"VariableDeclaration","scope":2313,"src":"2220:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2276_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"BooleanSlot","nameLocations":["2220:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2276,"src":"2220:11:18"},"referencedDeclaration":2276,"src":"2220:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2276_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:18"},"scope":2391,"src":"2159:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"2503:79:18","statements":[{"AST":{"nativeSrc":"2538:38:18","nodeType":"YulBlock","src":"2538:38:18","statements":[{"nativeSrc":"2552:14:18","nodeType":"YulAssignment","src":"2552:14:18","value":{"name":"slot","nativeSrc":"2562:4:18","nodeType":"YulIdentifier","src":"2562:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:18","nodeType":"YulIdentifier","src":"2552:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2320,"isOffset":false,"isSlot":true,"src":"2552:6:18","suffix":"slot","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"2562:4:18","valueSize":1}],"flags":["memory-safe"],"id":2322,"nodeType":"InlineAssembly","src":"2513:63:18"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"2328:86:18","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:18","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"slot","nameLocation":"2451:4:18","nodeType":"VariableDeclaration","scope":2324,"src":"2443:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:18"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"r","nameLocation":"2500:1:18","nodeType":"VariableDeclaration","scope":2324,"src":"2480:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2279_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"Bytes32Slot","nameLocations":["2480:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2279,"src":"2480:11:18"},"referencedDeclaration":2279,"src":"2480:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2279_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:18"},"scope":2391,"src":"2419:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"2763:79:18","statements":[{"AST":{"nativeSrc":"2798:38:18","nodeType":"YulBlock","src":"2798:38:18","statements":[{"nativeSrc":"2812:14:18","nodeType":"YulAssignment","src":"2812:14:18","value":{"name":"slot","nativeSrc":"2822:4:18","nodeType":"YulIdentifier","src":"2822:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:18","nodeType":"YulIdentifier","src":"2812:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2331,"isOffset":false,"isSlot":true,"src":"2812:6:18","suffix":"slot","valueSize":1},{"declaration":2327,"isOffset":false,"isSlot":false,"src":"2822:4:18","valueSize":1}],"flags":["memory-safe"],"id":2333,"nodeType":"InlineAssembly","src":"2773:63:18"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"2588:86:18","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:18","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"slot","nameLocation":"2711:4:18","nodeType":"VariableDeclaration","scope":2335,"src":"2703:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:18"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"r","nameLocation":"2760:1:18","nodeType":"VariableDeclaration","scope":2335,"src":"2740:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2282_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2330,"nodeType":"UserDefinedTypeName","pathNode":{"id":2329,"name":"Uint256Slot","nameLocations":["2740:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2282,"src":"2740:11:18"},"referencedDeclaration":2282,"src":"2740:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2282_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:18"},"scope":2391,"src":"2679:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"3020:79:18","statements":[{"AST":{"nativeSrc":"3055:38:18","nodeType":"YulBlock","src":"3055:38:18","statements":[{"nativeSrc":"3069:14:18","nodeType":"YulAssignment","src":"3069:14:18","value":{"name":"slot","nativeSrc":"3079:4:18","nodeType":"YulIdentifier","src":"3079:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:18","nodeType":"YulIdentifier","src":"3069:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2342,"isOffset":false,"isSlot":true,"src":"3069:6:18","suffix":"slot","valueSize":1},{"declaration":2338,"isOffset":false,"isSlot":false,"src":"3079:4:18","valueSize":1}],"flags":["memory-safe"],"id":2344,"nodeType":"InlineAssembly","src":"3030:63:18"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"2848:85:18","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:18","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"slot","nameLocation":"2969:4:18","nodeType":"VariableDeclaration","scope":2346,"src":"2961:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:18"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"r","nameLocation":"3017:1:18","nodeType":"VariableDeclaration","scope":2346,"src":"2998:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2285_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"Int256Slot","nameLocations":["2998:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2285,"src":"2998:10:18"},"referencedDeclaration":2285,"src":"2998:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2285_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:18"},"scope":2391,"src":"2938:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2356,"nodeType":"Block","src":"3277:79:18","statements":[{"AST":{"nativeSrc":"3312:38:18","nodeType":"YulBlock","src":"3312:38:18","statements":[{"nativeSrc":"3326:14:18","nodeType":"YulAssignment","src":"3326:14:18","value":{"name":"slot","nativeSrc":"3336:4:18","nodeType":"YulIdentifier","src":"3336:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:18","nodeType":"YulIdentifier","src":"3326:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2353,"isOffset":false,"isSlot":true,"src":"3326:6:18","suffix":"slot","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"3336:4:18","valueSize":1}],"flags":["memory-safe"],"id":2355,"nodeType":"InlineAssembly","src":"3287:63:18"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"3105:85:18","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2357,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:18","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"slot","nameLocation":"3226:4:18","nodeType":"VariableDeclaration","scope":2357,"src":"3218:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:18"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"r","nameLocation":"3274:1:18","nodeType":"VariableDeclaration","scope":2357,"src":"3255:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2288_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2352,"nodeType":"UserDefinedTypeName","pathNode":{"id":2351,"name":"StringSlot","nameLocations":["3255:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"3255:10:18"},"referencedDeclaration":2288,"src":"3255:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2288_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:18"},"scope":2391,"src":"3195:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"3558:85:18","statements":[{"AST":{"nativeSrc":"3593:44:18","nodeType":"YulBlock","src":"3593:44:18","statements":[{"nativeSrc":"3607:20:18","nodeType":"YulAssignment","src":"3607:20:18","value":{"name":"store.slot","nativeSrc":"3617:10:18","nodeType":"YulIdentifier","src":"3617:10:18"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:18","nodeType":"YulIdentifier","src":"3607:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2364,"isOffset":false,"isSlot":true,"src":"3607:6:18","suffix":"slot","valueSize":1},{"declaration":2360,"isOffset":false,"isSlot":true,"src":"3617:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2366,"nodeType":"InlineAssembly","src":"3568:69:18"}]},"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"3362:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:18","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"store","nameLocation":"3506:5:18","nodeType":"VariableDeclaration","scope":2368,"src":"3491:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2359,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:18"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"r","nameLocation":"3555:1:18","nodeType":"VariableDeclaration","scope":2368,"src":"3536:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2288_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2363,"nodeType":"UserDefinedTypeName","pathNode":{"id":2362,"name":"StringSlot","nameLocations":["3536:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"3536:10:18"},"referencedDeclaration":2288,"src":"3536:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2288_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:18"},"scope":2391,"src":"3468:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"3818:79:18","statements":[{"AST":{"nativeSrc":"3853:38:18","nodeType":"YulBlock","src":"3853:38:18","statements":[{"nativeSrc":"3867:14:18","nodeType":"YulAssignment","src":"3867:14:18","value":{"name":"slot","nativeSrc":"3877:4:18","nodeType":"YulIdentifier","src":"3877:4:18"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:18","nodeType":"YulIdentifier","src":"3867:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2375,"isOffset":false,"isSlot":true,"src":"3867:6:18","suffix":"slot","valueSize":1},{"declaration":2371,"isOffset":false,"isSlot":false,"src":"3877:4:18","valueSize":1}],"flags":["memory-safe"],"id":2377,"nodeType":"InlineAssembly","src":"3828:63:18"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"3649:84:18","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:18","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"slot","nameLocation":"3768:4:18","nodeType":"VariableDeclaration","scope":2379,"src":"3760:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:18"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"r","nameLocation":"3815:1:18","nodeType":"VariableDeclaration","scope":2379,"src":"3797:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2291_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2374,"nodeType":"UserDefinedTypeName","pathNode":{"id":2373,"name":"BytesSlot","nameLocations":["3797:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2291,"src":"3797:9:18"},"referencedDeclaration":2291,"src":"3797:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2291_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:18"},"scope":2391,"src":"3738:159:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"4094:85:18","statements":[{"AST":{"nativeSrc":"4129:44:18","nodeType":"YulBlock","src":"4129:44:18","statements":[{"nativeSrc":"4143:20:18","nodeType":"YulAssignment","src":"4143:20:18","value":{"name":"store.slot","nativeSrc":"4153:10:18","nodeType":"YulIdentifier","src":"4153:10:18"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:18","nodeType":"YulIdentifier","src":"4143:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2386,"isOffset":false,"isSlot":true,"src":"4143:6:18","suffix":"slot","valueSize":1},{"declaration":2382,"isOffset":false,"isSlot":true,"src":"4153:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2388,"nodeType":"InlineAssembly","src":"4104:69:18"}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"3903:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:18","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"store","nameLocation":"4043:5:18","nodeType":"VariableDeclaration","scope":2390,"src":"4029:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:18"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"r","nameLocation":"4091:1:18","nodeType":"VariableDeclaration","scope":2390,"src":"4073:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2291_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2385,"nodeType":"UserDefinedTypeName","pathNode":{"id":2384,"name":"BytesSlot","nameLocations":["4073:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2291,"src":"4073:9:18"},"referencedDeclaration":2291,"src":"4073:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2291_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:18"},"scope":2391,"src":"4007:172:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2392,"src":"1407:2774:18","usedErrors":[],"usedEvents":[]}],"src":"193:3989:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4978],"SignedMath":[6887],"Strings":[2711]},"id":2712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2393,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2712,"sourceUnit":4979,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2394,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2712,"sourceUnit":6888,"src":"165:49:19","symbolAliases":[{"foreign":{"id":2396,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"173:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"216:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":2711,"linearizedBaseContracts":[2711],"name":"Strings","nameLocation":"259:7:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2401,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:19","nodeType":"VariableDeclaration","scope":2711,"src":"273:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2399,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2404,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:19","nodeType":"VariableDeclaration","scope":2711,"src":"335:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2402,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"384:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2411,"name":"StringsInsufficientHexLength","nameLocation":"476:28:19","nodeType":"ErrorDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"value","nameLocation":"513:5:19","nodeType":"VariableDeclaration","scope":2411,"src":"505:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"length","nameLocation":"528:6:19","nodeType":"VariableDeclaration","scope":2411,"src":"520:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:19"},"src":"470:66:19"},{"body":{"id":2458,"nodeType":"Block","src":"708:561:19","statements":[{"id":2457,"nodeType":"UncheckedBlock","src":"718:545:19","statements":[{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"length","nameLocation":"750:6:19","nodeType":"VariableDeclaration","scope":2457,"src":"742:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2427,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2421,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"759:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4978_$","typeString":"type(library Math)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4750,"src":"759:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:19"},{"assignments":[2429],"declarations":[{"constant":false,"id":2429,"mutability":"mutable","name":"buffer","nameLocation":"808:6:19","nodeType":"VariableDeclaration","scope":2457,"src":"794:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2428,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2434,"initialValue":{"arguments":[{"id":2432,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"828:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2430,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:19"},{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"ptr","nameLocation":"857:3:19","nodeType":"VariableDeclaration","scope":2457,"src":"849:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2437,"nodeType":"VariableDeclarationStatement","src":"849:11:19"},{"AST":{"nativeSrc":"899:67:19","nodeType":"YulBlock","src":"899:67:19","statements":[{"nativeSrc":"917:35:19","nodeType":"YulAssignment","src":"917:35:19","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:19","nodeType":"YulIdentifier","src":"928:6:19"},{"arguments":[{"kind":"number","nativeSrc":"940:2:19","nodeType":"YulLiteral","src":"940:2:19","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:19","nodeType":"YulIdentifier","src":"944:6:19"}],"functionName":{"name":"add","nativeSrc":"936:3:19","nodeType":"YulIdentifier","src":"936:3:19"},"nativeSrc":"936:15:19","nodeType":"YulFunctionCall","src":"936:15:19"}],"functionName":{"name":"add","nativeSrc":"924:3:19","nodeType":"YulIdentifier","src":"924:3:19"},"nativeSrc":"924:28:19","nodeType":"YulFunctionCall","src":"924:28:19"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:19","nodeType":"YulIdentifier","src":"917:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2429,"isOffset":false,"isSlot":false,"src":"928:6:19","valueSize":1},{"declaration":2420,"isOffset":false,"isSlot":false,"src":"944:6:19","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"917:3:19","valueSize":1}],"flags":["memory-safe"],"id":2438,"nodeType":"InlineAssembly","src":"874:92:19"},{"body":{"id":2453,"nodeType":"Block","src":"992:234:19","statements":[{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:19","subExpression":{"id":2440,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"1010:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2442,"nodeType":"ExpressionStatement","src":"1010:5:19"},{"AST":{"nativeSrc":"1058:86:19","nodeType":"YulBlock","src":"1058:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:19","nodeType":"YulIdentifier","src":"1088:3:19"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:19","nodeType":"YulIdentifier","src":"1102:5:19"},{"kind":"number","nativeSrc":"1109:2:19","nodeType":"YulLiteral","src":"1109:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:19","nodeType":"YulIdentifier","src":"1098:3:19"},"nativeSrc":"1098:14:19","nodeType":"YulFunctionCall","src":"1098:14:19"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:19","nodeType":"YulIdentifier","src":"1114:10:19"}],"functionName":{"name":"byte","nativeSrc":"1093:4:19","nodeType":"YulIdentifier","src":"1093:4:19"},"nativeSrc":"1093:32:19","nodeType":"YulFunctionCall","src":"1093:32:19"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:19","nodeType":"YulIdentifier","src":"1080:7:19"},"nativeSrc":"1080:46:19","nodeType":"YulFunctionCall","src":"1080:46:19"},"nativeSrc":"1080:46:19","nodeType":"YulExpressionStatement","src":"1080:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2401,"isOffset":false,"isSlot":false,"src":"1114:10:19","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"1088:3:19","valueSize":1},{"declaration":2414,"isOffset":false,"isSlot":false,"src":"1102:5:19","valueSize":1}],"flags":["memory-safe"],"id":2443,"nodeType":"InlineAssembly","src":"1033:111:19"},{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1161:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2447,"nodeType":"ExpressionStatement","src":"1161:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1194:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2452,"nodeType":"IfStatement","src":"1190:21:19","trueBody":{"id":2451,"nodeType":"Break","src":"1206:5:19"}}]},"condition":{"hexValue":"74727565","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2454,"nodeType":"WhileStatement","src":"979:247:19"},{"expression":{"id":2455,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"1246:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2418,"id":2456,"nodeType":"Return","src":"1239:13:19"}]}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"542:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2459,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:19","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"value","nameLocation":"663:5:19","nodeType":"VariableDeclaration","scope":2459,"src":"655:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:19"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"693:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2416,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:19"},"scope":2711,"src":"637:632:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"1445:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1476:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:19","trueExpression":{"hexValue":"2d","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"1522:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2477,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"1507:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6887_$","typeString":"type(library SignedMath)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6886,"src":"1507:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2476,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1498:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:19","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:19","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2466,"id":2483,"nodeType":"Return","src":"1455:75:19"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"1275:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:19","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"value","nameLocation":"1400:5:19","nodeType":"VariableDeclaration","scope":2485,"src":"1393:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2461,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:19"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"1430:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2464,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:19"},"scope":2711,"src":"1369:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"1716:100:19","statements":[{"id":2503,"nodeType":"UncheckedBlock","src":"1726:84:19","statements":[{"expression":{"arguments":[{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1769:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1788:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2495,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"1776:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4978_$","typeString":"type(library Math)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4921,"src":"1776:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2505,2588,2608],"referencedDeclaration":2588,"src":"1757:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2492,"id":2502,"nodeType":"Return","src":"1750:49:19"}]}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"1543:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:19","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"1671:5:19","nodeType":"VariableDeclaration","scope":2505,"src":"1663:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:19"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"1701:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:19"},"scope":2711,"src":"1642:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"2029:435:19","statements":[{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:19","nodeType":"VariableDeclaration","scope":2587,"src":"2039:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"id":2517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2060:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:19"},{"assignments":[2520],"declarations":[{"constant":false,"id":2520,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:19","nodeType":"VariableDeclaration","scope":2587,"src":"2075:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2519,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2529,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2524,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2111:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2521,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:19"},{"expression":{"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2530,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2132:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2532,"indexExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2535,"nodeType":"ExpressionStatement","src":"2132:15:19"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2536,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2157:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2538,"indexExpression":{"hexValue":"31","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2541,"nodeType":"ExpressionStatement","src":"2157:15:19"},{"body":{"id":2570,"nodeType":"Block","src":"2227:95:19","statements":[{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2556,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2241:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2558,"indexExpression":{"id":2557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2559,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2253:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2563,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2264:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2565,"nodeType":"ExpressionStatement","src":"2241:40:19"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2566,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2295:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"2295:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2571,"initializationExpression":{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"i","nameLocation":"2195:1:19","nodeType":"VariableDeclaration","scope":2571,"src":"2187:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2549,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2545,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2203:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:19","subExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"2224:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"2222:3:19"},"nodeType":"ForStatement","src":"2182:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2335:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2581,"nodeType":"IfStatement","src":"2331:96:19","trueBody":{"id":2580,"nodeType":"Block","src":"2352:75:19","statements":[{"errorCall":{"arguments":[{"id":2576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2402:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2577,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2409:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2575,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2373:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2579,"nodeType":"RevertStatement","src":"2366:50:19"}]}},{"expression":{"arguments":[{"id":2584,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2450:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2582,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:19","typeDescriptions":{}}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2514,"id":2586,"nodeType":"Return","src":"2436:21:19"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"1822:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:19","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"value","nameLocation":"1968:5:19","nodeType":"VariableDeclaration","scope":2588,"src":"1960:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"length","nameLocation":"1983:6:19","nodeType":"VariableDeclaration","scope":2588,"src":"1975:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:19"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"2014:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2512,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:19"},"scope":2711,"src":"1939:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"2696:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2601,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2741:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2599,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:19","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:19","typeDescriptions":{}}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2604,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"2749:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2596,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2505,2588,2608],"referencedDeclaration":2588,"src":"2713:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2595,"id":2606,"nodeType":"Return","src":"2706:58:19"}]},"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"2470:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:19","nodeType":"FunctionDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"addr","nameLocation":"2652:4:19","nodeType":"VariableDeclaration","scope":2608,"src":"2644:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:19"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"2681:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2593,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:19"},"scope":2711,"src":"2623:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2672,"nodeType":"Block","src":"3028:642:19","statements":[{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:19","nodeType":"VariableDeclaration","scope":2672,"src":"3038:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2624,"initialValue":{"arguments":[{"arguments":[{"id":2621,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"3078:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2620,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2505,2588,2608],"referencedDeclaration":2608,"src":"3066:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2618,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:19","typeDescriptions":{}}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:19"},{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:19","nodeType":"VariableDeclaration","scope":2672,"src":"3169:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2627,"nodeType":"VariableDeclarationStatement","src":"3169:17:19"},{"AST":{"nativeSrc":"3221:78:19","nodeType":"YulBlock","src":"3221:78:19","statements":[{"nativeSrc":"3235:54:19","nodeType":"YulAssignment","src":"3235:54:19","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:19","nodeType":"YulLiteral","src":"3252:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:19","nodeType":"YulIdentifier","src":"3270:6:19"},{"kind":"number","nativeSrc":"3278:4:19","nodeType":"YulLiteral","src":"3278:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:19","nodeType":"YulIdentifier","src":"3266:3:19"},"nativeSrc":"3266:17:19","nodeType":"YulFunctionCall","src":"3266:17:19"},{"kind":"number","nativeSrc":"3285:2:19","nodeType":"YulLiteral","src":"3285:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:19","nodeType":"YulIdentifier","src":"3256:9:19"},"nativeSrc":"3256:32:19","nodeType":"YulFunctionCall","src":"3256:32:19"}],"functionName":{"name":"shr","nativeSrc":"3248:3:19","nodeType":"YulIdentifier","src":"3248:3:19"},"nativeSrc":"3248:41:19","nodeType":"YulFunctionCall","src":"3248:41:19"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:19","nodeType":"YulIdentifier","src":"3235:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2617,"isOffset":false,"isSlot":false,"src":"3270:6:19","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"3235:9:19","valueSize":1}],"flags":["memory-safe"],"id":2628,"nodeType":"InlineAssembly","src":"3196:103:19"},{"body":{"id":2665,"nodeType":"Block","src":"3342:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"3448:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2646,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3477:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2648,"indexExpression":{"id":2647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3484:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2644,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:19","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"3444:150:19","trueBody":{"id":2659,"nodeType":"Block","src":"3494:100:19","statements":[{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2653,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3562:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2655,"indexExpression":{"id":2654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3569:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2658,"nodeType":"ExpressionStatement","src":"3562:17:19"}]}},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2661,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"3607:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ExpressionStatement","src":"3607:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"initializationExpression":{"assignments":[2630],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"i","nameLocation":"3322:1:19","nodeType":"VariableDeclaration","scope":2666,"src":"3314:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2632,"initialValue":{"hexValue":"3431","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:19","subExpression":{"id":2636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2638,"nodeType":"ExpressionStatement","src":"3337:3:19"},"nodeType":"ForStatement","src":"3309:324:19"},{"expression":{"arguments":[{"id":2669,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3656:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:19","typeDescriptions":{}}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2615,"id":2671,"nodeType":"Return","src":"3642:21:19"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"2777:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:19","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"addr","nameLocation":"2984:4:19","nodeType":"VariableDeclaration","scope":2673,"src":"2976:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:19"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"3013:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:19"},"scope":2711,"src":"2947:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"3825:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3848:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:19","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:19","memberName":"length","nodeType":"MemberAccess","src":"3842:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3867:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:19","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:19","memberName":"length","nodeType":"MemberAccess","src":"3861:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3896:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2695,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:19","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2694,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3919:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2701,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:19","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2682,"id":2708,"nodeType":"Return","src":"3835:87:19"}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"3676:66:19","text":" @dev Returns true if the two strings are equal."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:19","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"a","nameLocation":"3776:1:19","nodeType":"VariableDeclaration","scope":2710,"src":"3762:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"b","nameLocation":"3793:1:19","nodeType":"VariableDeclaration","scope":2710,"src":"3779:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:19"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"3819:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2680,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:19"},"scope":2711,"src":"3747:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2712,"src":"251:3680:19","usedErrors":[2411],"usedEvents":[]}],"src":"101:3831:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3059]},"id":3060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2713,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"138:205:20","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3059,"linearizedBaseContracts":[3059],"name":"ECDSA","nameLocation":"352:5:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2719,"members":[{"id":2715,"name":"NoError","nameLocation":"392:7:20","nodeType":"EnumValue","src":"392:7:20"},{"id":2716,"name":"InvalidSignature","nameLocation":"409:16:20","nodeType":"EnumValue","src":"409:16:20"},{"id":2717,"name":"InvalidSignatureLength","nameLocation":"435:22:20","nodeType":"EnumValue","src":"435:22:20"},{"id":2718,"name":"InvalidSignatureS","nameLocation":"467:17:20","nodeType":"EnumValue","src":"467:17:20"}],"name":"RecoverError","nameLocation":"369:12:20","nodeType":"EnumDefinition","src":"364:126:20"},{"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"496:63:20","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2722,"name":"ECDSAInvalidSignature","nameLocation":"570:21:20","nodeType":"ErrorDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[],"src":"591:2:20"},"src":"564:30:20"},{"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"600:60:20","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2727,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:20","nodeType":"ErrorDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"length","nameLocation":"707:6:20","nodeType":"VariableDeclaration","scope":2727,"src":"699:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:20"},"src":"665:50:20"},{"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"721:85:20","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2732,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:20","nodeType":"ErrorDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"s","nameLocation":"848:1:20","nodeType":"VariableDeclaration","scope":2732,"src":"840:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:20"},"src":"811:40:20"},{"body":{"id":2784,"nodeType":"Block","src":"2285:622:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2747,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"2299:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:20","memberName":"length","nodeType":"MemberAccess","src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2782,"nodeType":"Block","src":"2793:108:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:20","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2773,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"2827:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2777,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"2872:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:20","memberName":"length","nodeType":"MemberAccess","src":"2872:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:20","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2746,"id":2781,"nodeType":"Return","src":"2807:83:20"}]},"id":2783,"nodeType":"IfStatement","src":"2295:606:20","trueBody":{"id":2768,"nodeType":"Block","src":"2323:464:20","statements":[{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"r","nameLocation":"2345:1:20","nodeType":"VariableDeclaration","scope":2768,"src":"2337:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2753,"nodeType":"VariableDeclarationStatement","src":"2337:9:20"},{"assignments":[2755],"declarations":[{"constant":false,"id":2755,"mutability":"mutable","name":"s","nameLocation":"2368:1:20","nodeType":"VariableDeclaration","scope":2768,"src":"2360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2756,"nodeType":"VariableDeclarationStatement","src":"2360:9:20"},{"assignments":[2758],"declarations":[{"constant":false,"id":2758,"mutability":"mutable","name":"v","nameLocation":"2389:1:20","nodeType":"VariableDeclaration","scope":2768,"src":"2383:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2757,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2759,"nodeType":"VariableDeclarationStatement","src":"2383:7:20"},{"AST":{"nativeSrc":"2560:171:20","nodeType":"YulBlock","src":"2560:171:20","statements":[{"nativeSrc":"2578:32:20","nodeType":"YulAssignment","src":"2578:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:20","nodeType":"YulIdentifier","src":"2593:9:20"},{"kind":"number","nativeSrc":"2604:4:20","nodeType":"YulLiteral","src":"2604:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:20","nodeType":"YulIdentifier","src":"2589:3:20"},"nativeSrc":"2589:20:20","nodeType":"YulFunctionCall","src":"2589:20:20"}],"functionName":{"name":"mload","nativeSrc":"2583:5:20","nodeType":"YulIdentifier","src":"2583:5:20"},"nativeSrc":"2583:27:20","nodeType":"YulFunctionCall","src":"2583:27:20"},"variableNames":[{"name":"r","nativeSrc":"2578:1:20","nodeType":"YulIdentifier","src":"2578:1:20"}]},{"nativeSrc":"2627:32:20","nodeType":"YulAssignment","src":"2627:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:20","nodeType":"YulIdentifier","src":"2642:9:20"},{"kind":"number","nativeSrc":"2653:4:20","nodeType":"YulLiteral","src":"2653:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:20","nodeType":"YulIdentifier","src":"2638:3:20"},"nativeSrc":"2638:20:20","nodeType":"YulFunctionCall","src":"2638:20:20"}],"functionName":{"name":"mload","nativeSrc":"2632:5:20","nodeType":"YulIdentifier","src":"2632:5:20"},"nativeSrc":"2632:27:20","nodeType":"YulFunctionCall","src":"2632:27:20"},"variableNames":[{"name":"s","nativeSrc":"2627:1:20","nodeType":"YulIdentifier","src":"2627:1:20"}]},{"nativeSrc":"2676:41:20","nodeType":"YulAssignment","src":"2676:41:20","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:20","nodeType":"YulLiteral","src":"2686:1:20","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:20","nodeType":"YulIdentifier","src":"2699:9:20"},{"kind":"number","nativeSrc":"2710:4:20","nodeType":"YulLiteral","src":"2710:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:20","nodeType":"YulIdentifier","src":"2695:3:20"},"nativeSrc":"2695:20:20","nodeType":"YulFunctionCall","src":"2695:20:20"}],"functionName":{"name":"mload","nativeSrc":"2689:5:20","nodeType":"YulIdentifier","src":"2689:5:20"},"nativeSrc":"2689:27:20","nodeType":"YulFunctionCall","src":"2689:27:20"}],"functionName":{"name":"byte","nativeSrc":"2681:4:20","nodeType":"YulIdentifier","src":"2681:4:20"},"nativeSrc":"2681:36:20","nodeType":"YulFunctionCall","src":"2681:36:20"},"variableNames":[{"name":"v","nativeSrc":"2676:1:20","nodeType":"YulIdentifier","src":"2676:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2752,"isOffset":false,"isSlot":false,"src":"2578:1:20","valueSize":1},{"declaration":2755,"isOffset":false,"isSlot":false,"src":"2627:1:20","valueSize":1},{"declaration":2737,"isOffset":false,"isSlot":false,"src":"2593:9:20","valueSize":1},{"declaration":2737,"isOffset":false,"isSlot":false,"src":"2642:9:20","valueSize":1},{"declaration":2737,"isOffset":false,"isSlot":false,"src":"2699:9:20","valueSize":1},{"declaration":2758,"isOffset":false,"isSlot":false,"src":"2676:1:20","valueSize":1}],"flags":["memory-safe"],"id":2760,"nodeType":"InlineAssembly","src":"2535:196:20"},{"expression":{"arguments":[{"id":2762,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"2762:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2763,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2768:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2764,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2771:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2765,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"2774:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2761,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2785,2865,2973],"referencedDeclaration":2973,"src":"2751:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2746,"id":2767,"nodeType":"Return","src":"2744:32:20"}]}}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"857:1267:20","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:20","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"hash","nameLocation":"2166:4:20","nodeType":"VariableDeclaration","scope":2785,"src":"2158:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"signature","nameLocation":"2193:9:20","nodeType":"VariableDeclaration","scope":2785,"src":"2180:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2736,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:20"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:20","nodeType":"VariableDeclaration","scope":2785,"src":"2232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"err","nameLocation":"2264:3:20","nodeType":"VariableDeclaration","scope":2785,"src":"2251:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"RecoverError","nameLocations":["2251:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"2251:12:20"},"referencedDeclaration":2719,"src":"2251:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:20","nodeType":"VariableDeclaration","scope":2785,"src":"2269:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:20"},"scope":3059,"src":"2129:778:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"3801:168:20","statements":[{"assignments":[2796,2799,2801],"declarations":[{"constant":false,"id":2796,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:20","nodeType":"VariableDeclaration","scope":2814,"src":"3812:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"error","nameLocation":"3844:5:20","nodeType":"VariableDeclaration","scope":2814,"src":"3831:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2798,"nodeType":"UserDefinedTypeName","pathNode":{"id":2797,"name":"RecoverError","nameLocations":["3831:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"3831:12:20"},"referencedDeclaration":2719,"src":"3831:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:20","nodeType":"VariableDeclaration","scope":2814,"src":"3851:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2806,"initialValue":{"arguments":[{"id":2803,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"3882:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2804,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"3888:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2802,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2785,2865,2973],"referencedDeclaration":2785,"src":"3871:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:20"},{"expression":{"arguments":[{"id":2808,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"3920:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"id":2809,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"3927:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2807,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"3908:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2719_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2811,"nodeType":"ExpressionStatement","src":"3908:28:20"},{"expression":{"id":2812,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"3953:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2794,"id":2813,"nodeType":"Return","src":"3946:16:20"}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"2913:796:20","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:20","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"hash","nameLocation":"3739:4:20","nodeType":"VariableDeclaration","scope":2815,"src":"3731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"signature","nameLocation":"3758:9:20","nodeType":"VariableDeclaration","scope":2815,"src":"3745:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2789,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:20"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"3792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:20"},"scope":3059,"src":"3714:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2864,"nodeType":"Block","src":"4348:342:20","statements":[{"id":2863,"nodeType":"UncheckedBlock","src":"4358:326:20","statements":[{"assignments":[2833],"declarations":[{"constant":false,"id":2833,"mutability":"mutable","name":"s","nameLocation":"4390:1:20","nodeType":"VariableDeclaration","scope":2863,"src":"4382:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2840,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:20","typeDescriptions":{}}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:20"},{"assignments":[2842],"declarations":[{"constant":false,"id":2842,"mutability":"mutable","name":"v","nameLocation":"4591:1:20","nodeType":"VariableDeclaration","scope":2863,"src":"4585:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2841,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2855,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2847,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"4610:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:20","typeDescriptions":{}}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2843,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:20","typeDescriptions":{}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:20"},{"expression":{"arguments":[{"id":2857,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"4659:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2858,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"4665:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2859,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"4668:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4671:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2856,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2785,2865,2973],"referencedDeclaration":2973,"src":"4648:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2831,"id":2862,"nodeType":"Return","src":"4641:32:20"}]}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"3975:205:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:20","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"hash","nameLocation":"4222:4:20","nodeType":"VariableDeclaration","scope":2865,"src":"4214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"r","nameLocation":"4244:1:20","nodeType":"VariableDeclaration","scope":2865,"src":"4236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"vs","nameLocation":"4263:2:20","nodeType":"VariableDeclaration","scope":2865,"src":"4255:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:20"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:20","nodeType":"VariableDeclaration","scope":2865,"src":"4295:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"err","nameLocation":"4327:3:20","nodeType":"VariableDeclaration","scope":2865,"src":"4314:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2827,"nodeType":"UserDefinedTypeName","pathNode":{"id":2826,"name":"RecoverError","nameLocations":["4314:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"4314:12:20"},"referencedDeclaration":2719,"src":"4314:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":2865,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:20"},"scope":3059,"src":"4185:505:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"4903:164:20","statements":[{"assignments":[2878,2881,2883],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:20","nodeType":"VariableDeclaration","scope":2897,"src":"4914:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"error","nameLocation":"4946:5:20","nodeType":"VariableDeclaration","scope":2897,"src":"4933:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2880,"nodeType":"UserDefinedTypeName","pathNode":{"id":2879,"name":"RecoverError","nameLocations":["4933:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"4933:12:20"},"referencedDeclaration":2719,"src":"4933:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:20","nodeType":"VariableDeclaration","scope":2897,"src":"4953:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2889,"initialValue":{"arguments":[{"id":2885,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"4984:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2886,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"4990:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2887,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"4993:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2884,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2785,2865,2973],"referencedDeclaration":2865,"src":"4973:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:20"},{"expression":{"arguments":[{"id":2891,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"5018:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"id":2892,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"5025:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2890,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"5006:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2719_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2894,"nodeType":"ExpressionStatement","src":"5006:28:20"},{"expression":{"id":2895,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"5051:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2876,"id":2896,"nodeType":"Return","src":"5044:16:20"}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"4696:116:20","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:20","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"hash","nameLocation":"4842:4:20","nodeType":"VariableDeclaration","scope":2898,"src":"4834:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"r","nameLocation":"4856:1:20","nodeType":"VariableDeclaration","scope":2898,"src":"4848:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"vs","nameLocation":"4867:2:20","nodeType":"VariableDeclaration","scope":2898,"src":"4859:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:20"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"4894:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:20"},"scope":3059,"src":"4817:250:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2972,"nodeType":"Block","src":"5382:1372:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2919,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"6278:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:20","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"nodeType":"IfStatement","src":"6266:164:20","trueBody":{"id":2932,"nodeType":"Block","src":"6351:79:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2923,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:20","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2927,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6385:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"6385:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"id":2929,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"6417:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2916,"id":2931,"nodeType":"Return","src":"6365:54:20"}]}},{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"signer","nameLocation":"6532:6:20","nodeType":"VariableDeclaration","scope":2972,"src":"6524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2942,"initialValue":{"arguments":[{"id":2937,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2938,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"6557:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2939,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6560:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2940,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"6563:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2936,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:20","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6579:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{}}},"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"6575:113:20","trueBody":{"id":2961,"nodeType":"Block","src":"6601:87:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:20","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2953,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6635:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"6635:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:20","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2916,"id":2960,"nodeType":"Return","src":"6615:62:20"}]}},{"expression":{"components":[{"id":2963,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6706:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2964,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6714:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"6714:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:20","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2916,"id":2971,"nodeType":"Return","src":"6698:49:20"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"5073:125:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:20","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"hash","nameLocation":"5240:4:20","nodeType":"VariableDeclaration","scope":2973,"src":"5232:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"v","nameLocation":"5260:1:20","nodeType":"VariableDeclaration","scope":2973,"src":"5254:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2902,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"r","nameLocation":"5279:1:20","nodeType":"VariableDeclaration","scope":2973,"src":"5271:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"s","nameLocation":"5298:1:20","nodeType":"VariableDeclaration","scope":2973,"src":"5290:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:20"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:20","nodeType":"VariableDeclaration","scope":2973,"src":"5329:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"err","nameLocation":"5361:3:20","nodeType":"VariableDeclaration","scope":2973,"src":"5348:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2912,"nodeType":"UserDefinedTypeName","pathNode":{"id":2911,"name":"RecoverError","nameLocations":["5348:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"5348:12:20"},"referencedDeclaration":2719,"src":"5348:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:20","nodeType":"VariableDeclaration","scope":2973,"src":"5366:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:20"},"scope":3059,"src":"5203:1551:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3008,"nodeType":"Block","src":"6981:166:20","statements":[{"assignments":[2988,2991,2993],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:20","nodeType":"VariableDeclaration","scope":3008,"src":"6992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"error","nameLocation":"7024:5:20","nodeType":"VariableDeclaration","scope":3008,"src":"7011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2990,"nodeType":"UserDefinedTypeName","pathNode":{"id":2989,"name":"RecoverError","nameLocations":["7011:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"7011:12:20"},"referencedDeclaration":2719,"src":"7011:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:20","nodeType":"VariableDeclaration","scope":3008,"src":"7031:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3000,"initialValue":{"arguments":[{"id":2995,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"7062:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2996,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"7068:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2997,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2998,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"7074:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2994,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2785,2865,2973],"referencedDeclaration":2973,"src":"7051:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2719_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:20"},{"expression":{"arguments":[{"id":3002,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"7098:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},{"id":3003,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"7105:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3001,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"7086:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2719_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"ExpressionStatement","src":"7086:28:20"},{"expression":{"id":3006,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"7131:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2986,"id":3007,"nodeType":"Return","src":"7124:16:20"}]},"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"6760:122:20","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3009,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:20","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"hash","nameLocation":"6912:4:20","nodeType":"VariableDeclaration","scope":3009,"src":"6904:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"v","nameLocation":"6924:1:20","nodeType":"VariableDeclaration","scope":3009,"src":"6918:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2977,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"r","nameLocation":"6935:1:20","nodeType":"VariableDeclaration","scope":3009,"src":"6927:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"s","nameLocation":"6946:1:20","nodeType":"VariableDeclaration","scope":3009,"src":"6938:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:20"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3009,"src":"6972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:20"},"scope":3059,"src":"6887:260:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3057,"nodeType":"Block","src":"7352:460:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7366:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3019,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7375:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2715,"src":"7375:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7462:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3025,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7471:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"7471:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7567:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3033,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7576:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2717,"src":"7576:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7701:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3045,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"7710:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2719_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"7710:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"7697:109:20","trueBody":{"id":3052,"nodeType":"Block","src":"7742:64:20","statements":[{"errorCall":{"arguments":[{"id":3049,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"7786:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3048,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7763:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3051,"nodeType":"RevertStatement","src":"7756:39:20"}]}},"id":3054,"nodeType":"IfStatement","src":"7563:243:20","trueBody":{"id":3043,"nodeType":"Block","src":"7613:78:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3039,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"7670:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:20","typeDescriptions":{}}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3036,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"7634:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3042,"nodeType":"RevertStatement","src":"7627:53:20"}]}},"id":3055,"nodeType":"IfStatement","src":"7458:348:20","trueBody":{"id":3031,"nodeType":"Block","src":"7502:55:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3028,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"7523:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3030,"nodeType":"RevertStatement","src":"7516:30:20"}]}},"id":3056,"nodeType":"IfStatement","src":"7362:444:20","trueBody":{"id":3023,"nodeType":"Block","src":"7397:55:20","statements":[{"functionReturnParameters":3017,"id":3022,"nodeType":"Return","src":"7411:7:20"}]}}]},"documentation":{"id":3010,"nodeType":"StructuredDocumentation","src":"7153:122:20","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3058,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:20","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"error","nameLocation":"7314:5:20","nodeType":"VariableDeclaration","scope":3058,"src":"7301:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3012,"nodeType":"UserDefinedTypeName","pathNode":{"id":3011,"name":"RecoverError","nameLocations":["7301:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"7301:12:20"},"referencedDeclaration":2719,"src":"7301:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2719","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:20","nodeType":"VariableDeclaration","scope":3058,"src":"7321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:20"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[],"src":"7352:0:20"},"scope":3059,"src":"7280:532:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3060,"src":"344:7470:20","usedErrors":[2722,2727,2732],"usedEvents":[]}],"src":"112:7703:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3286],"IERC5267":[262],"MessageHashUtils":[3360],"ShortString":[2056],"ShortStrings":[2267]},"id":3287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":3361,"src":"139:56:21","symbolAliases":[{"foreign":{"id":3062,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"147:16:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3066,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":2268,"src":"196:62:21","symbolAliases":[{"foreign":{"id":3064,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"204:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3065,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"218:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3068,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":263,"src":"259:55:21","symbolAliases":[{"foreign":{"id":3067,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"267:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3070,"name":"IERC5267","nameLocations":["1988:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":262,"src":"1988:8:21"},"id":3071,"nodeType":"InheritanceSpecifier","src":"1988:8:21"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"316:1643:21","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3286,"linearizedBaseContracts":[3286,262],"name":"EIP712","nameLocation":"1978:6:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3073,"libraryName":{"id":3072,"name":"ShortStrings","nameLocations":["2009:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"2009:12:21"},"nodeType":"UsingForDirective","src":"2003:25:21"},{"constant":true,"id":3078,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:21","nodeType":"VariableDeclaration","scope":3286,"src":"2034:140:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3075,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3080,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:21","nodeType":"VariableDeclaration","scope":3286,"src":"2373:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3082,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:21","nodeType":"VariableDeclaration","scope":3286,"src":"2427:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3084,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:21","nodeType":"VariableDeclaration","scope":3286,"src":"2473:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3086,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:21","nodeType":"VariableDeclaration","scope":3286,"src":"2517:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3088,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:21","nodeType":"VariableDeclaration","scope":3286,"src":"2560:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3091,"mutability":"immutable","name":"_name","nameLocation":"2637:5:21","nodeType":"VariableDeclaration","scope":3286,"src":"2607:35:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":3090,"nodeType":"UserDefinedTypeName","pathNode":{"id":3089,"name":"ShortString","nameLocations":["2607:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2607:11:21"},"referencedDeclaration":2056,"src":"2607:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3094,"mutability":"immutable","name":"_version","nameLocation":"2678:8:21","nodeType":"VariableDeclaration","scope":3286,"src":"2648:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"},"typeName":{"id":3093,"nodeType":"UserDefinedTypeName","pathNode":{"id":3092,"name":"ShortString","nameLocations":["2648:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2648:11:21"},"referencedDeclaration":2056,"src":"2648:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3096,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:21","nodeType":"VariableDeclaration","scope":3286,"src":"2692:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3095,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3098,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:21","nodeType":"VariableDeclaration","scope":3286,"src":"2726:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3097,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3155,"nodeType":"Block","src":"3383:376:21","statements":[{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"3393:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3109,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3432:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3107,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3401:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"3401:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"src":"3393:53:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3112,"nodeType":"ExpressionStatement","src":"3393:53:21"},{"expression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3113,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"3456:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3116,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"3501:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3114,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3467:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"3467:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2056_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"src":"3456:62:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3119,"nodeType":"ExpressionStatement","src":"3456:62:21"},{"expression":{"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3528:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3124,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3558:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3122,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:21","typeDescriptions":{}}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3121,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3128,"nodeType":"ExpressionStatement","src":"3528:36:21"},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3129,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3574:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3133,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3607:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3131,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:21","typeDescriptions":{}}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3130,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3137,"nodeType":"ExpressionStatement","src":"3574:42:21"},{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3627:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3139,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3142,"nodeType":"ExpressionStatement","src":"3627:30:21"},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"3667:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3144,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"3692:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3147,"nodeType":"ExpressionStatement","src":"3667:48:21"},{"expression":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"3725:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3151,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}],"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:21","typeDescriptions":{}}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3154,"nodeType":"ExpressionStatement","src":"3725:27:21"}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"2764:559:21","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3156,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"name","nameLocation":"3354:4:21","nodeType":"VariableDeclaration","scope":3156,"src":"3340:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3100,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"version","nameLocation":"3374:7:21","nodeType":"VariableDeclaration","scope":3156,"src":"3360:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:21"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[],"src":"3383:0:21"},"scope":3286,"src":"3328:431:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"3907:200:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3164,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}],"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:21","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3166,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"3938:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3168,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3170,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3970:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3179,"nodeType":"Block","src":"4046:55:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3176,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4067:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3161,"id":3178,"nodeType":"Return","src":"4060:30:21"}]},"id":3180,"nodeType":"IfStatement","src":"3917:184:21","trueBody":{"id":3175,"nodeType":"Block","src":"3986:54:21","statements":[{"expression":{"id":3173,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"4007:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3161,"id":3174,"nodeType":"Return","src":"4000:29:21"}]}}]},"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"3765:75:21","text":" @dev Returns the domain separator for the current chain."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:21","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[],"src":"3872:2:21"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"3898:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:21"},"scope":3286,"src":"3845:262:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3202,"nodeType":"Block","src":"4177:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":3190,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"4215:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3191,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4226:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3192,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4239:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3193,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3197,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:21","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3188,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:21","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3187,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3186,"id":3201,"nodeType":"Return","src":"4187:98:21"}]},"id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:21","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"4143:2:21"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"4168:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:21"},"scope":3286,"src":"4113:179:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3218,"nodeType":"Block","src":"5003:90:21","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3213,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5053:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3215,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5075:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3211,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"5020:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3360_$","typeString":"type(library MessageHashUtils)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:21","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3359,"src":"5020:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3210,"id":3217,"nodeType":"Return","src":"5013:73:21"}]},"documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"4298:614:21","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:21","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:21","nodeType":"VariableDeclaration","scope":3219,"src":"4943:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:21"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"4994:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:21"},"scope":3286,"src":"4917:176:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[261],"body":{"id":3260,"nodeType":"Block","src":"5472:229:21","statements":[{"expression":{"components":[{"hexValue":"0f","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3239,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5533:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3241,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5560:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3243,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3247,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3286","typeString":"contract EIP712"}],"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:21","typeDescriptions":{}}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:21","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ArrayTypeName","src":"5672:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3237,"id":3259,"nodeType":"Return","src":"5482:212:21"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"5099:40:21","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:21","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[],"src":"5165:2:21"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"fields","nameLocation":"5249:6:21","nodeType":"VariableDeclaration","scope":3261,"src":"5242:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3222,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"name","nameLocation":"5283:4:21","nodeType":"VariableDeclaration","scope":3261,"src":"5269:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3224,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"version","nameLocation":"5315:7:21","nodeType":"VariableDeclaration","scope":3261,"src":"5301:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3226,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:21","nodeType":"VariableDeclaration","scope":3261,"src":"5336:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:21","nodeType":"VariableDeclaration","scope":3261,"src":"5365:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3230,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"salt","nameLocation":"5412:4:21","nodeType":"VariableDeclaration","scope":3261,"src":"5404:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:21","nodeType":"VariableDeclaration","scope":3261,"src":"5430:27:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ArrayTypeName","src":"5430:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:21"},"scope":3286,"src":"5144:557:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3272,"nodeType":"Block","src":"6082:65:21","statements":[{"expression":{"arguments":[{"id":3269,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"6126:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3267,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"6099:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"6099:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3266,"id":3271,"nodeType":"Return","src":"6092:48:21"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"5707:256:21","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:21","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[],"src":"6041:2:21"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3273,"src":"6067:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3264,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:21"},"scope":3286,"src":"6021:126:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3284,"nodeType":"Block","src":"6537:71:21","statements":[{"expression":{"arguments":[{"id":3281,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6584:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3279,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"6554:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2056","typeString":"ShortString"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"6554:29:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2056_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2056_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3278,"id":3283,"nodeType":"Return","src":"6547:54:21"}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"6153:262:21","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:21","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[],"src":"6496:2:21"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"6522:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3276,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:21"},"scope":3286,"src":"6473:135:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3287,"src":"1960:4650:21","usedErrors":[2064,2066],"usedEvents":[242]}],"src":"113:6498:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3360],"Strings":[2711]},"id":3361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3361,"sourceUnit":2712,"src":"149:39:22","symbolAliases":[{"foreign":{"id":3289,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"157:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"190:330:22","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3360,"linearizedBaseContracts":[3360],"name":"MessageHashUtils","nameLocation":"529:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3300,"nodeType":"Block","src":"1314:341:22","statements":[{"AST":{"nativeSrc":"1349:300:22","nodeType":"YulBlock","src":"1349:300:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:22","nodeType":"YulLiteral","src":"1370:4:22","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:22","nodeType":"YulLiteral","src":"1376:34:22","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:22","nodeType":"YulIdentifier","src":"1363:6:22"},"nativeSrc":"1363:48:22","nodeType":"YulFunctionCall","src":"1363:48:22"},"nativeSrc":"1363:48:22","nodeType":"YulExpressionStatement","src":"1363:48:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:22","nodeType":"YulLiteral","src":"1472:4:22","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:22","nodeType":"YulIdentifier","src":"1478:11:22"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:22","nodeType":"YulIdentifier","src":"1465:6:22"},"nativeSrc":"1465:25:22","nodeType":"YulFunctionCall","src":"1465:25:22"},"nativeSrc":"1465:25:22","nodeType":"YulExpressionStatement","src":"1465:25:22"},{"nativeSrc":"1544:31:22","nodeType":"YulAssignment","src":"1544:31:22","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:22","nodeType":"YulLiteral","src":"1564:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:22","nodeType":"YulLiteral","src":"1570:4:22","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:22","nodeType":"YulIdentifier","src":"1554:9:22"},"nativeSrc":"1554:21:22","nodeType":"YulFunctionCall","src":"1554:21:22"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:22","nodeType":"YulIdentifier","src":"1544:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3297,"isOffset":false,"isSlot":false,"src":"1544:6:22","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"1478:11:22","valueSize":1}],"flags":["memory-safe"],"id":3299,"nodeType":"InlineAssembly","src":"1324:325:22"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"552:665:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:22","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:22","nodeType":"VariableDeclaration","scope":3301,"src":"1254:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:22"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"digest","nameLocation":"1306:6:22","nodeType":"VariableDeclaration","scope":3301,"src":"1298:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:22"},"scope":3360,"src":"1222:433:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3326,"nodeType":"Block","src":"2207:143:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3318,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2316:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:22","memberName":"length","nodeType":"MemberAccess","src":"2316:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3316,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"2299:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2711_$","typeString":"type(library Strings)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:22","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2459,"src":"2299:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3314,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:22","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3322,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2334:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3310,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:22","typeDescriptions":{}}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:22","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:22","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3308,"id":3325,"nodeType":"Return","src":"2217:126:22"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"1661:455:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3327,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:22","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"message","nameLocation":"2166:7:22","nodeType":"VariableDeclaration","scope":3327,"src":"2153:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3303,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:22"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3327,"src":"2198:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:22"},"scope":3360,"src":"2121:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"2804:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3341,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"2860:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"2871:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3338,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3337,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3336,"id":3345,"nodeType":"Return","src":"2814:63:22"}]},"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"2356:332:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:22","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"validator","nameLocation":"2742:9:22","nodeType":"VariableDeclaration","scope":3347,"src":"2734:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"data","nameLocation":"2766:4:22","nodeType":"VariableDeclaration","scope":3347,"src":"2753:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3331,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:22"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"2795:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:22"},"scope":3360,"src":"2693:191:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"3435:265:22","statements":[{"AST":{"nativeSrc":"3470:224:22","nodeType":"YulBlock","src":"3470:224:22","statements":[{"nativeSrc":"3484:22:22","nodeType":"YulVariableDeclaration","src":"3484:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:22","nodeType":"YulLiteral","src":"3501:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:22","nodeType":"YulIdentifier","src":"3495:5:22"},"nativeSrc":"3495:11:22","nodeType":"YulFunctionCall","src":"3495:11:22"},"variables":[{"name":"ptr","nativeSrc":"3488:3:22","nodeType":"YulTypedName","src":"3488:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:22","nodeType":"YulIdentifier","src":"3526:3:22"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:22","nodeType":"YulLiteral","src":"3531:10:22","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:22","nodeType":"YulIdentifier","src":"3519:6:22"},"nativeSrc":"3519:23:22","nodeType":"YulFunctionCall","src":"3519:23:22"},"nativeSrc":"3519:23:22","nodeType":"YulExpressionStatement","src":"3519:23:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:22","nodeType":"YulIdentifier","src":"3566:3:22"},{"kind":"number","nativeSrc":"3571:4:22","nodeType":"YulLiteral","src":"3571:4:22","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:22","nodeType":"YulIdentifier","src":"3562:3:22"},"nativeSrc":"3562:14:22","nodeType":"YulFunctionCall","src":"3562:14:22"},{"name":"domainSeparator","nativeSrc":"3578:15:22","nodeType":"YulIdentifier","src":"3578:15:22"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:22","nodeType":"YulIdentifier","src":"3555:6:22"},"nativeSrc":"3555:39:22","nodeType":"YulFunctionCall","src":"3555:39:22"},"nativeSrc":"3555:39:22","nodeType":"YulExpressionStatement","src":"3555:39:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:22","nodeType":"YulIdentifier","src":"3618:3:22"},{"kind":"number","nativeSrc":"3623:4:22","nodeType":"YulLiteral","src":"3623:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:22","nodeType":"YulIdentifier","src":"3614:3:22"},"nativeSrc":"3614:14:22","nodeType":"YulFunctionCall","src":"3614:14:22"},{"name":"structHash","nativeSrc":"3630:10:22","nodeType":"YulIdentifier","src":"3630:10:22"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:22","nodeType":"YulIdentifier","src":"3607:6:22"},"nativeSrc":"3607:34:22","nodeType":"YulFunctionCall","src":"3607:34:22"},"nativeSrc":"3607:34:22","nodeType":"YulExpressionStatement","src":"3607:34:22"},{"nativeSrc":"3654:30:22","nodeType":"YulAssignment","src":"3654:30:22","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:22","nodeType":"YulIdentifier","src":"3674:3:22"},{"kind":"number","nativeSrc":"3679:4:22","nodeType":"YulLiteral","src":"3679:4:22","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:22","nodeType":"YulIdentifier","src":"3664:9:22"},"nativeSrc":"3664:20:22","nodeType":"YulFunctionCall","src":"3664:20:22"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:22","nodeType":"YulIdentifier","src":"3654:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3355,"isOffset":false,"isSlot":false,"src":"3654:6:22","valueSize":1},{"declaration":3350,"isOffset":false,"isSlot":false,"src":"3578:15:22","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"3630:10:22","valueSize":1}],"flags":["memory-safe"],"id":3357,"nodeType":"InlineAssembly","src":"3445:249:22"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"2890:431:22","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:22","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:22","nodeType":"VariableDeclaration","scope":3359,"src":"3351:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:22","nodeType":"VariableDeclaration","scope":3359,"src":"3376:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:22"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"digest","nameLocation":"3427:6:22","nodeType":"VariableDeclaration","scope":3359,"src":"3419:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:22"},"scope":3360,"src":"3326:374:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3361,"src":"521:3181:22","usedErrors":[],"usedEvents":[]}],"src":"123:3580:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3372]},"id":3373,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3362,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"141:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3372,"linearizedBaseContracts":[3372],"name":"IERC165","nameLocation":"432:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"446:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3371,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:23","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:23","nodeType":"VariableDeclaration","scope":3371,"src":"818:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3365,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:23"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"861:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3368,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:23"},"scope":3372,"src":"791:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3373,"src":"422:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:755:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4978],"Panic":[2050],"SafeCast":[6743]},"id":4979,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3374,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4979,"sourceUnit":2051,"src":"129:35:24","symbolAliases":[{"foreign":{"id":3375,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4979,"sourceUnit":6744,"src":"165:40:24","symbolAliases":[{"foreign":{"id":3377,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4978,"linearizedBaseContracts":[4978],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3384,"members":[{"id":3380,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":3381,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":3382,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":3383,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":3415,"nodeType":"Block","src":"677:140:24","statements":[{"id":3414,"nodeType":"UncheckedBlock","src":"687:124:24","statements":[{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"c","nameLocation":"719:1:24","nodeType":"VariableDeclaration","scope":3414,"src":"711:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"727:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"746:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"750:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3409,"nodeType":"IfStatement","src":"742:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3395,"id":3408,"nodeType":"Return","src":"753:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3411,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"798:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3395,"id":3413,"nodeType":"Return","src":"784:16:24"}]}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"475:106:24","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3416,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:24","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"a","nameLocation":"610:1:24","nodeType":"VariableDeclaration","scope":3416,"src":"602:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"b","nameLocation":"621:1:24","nodeType":"VariableDeclaration","scope":3416,"src":"613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:24"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"success","nameLocation":"652:7:24","nodeType":"VariableDeclaration","scope":3416,"src":"647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3391,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"result","nameLocation":"669:6:24","nodeType":"VariableDeclaration","scope":3416,"src":"661:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:24"},"scope":4978,"src":"586:231:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3443,"nodeType":"Block","src":"1028:113:24","statements":[{"id":3442,"nodeType":"UncheckedBlock","src":"1038:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"1066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"1070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3435,"nodeType":"IfStatement","src":"1062:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3427,"id":3434,"nodeType":"Return","src":"1073:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"1118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"1122:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3427,"id":3441,"nodeType":"Return","src":"1104:20:24"}]}]},"documentation":{"id":3417,"nodeType":"StructuredDocumentation","src":"823:109:24","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3444,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:24","nodeType":"FunctionDefinition","parameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"a","nameLocation":"961:1:24","nodeType":"VariableDeclaration","scope":3444,"src":"953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"b","nameLocation":"972:1:24","nodeType":"VariableDeclaration","scope":3444,"src":"964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:24"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"success","nameLocation":"1003:7:24","nodeType":"VariableDeclaration","scope":3444,"src":"998:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3423,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"result","nameLocation":"1020:6:24","nodeType":"VariableDeclaration","scope":3444,"src":"1012:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:24"},"scope":4978,"src":"937:204:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"1355:417:24","statements":[{"id":3484,"nodeType":"UncheckedBlock","src":"1365:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"1623:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3463,"nodeType":"IfStatement","src":"1619:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3455,"id":3462,"nodeType":"Return","src":"1631:16:24"}},{"assignments":[3465],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"c","nameLocation":"1669:1:24","nodeType":"VariableDeclaration","scope":3484,"src":"1661:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"1673:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1677:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3470,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"1696:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"1700:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1705:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"1692:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3455,"id":3478,"nodeType":"Return","src":"1708:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3481,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"1753:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3455,"id":3483,"nodeType":"Return","src":"1739:16:24"}]}]},"documentation":{"id":3445,"nodeType":"StructuredDocumentation","src":"1147:112:24","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:24","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3447,"mutability":"mutable","name":"a","nameLocation":"1288:1:24","nodeType":"VariableDeclaration","scope":3486,"src":"1280:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"mutability":"mutable","name":"b","nameLocation":"1299:1:24","nodeType":"VariableDeclaration","scope":3486,"src":"1291:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:24"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"success","nameLocation":"1330:7:24","nodeType":"VariableDeclaration","scope":3486,"src":"1325:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3451,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"result","nameLocation":"1347:6:24","nodeType":"VariableDeclaration","scope":3486,"src":"1339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:24"},"scope":4978,"src":"1264:508:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3513,"nodeType":"Block","src":"1987:114:24","statements":[{"id":3512,"nodeType":"UncheckedBlock","src":"1997:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2025:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3505,"nodeType":"IfStatement","src":"2021:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3497,"id":3504,"nodeType":"Return","src":"2033:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"2078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"2082:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3497,"id":3511,"nodeType":"Return","src":"2064:20:24"}]}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"1778:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:24","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"a","nameLocation":"1920:1:24","nodeType":"VariableDeclaration","scope":3514,"src":"1912:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"b","nameLocation":"1931:1:24","nodeType":"VariableDeclaration","scope":3514,"src":"1923:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:24"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"success","nameLocation":"1962:7:24","nodeType":"VariableDeclaration","scope":3514,"src":"1957:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3493,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3496,"mutability":"mutable","name":"result","nameLocation":"1979:6:24","nodeType":"VariableDeclaration","scope":3514,"src":"1971:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:24"},"scope":4978,"src":"1896:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"2326:114:24","statements":[{"id":3540,"nodeType":"UncheckedBlock","src":"2336:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2364:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3533,"nodeType":"IfStatement","src":"2360:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3525,"id":3532,"nodeType":"Return","src":"2372:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"2417:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2421:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3525,"id":3539,"nodeType":"Return","src":"2403:20:24"}]}]},"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"2107:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:24","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"a","nameLocation":"2259:1:24","nodeType":"VariableDeclaration","scope":3542,"src":"2251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"b","nameLocation":"2270:1:24","nodeType":"VariableDeclaration","scope":3542,"src":"2262:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:24"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"success","nameLocation":"2301:7:24","nodeType":"VariableDeclaration","scope":3542,"src":"2296:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3521,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"result","nameLocation":"2318:6:24","nodeType":"VariableDeclaration","scope":3542,"src":"2310:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:24"},"scope":4978,"src":"2235:205:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3568,"nodeType":"Block","src":"2912:207:24","statements":[{"id":3567,"nodeType":"UncheckedBlock","src":"2922:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"3060:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"3066:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"3070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3561,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"3091:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3559,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"3075:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"3075:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3553,"id":3566,"nodeType":"Return","src":"3053:49:24"}]}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"2446:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3569,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:24","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"condition","nameLocation":"2847:9:24","nodeType":"VariableDeclaration","scope":3569,"src":"2842:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3544,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"a","nameLocation":"2866:1:24","nodeType":"VariableDeclaration","scope":3569,"src":"2858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"b","nameLocation":"2877:1:24","nodeType":"VariableDeclaration","scope":3569,"src":"2869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:24"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3569,"src":"2903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:24"},"scope":4978,"src":"2825:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3587,"nodeType":"Block","src":"3256:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"3281:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"3285:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"3288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"3291:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3579,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"3273:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3578,"id":3586,"nodeType":"Return","src":"3266:27:24"}]},"documentation":{"id":3570,"nodeType":"StructuredDocumentation","src":"3125:59:24","text":" @dev Returns the largest of two numbers."},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:24","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"a","nameLocation":"3210:1:24","nodeType":"VariableDeclaration","scope":3588,"src":"3202:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"b","nameLocation":"3221:1:24","nodeType":"VariableDeclaration","scope":3588,"src":"3213:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:24"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3588,"src":"3247:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:24"},"scope":4978,"src":"3189:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"3438:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"3463:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"3470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"3473:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3598,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3597,"id":3605,"nodeType":"Return","src":"3448:27:24"}]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"3306:60:24","text":" @dev Returns the smallest of two numbers."},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:24","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"a","nameLocation":"3392:1:24","nodeType":"VariableDeclaration","scope":3607,"src":"3384:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"b","nameLocation":"3403:1:24","nodeType":"VariableDeclaration","scope":3607,"src":"3395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:24"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"3429:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:24"},"scope":4978,"src":"3371:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3629,"nodeType":"Block","src":"3666:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"3721:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"3731:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"3735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3616,"id":3628,"nodeType":"Return","src":"3713:28:24"}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"3488:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3630,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:24","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"a","nameLocation":"3620:1:24","nodeType":"VariableDeclaration","scope":3630,"src":"3612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"b","nameLocation":"3631:1:24","nodeType":"VariableDeclaration","scope":3630,"src":"3623:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:24"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3630,"src":"3657:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:24"},"scope":4978,"src":"3595:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3670,"nodeType":"Block","src":"4040:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"4050:150:24","trueBody":{"id":3650,"nodeType":"Block","src":"4062:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":3646,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4166:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"4166:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3643,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4154:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"4154:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"4154:35:24"}]}},{"id":3669,"nodeType":"UncheckedBlock","src":"4583:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"4630:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3652,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"4614:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"4614:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"4641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4650:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3668,"nodeType":"Return","src":"4607:49:24"}]}]},"documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"3754:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:24","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"a","nameLocation":"3994:1:24","nodeType":"VariableDeclaration","scope":3671,"src":"3986:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"b","nameLocation":"4005:1:24","nodeType":"VariableDeclaration","scope":3671,"src":"3997:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:24"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"4031:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:24"},"scope":4978,"src":"3969:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"5094:4128:24","statements":[{"id":3806,"nodeType":"UncheckedBlock","src":"5104:4112:24","statements":[{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:24","nodeType":"VariableDeclaration","scope":3806,"src":"5433:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"5449:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3686,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"5453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:24"},{"assignments":[3690],"declarations":[{"constant":false,"id":3690,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:24","nodeType":"VariableDeclaration","scope":3806,"src":"5513:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3691,"nodeType":"VariableDeclarationStatement","src":"5513:13:24"},{"AST":{"nativeSrc":"5593:122:24","nodeType":"YulBlock","src":"5593:122:24","statements":[{"nativeSrc":"5611:30:24","nodeType":"YulVariableDeclaration","src":"5611:30:24","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:24","nodeType":"YulIdentifier","src":"5628:1:24"},{"name":"y","nativeSrc":"5631:1:24","nodeType":"YulIdentifier","src":"5631:1:24"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:24","nodeType":"YulLiteral","src":"5638:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:24","nodeType":"YulIdentifier","src":"5634:3:24"},"nativeSrc":"5634:6:24","nodeType":"YulFunctionCall","src":"5634:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:24","nodeType":"YulIdentifier","src":"5621:6:24"},"nativeSrc":"5621:20:24","nodeType":"YulFunctionCall","src":"5621:20:24"},"variables":[{"name":"mm","nativeSrc":"5615:2:24","nodeType":"YulTypedName","src":"5615:2:24","type":""}]},{"nativeSrc":"5658:43:24","nodeType":"YulAssignment","src":"5658:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:24","nodeType":"YulIdentifier","src":"5675:2:24"},{"name":"prod0","nativeSrc":"5679:5:24","nodeType":"YulIdentifier","src":"5679:5:24"}],"functionName":{"name":"sub","nativeSrc":"5671:3:24","nodeType":"YulIdentifier","src":"5671:3:24"},"nativeSrc":"5671:14:24","nodeType":"YulFunctionCall","src":"5671:14:24"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:24","nodeType":"YulIdentifier","src":"5690:2:24"},{"name":"prod0","nativeSrc":"5694:5:24","nodeType":"YulIdentifier","src":"5694:5:24"}],"functionName":{"name":"lt","nativeSrc":"5687:2:24","nodeType":"YulIdentifier","src":"5687:2:24"},"nativeSrc":"5687:13:24","nodeType":"YulFunctionCall","src":"5687:13:24"}],"functionName":{"name":"sub","nativeSrc":"5667:3:24","nodeType":"YulIdentifier","src":"5667:3:24"},"nativeSrc":"5667:34:24","nodeType":"YulFunctionCall","src":"5667:34:24"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:24","nodeType":"YulIdentifier","src":"5658:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3684,"isOffset":false,"isSlot":false,"src":"5679:5:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"5694:5:24","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"5658:5:24","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"5628:1:24","valueSize":1},{"declaration":3676,"isOffset":false,"isSlot":false,"src":"5631:1:24","valueSize":1}],"id":3692,"nodeType":"InlineAssembly","src":"5584:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3701,"nodeType":"IfStatement","src":"5792:368:24","trueBody":{"id":3700,"nodeType":"Block","src":"5808:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"6126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3697,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"6134:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3682,"id":3699,"nodeType":"Return","src":"6119:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"6270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3703,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"6285:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"6266:143:24","trueBody":{"id":3719,"nodeType":"Block","src":"6292:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"6330:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3712,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6348:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"6348:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3714,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6372:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2013,"src":"6372:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3708,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"6322:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3705,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6310:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"6310:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"ExpressionStatement","src":"6310:84:24"}]}},{"assignments":[3722],"declarations":[{"constant":false,"id":3722,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:24","nodeType":"VariableDeclaration","scope":3806,"src":"6664:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3723,"nodeType":"VariableDeclarationStatement","src":"6664:17:24"},{"AST":{"nativeSrc":"6704:291:24","nodeType":"YulBlock","src":"6704:291:24","statements":[{"nativeSrc":"6773:38:24","nodeType":"YulAssignment","src":"6773:38:24","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:24","nodeType":"YulIdentifier","src":"6793:1:24"},{"name":"y","nativeSrc":"6796:1:24","nodeType":"YulIdentifier","src":"6796:1:24"},{"name":"denominator","nativeSrc":"6799:11:24","nodeType":"YulIdentifier","src":"6799:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:24","nodeType":"YulIdentifier","src":"6786:6:24"},"nativeSrc":"6786:25:24","nodeType":"YulFunctionCall","src":"6786:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:24","nodeType":"YulIdentifier","src":"6773:9:24"}]},{"nativeSrc":"6893:41:24","nodeType":"YulAssignment","src":"6893:41:24","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:24","nodeType":"YulIdentifier","src":"6906:5:24"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:24","nodeType":"YulIdentifier","src":"6916:9:24"},{"name":"prod0","nativeSrc":"6927:5:24","nodeType":"YulIdentifier","src":"6927:5:24"}],"functionName":{"name":"gt","nativeSrc":"6913:2:24","nodeType":"YulIdentifier","src":"6913:2:24"},"nativeSrc":"6913:20:24","nodeType":"YulFunctionCall","src":"6913:20:24"}],"functionName":{"name":"sub","nativeSrc":"6902:3:24","nodeType":"YulIdentifier","src":"6902:3:24"},"nativeSrc":"6902:32:24","nodeType":"YulFunctionCall","src":"6902:32:24"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:24","nodeType":"YulIdentifier","src":"6893:5:24"}]},{"nativeSrc":"6951:30:24","nodeType":"YulAssignment","src":"6951:30:24","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:24","nodeType":"YulIdentifier","src":"6964:5:24"},{"name":"remainder","nativeSrc":"6971:9:24","nodeType":"YulIdentifier","src":"6971:9:24"}],"functionName":{"name":"sub","nativeSrc":"6960:3:24","nodeType":"YulIdentifier","src":"6960:3:24"},"nativeSrc":"6960:21:24","nodeType":"YulFunctionCall","src":"6960:21:24"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:24","nodeType":"YulIdentifier","src":"6951:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3678,"isOffset":false,"isSlot":false,"src":"6799:11:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"6927:5:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"6951:5:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"6964:5:24","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"6893:5:24","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"6906:5:24","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"6773:9:24","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"6916:9:24","valueSize":1},{"declaration":3722,"isOffset":false,"isSlot":false,"src":"6971:9:24","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"6793:1:24","valueSize":1},{"declaration":3676,"isOffset":false,"isSlot":false,"src":"6796:1:24","valueSize":1}],"id":3724,"nodeType":"InlineAssembly","src":"6695:300:24"},{"assignments":[3726],"declarations":[{"constant":false,"id":3726,"mutability":"mutable","name":"twos","nameLocation":"7207:4:24","nodeType":"VariableDeclaration","scope":3806,"src":"7199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3733,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"7214:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3729,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"7233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:24"},{"AST":{"nativeSrc":"7268:366:24","nodeType":"YulBlock","src":"7268:366:24","statements":[{"nativeSrc":"7333:37:24","nodeType":"YulAssignment","src":"7333:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:24","nodeType":"YulIdentifier","src":"7352:11:24"},{"name":"twos","nativeSrc":"7365:4:24","nodeType":"YulIdentifier","src":"7365:4:24"}],"functionName":{"name":"div","nativeSrc":"7348:3:24","nodeType":"YulIdentifier","src":"7348:3:24"},"nativeSrc":"7348:22:24","nodeType":"YulFunctionCall","src":"7348:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:24","nodeType":"YulIdentifier","src":"7333:11:24"}]},{"nativeSrc":"7437:25:24","nodeType":"YulAssignment","src":"7437:25:24","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:24","nodeType":"YulIdentifier","src":"7450:5:24"},{"name":"twos","nativeSrc":"7457:4:24","nodeType":"YulIdentifier","src":"7457:4:24"}],"functionName":{"name":"div","nativeSrc":"7446:3:24","nodeType":"YulIdentifier","src":"7446:3:24"},"nativeSrc":"7446:16:24","nodeType":"YulFunctionCall","src":"7446:16:24"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:24","nodeType":"YulIdentifier","src":"7437:5:24"}]},{"nativeSrc":"7581:39:24","nodeType":"YulAssignment","src":"7581:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:24","nodeType":"YulLiteral","src":"7601:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:24","nodeType":"YulIdentifier","src":"7604:4:24"}],"functionName":{"name":"sub","nativeSrc":"7597:3:24","nodeType":"YulIdentifier","src":"7597:3:24"},"nativeSrc":"7597:12:24","nodeType":"YulFunctionCall","src":"7597:12:24"},{"name":"twos","nativeSrc":"7611:4:24","nodeType":"YulIdentifier","src":"7611:4:24"}],"functionName":{"name":"div","nativeSrc":"7593:3:24","nodeType":"YulIdentifier","src":"7593:3:24"},"nativeSrc":"7593:23:24","nodeType":"YulFunctionCall","src":"7593:23:24"},{"kind":"number","nativeSrc":"7618:1:24","nodeType":"YulLiteral","src":"7618:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:24","nodeType":"YulIdentifier","src":"7589:3:24"},"nativeSrc":"7589:31:24","nodeType":"YulFunctionCall","src":"7589:31:24"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:24","nodeType":"YulIdentifier","src":"7581:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3678,"isOffset":false,"isSlot":false,"src":"7333:11:24","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"7352:11:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"7437:5:24","valueSize":1},{"declaration":3684,"isOffset":false,"isSlot":false,"src":"7450:5:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"7365:4:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"7457:4:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"7581:4:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"7604:4:24","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"7611:4:24","valueSize":1}],"id":3734,"nodeType":"InlineAssembly","src":"7259:375:24"},{"expression":{"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3735,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"7700:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"7709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3737,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"7717:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ExpressionStatement","src":"7700:21:24"},{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:24","nodeType":"VariableDeclaration","scope":3806,"src":"8056:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3744,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8079:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:24"},{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8327:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3753,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8341:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"8312:36:24"},{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8397:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3761,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8411:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"8382:36:24"},{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8454:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8469:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3769,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8483:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"8454:36:24"},{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8525:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8554:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"8525:36:24"},{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8613:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3785,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8627:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"8598:36:24"},{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8672:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"8687:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3793,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"8701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"8672:36:24"},{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"9154:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"9163:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"9171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"9154:24:24"},{"expression":{"id":3804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"9199:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3682,"id":3805,"nodeType":"Return","src":"9192:13:24"}]}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"4679:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:24","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"x","nameLocation":"5020:1:24","nodeType":"VariableDeclaration","scope":3808,"src":"5012:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"y","nameLocation":"5031:1:24","nodeType":"VariableDeclaration","scope":3808,"src":"5023:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:24","nodeType":"VariableDeclaration","scope":3808,"src":"5034:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:24"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"result","nameLocation":"5086:6:24","nodeType":"VariableDeclaration","scope":3808,"src":"5078:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:24"},"scope":4978,"src":"4996:4226:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3844,"nodeType":"Block","src":"9461:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3824,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"9485:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3825,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"9488:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3826,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9491:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3823,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3808,3845],"referencedDeclaration":3808,"src":"9478:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3831,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"9539:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":3830,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"9522:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3384_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3834,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"9559:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3835,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"9562:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9565:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3833,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3828,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"9506:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"9506:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3822,"id":3843,"nodeType":"Return","src":"9471:111:24"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"9228:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3845,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:24","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"x","nameLocation":"9375:1:24","nodeType":"VariableDeclaration","scope":3845,"src":"9367:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"y","nameLocation":"9386:1:24","nodeType":"VariableDeclaration","scope":3845,"src":"9378:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:24","nodeType":"VariableDeclaration","scope":3845,"src":"9389:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:24","nodeType":"VariableDeclaration","scope":3845,"src":"9410:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":3817,"nodeType":"UserDefinedTypeName","pathNode":{"id":3816,"name":"Rounding","nameLocations":["9410:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"9410:8:24"},"referencedDeclaration":3384,"src":"9410:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:24"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3845,"src":"9452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:24"},"scope":4978,"src":"9351:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"10223:1849:24","statements":[{"id":3940,"nodeType":"UncheckedBlock","src":"10233:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10261:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"10257:20:24","trueBody":{"expression":{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3854,"id":3859,"nodeType":"Return","src":"10269:8:24"}},{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:24","nodeType":"VariableDeclaration","scope":3940,"src":"10748:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"10768:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3864,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10772:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:24"},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:24","nodeType":"VariableDeclaration","scope":3940,"src":"10787:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3870,"initialValue":{"id":3869,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:24"},{"assignments":[3872],"declarations":[{"constant":false,"id":3872,"mutability":"mutable","name":"x","nameLocation":"10945:1:24","nodeType":"VariableDeclaration","scope":3940,"src":"10938:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3871,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3874,"initialValue":{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:24"},{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"y","nameLocation":"10971:1:24","nodeType":"VariableDeclaration","scope":3940,"src":"10964:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3875,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3878,"initialValue":{"hexValue":"31","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:24"},{"body":{"id":3915,"nodeType":"Block","src":"11014:882:24","statements":[{"assignments":[3883],"declarations":[{"constant":false,"id":3883,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:24","nodeType":"VariableDeclaration","scope":3915,"src":"11032:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11051:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3885,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11057:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:24"},{"expression":{"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3888,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11086:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3889,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11091:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3891,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11191:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11436:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"11442:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3894,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"11454:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3899,"nodeType":"ExpressionStatement","src":"11085:395:24"},{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3900,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"11500:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3901,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11503:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3902,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3903,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11585:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"11839:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11843:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3908,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"11854:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3906,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"ExpressionStatement","src":"11499:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"10998:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3916,"nodeType":"WhileStatement","src":"10991:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11914:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3922,"nodeType":"IfStatement","src":"11910:22:24","trueBody":{"expression":{"hexValue":"30","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3854,"id":3921,"nodeType":"Return","src":"11924:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"11983:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:24","subExpression":{"id":3930,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"12003:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:24","typeDescriptions":{}}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3936,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"12015:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:24","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"11975:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3854,"id":3939,"nodeType":"Return","src":"11968:50:24"}]}]},"documentation":{"id":3846,"nodeType":"StructuredDocumentation","src":"9595:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:24","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"a","nameLocation":"10177:1:24","nodeType":"VariableDeclaration","scope":3942,"src":"10169:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"n","nameLocation":"10188:1:24","nodeType":"VariableDeclaration","scope":3942,"src":"10180:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:24"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3942,"src":"10214:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:24"},"scope":4978,"src":"10153:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"12672:82:24","statements":[{"id":3961,"nodeType":"UncheckedBlock","src":"12682:66:24","statements":[{"expression":{"arguments":[{"id":3954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"12725:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"12728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3958,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"12735:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3952,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"12713:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4978_$","typeString":"type(library Math)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3999,"src":"12713:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3951,"id":3960,"nodeType":"Return","src":"12706:31:24"}]}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"12078:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:24","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"a","nameLocation":"12626:1:24","nodeType":"VariableDeclaration","scope":3963,"src":"12618:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"p","nameLocation":"12637:1:24","nodeType":"VariableDeclaration","scope":3963,"src":"12629:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:24"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3963,"src":"12663:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:24"},"scope":4978,"src":"12597:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"13524:174:24","statements":[{"assignments":[3976,3978],"declarations":[{"constant":false,"id":3976,"mutability":"mutable","name":"success","nameLocation":"13540:7:24","nodeType":"VariableDeclaration","scope":3998,"src":"13535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3975,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"result","nameLocation":"13557:6:24","nodeType":"VariableDeclaration","scope":3998,"src":"13549:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3984,"initialValue":{"arguments":[{"id":3980,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"13577:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3981,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13580:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3982,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13583:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3979,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4023,4105],"referencedDeclaration":4023,"src":"13567:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:24"},{"condition":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:24","subExpression":{"id":3985,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"13600:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"13595:74:24","trueBody":{"id":3994,"nodeType":"Block","src":"13609:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":3990,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13635:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"13635:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3987,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"13623:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"13623:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3993,"nodeType":"ExpressionStatement","src":"13623:35:24"}]}},{"expression":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"13685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3974,"id":3997,"nodeType":"Return","src":"13678:13:24"}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"12760:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:24","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"b","nameLocation":"13467:1:24","nodeType":"VariableDeclaration","scope":3999,"src":"13459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"e","nameLocation":"13478:1:24","nodeType":"VariableDeclaration","scope":3999,"src":"13470:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"m","nameLocation":"13489:1:24","nodeType":"VariableDeclaration","scope":3999,"src":"13481:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:24"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"13515:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:24"},"scope":4978,"src":"13443:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"14552:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"14566:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4020,"nodeType":"IfStatement","src":"14562:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4012,"id":4019,"nodeType":"Return","src":"14574:17:24"}},{"AST":{"nativeSrc":"14626:1413:24","nodeType":"YulBlock","src":"14626:1413:24","statements":[{"nativeSrc":"14640:22:24","nodeType":"YulVariableDeclaration","src":"14640:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:24","nodeType":"YulLiteral","src":"14657:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:24","nodeType":"YulIdentifier","src":"14651:5:24"},"nativeSrc":"14651:11:24","nodeType":"YulFunctionCall","src":"14651:11:24"},"variables":[{"name":"ptr","nativeSrc":"14644:3:24","nodeType":"YulTypedName","src":"14644:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:24","nodeType":"YulIdentifier","src":"15570:3:24"},{"kind":"number","nativeSrc":"15575:4:24","nodeType":"YulLiteral","src":"15575:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:24","nodeType":"YulIdentifier","src":"15563:6:24"},"nativeSrc":"15563:17:24","nodeType":"YulFunctionCall","src":"15563:17:24"},"nativeSrc":"15563:17:24","nodeType":"YulExpressionStatement","src":"15563:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:24","nodeType":"YulIdentifier","src":"15604:3:24"},{"kind":"number","nativeSrc":"15609:4:24","nodeType":"YulLiteral","src":"15609:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:24","nodeType":"YulIdentifier","src":"15600:3:24"},"nativeSrc":"15600:14:24","nodeType":"YulFunctionCall","src":"15600:14:24"},{"kind":"number","nativeSrc":"15616:4:24","nodeType":"YulLiteral","src":"15616:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:24","nodeType":"YulIdentifier","src":"15593:6:24"},"nativeSrc":"15593:28:24","nodeType":"YulFunctionCall","src":"15593:28:24"},"nativeSrc":"15593:28:24","nodeType":"YulExpressionStatement","src":"15593:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:24","nodeType":"YulIdentifier","src":"15645:3:24"},{"kind":"number","nativeSrc":"15650:4:24","nodeType":"YulLiteral","src":"15650:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:24","nodeType":"YulIdentifier","src":"15641:3:24"},"nativeSrc":"15641:14:24","nodeType":"YulFunctionCall","src":"15641:14:24"},{"kind":"number","nativeSrc":"15657:4:24","nodeType":"YulLiteral","src":"15657:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:24","nodeType":"YulIdentifier","src":"15634:6:24"},"nativeSrc":"15634:28:24","nodeType":"YulFunctionCall","src":"15634:28:24"},"nativeSrc":"15634:28:24","nodeType":"YulExpressionStatement","src":"15634:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:24","nodeType":"YulIdentifier","src":"15686:3:24"},{"kind":"number","nativeSrc":"15691:4:24","nodeType":"YulLiteral","src":"15691:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:24","nodeType":"YulIdentifier","src":"15682:3:24"},"nativeSrc":"15682:14:24","nodeType":"YulFunctionCall","src":"15682:14:24"},{"name":"b","nativeSrc":"15698:1:24","nodeType":"YulIdentifier","src":"15698:1:24"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:24","nodeType":"YulIdentifier","src":"15675:6:24"},"nativeSrc":"15675:25:24","nodeType":"YulFunctionCall","src":"15675:25:24"},"nativeSrc":"15675:25:24","nodeType":"YulExpressionStatement","src":"15675:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:24","nodeType":"YulIdentifier","src":"15724:3:24"},{"kind":"number","nativeSrc":"15729:4:24","nodeType":"YulLiteral","src":"15729:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:24","nodeType":"YulIdentifier","src":"15720:3:24"},"nativeSrc":"15720:14:24","nodeType":"YulFunctionCall","src":"15720:14:24"},{"name":"e","nativeSrc":"15736:1:24","nodeType":"YulIdentifier","src":"15736:1:24"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:24","nodeType":"YulIdentifier","src":"15713:6:24"},"nativeSrc":"15713:25:24","nodeType":"YulFunctionCall","src":"15713:25:24"},"nativeSrc":"15713:25:24","nodeType":"YulExpressionStatement","src":"15713:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:24","nodeType":"YulIdentifier","src":"15762:3:24"},{"kind":"number","nativeSrc":"15767:4:24","nodeType":"YulLiteral","src":"15767:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:24","nodeType":"YulIdentifier","src":"15758:3:24"},"nativeSrc":"15758:14:24","nodeType":"YulFunctionCall","src":"15758:14:24"},{"name":"m","nativeSrc":"15774:1:24","nodeType":"YulIdentifier","src":"15774:1:24"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:24","nodeType":"YulIdentifier","src":"15751:6:24"},"nativeSrc":"15751:25:24","nodeType":"YulFunctionCall","src":"15751:25:24"},"nativeSrc":"15751:25:24","nodeType":"YulExpressionStatement","src":"15751:25:24"},{"nativeSrc":"15938:57:24","nodeType":"YulAssignment","src":"15938:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:24","nodeType":"YulIdentifier","src":"15960:3:24"},"nativeSrc":"15960:5:24","nodeType":"YulFunctionCall","src":"15960:5:24"},{"kind":"number","nativeSrc":"15967:4:24","nodeType":"YulLiteral","src":"15967:4:24","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:24","nodeType":"YulIdentifier","src":"15973:3:24"},{"kind":"number","nativeSrc":"15978:4:24","nodeType":"YulLiteral","src":"15978:4:24","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:24","nodeType":"YulLiteral","src":"15984:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:24","nodeType":"YulLiteral","src":"15990:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:24","nodeType":"YulIdentifier","src":"15949:10:24"},"nativeSrc":"15949:46:24","nodeType":"YulFunctionCall","src":"15949:46:24"},"variableNames":[{"name":"success","nativeSrc":"15938:7:24","nodeType":"YulIdentifier","src":"15938:7:24"}]},{"nativeSrc":"16008:21:24","nodeType":"YulAssignment","src":"16008:21:24","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:24","nodeType":"YulLiteral","src":"16024:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:24","nodeType":"YulIdentifier","src":"16018:5:24"},"nativeSrc":"16018:11:24","nodeType":"YulFunctionCall","src":"16018:11:24"},"variableNames":[{"name":"result","nativeSrc":"16008:6:24","nodeType":"YulIdentifier","src":"16008:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4002,"isOffset":false,"isSlot":false,"src":"15698:1:24","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"15736:1:24","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"15774:1:24","valueSize":1},{"declaration":4011,"isOffset":false,"isSlot":false,"src":"16008:6:24","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"15938:7:24","valueSize":1}],"flags":["memory-safe"],"id":4021,"nodeType":"InlineAssembly","src":"14601:1438:24"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"13704:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:24","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"b","nameLocation":"14474:1:24","nodeType":"VariableDeclaration","scope":4023,"src":"14466:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"e","nameLocation":"14485:1:24","nodeType":"VariableDeclaration","scope":4023,"src":"14477:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"m","nameLocation":"14496:1:24","nodeType":"VariableDeclaration","scope":4023,"src":"14488:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:24"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"success","nameLocation":"14527:7:24","nodeType":"VariableDeclaration","scope":4023,"src":"14522:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4008,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"result","nameLocation":"14544:6:24","nodeType":"VariableDeclaration","scope":4023,"src":"14536:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:24"},"scope":4978,"src":"14447:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4058,"nodeType":"Block","src":"16242:179:24","statements":[{"assignments":[4036,4038],"declarations":[{"constant":false,"id":4036,"mutability":"mutable","name":"success","nameLocation":"16258:7:24","nodeType":"VariableDeclaration","scope":4058,"src":"16253:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4035,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"result","nameLocation":"16280:6:24","nodeType":"VariableDeclaration","scope":4058,"src":"16267:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4037,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4044,"initialValue":{"arguments":[{"id":4040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"16300:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4041,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"16303:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4042,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16306:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4039,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4023,4105],"referencedDeclaration":4105,"src":"16290:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:24"},{"condition":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:24","subExpression":{"id":4045,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"16323:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"IfStatement","src":"16318:74:24","trueBody":{"id":4054,"nodeType":"Block","src":"16332:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":4050,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16358:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"16358:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4047,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16346:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2050_$","typeString":"type(library Panic)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"16346:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4053,"nodeType":"ExpressionStatement","src":"16346:35:24"}]}},{"expression":{"id":4056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"16408:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4034,"id":4057,"nodeType":"Return","src":"16401:13:24"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"16051:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:24","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"b","nameLocation":"16170:1:24","nodeType":"VariableDeclaration","scope":4059,"src":"16157:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4025,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4028,"mutability":"mutable","name":"e","nameLocation":"16186:1:24","nodeType":"VariableDeclaration","scope":4059,"src":"16173:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4027,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"m","nameLocation":"16202:1:24","nodeType":"VariableDeclaration","scope":4059,"src":"16189:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4029,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:24"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4059,"src":"16228:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4032,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:24"},"scope":4978,"src":"16141:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"16675:771:24","statements":[{"condition":{"arguments":[{"id":4074,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"16700:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4073,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"16689:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"IfStatement","src":"16685:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4077,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4072,"id":4082,"nodeType":"Return","src":"16704:28:24"}},{"assignments":[4085],"declarations":[{"constant":false,"id":4085,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:24","nodeType":"VariableDeclaration","scope":4104,"src":"16743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4088,"initialValue":{"expression":{"id":4086,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"16758:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:24","memberName":"length","nodeType":"MemberAccess","src":"16758:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:24"},{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"16848:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"16874:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:24","memberName":"length","nodeType":"MemberAccess","src":"16874:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4094,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"16884:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:24","memberName":"length","nodeType":"MemberAccess","src":"16884:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4096,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"16894:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"16900:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4098,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"16903:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4099,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"16906:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4090,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4102,"nodeType":"ExpressionStatement","src":"16848:60:24"},{"AST":{"nativeSrc":"16944:496:24","nodeType":"YulBlock","src":"16944:496:24","statements":[{"nativeSrc":"16958:32:24","nodeType":"YulVariableDeclaration","src":"16958:32:24","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:24","nodeType":"YulIdentifier","src":"16977:6:24"},{"kind":"number","nativeSrc":"16985:4:24","nodeType":"YulLiteral","src":"16985:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:24","nodeType":"YulIdentifier","src":"16973:3:24"},"nativeSrc":"16973:17:24","nodeType":"YulFunctionCall","src":"16973:17:24"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:24","nodeType":"YulTypedName","src":"16962:7:24","type":""}]},{"nativeSrc":"17080:73:24","nodeType":"YulAssignment","src":"17080:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:24","nodeType":"YulIdentifier","src":"17102:3:24"},"nativeSrc":"17102:5:24","nodeType":"YulFunctionCall","src":"17102:5:24"},{"kind":"number","nativeSrc":"17109:4:24","nodeType":"YulLiteral","src":"17109:4:24","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:24","nodeType":"YulIdentifier","src":"17115:7:24"},{"arguments":[{"name":"result","nativeSrc":"17130:6:24","nodeType":"YulIdentifier","src":"17130:6:24"}],"functionName":{"name":"mload","nativeSrc":"17124:5:24","nodeType":"YulIdentifier","src":"17124:5:24"},"nativeSrc":"17124:13:24","nodeType":"YulFunctionCall","src":"17124:13:24"},{"name":"dataPtr","nativeSrc":"17139:7:24","nodeType":"YulIdentifier","src":"17139:7:24"},{"name":"mLen","nativeSrc":"17148:4:24","nodeType":"YulIdentifier","src":"17148:4:24"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:24","nodeType":"YulIdentifier","src":"17091:10:24"},"nativeSrc":"17091:62:24","nodeType":"YulFunctionCall","src":"17091:62:24"},"variableNames":[{"name":"success","nativeSrc":"17080:7:24","nodeType":"YulIdentifier","src":"17080:7:24"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:24","nodeType":"YulIdentifier","src":"17309:6:24"},{"name":"mLen","nativeSrc":"17317:4:24","nodeType":"YulIdentifier","src":"17317:4:24"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:24","nodeType":"YulIdentifier","src":"17302:6:24"},"nativeSrc":"17302:20:24","nodeType":"YulFunctionCall","src":"17302:20:24"},"nativeSrc":"17302:20:24","nodeType":"YulExpressionStatement","src":"17302:20:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:24","nodeType":"YulLiteral","src":"17405:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:24","nodeType":"YulIdentifier","src":"17415:7:24"},{"name":"mLen","nativeSrc":"17424:4:24","nodeType":"YulIdentifier","src":"17424:4:24"}],"functionName":{"name":"add","nativeSrc":"17411:3:24","nodeType":"YulIdentifier","src":"17411:3:24"},"nativeSrc":"17411:18:24","nodeType":"YulFunctionCall","src":"17411:18:24"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:24","nodeType":"YulIdentifier","src":"17398:6:24"},"nativeSrc":"17398:32:24","nodeType":"YulFunctionCall","src":"17398:32:24"},"nativeSrc":"17398:32:24","nodeType":"YulExpressionStatement","src":"17398:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4085,"isOffset":false,"isSlot":false,"src":"17148:4:24","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"17317:4:24","valueSize":1},{"declaration":4085,"isOffset":false,"isSlot":false,"src":"17424:4:24","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"16977:6:24","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"17130:6:24","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"17309:6:24","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"17080:7:24","valueSize":1}],"flags":["memory-safe"],"id":4103,"nodeType":"InlineAssembly","src":"16919:521:24"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"16427:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:24","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"b","nameLocation":"16561:1:24","nodeType":"VariableDeclaration","scope":4105,"src":"16548:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4061,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"e","nameLocation":"16585:1:24","nodeType":"VariableDeclaration","scope":4105,"src":"16572:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4066,"mutability":"mutable","name":"m","nameLocation":"16609:1:24","nodeType":"VariableDeclaration","scope":4105,"src":"16596:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4065,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:24"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"success","nameLocation":"16645:7:24","nodeType":"VariableDeclaration","scope":4105,"src":"16640:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4068,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"result","nameLocation":"16667:6:24","nodeType":"VariableDeclaration","scope":4105,"src":"16654:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4070,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:24"},"scope":4978,"src":"16520:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4137,"nodeType":"Block","src":"17601:176:24","statements":[{"body":{"id":4133,"nodeType":"Block","src":"17658:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4124,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"17676:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4126,"indexExpression":{"id":4125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"17686:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"17672:68:24","trueBody":{"id":4131,"nodeType":"Block","src":"17695:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4112,"id":4130,"nodeType":"Return","src":"17713:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"17631:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4118,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"17635:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:24","memberName":"length","nodeType":"MemberAccess","src":"17635:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4134,"initializationExpression":{"assignments":[4114],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"i","nameLocation":"17624:1:24","nodeType":"VariableDeclaration","scope":4134,"src":"17616:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4116,"initialValue":{"hexValue":"30","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:24","subExpression":{"id":4121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"17655:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"17653:3:24"},"nodeType":"ForStatement","src":"17611:139:24"},{"expression":{"hexValue":"74727565","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4112,"id":4136,"nodeType":"Return","src":"17759:11:24"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"17452:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":4138,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:24","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:24","nodeType":"VariableDeclaration","scope":4138,"src":"17549:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4107,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:24"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4138,"src":"17595:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4110,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:24"},"scope":4978,"src":"17529:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4356,"nodeType":"Block","src":"18137:5124:24","statements":[{"id":4355,"nodeType":"UncheckedBlock","src":"18147:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"18241:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4152,"nodeType":"IfStatement","src":"18237:53:24","trueBody":{"id":4151,"nodeType":"Block","src":"18249:41:24","statements":[{"expression":{"id":4149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"18274:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4145,"id":4150,"nodeType":"Return","src":"18267:8:24"}]}},{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"aa","nameLocation":"19225:2:24","nodeType":"VariableDeclaration","scope":4355,"src":"19217:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"id":4155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"19230:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:24"},{"assignments":[4158],"declarations":[{"constant":false,"id":4158,"mutability":"mutable","name":"xn","nameLocation":"19253:2:24","nodeType":"VariableDeclaration","scope":4355,"src":"19245:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4160,"initialValue":{"hexValue":"31","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4176,"nodeType":"IfStatement","src":"19274:92:24","trueBody":{"id":4175,"nodeType":"Block","src":"19296:70:24","statements":[{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19314:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"nodeType":"ExpressionStatement","src":"19314:10:24"},{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19342:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"19342:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19383:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"19379:90:24","trueBody":{"id":4191,"nodeType":"Block","src":"19400:69:24","statements":[{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19418:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"19418:9:24"},{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19445:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"19445:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19486:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"19482:90:24","trueBody":{"id":4207,"nodeType":"Block","src":"19503:69:24","statements":[{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19521:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4202,"nodeType":"ExpressionStatement","src":"19521:9:24"},{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4203,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19548:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"19548:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19589:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"nodeType":"IfStatement","src":"19585:89:24","trueBody":{"id":4223,"nodeType":"Block","src":"19606:68:24","statements":[{"expression":{"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4215,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19624:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ExpressionStatement","src":"19624:9:24"},{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19651:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ExpressionStatement","src":"19651:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4225,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19691:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4240,"nodeType":"IfStatement","src":"19687:87:24","trueBody":{"id":4239,"nodeType":"Block","src":"19707:67:24","statements":[{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4231,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19725:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"19725:8:24"},{"expression":{"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4235,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19751:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4238,"nodeType":"ExpressionStatement","src":"19751:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19791:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"19787:87:24","trueBody":{"id":4255,"nodeType":"Block","src":"19807:67:24","statements":[{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4247,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19825:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"19825:8:24"},{"expression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19851:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4254,"nodeType":"ExpressionStatement","src":"19851:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"19891:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4268,"nodeType":"IfStatement","src":"19887:61:24","trueBody":{"id":4267,"nodeType":"Block","src":"19907:41:24","statements":[{"expression":{"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4263,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"19925:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"nodeType":"ExpressionStatement","src":"19925:8:24"}]}},{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4269,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"20368:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4271,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"20378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4277,"nodeType":"ExpressionStatement","src":"20368:18:24"},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22273:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22279:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22284:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4281,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22288:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"22273:23:24"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22382:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22388:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22393:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4292,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22397:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"22382:23:24"},{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22493:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22499:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22504:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4303,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22508:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4310,"nodeType":"ExpressionStatement","src":"22493:23:24"},{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4311,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22602:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22608:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22613:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4314,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22617:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4321,"nodeType":"ExpressionStatement","src":"22602:23:24"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22712:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22718:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22723:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4325,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22727:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"22712:23:24"},{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22822:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22828:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"22833:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4336,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"22837:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"22822:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"23211:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"23232:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"23237:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4349,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"23241:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4345,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"23216:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"23216:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4145,"id":4354,"nodeType":"Return","src":"23204:40:24"}]}]},"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"17783:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:24","nodeType":"FunctionDefinition","parameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"a","nameLocation":"18102:1:24","nodeType":"VariableDeclaration","scope":4357,"src":"18094:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:24"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4357,"src":"18128:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:24"},"scope":4978,"src":"18080:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"23434:171:24","statements":[{"id":4389,"nodeType":"UncheckedBlock","src":"23444:155:24","statements":[{"assignments":[4369],"declarations":[{"constant":false,"id":4369,"mutability":"mutable","name":"result","nameLocation":"23476:6:24","nodeType":"VariableDeclaration","scope":4389,"src":"23468:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4373,"initialValue":{"arguments":[{"id":4371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"23490:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4370,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4357,4391],"referencedDeclaration":4357,"src":"23485:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"23513:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4378,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"23555:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":4377,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"23538:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3384_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"23568:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"23577:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"23586:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4375,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"23522:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"23522:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4367,"id":4388,"nodeType":"Return","src":"23506:82:24"}]}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"23267:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4391,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:24","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"a","nameLocation":"23380:1:24","nodeType":"VariableDeclaration","scope":4391,"src":"23372:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:24","nodeType":"VariableDeclaration","scope":4391,"src":"23383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":4362,"nodeType":"UserDefinedTypeName","pathNode":{"id":4361,"name":"Rounding","nameLocations":["23383:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"23383:8:24"},"referencedDeclaration":3384,"src":"23383:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:24"},"returnParameters":{"id":4367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4391,"src":"23425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:24"},"scope":4978,"src":"23358:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4586,"nodeType":"Block","src":"23796:981:24","statements":[{"assignments":[4400],"declarations":[{"constant":false,"id":4400,"mutability":"mutable","name":"result","nameLocation":"23814:6:24","nodeType":"VariableDeclaration","scope":4586,"src":"23806:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4402,"initialValue":{"hexValue":"30","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:24"},{"assignments":[4404],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"exp","nameLocation":"23842:3:24","nodeType":"VariableDeclaration","scope":4586,"src":"23834:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4405,"nodeType":"VariableDeclarationStatement","src":"23834:11:24"},{"id":4583,"nodeType":"UncheckedBlock","src":"23855:893:24","statements":[{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4406,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23879:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"23907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4408,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"23891:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"23891:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"nodeType":"ExpressionStatement","src":"23879:51:24"},{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"23944:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4423,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23954:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"nodeType":"ExpressionStatement","src":"23944:13:24"},{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"23971:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4427,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23981:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"nodeType":"ExpressionStatement","src":"23971:13:24"},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4430,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23999:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24026:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4432,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24010:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24010:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"23999:49:24"},{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24062:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4447,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24072:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ExpressionStatement","src":"24062:13:24"},{"expression":{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24089:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4451,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24099:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ExpressionStatement","src":"24089:13:24"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24117:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24144:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24128:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24128:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"24117:49:24"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24180:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4471,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24190:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"24180:13:24"},{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24207:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4475,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24217:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"24207:13:24"},{"expression":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24235:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24262:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24246:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24246:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4493,"nodeType":"ExpressionStatement","src":"24235:49:24"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4495,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24308:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ExpressionStatement","src":"24298:13:24"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24325:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4499,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24335:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"24325:13:24"},{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24353:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4504,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24363:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24363:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"nodeType":"ExpressionStatement","src":"24353:47:24"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4519,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24424:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"24414:13:24"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24441:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4523,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24451:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"24441:13:24"},{"expression":{"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4526,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24469:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4528,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24479:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24479:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4541,"nodeType":"ExpressionStatement","src":"24469:47:24"},{"expression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24530:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4543,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24540:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4545,"nodeType":"ExpressionStatement","src":"24530:13:24"},{"expression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24557:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4547,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24567:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"nodeType":"ExpressionStatement","src":"24557:13:24"},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4550,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24585:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4552,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24595:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24595:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4565,"nodeType":"ExpressionStatement","src":"24585:47:24"},{"expression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24646:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4567,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24656:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4569,"nodeType":"ExpressionStatement","src":"24646:13:24"},{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24673:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4571,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"24683:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"24673:13:24"},{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24701:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"24727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4575,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"24711:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"24711:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"24701:36:24"}]},{"expression":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"24764:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4398,"id":4585,"nodeType":"Return","src":"24757:13:24"}]},"documentation":{"id":4392,"nodeType":"StructuredDocumentation","src":"23611:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4587,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:24","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"value","nameLocation":"23757:5:24","nodeType":"VariableDeclaration","scope":4587,"src":"23749:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:24"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4587,"src":"23787:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:24"},"scope":4978,"src":"23735:1042:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4620,"nodeType":"Block","src":"25010:175:24","statements":[{"id":4619,"nodeType":"UncheckedBlock","src":"25020:159:24","statements":[{"assignments":[4599],"declarations":[{"constant":false,"id":4599,"mutability":"mutable","name":"result","nameLocation":"25052:6:24","nodeType":"VariableDeclaration","scope":4619,"src":"25044:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4603,"initialValue":{"arguments":[{"id":4601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"25066:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4600,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4587,4621],"referencedDeclaration":4587,"src":"25061:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"25093:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4608,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"25135:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":4607,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"25118:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3384_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"25153:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"25162:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4605,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"25102:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"25102:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4597,"id":4618,"nodeType":"Return","src":"25086:82:24"}]}]},"documentation":{"id":4588,"nodeType":"StructuredDocumentation","src":"24783:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:24","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"value","nameLocation":"24952:5:24","nodeType":"VariableDeclaration","scope":4621,"src":"24944:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:24","nodeType":"VariableDeclaration","scope":4621,"src":"24959:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":4592,"nodeType":"UserDefinedTypeName","pathNode":{"id":4591,"name":"Rounding","nameLocations":["24959:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"24959:8:24"},"referencedDeclaration":3384,"src":"24959:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:24"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4621,"src":"25001:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:24"},"scope":4978,"src":"24930:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"25378:854:24","statements":[{"assignments":[4630],"declarations":[{"constant":false,"id":4630,"mutability":"mutable","name":"result","nameLocation":"25396:6:24","nodeType":"VariableDeclaration","scope":4749,"src":"25388:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4632,"initialValue":{"hexValue":"30","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:24"},{"id":4746,"nodeType":"UncheckedBlock","src":"25416:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25444:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4649,"nodeType":"IfStatement","src":"25440:103:24","trueBody":{"id":4648,"nodeType":"Block","src":"25463:80:24","statements":[{"expression":{"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25481:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4643,"nodeType":"ExpressionStatement","src":"25481:17:24"},{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25516:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"25516:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25560:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4666,"nodeType":"IfStatement","src":"25556:103:24","trueBody":{"id":4665,"nodeType":"Block","src":"25579:80:24","statements":[{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25597:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"25597:17:24"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25632:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"25632:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25676:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4683,"nodeType":"IfStatement","src":"25672:103:24","trueBody":{"id":4682,"nodeType":"Block","src":"25695:80:24","statements":[{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25713:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4677,"nodeType":"ExpressionStatement","src":"25713:17:24"},{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25748:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"25748:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25792:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4700,"nodeType":"IfStatement","src":"25788:100:24","trueBody":{"id":4699,"nodeType":"Block","src":"25810:78:24","statements":[{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25828:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"25828:16:24"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"nodeType":"ExpressionStatement","src":"25862:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4717,"nodeType":"IfStatement","src":"25901:100:24","trueBody":{"id":4716,"nodeType":"Block","src":"25923:78:24","statements":[{"expression":{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4711,"nodeType":"ExpressionStatement","src":"25941:16:24"},{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25975:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"25975:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"26018:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4734,"nodeType":"IfStatement","src":"26014:100:24","trueBody":{"id":4733,"nodeType":"Block","src":"26036:78:24","statements":[{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"26054:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"26054:16:24"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"26088:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"26088:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"26131:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4745,"nodeType":"IfStatement","src":"26127:66:24","trueBody":{"id":4744,"nodeType":"Block","src":"26149:44:24","statements":[{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"26167:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"26167:11:24"}]}}]},{"expression":{"id":4747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"26219:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4628,"id":4748,"nodeType":"Return","src":"26212:13:24"}]},"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"25191:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:24","nodeType":"FunctionDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"value","nameLocation":"25339:5:24","nodeType":"VariableDeclaration","scope":4750,"src":"25331:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:24"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"25369:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:24"},"scope":4978,"src":"25316:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4783,"nodeType":"Block","src":"26467:177:24","statements":[{"id":4782,"nodeType":"UncheckedBlock","src":"26477:161:24","statements":[{"assignments":[4762],"declarations":[{"constant":false,"id":4762,"mutability":"mutable","name":"result","nameLocation":"26509:6:24","nodeType":"VariableDeclaration","scope":4782,"src":"26501:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4766,"initialValue":{"arguments":[{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"26524:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4763,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4750,4784],"referencedDeclaration":4750,"src":"26518:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"26551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4771,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"26593:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":4770,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"26576:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3384_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"26612:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"26621:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4768,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"26560:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"26560:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4760,"id":4781,"nodeType":"Return","src":"26544:83:24"}]}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"26238:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4784,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:24","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"value","nameLocation":"26409:5:24","nodeType":"VariableDeclaration","scope":4784,"src":"26401:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:24","nodeType":"VariableDeclaration","scope":4784,"src":"26416:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":4755,"nodeType":"UserDefinedTypeName","pathNode":{"id":4754,"name":"Rounding","nameLocations":["26416:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"26416:8:24"},"referencedDeclaration":3384,"src":"26416:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:24"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4784,"src":"26458:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:24"},"scope":4978,"src":"26386:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"26964:674:24","statements":[{"assignments":[4793],"declarations":[{"constant":false,"id":4793,"mutability":"mutable","name":"result","nameLocation":"26982:6:24","nodeType":"VariableDeclaration","scope":4920,"src":"26974:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4795,"initialValue":{"hexValue":"30","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:24"},{"assignments":[4797],"declarations":[{"constant":false,"id":4797,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:24","nodeType":"VariableDeclaration","scope":4920,"src":"27002:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4798,"nodeType":"VariableDeclarationStatement","src":"27002:12:24"},{"id":4917,"nodeType":"UncheckedBlock","src":"27024:585:24","statements":[{"expression":{"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4799,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27048:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27071:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27055:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27055:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4812,"nodeType":"ExpressionStatement","src":"27048:46:24"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27108:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27118:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"27108:20:24"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27142:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27152:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"27142:19:24"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27176:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4826,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27183:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27183:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ExpressionStatement","src":"27176:45:24"},{"expression":{"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27235:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27245:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4844,"nodeType":"ExpressionStatement","src":"27235:19:24"},{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27268:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27278:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4850,"nodeType":"ExpressionStatement","src":"27268:18:24"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4851,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27301:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27324:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4852,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27308:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27308:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"27301:45:24"},{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27360:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27370:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4870,"nodeType":"ExpressionStatement","src":"27360:19:24"},{"expression":{"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27393:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27403:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4876,"nodeType":"ExpressionStatement","src":"27393:18:24"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4877,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27426:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27449:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4878,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27433:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27433:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4890,"nodeType":"ExpressionStatement","src":"27426:45:24"},{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27485:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4892,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27495:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4896,"nodeType":"ExpressionStatement","src":"27485:19:24"},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27518:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"27528:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"27518:18:24"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"27577:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4904,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27561:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27561:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"27551:47:24"}]},{"expression":{"id":4918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"27625:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4919,"nodeType":"Return","src":"27618:13:24"}]},"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"26650:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:24","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"value","nameLocation":"26925:5:24","nodeType":"VariableDeclaration","scope":4921,"src":"26917:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:24"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"26955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:24"},"scope":4978,"src":"26901:737:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4957,"nodeType":"Block","src":"27875:184:24","statements":[{"id":4956,"nodeType":"UncheckedBlock","src":"27885:168:24","statements":[{"assignments":[4933],"declarations":[{"constant":false,"id":4933,"mutability":"mutable","name":"result","nameLocation":"27917:6:24","nodeType":"VariableDeclaration","scope":4956,"src":"27909:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4937,"initialValue":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"27933:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4921,4958],"referencedDeclaration":4921,"src":"27926:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"27960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4942,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"28002:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":4941,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"27985:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3384_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"28021:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"28036:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4939,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"27969:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"27969:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4931,"id":4955,"nodeType":"Return","src":"27953:89:24"}]}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"27644:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4958,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:24","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"27817:5:24","nodeType":"VariableDeclaration","scope":4958,"src":"27809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:24","nodeType":"VariableDeclaration","scope":4958,"src":"27824:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":4926,"nodeType":"UserDefinedTypeName","pathNode":{"id":4925,"name":"Rounding","nameLocations":["27824:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"27824:8:24"},"referencedDeclaration":3384,"src":"27824:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:24"},"returnParameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4958,"src":"27866:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:24"},"scope":4978,"src":"27793:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"28257:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4969,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"28280:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}],"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4967,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:24","typeDescriptions":{}}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4966,"id":4975,"nodeType":"Return","src":"28267:31:24"}]},"documentation":{"id":4959,"nodeType":"StructuredDocumentation","src":"28065:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:24","nodeType":"FunctionDefinition","parameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:24","nodeType":"VariableDeclaration","scope":4977,"src":"28209:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"},"typeName":{"id":4961,"nodeType":"UserDefinedTypeName","pathNode":{"id":4960,"name":"Rounding","nameLocations":["28209:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"28209:8:24"},"referencedDeclaration":3384,"src":"28209:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3384","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:24"},"returnParameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"28251:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4964,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:24"},"scope":4978,"src":"28183:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4979,"src":"281:28026:24","usedErrors":[],"usedEvents":[]}],"src":"103:28205:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6743]},"id":6744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4980,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4981,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6743,"linearizedBaseContracts":[6743],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4988,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":4988,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4983,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":4988,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4993,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":4993,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4990,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5000,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":5000,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4995,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":5000,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4997,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5005,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":5005,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":5032,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5015,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":5025,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5024,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5027,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5012,"id":5031,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":5033,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5010,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":6743,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5060,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5043,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5054,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":5053,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5048,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5052,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5055,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5040,"id":5059,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":5061,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5038,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":6743,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5071,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5082,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":5081,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5080,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5083,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5068,"id":5087,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":5089,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5089,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5066,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":6743,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5099,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5098,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5110,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":5109,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5104,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5108,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5111,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5096,"id":5115,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":5117,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5094,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":6743,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5127,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5138,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":5137,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5132,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5136,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5139,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5124,"id":5143,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":5145,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5122,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":6743,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5155,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5166,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":5165,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5164,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5167,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5152,"id":5171,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":5173,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5173,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5150,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":6743,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5183,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5194,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":5193,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5188,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5192,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5195,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5180,"id":5199,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":5174,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":5201,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5201,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5178,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":6743,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5211,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":5221,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5216,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5220,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5223,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5208,"id":5227,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":5229,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5206,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":6743,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5239,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5250,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":5249,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5244,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5248,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5251,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5236,"id":5255,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":5257,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5257,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5234,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":6743,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5284,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5267,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":5277,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5272,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5276,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5279,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5264,"id":5283,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":5285,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5262,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":6743,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5295,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5294,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":5305,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5304,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5307,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5292,"id":5311,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":5313,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5290,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":6743,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5323,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5334,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":5333,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5328,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5332,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5335,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5320,"id":5339,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":5341,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5318,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":6743,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5368,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5351,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5362,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":5361,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5356,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5360,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5363,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5348,"id":5367,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":5369,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5369,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5346,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":6743,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5396,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5379,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5378,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":5389,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5384,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5388,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5391,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5376,"id":5395,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5397,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":5397,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5397,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5374,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":6743,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5424,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5407,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5418,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":5417,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5412,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5416,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5419,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5404,"id":5423,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":5398,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5425,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":5425,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5425,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5402,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":6743,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5452,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5435,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5434,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5446,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":5445,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5440,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5444,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5447,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5432,"id":5451,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":5426,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5453,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":5453,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5427,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5453,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5430,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":6743,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5480,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5463,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5474,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":5473,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5468,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5472,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5475,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5460,"id":5479,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":5454,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":5481,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5455,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5481,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5458,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":6743,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5508,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5491,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5490,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5502,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":5501,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5496,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5500,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5503,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5488,"id":5507,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5509,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":5509,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5509,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5486,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":6743,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5519,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5518,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5530,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":5529,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5524,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5528,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5531,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5516,"id":5535,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":5537,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5514,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":6743,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5547,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5546,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5558,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":5557,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5552,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5556,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5559,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5544,"id":5563,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":5565,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5565,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5542,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":6743,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5592,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5575,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5586,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":5585,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5580,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5584,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5587,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5572,"id":5591,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5593,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":5593,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5593,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5570,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":6743,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5620,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5603,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5614,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":5613,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5608,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5612,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5615,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5600,"id":5619,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":5594,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5621,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":5621,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5621,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5598,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":6743,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5631,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5642,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":5641,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5636,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5640,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5643,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5628,"id":5647,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":5622,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":5649,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5649,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5626,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":6743,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5676,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5659,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5658,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5670,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":5669,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5664,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5668,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5671,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5656,"id":5675,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":5650,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":5677,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5677,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5654,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":6743,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5704,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5687,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5698,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":5697,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5692,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5696,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":5701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5699,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5684,"id":5703,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":5678,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":5705,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5705,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5682,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":6743,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5732,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5715,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5726,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":5725,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5720,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5724,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":5729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5727,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5712,"id":5731,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5733,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":5733,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5733,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5710,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":6743,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5760,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5743,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5754,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":5753,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5748,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5752,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5755,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5740,"id":5759,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":5734,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":5761,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5761,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5738,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":6743,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5788,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5771,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":5781,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5776,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5780,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5783,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5768,"id":5787,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":5762,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":5789,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5789,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5766,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":6743,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5799,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5810,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":5809,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5804,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5808,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5811,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5796,"id":5815,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":5790,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":5817,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5794,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":6743,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5844,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5827,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5838,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":5837,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5832,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5836,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5839,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5824,"id":5843,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":5845,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5845,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5822,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":6743,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5872,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5855,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5866,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":5865,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5860,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5864,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5867,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5852,"id":5871,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":5846,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":5873,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5873,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5850,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":6743,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5895,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5889,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":5888,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5884,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5887,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5880,"id":5894,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":5874,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5896,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":5877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5876,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":5896,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5875,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5896,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":6743,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5921,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5905,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5910,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":5919,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5918,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":5897,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":5922,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5898,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":5922,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5901,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":6743,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5947,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5931,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5936,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":5945,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5944,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":5923,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":5948,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5924,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":5948,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5927,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":6743,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5973,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5957,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5962,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":5971,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5970,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":5974,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5950,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":5974,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5953,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":6743,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5983,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5988,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5998,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":5997,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5996,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":5975,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":6000,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5976,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":6000,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5979,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":6743,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6025,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6009,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6014,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":6023,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6022,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":6026,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6002,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":6026,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6005,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":6743,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6051,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6035,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6040,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6050,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":6049,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6048,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":6027,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":6052,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6028,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":6052,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6031,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":6743,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6061,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6066,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":6075,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6074,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":6053,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":6078,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6054,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":6078,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6057,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":6743,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6103,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6087,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6092,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":6101,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6100,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":6104,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6080,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":6104,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6083,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":6743,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6129,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6113,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6118,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":6127,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6126,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":6130,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6106,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":6130,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6109,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":6743,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6139,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6144,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6154,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":6153,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6152,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":6156,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6132,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":6156,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6135,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":6743,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6181,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6165,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6170,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":6179,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6178,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":6182,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6158,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":6182,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6161,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":6743,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6191,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6196,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6206,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":6205,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6204,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":6183,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":6208,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6184,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":6208,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6187,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":6743,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6217,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6222,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":6231,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6230,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":6234,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6210,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":6234,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6213,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":6743,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6243,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6248,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6258,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":6257,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6256,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":6260,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6236,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":6260,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6239,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":6743,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6285,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6269,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6274,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6284,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":6283,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6282,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":6286,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6262,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":6286,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6265,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":6743,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6295,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6300,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":6309,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6308,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":6312,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6288,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":6312,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6291,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":6743,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6321,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6326,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6336,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":6335,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6334,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":6338,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6314,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":6338,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6317,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":6743,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6347,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6352,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6362,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":6361,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6360,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":6364,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6340,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":6364,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6343,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":6743,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6373,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6378,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":6387,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6382,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6386,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":6390,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6366,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":6390,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6369,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":6743,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6415,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6399,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6404,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6414,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":6413,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6412,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":6416,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":6416,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6395,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":6743,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6425,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6430,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6440,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":6439,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6438,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":6442,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6418,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":6442,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6421,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":6743,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6467,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6451,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6456,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":6465,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6464,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":6468,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6444,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":6468,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6447,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":6743,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6477,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6482,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":6491,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6490,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":6469,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":6494,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":6494,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6473,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":6743,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6519,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6503,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6508,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6518,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":6517,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6516,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":6520,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6496,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":6520,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6499,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":6743,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6545,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6529,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6534,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6544,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":6543,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6542,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":6546,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6522,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":6546,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6525,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":6743,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6571,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6555,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6560,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6570,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":6569,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6564,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6568,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6572,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":6572,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":6572,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6551,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":6743,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6597,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6581,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6586,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6596,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":6595,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6594,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":6573,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":6598,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6574,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":6598,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6577,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":6743,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6623,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6607,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6612,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":6621,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6616,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6620,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":6599,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":6624,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6600,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":6624,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6603,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":6743,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6649,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6633,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6638,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":6647,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6642,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6646,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6650,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":6650,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6626,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":6650,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6629,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":6743,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6675,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6659,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6664,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6674,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":6673,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6668,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6672,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6676,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":6676,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6652,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":6657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6656,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":6676,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6655,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":6743,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6701,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6685,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6690,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6700,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":6699,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6698,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":6677,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":6702,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6678,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":6702,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6681,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":6743,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6731,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6714,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6725,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":6724,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6720,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6723,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6709,"id":6730,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":6732,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6732,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6707,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":6743,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6741,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nativeSrc":"34888:46:25","nodeType":"YulBlock","src":"34888:46:25","statements":[{"nativeSrc":"34902:22:25","nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:25","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:25","nodeType":"YulIdentifier","src":"34914:6:25"},"nativeSrc":"34914:9:25","nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:25","nodeType":"YulIdentifier","src":"34907:6:25"},"nativeSrc":"34907:17:25","nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nativeSrc":"34902:1:25","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6735,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":6738,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":6740,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":6733,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":6742,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6734,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":6742,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":6743,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6744,"src":"769:34173:25","usedErrors":[4988,4993,5000,5005],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6743],"SignedMath":[6887]},"id":6888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6888,"sourceUnit":6744,"src":"135:40:26","symbolAliases":[{"foreign":{"id":6746,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6748,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6887,"linearizedBaseContracts":[6887],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6777,"nodeType":"Block","src":"746:215:26","statements":[{"id":6776,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6769,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6743_$","typeString":"type(library SafeCast)"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6742,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6765,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6759,"id":6775,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6778,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":6756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":6778,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6750,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":6778,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":6778,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6754,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6778,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6757,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":6887,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6788,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6787,"id":6795,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":6779,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6781,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":6797,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6780,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6783,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":6797,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6782,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6797,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6785,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":6887,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6815,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6812,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6807,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6806,"id":6814,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":6816,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":6816,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6799,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":6816,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6816,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":6887,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6859,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[6827],"declarations":[{"constant":false,"id":6827,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":6859,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6826,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6840,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6846,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6842,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6825,"id":6858,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":6817,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6860,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":6860,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6818,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6821,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":6860,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6820,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6860,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6823,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":6887,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6885,"nodeType":"Block","src":"1843:767:26","statements":[{"id":6884,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[6869],"declarations":[{"constant":false,"id":6869,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":6884,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6868,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6873,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6870,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6876,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6877,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6880,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6867,"id":6883,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":6861,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6886,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":6886,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6862,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6886,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":6887,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6888,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/PikaPay.sol":{"ast":{"absolutePath":"contracts/PikaPay.sol","exportedSymbols":{"Address":[1878],"Context":[1908],"ERC20":[914],"IERC1363":[229],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172],"Math":[4978],"PikaFractionalAttestationToken":[6960],"PikaPay":[7473],"SafeERC20":[1619],"SignedMath":[6887],"Strings":[2711]},"id":7474,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":6889,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"68:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":915,"src":"94:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1620,"src":"150:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":2712,"src":"217:51:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6893,"name":"ERC20","nameLocations":["313:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"313:5:27"},"id":6894,"nodeType":"InheritanceSpecifier","src":"313:5:27"}],"canonicalName":"PikaFractionalAttestationToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6960,"linearizedBaseContracts":[6960,914,304,1172,992,1908],"name":"PikaFractionalAttestationToken","nameLocation":"279:30:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3804eea0","id":6897,"mutability":"mutable","name":"pikaPay","nameLocation":"340:7:27","nodeType":"VariableDeclaration","scope":6960,"src":"325:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"},"typeName":{"id":6896,"nodeType":"UserDefinedTypeName","pathNode":{"id":6895,"name":"PikaPay","nameLocations":["325:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7473,"src":"325:7:27"},"referencedDeclaration":7473,"src":"325:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},"visibility":"public"},{"constant":false,"functionSelector":"4972134a","id":6899,"mutability":"mutable","name":"batchId","nameLocation":"368:7:27","nodeType":"VariableDeclaration","scope":6960,"src":"353:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6898,"name":"uint256","nodeType":"ElementaryTypeName","src":"353:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":6942,"nodeType":"Block","src":"809:236:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"827:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"844:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"827:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c20737570706c79206d7573742062652067726561746572207468616e2030","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"847:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e","typeString":"literal_string \"Initial supply must be greater than 0\""},"value":"Initial supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e","typeString":"literal_string \"Initial supply must be greater than 0\""}],"id":6921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"819:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"ExpressionStatement","src":"819:68:27"},{"expression":{"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6928,"name":"pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"897:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6929,"name":"_pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"907:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},"src":"897:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},"id":6931,"nodeType":"ExpressionStatement","src":"897:18:27"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"925:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6933,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"935:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"925:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6935,"nodeType":"ExpressionStatement","src":"925:18:27"},{"expression":{"arguments":[{"expression":{"id":6937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"959:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"963:6:27","memberName":"sender","nodeType":"MemberAccess","src":"959:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6939,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"971:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6936,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"953:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6941,"nodeType":"ExpressionStatement","src":"953:33:27"}]},"id":6943,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"hexValue":"50696b61506179204672616374696f6e616c2042617463682023","id":6912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"631:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d","typeString":"literal_string \"PikaPay Fractional Batch #\""},"value":"PikaPay Fractional Batch #"},{"arguments":[{"id":6915,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"694:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6913,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"677:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2711_$","typeString":"type(library Strings)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"685:8:27","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2459,"src":"677:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"677:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d","typeString":"literal_string \"PikaPay Fractional Batch #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"600:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6909,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:27","typeDescriptions":{}}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"607:6:27","memberName":"concat","nodeType":"MemberAccess","src":"600:13:27","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:117:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"50464154","id":6918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"731:6:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_03d439f3c8d16b7c4c720de79eb0edfcff717db5d86d6f46271c48c3593c858b","typeString":"literal_string \"PFAT\""},"value":"PFAT"}],"id":6919,"kind":"baseConstructorSpecifier","modifierName":{"id":6908,"name":"ERC20","nameLocations":["581:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"581:5:27"},"nodeType":"ModifierInvocation","src":"581:223:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"_pikaPay","nameLocation":"500:8:27","nodeType":"VariableDeclaration","scope":6943,"src":"492:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"},"typeName":{"id":6901,"nodeType":"UserDefinedTypeName","pathNode":{"id":6900,"name":"PikaPay","nameLocations":["492:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":7473,"src":"492:7:27"},"referencedDeclaration":7473,"src":"492:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},"visibility":"internal"},{"constant":false,"id":6904,"mutability":"mutable","name":"_batchId","nameLocation":"526:8:27","nodeType":"VariableDeclaration","scope":6943,"src":"518:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6903,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6906,"mutability":"mutable","name":"_initialSupply","nameLocation":"552:14:27","nodeType":"VariableDeclaration","scope":6943,"src":"544:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"482:90:27"},"returnParameters":{"id":6920,"nodeType":"ParameterList","parameters":[],"src":"809:0:27"},"scope":6960,"src":"471:574:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6958,"nodeType":"Block","src":"1255:133:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6949,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"1286:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6952,"name":"pikaPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"1302:7:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}],"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1294:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6950,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:27","typeDescriptions":{}}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1294:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1286:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792050696b6150617920636f6e74726163742063616e20696e697469617465207472616e73666572732e","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1324:47:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_04f0e6744396eaf037c6ca20425af2480f87f557df93257be3475cb822c01708","typeString":"literal_string \"Only PikaPay contract can initiate transfers.\""},"value":"Only PikaPay contract can initiate transfers."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04f0e6744396eaf037c6ca20425af2480f87f557df93257be3475cb822c01708","typeString":"literal_string \"Only PikaPay contract can initiate transfers.\""}],"id":6948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1265:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1265:116:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6957,"nodeType":"ExpressionStatement","src":"1265:116:27"}]},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1206:20:27","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"from","nameLocation":"1235:4:27","nodeType":"VariableDeclaration","scope":6959,"src":"1227:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6944,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:14:27"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[],"src":"1255:0:27"},"scope":6960,"src":"1197:191:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7474,"src":"270:1120:27","usedErrors":[274,279,284,293,298,303],"usedEvents":[926,935]},{"abstract":false,"baseContracts":[],"canonicalName":"PikaPay","contractDependencies":[6960],"contractKind":"contract","fullyImplemented":true,"id":7473,"linearizedBaseContracts":[7473],"name":"PikaPay","nameLocation":"1401:7:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6964,"libraryName":{"id":6961,"name":"SafeERC20","nameLocations":["1422:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":1619,"src":"1422:9:27"},"nodeType":"UsingForDirective","src":"1416:26:27","typeName":{"id":6963,"nodeType":"UserDefinedTypeName","pathNode":{"id":6962,"name":"ERC20","nameLocations":["1436:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"1436:5:27"},"referencedDeclaration":914,"src":"1436:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}}},{"canonicalName":"PikaPay.Batch","id":6980,"members":[{"constant":false,"id":6966,"mutability":"mutable","name":"batchId","nameLocation":"1556:7:27","nodeType":"VariableDeclaration","scope":6980,"src":"1548:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6969,"mutability":"mutable","name":"token","nameLocation":"1631:5:27","nodeType":"VariableDeclaration","scope":6980,"src":"1600:36:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"},"typeName":{"id":6968,"nodeType":"UserDefinedTypeName","pathNode":{"id":6967,"name":"PikaFractionalAttestationToken","nameLocations":["1600:30:27"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"1600:30:27"},"referencedDeclaration":6960,"src":"1600:30:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}},"visibility":"internal"},{"constant":false,"id":6971,"mutability":"mutable","name":"attestationDetails","nameLocation":"1696:18:27","nodeType":"VariableDeclaration","scope":6980,"src":"1689:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6970,"name":"string","nodeType":"ElementaryTypeName","src":"1689:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6973,"mutability":"mutable","name":"totalSupply","nameLocation":"1771:11:27","nodeType":"VariableDeclaration","scope":6980,"src":"1763:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6975,"mutability":"mutable","name":"remainingSupply","nameLocation":"1836:15:27","nodeType":"VariableDeclaration","scope":6980,"src":"1828:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"isFinalized","nameLocation":"1911:11:27","nodeType":"VariableDeclaration","scope":6980,"src":"1906:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6976,"name":"bool","nodeType":"ElementaryTypeName","src":"1906:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"owner","nameLocation":"1976:5:27","nodeType":"VariableDeclaration","scope":6980,"src":"1968:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6978,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Batch","nameLocation":"1532:5:27","nodeType":"StructDefinition","scope":7473,"src":"1525:485:27","visibility":"public"},{"constant":false,"functionSelector":"69ff6abb","id":6983,"mutability":"mutable","name":"totalBatches","nameLocation":"2031:12:27","nodeType":"VariableDeclaration","scope":7473,"src":"2016:31:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"4f4ed78f","id":6988,"mutability":"mutable","name":"batchRegistry","nameLocation":"2121:13:27","nodeType":"VariableDeclaration","scope":7473,"src":"2088:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch)"},"typeName":{"id":6987,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2088:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6986,"nodeType":"UserDefinedTypeName","pathNode":{"id":6985,"name":"Batch","nameLocations":["2107:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"2107:5:27"},"referencedDeclaration":6980,"src":"2107:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"}}},"visibility":"public"},{"constant":false,"functionSelector":"3d2d07e2","id":6994,"mutability":"mutable","name":"beneficiaryBalances","nameLocation":"2239:19:27","nodeType":"VariableDeclaration","scope":7473,"src":"2184:74:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":6993,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2192:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2184:47:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6992,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6990,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2203:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2222:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"24d4dd2cd73442ce7ba8d012afd0ab2601a6b3c593b368a0a91b1bac5d5d27f2","id":7004,"name":"BatchCreated","nameLocation":"2386:12:27","nodeType":"EventDefinition","parameters":{"id":7003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"2416:7:27","nodeType":"VariableDeclaration","scope":7004,"src":"2408:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6998,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2449:5:27","nodeType":"VariableDeclaration","scope":7004,"src":"2433:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6997,"name":"address","nodeType":"ElementaryTypeName","src":"2433:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7000,"indexed":false,"mutability":"mutable","name":"attestationDetails","nameLocation":"2471:18:27","nodeType":"VariableDeclaration","scope":7004,"src":"2464:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6999,"name":"string","nodeType":"ElementaryTypeName","src":"2464:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7002,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"2507:11:27","nodeType":"VariableDeclaration","scope":7004,"src":"2499:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:126:27"},"src":"2380:145:27"},{"anonymous":false,"eventSelector":"8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d788","id":7016,"name":"AttestedWithdrawal","nameLocation":"2536:18:27","nodeType":"EventDefinition","parameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"2572:7:27","nodeType":"VariableDeclaration","scope":7016,"src":"2564:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7008,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"2605:11:27","nodeType":"VariableDeclaration","scope":7016,"src":"2589:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7007,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7010,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2634:6:27","nodeType":"VariableDeclaration","scope":7016,"src":"2626:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7012,"indexed":false,"mutability":"mutable","name":"attestation","nameLocation":"2657:11:27","nodeType":"VariableDeclaration","scope":7016,"src":"2650:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7011,"name":"string","nodeType":"ElementaryTypeName","src":"2650:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7014,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"2685:8:27","nodeType":"VariableDeclaration","scope":7016,"src":"2678:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7013,"name":"string","nodeType":"ElementaryTypeName","src":"2678:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2554:145:27"},"src":"2530:170:27"},{"anonymous":false,"eventSelector":"0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c61","id":7026,"name":"PrivateWithdrawal","nameLocation":"2711:17:27","nodeType":"EventDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"2746:7:27","nodeType":"VariableDeclaration","scope":7026,"src":"2738:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7020,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"2779:11:27","nodeType":"VariableDeclaration","scope":7026,"src":"2763:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7019,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7022,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2808:6:27","nodeType":"VariableDeclaration","scope":7026,"src":"2800:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2800:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7024,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"2831:8:27","nodeType":"VariableDeclaration","scope":7026,"src":"2824:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7023,"name":"string","nodeType":"ElementaryTypeName","src":"2824:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2728:117:27"},"src":"2705:141:27"},{"anonymous":false,"eventSelector":"5cff112f1cb588779b4e6aae6baf0d738747fcf132f0ff202adcec605f9cabdf","id":7030,"name":"BatchFinalized","nameLocation":"2857:14:27","nodeType":"EventDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"2880:7:27","nodeType":"VariableDeclaration","scope":7030,"src":"2872:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2872:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2871:17:27"},"src":"2851:38:27"},{"anonymous":false,"eventSelector":"cc1163b9f5b7a48feb09e3106d97fe333e2b9b8d72544e2f9d4470f483e5214e","id":7036,"name":"BatchUpdated","nameLocation":"2900:12:27","nodeType":"EventDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"2921:7:27","nodeType":"VariableDeclaration","scope":7036,"src":"2913:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7034,"indexed":false,"mutability":"mutable","name":"updatedAttestationDetails","nameLocation":"2937:25:27","nodeType":"VariableDeclaration","scope":7036,"src":"2930:32:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7033,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2912:51:27"},"src":"2894:70:27"},{"anonymous":false,"eventSelector":"06f354ec7b9d2ca4e029f73ccb9119943a48c3295704dd66ca8beda0c7bae33f","id":7046,"name":"OwnershipTransferred","nameLocation":"2975:20:27","nodeType":"EventDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"indexed":false,"mutability":"mutable","name":"batchId","nameLocation":"3013:7:27","nodeType":"VariableDeclaration","scope":7046,"src":"3005:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7040,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"3046:13:27","nodeType":"VariableDeclaration","scope":7046,"src":"3030:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7039,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7042,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"3085:8:27","nodeType":"VariableDeclaration","scope":7046,"src":"3069:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7041,"name":"address","nodeType":"ElementaryTypeName","src":"3069:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7044,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3111:6:27","nodeType":"VariableDeclaration","scope":7046,"src":"3103:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2995:128:27"},"src":"2969:155:27"},{"constant":true,"functionSelector":"c54e44eb","id":7052,"mutability":"constant","name":"USDT","nameLocation":"3152:4:27","nodeType":"VariableDeclaration","scope":7473,"src":"3130:86:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"},"typeName":{"id":7048,"nodeType":"UserDefinedTypeName","pathNode":{"id":7047,"name":"ERC20","nameLocations":["3130:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"3130:5:27"},"referencedDeclaration":914,"src":"3130:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}},"value":{"arguments":[{"hexValue":"307834386462356331313535383336644539343566423832623641394346383244393141433231663136","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x48db5c1155836dE945fB82b6A9CF82D91AC21f16"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7049,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3167:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$914_$","typeString":"type(contract ERC20)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}},"visibility":"public"},{"body":{"id":7068,"nodeType":"Block","src":"3348:147:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7057,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"3379:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7059,"indexExpression":{"id":7058,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"3393:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3379:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":7060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3403:5:27","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6979,"src":"3379:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3412:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3416:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3412:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3379:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420746865206261746368206f776e6572","id":7064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3436:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9","typeString":"literal_string \"Caller is not the batch owner\""},"value":"Caller is not the batch owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9","typeString":"literal_string \"Caller is not the batch owner\""}],"id":7056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3358:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3358:119:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7066,"nodeType":"ExpressionStatement","src":"3358:119:27"},{"id":7067,"nodeType":"PlaceholderStatement","src":"3487:1:27"}]},"id":7069,"name":"onlyBatchOwner","nameLocation":"3315:14:27","nodeType":"ModifierDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7054,"mutability":"mutable","name":"_batchId","nameLocation":"3338:8:27","nodeType":"VariableDeclaration","scope":7069,"src":"3330:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3329:18:27"},"src":"3306:189:27","virtual":false,"visibility":"internal"},{"body":{"id":7085,"nodeType":"Block","src":"3585:97:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"3603:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3614:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3603:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"3619:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7078,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3631:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3619:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3603:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261746368204944","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3645:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""},"value":"Invalid batch ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""}],"id":7073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3595:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3595:69:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7083,"nodeType":"ExpressionStatement","src":"3595:69:27"},{"id":7084,"nodeType":"PlaceholderStatement","src":"3674:1:27"}]},"id":7086,"name":"validBatchId","nameLocation":"3554:12:27","nodeType":"ModifierDefinition","parameters":{"id":7072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7071,"mutability":"mutable","name":"_batchId","nameLocation":"3575:8:27","nodeType":"VariableDeclaration","scope":7086,"src":"3567:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7070,"name":"uint256","nodeType":"ElementaryTypeName","src":"3567:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3566:18:27"},"src":"3545:137:27","virtual":false,"visibility":"internal"},{"body":{"id":7159,"nodeType":"Block","src":"3924:1168:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4076:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4093:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4076:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4096:39:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6","typeString":"literal_string \"Deposit amount must be greater than 0\""},"value":"Deposit amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6","typeString":"literal_string \"Deposit amount must be greater than 0\""}],"id":7093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4068:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7099,"nodeType":"ExpressionStatement","src":"4068:68:27"},{"expression":{"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7100,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4147:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4147:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7103,"nodeType":"ExpressionStatement","src":"4147:17:27"},{"expression":{"arguments":[{"expression":{"id":7107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4196:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4200:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4196:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4216:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}],"id":7110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4208:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7109,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:27","typeDescriptions":{}}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7113,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4223:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7104,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"4174:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4179:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1282,"src":"4174:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4174:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7115,"nodeType":"ExpressionStatement","src":"4174:64:27"},{"assignments":[7118],"declarations":[{"constant":false,"id":7118,"mutability":"mutable","name":"token","nameLocation":"4361:5:27","nodeType":"VariableDeclaration","scope":7159,"src":"4330:36:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"},"typeName":{"id":7117,"nodeType":"UserDefinedTypeName","pathNode":{"id":7116,"name":"PikaFractionalAttestationToken","nameLocations":["4330:30:27"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"4330:30:27"},"referencedDeclaration":6960,"src":"4330:30:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}},"visibility":"internal"}],"id":7126,"initialValue":{"arguments":[{"id":7122,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4421:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"}},{"id":7123,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4443:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7124,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4473:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PikaPay_$7473","typeString":"contract PikaPay"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"4369:34:27","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_PikaPay_$7473_$_t_uint256_$_t_uint256_$returns$_t_contract$_PikaFractionalAttestationToken_$6960_$","typeString":"function (contract PikaPay,uint256,uint256) returns (contract PikaFractionalAttestationToken)"},"typeName":{"id":7120,"nodeType":"UserDefinedTypeName","pathNode":{"id":7119,"name":"PikaFractionalAttestationToken","nameLocations":["4373:30:27"],"nodeType":"IdentifierPath","referencedDeclaration":6960,"src":"4373:30:27"},"referencedDeclaration":6960,"src":"4373:30:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4369:132:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}},"nodeType":"VariableDeclarationStatement","src":"4330:171:27"},{"expression":{"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7127,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"4512:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7129,"indexExpression":{"id":7128,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4526:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4512:27:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7131,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4571:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"4604:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}},{"id":7133,"name":"_attestationDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"4643:19:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7134,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4689:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7135,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4734:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4775:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":7137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4801:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4805:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4801:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7130,"name":"Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"4542:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Batch_$6980_storage_ptr_$","typeString":"type(struct PikaPay.Batch storage pointer)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4562:7:27","4597:5:27","4623:18:27","4676:11:27","4717:15:27","4762:11:27","4794:5:27"],"names":["batchId","token","attestationDetails","totalSupply","remainingSupply","isFinalized","owner"],"nodeType":"FunctionCall","src":"4542:280:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_memory_ptr","typeString":"struct PikaPay.Batch memory"}},"src":"4512:310:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"id":7141,"nodeType":"ExpressionStatement","src":"4512:310:27"},{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7142,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"4833:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7146,"indexExpression":{"id":7143,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4853:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4833:33:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7147,"indexExpression":{"expression":{"id":7144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4867:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4871:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4867:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4833:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7148,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"4881:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4833:62:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7150,"nodeType":"ExpressionStatement","src":"4833:62:27"},{"eventCall":{"arguments":[{"id":7152,"name":"totalBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"4978:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5004:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5008:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5004:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7155,"name":"_attestationDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"5028:19:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7156,"name":"_depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"5061:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7151,"name":"BatchCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"4952:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:133:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7158,"nodeType":"EmitStatement","src":"4947:138:27"}]},"functionSelector":"a913d7b9","id":7160,"implemented":true,"kind":"function","modifiers":[],"name":"createNewBatchWithAttestation","nameLocation":"3801:29:27","nodeType":"FunctionDefinition","parameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"_attestationDetails","nameLocation":"3856:19:27","nodeType":"VariableDeclaration","scope":7160,"src":"3840:35:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7087,"name":"string","nodeType":"ElementaryTypeName","src":"3840:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7090,"mutability":"mutable","name":"_depositAmount","nameLocation":"3893:14:27","nodeType":"VariableDeclaration","scope":7160,"src":"3885:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3830:83:27"},"returnParameters":{"id":7092,"nodeType":"ParameterList","parameters":[],"src":"3924:0:27"},"scope":7473,"src":"3792:1300:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7222,"nodeType":"Block","src":"5368:513:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7176,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"5386:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5407:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5399:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7177,"name":"address","nodeType":"ElementaryTypeName","src":"5399:7:27","typeDescriptions":{}}},"id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5386:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6577206f776e65722061646472657373","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5411:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""},"value":"Invalid new owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""}],"id":7175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5378:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5378:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"5378:61:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":7186,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"5470:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7188,"indexExpression":{"id":7187,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5490:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7191,"indexExpression":{"expression":{"id":7189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5500:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5504:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5500:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7192,"name":"_transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"5515:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5470:60:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f72207472616e736665722e","id":7194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5544:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764","typeString":"literal_string \"Insufficient balance for transfer.\""},"value":"Insufficient balance for transfer."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764","typeString":"literal_string \"Insufficient balance for transfer.\""}],"id":7185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5449:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:141:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"ExpressionStatement","src":"5449:141:27"},{"expression":{"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7197,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"5601:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7201,"indexExpression":{"id":7198,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5621:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5601:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7202,"indexExpression":{"expression":{"id":7199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5631:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5635:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5631:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5601:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7203,"name":"_transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"5646:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5601:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7205,"nodeType":"ExpressionStatement","src":"5601:60:27"},{"expression":{"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7206,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"5671:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7209,"indexExpression":{"id":7207,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5691:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5671:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7210,"indexExpression":{"id":7208,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"5701:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5671:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7211,"name":"_transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"5715:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5671:59:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7213,"nodeType":"ExpressionStatement","src":"5671:59:27"},{"eventCall":{"arguments":[{"id":7215,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5780:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5802:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5806:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5802:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7218,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"5826:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7219,"name":"_transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"5849:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7214,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"5746:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5746:128:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7221,"nodeType":"EmitStatement","src":"5741:133:27"}]},"functionSelector":"bdecd21b","id":7223,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7169,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5333:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7170,"kind":"modifierInvocation","modifierName":{"id":7168,"name":"validBatchId","nameLocations":["5320:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7086,"src":"5320:12:27"},"nodeType":"ModifierInvocation","src":"5320:22:27"},{"arguments":[{"id":7172,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"5358:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7173,"kind":"modifierInvocation","modifierName":{"id":7171,"name":"onlyBatchOwner","nameLocations":["5343:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":7069,"src":"5343:14:27"},"nodeType":"ModifierInvocation","src":"5343:24:27"}],"name":"transferBatchOwnership","nameLocation":"5195:22:27","nodeType":"FunctionDefinition","parameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"_batchId","nameLocation":"5235:8:27","nodeType":"VariableDeclaration","scope":7223,"src":"5227:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7161,"name":"uint256","nodeType":"ElementaryTypeName","src":"5227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7164,"mutability":"mutable","name":"_newOwner","nameLocation":"5261:9:27","nodeType":"VariableDeclaration","scope":7223,"src":"5253:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7163,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7166,"mutability":"mutable","name":"_transferAmount","nameLocation":"5288:15:27","nodeType":"VariableDeclaration","scope":7223,"src":"5280:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5217:92:27"},"returnParameters":{"id":7174,"nodeType":"ParameterList","parameters":[],"src":"5368:0:27"},"scope":7473,"src":"5186:695:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7314,"nodeType":"Block","src":"6134:911:27","statements":[{"assignments":[7237],"declarations":[{"constant":false,"id":7237,"mutability":"mutable","name":"batch","nameLocation":"6158:5:27","nodeType":"VariableDeclaration","scope":7314,"src":"6144:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"},"typeName":{"id":7236,"nodeType":"UserDefinedTypeName","pathNode":{"id":7235,"name":"Batch","nameLocations":["6144:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"6144:5:27"},"referencedDeclaration":6980,"src":"6144:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"}},"visibility":"internal"}],"id":7241,"initialValue":{"baseExpression":{"id":7238,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"6166:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7240,"indexExpression":{"id":7239,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"6180:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6166:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6144:45:27"},{"expression":{"arguments":[{"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6207:18:27","subExpression":{"expression":{"id":7243,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"6208:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6214:11:27","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":6977,"src":"6208:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617463682068617320616c7265616479206265656e2066696e616c697a65642e","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6227:35:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","typeString":"literal_string \"Batch has already been finalized.\""},"value":"Batch has already been finalized."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","typeString":"literal_string \"Batch has already been finalized.\""}],"id":7242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6199:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7248,"nodeType":"ExpressionStatement","src":"6199:64:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":7250,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"6294:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7252,"indexExpression":{"id":7251,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"6314:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6294:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7255,"indexExpression":{"expression":{"id":7253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6324:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6328:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6324:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6294:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7256,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6339:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6294:60:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f72207769746864726177616c2e","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6368:38:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","typeString":"literal_string \"Insufficient balance for withdrawal.\""},"value":"Insufficient balance for withdrawal."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","typeString":"literal_string \"Insufficient balance for withdrawal.\""}],"id":7249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6273:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:143:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7260,"nodeType":"ExpressionStatement","src":"6273:143:27"},{"expression":{"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7261,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"6478:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7265,"indexExpression":{"id":7262,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"6498:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6478:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7266,"indexExpression":{"expression":{"id":7263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6508:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6512:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6508:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6478:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7267,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6523:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6478:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7269,"nodeType":"ExpressionStatement","src":"6478:60:27"},{"expression":{"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7270,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"6548:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6554:15:27","memberName":"remainingSupply","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"6548:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7273,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6573:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6548:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7275,"nodeType":"ExpressionStatement","src":"6548:40:27"},{"expression":{"arguments":[{"expression":{"id":7279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6617:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6621:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6617:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7281,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6629:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7276,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"6599:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6604:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"6599:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6599:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7283,"nodeType":"ExpressionStatement","src":"6599:46:27"},{"expression":{"arguments":[{"expression":{"id":7289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6676:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6680:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6676:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7291,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6688:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7284,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"6655:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6661:5:27","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":6969,"src":"6655:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_PikaFractionalAttestationToken_$6960","typeString":"contract PikaFractionalAttestationToken"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6667:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":524,"src":"6655:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6655:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7293,"nodeType":"ExpressionStatement","src":"6655:49:27"},{"eventCall":{"arguments":[{"id":7295,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"6752:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6774:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6778:6:27","memberName":"sender","nodeType":"MemberAccess","src":"6774:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7298,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"6798:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7299,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"6827:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6833:18:27","memberName":"attestationDetails","nodeType":"MemberAccess","referencedDeclaration":6971,"src":"6827:24:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":7301,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"6865:9:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7294,"name":"AttestedWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"6720:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory,string memory)"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:164:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7303,"nodeType":"EmitStatement","src":"6715:169:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7304,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"6963:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6969:15:27","memberName":"remainingSupply","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"6963:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6988:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6963:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7313,"nodeType":"IfStatement","src":"6959:80:27","trueBody":{"id":7312,"nodeType":"Block","src":"6991:48:27","statements":[{"expression":{"arguments":[{"id":7309,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"7019:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7308,"name":"finalizeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"7005:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7005:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7311,"nodeType":"ExpressionStatement","src":"7005:23:27"}]}}]},"functionSelector":"50ba8364","id":7315,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7232,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"6124:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7233,"kind":"modifierInvocation","modifierName":{"id":7231,"name":"validBatchId","nameLocations":["6111:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7086,"src":"6111:12:27"},"nodeType":"ModifierInvocation","src":"6111:22:27"}],"name":"withdrawWithAttestationProof","nameLocation":"5972:28:27","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"_batchId","nameLocation":"6018:8:27","nodeType":"VariableDeclaration","scope":7315,"src":"6010:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6010:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7227,"mutability":"mutable","name":"_withdrawAmount","nameLocation":"6044:15:27","nodeType":"VariableDeclaration","scope":7315,"src":"6036:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7226,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7229,"mutability":"mutable","name":"_metadata","nameLocation":"6085:9:27","nodeType":"VariableDeclaration","scope":7315,"src":"6069:25:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7228,"name":"string","nodeType":"ElementaryTypeName","src":"6069:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6000:100:27"},"returnParameters":{"id":7234,"nodeType":"ParameterList","parameters":[],"src":"6134:0:27"},"scope":7473,"src":"5963:1082:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7394,"nodeType":"Block","src":"7302:820:27","statements":[{"assignments":[7329],"declarations":[{"constant":false,"id":7329,"mutability":"mutable","name":"batch","nameLocation":"7326:5:27","nodeType":"VariableDeclaration","scope":7394,"src":"7312:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"},"typeName":{"id":7328,"nodeType":"UserDefinedTypeName","pathNode":{"id":7327,"name":"Batch","nameLocations":["7312:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"7312:5:27"},"referencedDeclaration":6980,"src":"7312:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"}},"visibility":"internal"}],"id":7333,"initialValue":{"baseExpression":{"id":7330,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"7334:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7332,"indexExpression":{"id":7331,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7348:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7334:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7312:45:27"},{"expression":{"arguments":[{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7375:18:27","subExpression":{"expression":{"id":7335,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"7376:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7382:11:27","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":6977,"src":"7376:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617463682068617320616c7265616479206265656e2066696e616c697a65642e","id":7338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7395:35:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","typeString":"literal_string \"Batch has already been finalized.\""},"value":"Batch has already been finalized."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","typeString":"literal_string \"Batch has already been finalized.\""}],"id":7334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7367:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7367:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7340,"nodeType":"ExpressionStatement","src":"7367:64:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":7342,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"7462:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7344,"indexExpression":{"id":7343,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7482:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7462:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7347,"indexExpression":{"expression":{"id":7345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7492:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7496:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7492:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7462:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7348,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7507:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7462:60:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f72207769746864726177616c2e","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7536:38:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","typeString":"literal_string \"Insufficient balance for withdrawal.\""},"value":"Insufficient balance for withdrawal."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","typeString":"literal_string \"Insufficient balance for withdrawal.\""}],"id":7341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7441:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7441:143:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7352,"nodeType":"ExpressionStatement","src":"7441:143:27"},{"expression":{"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7353,"name":"beneficiaryBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"7654:19:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7357,"indexExpression":{"id":7354,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7674:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7654:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7358,"indexExpression":{"expression":{"id":7355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7684:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7688:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7684:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7654:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7359,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7699:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7654:60:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7361,"nodeType":"ExpressionStatement","src":"7654:60:27"},{"expression":{"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7362,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"7724:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7730:15:27","memberName":"remainingSupply","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"7724:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7365,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7749:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7724:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7367,"nodeType":"ExpressionStatement","src":"7724:40:27"},{"expression":{"arguments":[{"expression":{"id":7371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7793:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7797:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7793:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7373,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7805:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7368,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"7775:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$914","typeString":"contract ERC20"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7780:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"7775:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7775:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7375,"nodeType":"ExpressionStatement","src":"7775:46:27"},{"eventCall":{"arguments":[{"id":7377,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7867:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7889:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:27","memberName":"sender","nodeType":"MemberAccess","src":"7889:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7380,"name":"_withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"7913:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7381,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"7942:9:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7376,"name":"PrivateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"7836:17:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7836:125:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7383,"nodeType":"EmitStatement","src":"7831:130:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7384,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"8040:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8046:15:27","memberName":"remainingSupply","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"8040:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8065:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8040:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"IfStatement","src":"8036:80:27","trueBody":{"id":7392,"nodeType":"Block","src":"8068:48:27","statements":[{"expression":{"arguments":[{"id":7389,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"8096:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7388,"name":"finalizeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"8082:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7391,"nodeType":"ExpressionStatement","src":"8082:23:27"}]}}]},"functionSelector":"c69ac7d3","id":7395,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7324,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7292:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7325,"kind":"modifierInvocation","modifierName":{"id":7323,"name":"validBatchId","nameLocations":["7279:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7086,"src":"7279:12:27"},"nodeType":"ModifierInvocation","src":"7279:22:27"}],"name":"withdrawWithoutAttestation","nameLocation":"7142:26:27","nodeType":"FunctionDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"_batchId","nameLocation":"7186:8:27","nodeType":"VariableDeclaration","scope":7395,"src":"7178:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7316,"name":"uint256","nodeType":"ElementaryTypeName","src":"7178:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7319,"mutability":"mutable","name":"_withdrawAmount","nameLocation":"7212:15:27","nodeType":"VariableDeclaration","scope":7395,"src":"7204:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"7204:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"_metadata","nameLocation":"7253:9:27","nodeType":"VariableDeclaration","scope":7395,"src":"7237:25:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7320,"name":"string","nodeType":"ElementaryTypeName","src":"7237:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7168:100:27"},"returnParameters":{"id":7326,"nodeType":"ParameterList","parameters":[],"src":"7302:0:27"},"scope":7473,"src":"7133:989:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7432,"nodeType":"Block","src":"8265:322:27","statements":[{"assignments":[7402],"declarations":[{"constant":false,"id":7402,"mutability":"mutable","name":"batch","nameLocation":"8289:5:27","nodeType":"VariableDeclaration","scope":7432,"src":"8275:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"},"typeName":{"id":7401,"nodeType":"UserDefinedTypeName","pathNode":{"id":7400,"name":"Batch","nameLocations":["8275:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"8275:5:27"},"referencedDeclaration":6980,"src":"8275:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"}},"visibility":"internal"}],"id":7406,"initialValue":{"baseExpression":{"id":7403,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"8297:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7405,"indexExpression":{"id":7404,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"8311:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8297:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8275:45:27"},{"expression":{"arguments":[{"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8338:18:27","subExpression":{"expression":{"id":7408,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"8339:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8345:11:27","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":6977,"src":"8339:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820697320616c72656164792066696e616c697a65642e","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8358:29:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16","typeString":"literal_string \"Batch is already finalized.\""},"value":"Batch is already finalized."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16","typeString":"literal_string \"Batch is already finalized.\""}],"id":7407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8330:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8330:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7413,"nodeType":"ExpressionStatement","src":"8330:58:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7415,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"8419:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8425:15:27","memberName":"remainingSupply","nodeType":"MemberAccess","referencedDeclaration":6975,"src":"8419:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8444:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8419:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865726520617265207374696c6c20756e77697468647261776e20746f6b656e732e","id":7419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8459:37:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0","typeString":"literal_string \"There are still unwithdrawn tokens.\""},"value":"There are still unwithdrawn tokens."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0","typeString":"literal_string \"There are still unwithdrawn tokens.\""}],"id":7414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8398:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:108:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7421,"nodeType":"ExpressionStatement","src":"8398:108:27"},{"expression":{"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7422,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"8517:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8523:11:27","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":6977,"src":"8517:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8537:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8517:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7427,"nodeType":"ExpressionStatement","src":"8517:24:27"},{"eventCall":{"arguments":[{"id":7429,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"8571:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7428,"name":"BatchFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"8556:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8556:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7431,"nodeType":"EmitStatement","src":"8551:29:27"}]},"id":7433,"implemented":true,"kind":"function","modifiers":[],"name":"finalizeBatch","nameLocation":"8224:13:27","nodeType":"FunctionDefinition","parameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"_batchId","nameLocation":"8246:8:27","nodeType":"VariableDeclaration","scope":7433,"src":"8238:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7396,"name":"uint256","nodeType":"ElementaryTypeName","src":"8238:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8237:18:27"},"returnParameters":{"id":7399,"nodeType":"ParameterList","parameters":[],"src":"8265:0:27"},"scope":7473,"src":"8215:372:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7471,"nodeType":"Block","src":"8840:306:27","statements":[{"assignments":[7448],"declarations":[{"constant":false,"id":7448,"mutability":"mutable","name":"batch","nameLocation":"8864:5:27","nodeType":"VariableDeclaration","scope":7471,"src":"8850:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"},"typeName":{"id":7447,"nodeType":"UserDefinedTypeName","pathNode":{"id":7446,"name":"Batch","nameLocations":["8850:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"8850:5:27"},"referencedDeclaration":6980,"src":"8850:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch"}},"visibility":"internal"}],"id":7452,"initialValue":{"baseExpression":{"id":7449,"name":"batchRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"8872:13:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Batch_$6980_storage_$","typeString":"mapping(uint256 => struct PikaPay.Batch storage ref)"}},"id":7451,"indexExpression":{"id":7450,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"8886:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8872:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage","typeString":"struct PikaPay.Batch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8850:45:27"},{"expression":{"arguments":[{"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8926:18:27","subExpression":{"expression":{"id":7454,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"8927:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8933:11:27","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":6977,"src":"8927:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420757064617465206174746573746174696f6e20666f7220612066696e616c697a65642062617463682e","id":7457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8958:50:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae","typeString":"literal_string \"Cannot update attestation for a finalized batch.\""},"value":"Cannot update attestation for a finalized batch."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae","typeString":"literal_string \"Cannot update attestation for a finalized batch.\""}],"id":7453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8905:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8905:113:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7459,"nodeType":"ExpressionStatement","src":"8905:113:27"},{"expression":{"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7460,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"9029:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Batch_$6980_storage_ptr","typeString":"struct PikaPay.Batch storage pointer"}},"id":7462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9035:18:27","memberName":"attestationDetails","nodeType":"MemberAccess","referencedDeclaration":6971,"src":"9029:24:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7463,"name":"_newAttestationDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9056:22:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"9029:49:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7465,"nodeType":"ExpressionStatement","src":"9029:49:27"},{"eventCall":{"arguments":[{"id":7467,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"9106:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7468,"name":"_newAttestationDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"9116:22:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7466,"name":"BatchUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"9093:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9093:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"EmitStatement","src":"9088:51:27"}]},"functionSelector":"f4122807","id":7472,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7440,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"8805:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7441,"kind":"modifierInvocation","modifierName":{"id":7439,"name":"validBatchId","nameLocations":["8792:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":7086,"src":"8792:12:27"},"nodeType":"ModifierInvocation","src":"8792:22:27"},{"arguments":[{"id":7443,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"8830:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7444,"kind":"modifierInvocation","modifierName":{"id":7442,"name":"onlyBatchOwner","nameLocations":["8815:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":7069,"src":"8815:14:27"},"nodeType":"ModifierInvocation","src":"8815:24:27"}],"name":"modifyBatchAttestation","nameLocation":"8680:22:27","nodeType":"FunctionDefinition","parameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"_batchId","nameLocation":"8720:8:27","nodeType":"VariableDeclaration","scope":7472,"src":"8712:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"8712:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7437,"mutability":"mutable","name":"_newAttestationDetails","nameLocation":"8754:22:27","nodeType":"VariableDeclaration","scope":7472,"src":"8738:38:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7436,"name":"string","nodeType":"ElementaryTypeName","src":"8738:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8702:80:27"},"returnParameters":{"id":7445,"nodeType":"ParameterList","parameters":[],"src":"8840:0:27"},"scope":7473,"src":"8671:475:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7474,"src":"1392:7756:27","usedErrors":[1222],"usedEvents":[7004,7016,7026,7030,7036,7046]}],"src":"68:9081:27"},"id":27},"contracts/USDT.sol":{"ast":{"absolutePath":"contracts/USDT.sol","exportedSymbols":{"Context":[1908],"ECDSA":[3059],"EIP712":[3286],"ERC20":[914],"ERC20Permit":[1146],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172],"IERC20Permit":[1208],"Nonces":[1998],"Ownable":[147],"USDT":[7524]},"id":7525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7475,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7525,"sourceUnit":915,"src":"107:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7525,"sourceUnit":148,"src":"163:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7525,"sourceUnit":1147,"src":"216:72:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7479,"name":"ERC20","nameLocations":["307:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"307:5:28"},"id":7480,"nodeType":"InheritanceSpecifier","src":"307:5:28"},{"baseName":{"id":7481,"name":"Ownable","nameLocations":["314:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"314:7:28"},"id":7482,"nodeType":"InheritanceSpecifier","src":"314:7:28"},{"baseName":{"id":7483,"name":"ERC20Permit","nameLocations":["323:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"323:11:28"},"id":7484,"nodeType":"InheritanceSpecifier","src":"323:11:28"}],"canonicalName":"USDT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7524,"linearizedBaseContracts":[7524,1146,1998,3286,262,1208,147,914,304,1172,992,1908],"name":"USDT","nameLocation":"299:4:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":7509,"nodeType":"Block","src":"445:59:28","statements":[{"expression":{"arguments":[{"expression":{"id":7499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"461:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"465:6:28","memberName":"sender","nodeType":"MemberAccess","src":"461:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:4:28","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"480:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7503,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"486:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"486:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"480:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"473:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7498,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"455:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"455:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7508,"nodeType":"ExpressionStatement","src":"455:42:28"}]},"id":7510,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"55534454","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"369:6:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"},{"hexValue":"55534454","id":7488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"377:6:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"}],"id":7489,"kind":"baseConstructorSpecifier","modifierName":{"id":7486,"name":"ERC20","nameLocations":["363:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"363:5:28"},"nodeType":"ModifierInvocation","src":"363:21:28"},{"arguments":[{"expression":{"id":7491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"401:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"405:6:28","memberName":"sender","nodeType":"MemberAccess","src":"401:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7493,"kind":"baseConstructorSpecifier","modifierName":{"id":7490,"name":"Ownable","nameLocations":["393:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"393:7:28"},"nodeType":"ModifierInvocation","src":"393:19:28"},{"arguments":[{"hexValue":"55534454","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"433:6:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"}],"id":7496,"kind":"baseConstructorSpecifier","modifierName":{"id":7494,"name":"ERC20Permit","nameLocations":["421:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"421:11:28"},"nodeType":"ModifierInvocation","src":"421:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[],"src":"352:2:28"},"returnParameters":{"id":7497,"nodeType":"ParameterList","parameters":[],"src":"445:0:28"},"scope":7524,"src":"341:163:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7522,"nodeType":"Block","src":"560:34:28","statements":[{"expression":{"arguments":[{"id":7518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"576:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7519,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"580:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7517,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"570:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"570:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7521,"nodeType":"ExpressionStatement","src":"570:17:28"}]},"functionSelector":"40c10f19","id":7523,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"519:4:28","nodeType":"FunctionDefinition","parameters":{"id":7515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"to","nameLocation":"532:2:28","nodeType":"VariableDeclaration","scope":7523,"src":"524:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7511,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7514,"mutability":"mutable","name":"amount","nameLocation":"544:6:28","nodeType":"VariableDeclaration","scope":7523,"src":"536:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7513,"name":"uint256","nodeType":"ElementaryTypeName","src":"536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:28:28"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[],"src":"560:0:28"},"scope":7524,"src":"510:84:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7525,"src":"290:306:28","usedErrors":[13,18,274,279,284,293,298,303,1023,1030,1940,2064,2066,2722,2727,2732],"usedEvents":[24,242,926,935]}],"src":"81:517:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220502810675dabfe44fdc8c581ea6534d73ab4eb91cb00d3ef060981a1ab5cb8c964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x28 LT PUSH8 0x5DABFE44FDC8C581 0xEA PUSH6 0x34D73AB4EB91 0xCB STOP 0xD3 0xEF MOD MULMOD DUP2 LOG1 0xAB TLOAD 0xB8 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220502810675dabfe44fdc8c581ea6534d73ab4eb91cb00d3ef060981a1ab5cb8c964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x28 LT PUSH8 0x5DABFE44FDC8C581 0xEA PUSH6 0x34D73AB4EB91 0xCB STOP 0xD3 0xEF MOD MULMOD DUP2 LOG1 0xAB TLOAD 0xB8 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"750:8692:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb690ca80c111267b1ba64fef1a8c055d42bb1beade5201d7a8d5bdc2984b06a64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH10 0xCA80C111267B1BA64FE CALL 0xA8 0xC0 SSTORE 0xD4 0x2B 0xB1 0xBE 0xAD 0xE5 KECCAK256 SAR PUSH27 0x8D5BDC2984B06A64736F6C634300081B0033000000000000000000 ","sourceMap":"233:5799:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb690ca80c111267b1ba64fef1a8c055d42bb1beade5201d7a8d5bdc2984b06a64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH10 0xCA80C111267B1BA64FE CALL 0xA8 0xC0 SSTORE 0xD4 0x2B 0xB1 0xBE 0xAD 0xE5 KECCAK256 SAR PUSH27 0x8D5BDC2984B06A64736F6C634300081B0033000000000000000000 ","sourceMap":"233:5799:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2b6017f27ba330c5ddbf7938587f4edb92dfd2131074cedcf85ca87c7a4769c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB6 ADD PUSH32 0x27BA330C5DDBF7938587F4EDB92DFD2131074CEDCF85CA87C7A4769C64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"411:484:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a2b6017f27ba330c5ddbf7938587f4edb92dfd2131074cedcf85ca87c7a4769c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB6 ADD PUSH32 0x27BA330C5DDBF7938587F4EDB92DFD2131074CEDCF85CA87C7A4769C64736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"411:484:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220315420d2a34f54a0426c9d4fa643e55c756e077cf0b1ca748a3d08550624cc3764736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SLOAD KECCAK256 0xD2 LOG3 0x4F SLOAD LOG0 TIMESTAMP PUSH13 0x9D4FA643E55C756E077CF0B1CA PUSH21 0x8A3D08550624CC3764736F6C634300081B00330000 ","sourceMap":"657:1315:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a74f5a2d5fd6e59ea01c9239fd7f1b426ee3b2b1e16aa6400c77cb80ca3f8a164736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH21 0xF5A2D5FD6E59EA01C9239FD7F1B426EE3B2B1E16AA PUSH5 0xC77CB80C LOG3 0xF8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3026:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c5b9741516a89aa3b21db03a537447b20e0f0eca242db0ef8c93e38ed69d9f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY JUMPDEST SWAP8 COINBASE MLOAD PUSH11 0x89AA3B21DB03A537447B20 0xE0 CREATE 0xEC LOG2 TIMESTAMP 0xDB 0xE 0xF8 0xC9 RETURNDATACOPY CODESIZE 0xED PUSH10 0xD9F664736F6C63430008 SHL STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699303a5c52bc84a454e1d7f1979e68af835e3d029de02ddc146e280c842441964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9303A5C52BC84A454E1D PUSH32 0x1979E68AF835E3D029DE02DDC146E280C842441964736F6C634300081B003300 ","sourceMap":"251:3680:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200609642c22ba18325abd959c2f05794f0e137b8622597c479ac1b7b6cecbaefa64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD MULMOD PUSH5 0x2C22BA1832 GAS 0xBD SWAP6 SWAP13 0x2F SDIV PUSH26 0x4F0E137B8622597C479AC1B7B6CECBAEFA64736F6C634300081B STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045964c3323036b458d2cd7d327a9020c8d264023ab02397202e9ad562599c37964736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SWAP7 0x4C CALLER 0x23 SUB PUSH12 0x458D2CD7D327A9020C8D2640 0x23 0xAB MUL CODECOPY PUSH19 0x2E9AD562599C37964736F6C634300081B0033 ","sourceMap":"521:3181:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9b729d0e4b7415694476ac1dd6b51b73e23ed609e32d344cf12a11202ac949e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xB7 0x29 0xD0 0xE4 0xB7 COINBASE JUMP SWAP5 SELFBALANCE PUSH11 0xC1DD6B51B73E23ED609E32 0xD3 PREVRANDAO 0xCF SLT LOG1 SLT MUL 0xAC SWAP5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:28026:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f555b99f34b1c067f4d2ea441095768d54040c479b869b2116f2283c5ea029cc64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 SSTORE 0xB9 SWAP16 CALLVALUE 0xB1 0xC0 PUSH8 0xF4D2EA441095768D SLOAD DIV 0xC SELFBALANCE SWAP12 DUP7 SWAP12 0x21 AND CALLCODE 0x28 EXTCODECOPY MCOPY LOG0 0x29 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef2b69475893fef9566b51a6f4707efb246e99a221eea24472d422e54ab1462664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x2B PUSH10 0x475893FEF9566B51A6F4 PUSH17 0x7EFB246E99A221EEA24472D422E54AB146 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/PikaPay.sol":{"PikaFractionalAttestationToken":{"abi":[{"inputs":[{"internalType":"contract PikaPay","name":"_pikaPay","type":"address"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"batchId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pikaPay","outputs":[{"internalType":"contract PikaPay","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":0},"@_6943":{"entryPoint":null,"id":6943,"parameterSlots":3,"returnSlots":0},"@_mint_754":{"entryPoint":559,"id":754,"parameterSlots":2,"returnSlots":0},"@_update_721":{"entryPoint":1034,"id":721,"parameterSlots":3,"returnSlots":0},"@log10_4750":{"entryPoint":695,"id":4750,"parameterSlots":1,"returnSlots":1},"@toString_2459":{"entryPoint":347,"id":2459,"parameterSlots":1,"returnSlots":1},"abi_decode_t_contract$_PikaPay_$7473_fromMemory":{"entryPoint":1679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_PikaPay_$7473t_uint256t_uint256_fromMemory":{"entryPoint":1754,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3017,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e_to_t_string_memory_ptr_fromStack":{"entryPoint":2903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_to_t_bytes26_nonPadded_inplace_fromStack":{"entryPoint":1837,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3158,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_t_string_memory_ptr__to_t_bytes26_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3173,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3228,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2169,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1875,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2807,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1886,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2456,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1620,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_PikaPay_$7473":{"entryPoint":1638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1588,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1700,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2421,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2311,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1897,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2190,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2120,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2569,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2301,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2539,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3059,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2970,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2073,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2026,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2345,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1583,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":2206,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2526,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e":{"entryPoint":2824,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2219,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2355,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_PikaPay_$7473":{"entryPoint":1656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1710,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2392,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:11714:29","nodeType":"YulBlock","src":"0:11714:29","statements":[{"body":{"nativeSrc":"47:35:29","nodeType":"YulBlock","src":"47:35:29","statements":[{"nativeSrc":"57:19:29","nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:29","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:29","nodeType":"YulIdentifier","src":"67:5:29"},"nativeSrc":"67:9:29","nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:29","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:29","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nativeSrc":"177:28:29","nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:29","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:29","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:29","nodeType":"YulIdentifier","src":"187:6:29"},"nativeSrc":"187:12:29","nodeType":"YulFunctionCall","src":"187:12:29"},"nativeSrc":"187:12:29","nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:29","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nativeSrc":"300:28:29","nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:29","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:29","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:29","nodeType":"YulIdentifier","src":"310:6:29"},"nativeSrc":"310:12:29","nodeType":"YulFunctionCall","src":"310:12:29"},"nativeSrc":"310:12:29","nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:29","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nativeSrc":"379:81:29","nodeType":"YulBlock","src":"379:81:29","statements":[{"nativeSrc":"389:65:29","nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nativeSrc":"404:5:29","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nativeSrc":"411:42:29","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:29","nodeType":"YulIdentifier","src":"400:3:29"},"nativeSrc":"400:54:29","nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:29","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:29","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:29","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nativeSrc":"511:51:29","nodeType":"YulBlock","src":"511:51:29","statements":[{"nativeSrc":"521:35:29","nodeType":"YulAssignment","src":"521:35:29","value":{"arguments":[{"name":"value","nativeSrc":"550:5:29","nodeType":"YulIdentifier","src":"550:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:29","nodeType":"YulIdentifier","src":"532:17:29"},"nativeSrc":"532:24:29","nodeType":"YulFunctionCall","src":"532:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:29","nodeType":"YulIdentifier","src":"521:7:29"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:29","nodeType":"YulTypedName","src":"493:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:29","nodeType":"YulTypedName","src":"503:7:29","type":""}],"src":"466:96:29"},{"body":{"nativeSrc":"629:51:29","nodeType":"YulBlock","src":"629:51:29","statements":[{"nativeSrc":"639:35:29","nodeType":"YulAssignment","src":"639:35:29","value":{"arguments":[{"name":"value","nativeSrc":"668:5:29","nodeType":"YulIdentifier","src":"668:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"650:17:29","nodeType":"YulIdentifier","src":"650:17:29"},"nativeSrc":"650:24:29","nodeType":"YulFunctionCall","src":"650:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"639:7:29","nodeType":"YulIdentifier","src":"639:7:29"}]}]},"name":"cleanup_t_contract$_PikaPay_$7473","nativeSrc":"568:112:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:29","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"621:7:29","nodeType":"YulTypedName","src":"621:7:29","type":""}],"src":"568:112:29"},{"body":{"nativeSrc":"745:95:29","nodeType":"YulBlock","src":"745:95:29","statements":[{"body":{"nativeSrc":"818:16:29","nodeType":"YulBlock","src":"818:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"827:1:29","nodeType":"YulLiteral","src":"827:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"830:1:29","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"820:6:29","nodeType":"YulIdentifier","src":"820:6:29"},"nativeSrc":"820:12:29","nodeType":"YulFunctionCall","src":"820:12:29"},"nativeSrc":"820:12:29","nodeType":"YulExpressionStatement","src":"820:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"768:5:29","nodeType":"YulIdentifier","src":"768:5:29"},{"arguments":[{"name":"value","nativeSrc":"809:5:29","nodeType":"YulIdentifier","src":"809:5:29"}],"functionName":{"name":"cleanup_t_contract$_PikaPay_$7473","nativeSrc":"775:33:29","nodeType":"YulIdentifier","src":"775:33:29"},"nativeSrc":"775:40:29","nodeType":"YulFunctionCall","src":"775:40:29"}],"functionName":{"name":"eq","nativeSrc":"765:2:29","nodeType":"YulIdentifier","src":"765:2:29"},"nativeSrc":"765:51:29","nodeType":"YulFunctionCall","src":"765:51:29"}],"functionName":{"name":"iszero","nativeSrc":"758:6:29","nodeType":"YulIdentifier","src":"758:6:29"},"nativeSrc":"758:59:29","nodeType":"YulFunctionCall","src":"758:59:29"},"nativeSrc":"755:79:29","nodeType":"YulIf","src":"755:79:29"}]},"name":"validator_revert_t_contract$_PikaPay_$7473","nativeSrc":"686:154:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"738:5:29","nodeType":"YulTypedName","src":"738:5:29","type":""}],"src":"686:154:29"},{"body":{"nativeSrc":"925:96:29","nodeType":"YulBlock","src":"925:96:29","statements":[{"nativeSrc":"935:22:29","nodeType":"YulAssignment","src":"935:22:29","value":{"arguments":[{"name":"offset","nativeSrc":"950:6:29","nodeType":"YulIdentifier","src":"950:6:29"}],"functionName":{"name":"mload","nativeSrc":"944:5:29","nodeType":"YulIdentifier","src":"944:5:29"},"nativeSrc":"944:13:29","nodeType":"YulFunctionCall","src":"944:13:29"},"variableNames":[{"name":"value","nativeSrc":"935:5:29","nodeType":"YulIdentifier","src":"935:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1009:5:29","nodeType":"YulIdentifier","src":"1009:5:29"}],"functionName":{"name":"validator_revert_t_contract$_PikaPay_$7473","nativeSrc":"966:42:29","nodeType":"YulIdentifier","src":"966:42:29"},"nativeSrc":"966:49:29","nodeType":"YulFunctionCall","src":"966:49:29"},"nativeSrc":"966:49:29","nodeType":"YulExpressionStatement","src":"966:49:29"}]},"name":"abi_decode_t_contract$_PikaPay_$7473_fromMemory","nativeSrc":"846:175:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"903:6:29","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"end","nativeSrc":"911:3:29","nodeType":"YulTypedName","src":"911:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"919:5:29","nodeType":"YulTypedName","src":"919:5:29","type":""}],"src":"846:175:29"},{"body":{"nativeSrc":"1072:32:29","nodeType":"YulBlock","src":"1072:32:29","statements":[{"nativeSrc":"1082:16:29","nodeType":"YulAssignment","src":"1082:16:29","value":{"name":"value","nativeSrc":"1093:5:29","nodeType":"YulIdentifier","src":"1093:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1082:7:29","nodeType":"YulIdentifier","src":"1082:7:29"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1027:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1054:5:29","nodeType":"YulTypedName","src":"1054:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1064:7:29","nodeType":"YulTypedName","src":"1064:7:29","type":""}],"src":"1027:77:29"},{"body":{"nativeSrc":"1153:79:29","nodeType":"YulBlock","src":"1153:79:29","statements":[{"body":{"nativeSrc":"1210:16:29","nodeType":"YulBlock","src":"1210:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1219:1:29","nodeType":"YulLiteral","src":"1219:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1222:1:29","nodeType":"YulLiteral","src":"1222:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1212:6:29","nodeType":"YulIdentifier","src":"1212:6:29"},"nativeSrc":"1212:12:29","nodeType":"YulFunctionCall","src":"1212:12:29"},"nativeSrc":"1212:12:29","nodeType":"YulExpressionStatement","src":"1212:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1176:5:29","nodeType":"YulIdentifier","src":"1176:5:29"},{"arguments":[{"name":"value","nativeSrc":"1201:5:29","nodeType":"YulIdentifier","src":"1201:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1183:17:29","nodeType":"YulIdentifier","src":"1183:17:29"},"nativeSrc":"1183:24:29","nodeType":"YulFunctionCall","src":"1183:24:29"}],"functionName":{"name":"eq","nativeSrc":"1173:2:29","nodeType":"YulIdentifier","src":"1173:2:29"},"nativeSrc":"1173:35:29","nodeType":"YulFunctionCall","src":"1173:35:29"}],"functionName":{"name":"iszero","nativeSrc":"1166:6:29","nodeType":"YulIdentifier","src":"1166:6:29"},"nativeSrc":"1166:43:29","nodeType":"YulFunctionCall","src":"1166:43:29"},"nativeSrc":"1163:63:29","nodeType":"YulIf","src":"1163:63:29"}]},"name":"validator_revert_t_uint256","nativeSrc":"1110:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1146:5:29","nodeType":"YulTypedName","src":"1146:5:29","type":""}],"src":"1110:122:29"},{"body":{"nativeSrc":"1301:80:29","nodeType":"YulBlock","src":"1301:80:29","statements":[{"nativeSrc":"1311:22:29","nodeType":"YulAssignment","src":"1311:22:29","value":{"arguments":[{"name":"offset","nativeSrc":"1326:6:29","nodeType":"YulIdentifier","src":"1326:6:29"}],"functionName":{"name":"mload","nativeSrc":"1320:5:29","nodeType":"YulIdentifier","src":"1320:5:29"},"nativeSrc":"1320:13:29","nodeType":"YulFunctionCall","src":"1320:13:29"},"variableNames":[{"name":"value","nativeSrc":"1311:5:29","nodeType":"YulIdentifier","src":"1311:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1369:5:29","nodeType":"YulIdentifier","src":"1369:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1342:26:29","nodeType":"YulIdentifier","src":"1342:26:29"},"nativeSrc":"1342:33:29","nodeType":"YulFunctionCall","src":"1342:33:29"},"nativeSrc":"1342:33:29","nodeType":"YulExpressionStatement","src":"1342:33:29"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1238:143:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1279:6:29","nodeType":"YulTypedName","src":"1279:6:29","type":""},{"name":"end","nativeSrc":"1287:3:29","nodeType":"YulTypedName","src":"1287:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1295:5:29","nodeType":"YulTypedName","src":"1295:5:29","type":""}],"src":"1238:143:29"},{"body":{"nativeSrc":"1514:568:29","nodeType":"YulBlock","src":"1514:568:29","statements":[{"body":{"nativeSrc":"1560:83:29","nodeType":"YulBlock","src":"1560:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1562:77:29","nodeType":"YulIdentifier","src":"1562:77:29"},"nativeSrc":"1562:79:29","nodeType":"YulFunctionCall","src":"1562:79:29"},"nativeSrc":"1562:79:29","nodeType":"YulExpressionStatement","src":"1562:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1535:7:29","nodeType":"YulIdentifier","src":"1535:7:29"},{"name":"headStart","nativeSrc":"1544:9:29","nodeType":"YulIdentifier","src":"1544:9:29"}],"functionName":{"name":"sub","nativeSrc":"1531:3:29","nodeType":"YulIdentifier","src":"1531:3:29"},"nativeSrc":"1531:23:29","nodeType":"YulFunctionCall","src":"1531:23:29"},{"kind":"number","nativeSrc":"1556:2:29","nodeType":"YulLiteral","src":"1556:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1527:3:29","nodeType":"YulIdentifier","src":"1527:3:29"},"nativeSrc":"1527:32:29","nodeType":"YulFunctionCall","src":"1527:32:29"},"nativeSrc":"1524:119:29","nodeType":"YulIf","src":"1524:119:29"},{"nativeSrc":"1653:144:29","nodeType":"YulBlock","src":"1653:144:29","statements":[{"nativeSrc":"1668:15:29","nodeType":"YulVariableDeclaration","src":"1668:15:29","value":{"kind":"number","nativeSrc":"1682:1:29","nodeType":"YulLiteral","src":"1682:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1672:6:29","nodeType":"YulTypedName","src":"1672:6:29","type":""}]},{"nativeSrc":"1697:90:29","nodeType":"YulAssignment","src":"1697:90:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1759:9:29","nodeType":"YulIdentifier","src":"1759:9:29"},{"name":"offset","nativeSrc":"1770:6:29","nodeType":"YulIdentifier","src":"1770:6:29"}],"functionName":{"name":"add","nativeSrc":"1755:3:29","nodeType":"YulIdentifier","src":"1755:3:29"},"nativeSrc":"1755:22:29","nodeType":"YulFunctionCall","src":"1755:22:29"},{"name":"dataEnd","nativeSrc":"1779:7:29","nodeType":"YulIdentifier","src":"1779:7:29"}],"functionName":{"name":"abi_decode_t_contract$_PikaPay_$7473_fromMemory","nativeSrc":"1707:47:29","nodeType":"YulIdentifier","src":"1707:47:29"},"nativeSrc":"1707:80:29","nodeType":"YulFunctionCall","src":"1707:80:29"},"variableNames":[{"name":"value0","nativeSrc":"1697:6:29","nodeType":"YulIdentifier","src":"1697:6:29"}]}]},{"nativeSrc":"1807:129:29","nodeType":"YulBlock","src":"1807:129:29","statements":[{"nativeSrc":"1822:16:29","nodeType":"YulVariableDeclaration","src":"1822:16:29","value":{"kind":"number","nativeSrc":"1836:2:29","nodeType":"YulLiteral","src":"1836:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1826:6:29","nodeType":"YulTypedName","src":"1826:6:29","type":""}]},{"nativeSrc":"1852:74:29","nodeType":"YulAssignment","src":"1852:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1898:9:29","nodeType":"YulIdentifier","src":"1898:9:29"},{"name":"offset","nativeSrc":"1909:6:29","nodeType":"YulIdentifier","src":"1909:6:29"}],"functionName":{"name":"add","nativeSrc":"1894:3:29","nodeType":"YulIdentifier","src":"1894:3:29"},"nativeSrc":"1894:22:29","nodeType":"YulFunctionCall","src":"1894:22:29"},{"name":"dataEnd","nativeSrc":"1918:7:29","nodeType":"YulIdentifier","src":"1918:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1862:31:29","nodeType":"YulIdentifier","src":"1862:31:29"},"nativeSrc":"1862:64:29","nodeType":"YulFunctionCall","src":"1862:64:29"},"variableNames":[{"name":"value1","nativeSrc":"1852:6:29","nodeType":"YulIdentifier","src":"1852:6:29"}]}]},{"nativeSrc":"1946:129:29","nodeType":"YulBlock","src":"1946:129:29","statements":[{"nativeSrc":"1961:16:29","nodeType":"YulVariableDeclaration","src":"1961:16:29","value":{"kind":"number","nativeSrc":"1975:2:29","nodeType":"YulLiteral","src":"1975:2:29","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1965:6:29","nodeType":"YulTypedName","src":"1965:6:29","type":""}]},{"nativeSrc":"1991:74:29","nodeType":"YulAssignment","src":"1991:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2037:9:29","nodeType":"YulIdentifier","src":"2037:9:29"},{"name":"offset","nativeSrc":"2048:6:29","nodeType":"YulIdentifier","src":"2048:6:29"}],"functionName":{"name":"add","nativeSrc":"2033:3:29","nodeType":"YulIdentifier","src":"2033:3:29"},"nativeSrc":"2033:22:29","nodeType":"YulFunctionCall","src":"2033:22:29"},{"name":"dataEnd","nativeSrc":"2057:7:29","nodeType":"YulIdentifier","src":"2057:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2001:31:29","nodeType":"YulIdentifier","src":"2001:31:29"},"nativeSrc":"2001:64:29","nodeType":"YulFunctionCall","src":"2001:64:29"},"variableNames":[{"name":"value2","nativeSrc":"1991:6:29","nodeType":"YulIdentifier","src":"1991:6:29"}]}]}]},"name":"abi_decode_tuple_t_contract$_PikaPay_$7473t_uint256t_uint256_fromMemory","nativeSrc":"1387:695:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1468:9:29","nodeType":"YulTypedName","src":"1468:9:29","type":""},{"name":"dataEnd","nativeSrc":"1479:7:29","nodeType":"YulTypedName","src":"1479:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1491:6:29","nodeType":"YulTypedName","src":"1491:6:29","type":""},{"name":"value1","nativeSrc":"1499:6:29","nodeType":"YulTypedName","src":"1499:6:29","type":""},{"name":"value2","nativeSrc":"1507:6:29","nodeType":"YulTypedName","src":"1507:6:29","type":""}],"src":"1387:695:29"},{"body":{"nativeSrc":"2235:57:29","nodeType":"YulBlock","src":"2235:57:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2252:3:29","nodeType":"YulIdentifier","src":"2252:3:29"},{"hexValue":"50696b61506179204672616374696f6e616c2042617463682023","kind":"string","nativeSrc":"2257:28:29","nodeType":"YulLiteral","src":"2257:28:29","type":"","value":"PikaPay Fractional Batch #"}],"functionName":{"name":"mstore","nativeSrc":"2245:6:29","nodeType":"YulIdentifier","src":"2245:6:29"},"nativeSrc":"2245:41:29","nodeType":"YulFunctionCall","src":"2245:41:29"},"nativeSrc":"2245:41:29","nodeType":"YulExpressionStatement","src":"2245:41:29"}]},"name":"abi_encode_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_to_t_bytes26_nonPadded_inplace_fromStack","nativeSrc":"2088:204:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2230:3:29","nodeType":"YulTypedName","src":"2230:3:29","type":""}],"src":"2088:204:29"},{"body":{"nativeSrc":"2357:40:29","nodeType":"YulBlock","src":"2357:40:29","statements":[{"nativeSrc":"2368:22:29","nodeType":"YulAssignment","src":"2368:22:29","value":{"arguments":[{"name":"value","nativeSrc":"2384:5:29","nodeType":"YulIdentifier","src":"2384:5:29"}],"functionName":{"name":"mload","nativeSrc":"2378:5:29","nodeType":"YulIdentifier","src":"2378:5:29"},"nativeSrc":"2378:12:29","nodeType":"YulFunctionCall","src":"2378:12:29"},"variableNames":[{"name":"length","nativeSrc":"2368:6:29","nodeType":"YulIdentifier","src":"2368:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"2298:99:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2340:5:29","nodeType":"YulTypedName","src":"2340:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2350:6:29","nodeType":"YulTypedName","src":"2350:6:29","type":""}],"src":"2298:99:29"},{"body":{"nativeSrc":"2517:34:29","nodeType":"YulBlock","src":"2517:34:29","statements":[{"nativeSrc":"2527:18:29","nodeType":"YulAssignment","src":"2527:18:29","value":{"name":"pos","nativeSrc":"2542:3:29","nodeType":"YulIdentifier","src":"2542:3:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"2527:11:29","nodeType":"YulIdentifier","src":"2527:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"2403:148:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2489:3:29","nodeType":"YulTypedName","src":"2489:3:29","type":""},{"name":"length","nativeSrc":"2494:6:29","nodeType":"YulTypedName","src":"2494:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"2505:11:29","nodeType":"YulTypedName","src":"2505:11:29","type":""}],"src":"2403:148:29"},{"body":{"nativeSrc":"2619:186:29","nodeType":"YulBlock","src":"2619:186:29","statements":[{"nativeSrc":"2630:10:29","nodeType":"YulVariableDeclaration","src":"2630:10:29","value":{"kind":"number","nativeSrc":"2639:1:29","nodeType":"YulLiteral","src":"2639:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2634:1:29","nodeType":"YulTypedName","src":"2634:1:29","type":""}]},{"body":{"nativeSrc":"2699:63:29","nodeType":"YulBlock","src":"2699:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2724:3:29","nodeType":"YulIdentifier","src":"2724:3:29"},{"name":"i","nativeSrc":"2729:1:29","nodeType":"YulIdentifier","src":"2729:1:29"}],"functionName":{"name":"add","nativeSrc":"2720:3:29","nodeType":"YulIdentifier","src":"2720:3:29"},"nativeSrc":"2720:11:29","nodeType":"YulFunctionCall","src":"2720:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2743:3:29","nodeType":"YulIdentifier","src":"2743:3:29"},{"name":"i","nativeSrc":"2748:1:29","nodeType":"YulIdentifier","src":"2748:1:29"}],"functionName":{"name":"add","nativeSrc":"2739:3:29","nodeType":"YulIdentifier","src":"2739:3:29"},"nativeSrc":"2739:11:29","nodeType":"YulFunctionCall","src":"2739:11:29"}],"functionName":{"name":"mload","nativeSrc":"2733:5:29","nodeType":"YulIdentifier","src":"2733:5:29"},"nativeSrc":"2733:18:29","nodeType":"YulFunctionCall","src":"2733:18:29"}],"functionName":{"name":"mstore","nativeSrc":"2713:6:29","nodeType":"YulIdentifier","src":"2713:6:29"},"nativeSrc":"2713:39:29","nodeType":"YulFunctionCall","src":"2713:39:29"},"nativeSrc":"2713:39:29","nodeType":"YulExpressionStatement","src":"2713:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2660:1:29","nodeType":"YulIdentifier","src":"2660:1:29"},{"name":"length","nativeSrc":"2663:6:29","nodeType":"YulIdentifier","src":"2663:6:29"}],"functionName":{"name":"lt","nativeSrc":"2657:2:29","nodeType":"YulIdentifier","src":"2657:2:29"},"nativeSrc":"2657:13:29","nodeType":"YulFunctionCall","src":"2657:13:29"},"nativeSrc":"2649:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"2671:19:29","nodeType":"YulBlock","src":"2671:19:29","statements":[{"nativeSrc":"2673:15:29","nodeType":"YulAssignment","src":"2673:15:29","value":{"arguments":[{"name":"i","nativeSrc":"2682:1:29","nodeType":"YulIdentifier","src":"2682:1:29"},{"kind":"number","nativeSrc":"2685:2:29","nodeType":"YulLiteral","src":"2685:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2678:3:29","nodeType":"YulIdentifier","src":"2678:3:29"},"nativeSrc":"2678:10:29","nodeType":"YulFunctionCall","src":"2678:10:29"},"variableNames":[{"name":"i","nativeSrc":"2673:1:29","nodeType":"YulIdentifier","src":"2673:1:29"}]}]},"pre":{"nativeSrc":"2653:3:29","nodeType":"YulBlock","src":"2653:3:29","statements":[]},"src":"2649:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2782:3:29","nodeType":"YulIdentifier","src":"2782:3:29"},{"name":"length","nativeSrc":"2787:6:29","nodeType":"YulIdentifier","src":"2787:6:29"}],"functionName":{"name":"add","nativeSrc":"2778:3:29","nodeType":"YulIdentifier","src":"2778:3:29"},"nativeSrc":"2778:16:29","nodeType":"YulFunctionCall","src":"2778:16:29"},{"kind":"number","nativeSrc":"2796:1:29","nodeType":"YulLiteral","src":"2796:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2771:6:29","nodeType":"YulIdentifier","src":"2771:6:29"},"nativeSrc":"2771:27:29","nodeType":"YulFunctionCall","src":"2771:27:29"},"nativeSrc":"2771:27:29","nodeType":"YulExpressionStatement","src":"2771:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2557:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2601:3:29","nodeType":"YulTypedName","src":"2601:3:29","type":""},{"name":"dst","nativeSrc":"2606:3:29","nodeType":"YulTypedName","src":"2606:3:29","type":""},{"name":"length","nativeSrc":"2611:6:29","nodeType":"YulTypedName","src":"2611:6:29","type":""}],"src":"2557:248:29"},{"body":{"nativeSrc":"2921:280:29","nodeType":"YulBlock","src":"2921:280:29","statements":[{"nativeSrc":"2931:53:29","nodeType":"YulVariableDeclaration","src":"2931:53:29","value":{"arguments":[{"name":"value","nativeSrc":"2978:5:29","nodeType":"YulIdentifier","src":"2978:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2945:32:29","nodeType":"YulIdentifier","src":"2945:32:29"},"nativeSrc":"2945:39:29","nodeType":"YulFunctionCall","src":"2945:39:29"},"variables":[{"name":"length","nativeSrc":"2935:6:29","nodeType":"YulTypedName","src":"2935:6:29","type":""}]},{"nativeSrc":"2993:96:29","nodeType":"YulAssignment","src":"2993:96:29","value":{"arguments":[{"name":"pos","nativeSrc":"3077:3:29","nodeType":"YulIdentifier","src":"3077:3:29"},{"name":"length","nativeSrc":"3082:6:29","nodeType":"YulIdentifier","src":"3082:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"3000:76:29","nodeType":"YulIdentifier","src":"3000:76:29"},"nativeSrc":"3000:89:29","nodeType":"YulFunctionCall","src":"3000:89:29"},"variableNames":[{"name":"pos","nativeSrc":"2993:3:29","nodeType":"YulIdentifier","src":"2993:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3137:5:29","nodeType":"YulIdentifier","src":"3137:5:29"},{"kind":"number","nativeSrc":"3144:4:29","nodeType":"YulLiteral","src":"3144:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3133:3:29","nodeType":"YulIdentifier","src":"3133:3:29"},"nativeSrc":"3133:16:29","nodeType":"YulFunctionCall","src":"3133:16:29"},{"name":"pos","nativeSrc":"3151:3:29","nodeType":"YulIdentifier","src":"3151:3:29"},{"name":"length","nativeSrc":"3156:6:29","nodeType":"YulIdentifier","src":"3156:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3098:34:29","nodeType":"YulIdentifier","src":"3098:34:29"},"nativeSrc":"3098:65:29","nodeType":"YulFunctionCall","src":"3098:65:29"},"nativeSrc":"3098:65:29","nodeType":"YulExpressionStatement","src":"3098:65:29"},{"nativeSrc":"3172:23:29","nodeType":"YulAssignment","src":"3172:23:29","value":{"arguments":[{"name":"pos","nativeSrc":"3183:3:29","nodeType":"YulIdentifier","src":"3183:3:29"},{"name":"length","nativeSrc":"3188:6:29","nodeType":"YulIdentifier","src":"3188:6:29"}],"functionName":{"name":"add","nativeSrc":"3179:3:29","nodeType":"YulIdentifier","src":"3179:3:29"},"nativeSrc":"3179:16:29","nodeType":"YulFunctionCall","src":"3179:16:29"},"variableNames":[{"name":"end","nativeSrc":"3172:3:29","nodeType":"YulIdentifier","src":"3172:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"2811:390:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2902:5:29","nodeType":"YulTypedName","src":"2902:5:29","type":""},{"name":"pos","nativeSrc":"2909:3:29","nodeType":"YulTypedName","src":"2909:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2917:3:29","nodeType":"YulTypedName","src":"2917:3:29","type":""}],"src":"2811:390:29"},{"body":{"nativeSrc":"3434:315:29","nodeType":"YulBlock","src":"3434:315:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3579:3:29","nodeType":"YulIdentifier","src":"3579:3:29"}],"functionName":{"name":"abi_encode_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_to_t_bytes26_nonPadded_inplace_fromStack","nativeSrc":"3445:132:29","nodeType":"YulIdentifier","src":"3445:132:29"},"nativeSrc":"3445:138:29","nodeType":"YulFunctionCall","src":"3445:138:29"},"nativeSrc":"3445:138:29","nodeType":"YulExpressionStatement","src":"3445:138:29"},{"nativeSrc":"3592:19:29","nodeType":"YulAssignment","src":"3592:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"3603:3:29","nodeType":"YulIdentifier","src":"3603:3:29"},{"kind":"number","nativeSrc":"3608:2:29","nodeType":"YulLiteral","src":"3608:2:29","type":"","value":"26"}],"functionName":{"name":"add","nativeSrc":"3599:3:29","nodeType":"YulIdentifier","src":"3599:3:29"},"nativeSrc":"3599:12:29","nodeType":"YulFunctionCall","src":"3599:12:29"},"variableNames":[{"name":"pos","nativeSrc":"3592:3:29","nodeType":"YulIdentifier","src":"3592:3:29"}]},{"nativeSrc":"3621:102:29","nodeType":"YulAssignment","src":"3621:102:29","value":{"arguments":[{"name":"value0","nativeSrc":"3710:6:29","nodeType":"YulIdentifier","src":"3710:6:29"},{"name":"pos","nativeSrc":"3719:3:29","nodeType":"YulIdentifier","src":"3719:3:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"3628:81:29","nodeType":"YulIdentifier","src":"3628:81:29"},"nativeSrc":"3628:95:29","nodeType":"YulFunctionCall","src":"3628:95:29"},"variableNames":[{"name":"pos","nativeSrc":"3621:3:29","nodeType":"YulIdentifier","src":"3621:3:29"}]},{"nativeSrc":"3733:10:29","nodeType":"YulAssignment","src":"3733:10:29","value":{"name":"pos","nativeSrc":"3740:3:29","nodeType":"YulIdentifier","src":"3740:3:29"},"variableNames":[{"name":"end","nativeSrc":"3733:3:29","nodeType":"YulIdentifier","src":"3733:3:29"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_t_string_memory_ptr__to_t_bytes26_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3207:542:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3413:3:29","nodeType":"YulTypedName","src":"3413:3:29","type":""},{"name":"value0","nativeSrc":"3419:6:29","nodeType":"YulTypedName","src":"3419:6:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3430:3:29","nodeType":"YulTypedName","src":"3430:3:29","type":""}],"src":"3207:542:29"},{"body":{"nativeSrc":"3783:152:29","nodeType":"YulBlock","src":"3783:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3800:1:29","nodeType":"YulLiteral","src":"3800:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3803:77:29","nodeType":"YulLiteral","src":"3803:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3793:6:29","nodeType":"YulIdentifier","src":"3793:6:29"},"nativeSrc":"3793:88:29","nodeType":"YulFunctionCall","src":"3793:88:29"},"nativeSrc":"3793:88:29","nodeType":"YulExpressionStatement","src":"3793:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3897:1:29","nodeType":"YulLiteral","src":"3897:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"3900:4:29","nodeType":"YulLiteral","src":"3900:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3890:6:29","nodeType":"YulIdentifier","src":"3890:6:29"},"nativeSrc":"3890:15:29","nodeType":"YulFunctionCall","src":"3890:15:29"},"nativeSrc":"3890:15:29","nodeType":"YulExpressionStatement","src":"3890:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3921:1:29","nodeType":"YulLiteral","src":"3921:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3924:4:29","nodeType":"YulLiteral","src":"3924:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3914:6:29","nodeType":"YulIdentifier","src":"3914:6:29"},"nativeSrc":"3914:15:29","nodeType":"YulFunctionCall","src":"3914:15:29"},"nativeSrc":"3914:15:29","nodeType":"YulExpressionStatement","src":"3914:15:29"}]},"name":"panic_error_0x41","nativeSrc":"3755:180:29","nodeType":"YulFunctionDefinition","src":"3755:180:29"},{"body":{"nativeSrc":"3969:152:29","nodeType":"YulBlock","src":"3969:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3986:1:29","nodeType":"YulLiteral","src":"3986:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3989:77:29","nodeType":"YulLiteral","src":"3989:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3979:6:29","nodeType":"YulIdentifier","src":"3979:6:29"},"nativeSrc":"3979:88:29","nodeType":"YulFunctionCall","src":"3979:88:29"},"nativeSrc":"3979:88:29","nodeType":"YulExpressionStatement","src":"3979:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4083:1:29","nodeType":"YulLiteral","src":"4083:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"4086:4:29","nodeType":"YulLiteral","src":"4086:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4076:6:29","nodeType":"YulIdentifier","src":"4076:6:29"},"nativeSrc":"4076:15:29","nodeType":"YulFunctionCall","src":"4076:15:29"},"nativeSrc":"4076:15:29","nodeType":"YulExpressionStatement","src":"4076:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4107:1:29","nodeType":"YulLiteral","src":"4107:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4110:4:29","nodeType":"YulLiteral","src":"4110:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4100:6:29","nodeType":"YulIdentifier","src":"4100:6:29"},"nativeSrc":"4100:15:29","nodeType":"YulFunctionCall","src":"4100:15:29"},"nativeSrc":"4100:15:29","nodeType":"YulExpressionStatement","src":"4100:15:29"}]},"name":"panic_error_0x22","nativeSrc":"3941:180:29","nodeType":"YulFunctionDefinition","src":"3941:180:29"},{"body":{"nativeSrc":"4178:269:29","nodeType":"YulBlock","src":"4178:269:29","statements":[{"nativeSrc":"4188:22:29","nodeType":"YulAssignment","src":"4188:22:29","value":{"arguments":[{"name":"data","nativeSrc":"4202:4:29","nodeType":"YulIdentifier","src":"4202:4:29"},{"kind":"number","nativeSrc":"4208:1:29","nodeType":"YulLiteral","src":"4208:1:29","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4198:3:29","nodeType":"YulIdentifier","src":"4198:3:29"},"nativeSrc":"4198:12:29","nodeType":"YulFunctionCall","src":"4198:12:29"},"variableNames":[{"name":"length","nativeSrc":"4188:6:29","nodeType":"YulIdentifier","src":"4188:6:29"}]},{"nativeSrc":"4219:38:29","nodeType":"YulVariableDeclaration","src":"4219:38:29","value":{"arguments":[{"name":"data","nativeSrc":"4249:4:29","nodeType":"YulIdentifier","src":"4249:4:29"},{"kind":"number","nativeSrc":"4255:1:29","nodeType":"YulLiteral","src":"4255:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4245:3:29","nodeType":"YulIdentifier","src":"4245:3:29"},"nativeSrc":"4245:12:29","nodeType":"YulFunctionCall","src":"4245:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4223:18:29","nodeType":"YulTypedName","src":"4223:18:29","type":""}]},{"body":{"nativeSrc":"4296:51:29","nodeType":"YulBlock","src":"4296:51:29","statements":[{"nativeSrc":"4310:27:29","nodeType":"YulAssignment","src":"4310:27:29","value":{"arguments":[{"name":"length","nativeSrc":"4324:6:29","nodeType":"YulIdentifier","src":"4324:6:29"},{"kind":"number","nativeSrc":"4332:4:29","nodeType":"YulLiteral","src":"4332:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4320:3:29","nodeType":"YulIdentifier","src":"4320:3:29"},"nativeSrc":"4320:17:29","nodeType":"YulFunctionCall","src":"4320:17:29"},"variableNames":[{"name":"length","nativeSrc":"4310:6:29","nodeType":"YulIdentifier","src":"4310:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4276:18:29","nodeType":"YulIdentifier","src":"4276:18:29"}],"functionName":{"name":"iszero","nativeSrc":"4269:6:29","nodeType":"YulIdentifier","src":"4269:6:29"},"nativeSrc":"4269:26:29","nodeType":"YulFunctionCall","src":"4269:26:29"},"nativeSrc":"4266:81:29","nodeType":"YulIf","src":"4266:81:29"},{"body":{"nativeSrc":"4399:42:29","nodeType":"YulBlock","src":"4399:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4413:16:29","nodeType":"YulIdentifier","src":"4413:16:29"},"nativeSrc":"4413:18:29","nodeType":"YulFunctionCall","src":"4413:18:29"},"nativeSrc":"4413:18:29","nodeType":"YulExpressionStatement","src":"4413:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4363:18:29","nodeType":"YulIdentifier","src":"4363:18:29"},{"arguments":[{"name":"length","nativeSrc":"4386:6:29","nodeType":"YulIdentifier","src":"4386:6:29"},{"kind":"number","nativeSrc":"4394:2:29","nodeType":"YulLiteral","src":"4394:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4383:2:29","nodeType":"YulIdentifier","src":"4383:2:29"},"nativeSrc":"4383:14:29","nodeType":"YulFunctionCall","src":"4383:14:29"}],"functionName":{"name":"eq","nativeSrc":"4360:2:29","nodeType":"YulIdentifier","src":"4360:2:29"},"nativeSrc":"4360:38:29","nodeType":"YulFunctionCall","src":"4360:38:29"},"nativeSrc":"4357:84:29","nodeType":"YulIf","src":"4357:84:29"}]},"name":"extract_byte_array_length","nativeSrc":"4127:320:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4162:4:29","nodeType":"YulTypedName","src":"4162:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4171:6:29","nodeType":"YulTypedName","src":"4171:6:29","type":""}],"src":"4127:320:29"},{"body":{"nativeSrc":"4507:87:29","nodeType":"YulBlock","src":"4507:87:29","statements":[{"nativeSrc":"4517:11:29","nodeType":"YulAssignment","src":"4517:11:29","value":{"name":"ptr","nativeSrc":"4525:3:29","nodeType":"YulIdentifier","src":"4525:3:29"},"variableNames":[{"name":"data","nativeSrc":"4517:4:29","nodeType":"YulIdentifier","src":"4517:4:29"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4545:1:29","nodeType":"YulLiteral","src":"4545:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"4548:3:29","nodeType":"YulIdentifier","src":"4548:3:29"}],"functionName":{"name":"mstore","nativeSrc":"4538:6:29","nodeType":"YulIdentifier","src":"4538:6:29"},"nativeSrc":"4538:14:29","nodeType":"YulFunctionCall","src":"4538:14:29"},"nativeSrc":"4538:14:29","nodeType":"YulExpressionStatement","src":"4538:14:29"},{"nativeSrc":"4561:26:29","nodeType":"YulAssignment","src":"4561:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"4579:1:29","nodeType":"YulLiteral","src":"4579:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4582:4:29","nodeType":"YulLiteral","src":"4582:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4569:9:29","nodeType":"YulIdentifier","src":"4569:9:29"},"nativeSrc":"4569:18:29","nodeType":"YulFunctionCall","src":"4569:18:29"},"variableNames":[{"name":"data","nativeSrc":"4561:4:29","nodeType":"YulIdentifier","src":"4561:4:29"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4453:141:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4494:3:29","nodeType":"YulTypedName","src":"4494:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4502:4:29","nodeType":"YulTypedName","src":"4502:4:29","type":""}],"src":"4453:141:29"},{"body":{"nativeSrc":"4644:49:29","nodeType":"YulBlock","src":"4644:49:29","statements":[{"nativeSrc":"4654:33:29","nodeType":"YulAssignment","src":"4654:33:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4672:5:29","nodeType":"YulIdentifier","src":"4672:5:29"},{"kind":"number","nativeSrc":"4679:2:29","nodeType":"YulLiteral","src":"4679:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4668:3:29","nodeType":"YulIdentifier","src":"4668:3:29"},"nativeSrc":"4668:14:29","nodeType":"YulFunctionCall","src":"4668:14:29"},{"kind":"number","nativeSrc":"4684:2:29","nodeType":"YulLiteral","src":"4684:2:29","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4664:3:29","nodeType":"YulIdentifier","src":"4664:3:29"},"nativeSrc":"4664:23:29","nodeType":"YulFunctionCall","src":"4664:23:29"},"variableNames":[{"name":"result","nativeSrc":"4654:6:29","nodeType":"YulIdentifier","src":"4654:6:29"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4600:93:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4627:5:29","nodeType":"YulTypedName","src":"4627:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4637:6:29","nodeType":"YulTypedName","src":"4637:6:29","type":""}],"src":"4600:93:29"},{"body":{"nativeSrc":"4752:54:29","nodeType":"YulBlock","src":"4752:54:29","statements":[{"nativeSrc":"4762:37:29","nodeType":"YulAssignment","src":"4762:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"4787:4:29","nodeType":"YulIdentifier","src":"4787:4:29"},{"name":"value","nativeSrc":"4793:5:29","nodeType":"YulIdentifier","src":"4793:5:29"}],"functionName":{"name":"shl","nativeSrc":"4783:3:29","nodeType":"YulIdentifier","src":"4783:3:29"},"nativeSrc":"4783:16:29","nodeType":"YulFunctionCall","src":"4783:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"4762:8:29","nodeType":"YulIdentifier","src":"4762:8:29"}]}]},"name":"shift_left_dynamic","nativeSrc":"4699:107:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4727:4:29","nodeType":"YulTypedName","src":"4727:4:29","type":""},{"name":"value","nativeSrc":"4733:5:29","nodeType":"YulTypedName","src":"4733:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4743:8:29","nodeType":"YulTypedName","src":"4743:8:29","type":""}],"src":"4699:107:29"},{"body":{"nativeSrc":"4888:317:29","nodeType":"YulBlock","src":"4888:317:29","statements":[{"nativeSrc":"4898:35:29","nodeType":"YulVariableDeclaration","src":"4898:35:29","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"4919:10:29","nodeType":"YulIdentifier","src":"4919:10:29"},{"kind":"number","nativeSrc":"4931:1:29","nodeType":"YulLiteral","src":"4931:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"4915:3:29","nodeType":"YulIdentifier","src":"4915:3:29"},"nativeSrc":"4915:18:29","nodeType":"YulFunctionCall","src":"4915:18:29"},"variables":[{"name":"shiftBits","nativeSrc":"4902:9:29","nodeType":"YulTypedName","src":"4902:9:29","type":""}]},{"nativeSrc":"4942:109:29","nodeType":"YulVariableDeclaration","src":"4942:109:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4973:9:29","nodeType":"YulIdentifier","src":"4973:9:29"},{"kind":"number","nativeSrc":"4984:66:29","nodeType":"YulLiteral","src":"4984:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4954:18:29","nodeType":"YulIdentifier","src":"4954:18:29"},"nativeSrc":"4954:97:29","nodeType":"YulFunctionCall","src":"4954:97:29"},"variables":[{"name":"mask","nativeSrc":"4946:4:29","nodeType":"YulTypedName","src":"4946:4:29","type":""}]},{"nativeSrc":"5060:51:29","nodeType":"YulAssignment","src":"5060:51:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5091:9:29","nodeType":"YulIdentifier","src":"5091:9:29"},{"name":"toInsert","nativeSrc":"5102:8:29","nodeType":"YulIdentifier","src":"5102:8:29"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5072:18:29","nodeType":"YulIdentifier","src":"5072:18:29"},"nativeSrc":"5072:39:29","nodeType":"YulFunctionCall","src":"5072:39:29"},"variableNames":[{"name":"toInsert","nativeSrc":"5060:8:29","nodeType":"YulIdentifier","src":"5060:8:29"}]},{"nativeSrc":"5120:30:29","nodeType":"YulAssignment","src":"5120:30:29","value":{"arguments":[{"name":"value","nativeSrc":"5133:5:29","nodeType":"YulIdentifier","src":"5133:5:29"},{"arguments":[{"name":"mask","nativeSrc":"5144:4:29","nodeType":"YulIdentifier","src":"5144:4:29"}],"functionName":{"name":"not","nativeSrc":"5140:3:29","nodeType":"YulIdentifier","src":"5140:3:29"},"nativeSrc":"5140:9:29","nodeType":"YulFunctionCall","src":"5140:9:29"}],"functionName":{"name":"and","nativeSrc":"5129:3:29","nodeType":"YulIdentifier","src":"5129:3:29"},"nativeSrc":"5129:21:29","nodeType":"YulFunctionCall","src":"5129:21:29"},"variableNames":[{"name":"value","nativeSrc":"5120:5:29","nodeType":"YulIdentifier","src":"5120:5:29"}]},{"nativeSrc":"5159:40:29","nodeType":"YulAssignment","src":"5159:40:29","value":{"arguments":[{"name":"value","nativeSrc":"5172:5:29","nodeType":"YulIdentifier","src":"5172:5:29"},{"arguments":[{"name":"toInsert","nativeSrc":"5183:8:29","nodeType":"YulIdentifier","src":"5183:8:29"},{"name":"mask","nativeSrc":"5193:4:29","nodeType":"YulIdentifier","src":"5193:4:29"}],"functionName":{"name":"and","nativeSrc":"5179:3:29","nodeType":"YulIdentifier","src":"5179:3:29"},"nativeSrc":"5179:19:29","nodeType":"YulFunctionCall","src":"5179:19:29"}],"functionName":{"name":"or","nativeSrc":"5169:2:29","nodeType":"YulIdentifier","src":"5169:2:29"},"nativeSrc":"5169:30:29","nodeType":"YulFunctionCall","src":"5169:30:29"},"variableNames":[{"name":"result","nativeSrc":"5159:6:29","nodeType":"YulIdentifier","src":"5159:6:29"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"4812:393:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4849:5:29","nodeType":"YulTypedName","src":"4849:5:29","type":""},{"name":"shiftBytes","nativeSrc":"4856:10:29","nodeType":"YulTypedName","src":"4856:10:29","type":""},{"name":"toInsert","nativeSrc":"4868:8:29","nodeType":"YulTypedName","src":"4868:8:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4881:6:29","nodeType":"YulTypedName","src":"4881:6:29","type":""}],"src":"4812:393:29"},{"body":{"nativeSrc":"5243:28:29","nodeType":"YulBlock","src":"5243:28:29","statements":[{"nativeSrc":"5253:12:29","nodeType":"YulAssignment","src":"5253:12:29","value":{"name":"value","nativeSrc":"5260:5:29","nodeType":"YulIdentifier","src":"5260:5:29"},"variableNames":[{"name":"ret","nativeSrc":"5253:3:29","nodeType":"YulIdentifier","src":"5253:3:29"}]}]},"name":"identity","nativeSrc":"5211:60:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5229:5:29","nodeType":"YulTypedName","src":"5229:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5239:3:29","nodeType":"YulTypedName","src":"5239:3:29","type":""}],"src":"5211:60:29"},{"body":{"nativeSrc":"5337:82:29","nodeType":"YulBlock","src":"5337:82:29","statements":[{"nativeSrc":"5347:66:29","nodeType":"YulAssignment","src":"5347:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5405:5:29","nodeType":"YulIdentifier","src":"5405:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5387:17:29","nodeType":"YulIdentifier","src":"5387:17:29"},"nativeSrc":"5387:24:29","nodeType":"YulFunctionCall","src":"5387:24:29"}],"functionName":{"name":"identity","nativeSrc":"5378:8:29","nodeType":"YulIdentifier","src":"5378:8:29"},"nativeSrc":"5378:34:29","nodeType":"YulFunctionCall","src":"5378:34:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5360:17:29","nodeType":"YulIdentifier","src":"5360:17:29"},"nativeSrc":"5360:53:29","nodeType":"YulFunctionCall","src":"5360:53:29"},"variableNames":[{"name":"converted","nativeSrc":"5347:9:29","nodeType":"YulIdentifier","src":"5347:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5277:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5317:5:29","nodeType":"YulTypedName","src":"5317:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5327:9:29","nodeType":"YulTypedName","src":"5327:9:29","type":""}],"src":"5277:142:29"},{"body":{"nativeSrc":"5472:28:29","nodeType":"YulBlock","src":"5472:28:29","statements":[{"nativeSrc":"5482:12:29","nodeType":"YulAssignment","src":"5482:12:29","value":{"name":"value","nativeSrc":"5489:5:29","nodeType":"YulIdentifier","src":"5489:5:29"},"variableNames":[{"name":"ret","nativeSrc":"5482:3:29","nodeType":"YulIdentifier","src":"5482:3:29"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5425:75:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5458:5:29","nodeType":"YulTypedName","src":"5458:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5468:3:29","nodeType":"YulTypedName","src":"5468:3:29","type":""}],"src":"5425:75:29"},{"body":{"nativeSrc":"5582:193:29","nodeType":"YulBlock","src":"5582:193:29","statements":[{"nativeSrc":"5592:63:29","nodeType":"YulVariableDeclaration","src":"5592:63:29","value":{"arguments":[{"name":"value_0","nativeSrc":"5647:7:29","nodeType":"YulIdentifier","src":"5647:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5616:30:29","nodeType":"YulIdentifier","src":"5616:30:29"},"nativeSrc":"5616:39:29","nodeType":"YulFunctionCall","src":"5616:39:29"},"variables":[{"name":"convertedValue_0","nativeSrc":"5596:16:29","nodeType":"YulTypedName","src":"5596:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5671:4:29","nodeType":"YulIdentifier","src":"5671:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5711:4:29","nodeType":"YulIdentifier","src":"5711:4:29"}],"functionName":{"name":"sload","nativeSrc":"5705:5:29","nodeType":"YulIdentifier","src":"5705:5:29"},"nativeSrc":"5705:11:29","nodeType":"YulFunctionCall","src":"5705:11:29"},{"name":"offset","nativeSrc":"5718:6:29","nodeType":"YulIdentifier","src":"5718:6:29"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5750:16:29","nodeType":"YulIdentifier","src":"5750:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5726:23:29","nodeType":"YulIdentifier","src":"5726:23:29"},"nativeSrc":"5726:41:29","nodeType":"YulFunctionCall","src":"5726:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5677:27:29","nodeType":"YulIdentifier","src":"5677:27:29"},"nativeSrc":"5677:91:29","nodeType":"YulFunctionCall","src":"5677:91:29"}],"functionName":{"name":"sstore","nativeSrc":"5664:6:29","nodeType":"YulIdentifier","src":"5664:6:29"},"nativeSrc":"5664:105:29","nodeType":"YulFunctionCall","src":"5664:105:29"},"nativeSrc":"5664:105:29","nodeType":"YulExpressionStatement","src":"5664:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5506:269:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5559:4:29","nodeType":"YulTypedName","src":"5559:4:29","type":""},{"name":"offset","nativeSrc":"5565:6:29","nodeType":"YulTypedName","src":"5565:6:29","type":""},{"name":"value_0","nativeSrc":"5573:7:29","nodeType":"YulTypedName","src":"5573:7:29","type":""}],"src":"5506:269:29"},{"body":{"nativeSrc":"5830:24:29","nodeType":"YulBlock","src":"5830:24:29","statements":[{"nativeSrc":"5840:8:29","nodeType":"YulAssignment","src":"5840:8:29","value":{"kind":"number","nativeSrc":"5847:1:29","nodeType":"YulLiteral","src":"5847:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"5840:3:29","nodeType":"YulIdentifier","src":"5840:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5781:73:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"5826:3:29","nodeType":"YulTypedName","src":"5826:3:29","type":""}],"src":"5781:73:29"},{"body":{"nativeSrc":"5913:136:29","nodeType":"YulBlock","src":"5913:136:29","statements":[{"nativeSrc":"5923:46:29","nodeType":"YulVariableDeclaration","src":"5923:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"5937:30:29","nodeType":"YulIdentifier","src":"5937:30:29"},"nativeSrc":"5937:32:29","nodeType":"YulFunctionCall","src":"5937:32:29"},"variables":[{"name":"zero_0","nativeSrc":"5927:6:29","nodeType":"YulTypedName","src":"5927:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6022:4:29","nodeType":"YulIdentifier","src":"6022:4:29"},{"name":"offset","nativeSrc":"6028:6:29","nodeType":"YulIdentifier","src":"6028:6:29"},{"name":"zero_0","nativeSrc":"6036:6:29","nodeType":"YulIdentifier","src":"6036:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5978:43:29","nodeType":"YulIdentifier","src":"5978:43:29"},"nativeSrc":"5978:65:29","nodeType":"YulFunctionCall","src":"5978:65:29"},"nativeSrc":"5978:65:29","nodeType":"YulExpressionStatement","src":"5978:65:29"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"5860:189:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5899:4:29","nodeType":"YulTypedName","src":"5899:4:29","type":""},{"name":"offset","nativeSrc":"5905:6:29","nodeType":"YulTypedName","src":"5905:6:29","type":""}],"src":"5860:189:29"},{"body":{"nativeSrc":"6105:136:29","nodeType":"YulBlock","src":"6105:136:29","statements":[{"body":{"nativeSrc":"6172:63:29","nodeType":"YulBlock","src":"6172:63:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6216:5:29","nodeType":"YulIdentifier","src":"6216:5:29"},{"kind":"number","nativeSrc":"6223:1:29","nodeType":"YulLiteral","src":"6223:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6186:29:29","nodeType":"YulIdentifier","src":"6186:29:29"},"nativeSrc":"6186:39:29","nodeType":"YulFunctionCall","src":"6186:39:29"},"nativeSrc":"6186:39:29","nodeType":"YulExpressionStatement","src":"6186:39:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6125:5:29","nodeType":"YulIdentifier","src":"6125:5:29"},{"name":"end","nativeSrc":"6132:3:29","nodeType":"YulIdentifier","src":"6132:3:29"}],"functionName":{"name":"lt","nativeSrc":"6122:2:29","nodeType":"YulIdentifier","src":"6122:2:29"},"nativeSrc":"6122:14:29","nodeType":"YulFunctionCall","src":"6122:14:29"},"nativeSrc":"6115:120:29","nodeType":"YulForLoop","post":{"nativeSrc":"6137:26:29","nodeType":"YulBlock","src":"6137:26:29","statements":[{"nativeSrc":"6139:22:29","nodeType":"YulAssignment","src":"6139:22:29","value":{"arguments":[{"name":"start","nativeSrc":"6152:5:29","nodeType":"YulIdentifier","src":"6152:5:29"},{"kind":"number","nativeSrc":"6159:1:29","nodeType":"YulLiteral","src":"6159:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6148:3:29","nodeType":"YulIdentifier","src":"6148:3:29"},"nativeSrc":"6148:13:29","nodeType":"YulFunctionCall","src":"6148:13:29"},"variableNames":[{"name":"start","nativeSrc":"6139:5:29","nodeType":"YulIdentifier","src":"6139:5:29"}]}]},"pre":{"nativeSrc":"6119:2:29","nodeType":"YulBlock","src":"6119:2:29","statements":[]},"src":"6115:120:29"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6055:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6093:5:29","nodeType":"YulTypedName","src":"6093:5:29","type":""},{"name":"end","nativeSrc":"6100:3:29","nodeType":"YulTypedName","src":"6100:3:29","type":""}],"src":"6055:186:29"},{"body":{"nativeSrc":"6326:464:29","nodeType":"YulBlock","src":"6326:464:29","statements":[{"body":{"nativeSrc":"6352:431:29","nodeType":"YulBlock","src":"6352:431:29","statements":[{"nativeSrc":"6366:54:29","nodeType":"YulVariableDeclaration","src":"6366:54:29","value":{"arguments":[{"name":"array","nativeSrc":"6414:5:29","nodeType":"YulIdentifier","src":"6414:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6382:31:29","nodeType":"YulIdentifier","src":"6382:31:29"},"nativeSrc":"6382:38:29","nodeType":"YulFunctionCall","src":"6382:38:29"},"variables":[{"name":"dataArea","nativeSrc":"6370:8:29","nodeType":"YulTypedName","src":"6370:8:29","type":""}]},{"nativeSrc":"6433:63:29","nodeType":"YulVariableDeclaration","src":"6433:63:29","value":{"arguments":[{"name":"dataArea","nativeSrc":"6456:8:29","nodeType":"YulIdentifier","src":"6456:8:29"},{"arguments":[{"name":"startIndex","nativeSrc":"6484:10:29","nodeType":"YulIdentifier","src":"6484:10:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6466:17:29","nodeType":"YulIdentifier","src":"6466:17:29"},"nativeSrc":"6466:29:29","nodeType":"YulFunctionCall","src":"6466:29:29"}],"functionName":{"name":"add","nativeSrc":"6452:3:29","nodeType":"YulIdentifier","src":"6452:3:29"},"nativeSrc":"6452:44:29","nodeType":"YulFunctionCall","src":"6452:44:29"},"variables":[{"name":"deleteStart","nativeSrc":"6437:11:29","nodeType":"YulTypedName","src":"6437:11:29","type":""}]},{"body":{"nativeSrc":"6653:27:29","nodeType":"YulBlock","src":"6653:27:29","statements":[{"nativeSrc":"6655:23:29","nodeType":"YulAssignment","src":"6655:23:29","value":{"name":"dataArea","nativeSrc":"6670:8:29","nodeType":"YulIdentifier","src":"6670:8:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"6655:11:29","nodeType":"YulIdentifier","src":"6655:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6637:10:29","nodeType":"YulIdentifier","src":"6637:10:29"},{"kind":"number","nativeSrc":"6649:2:29","nodeType":"YulLiteral","src":"6649:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6634:2:29","nodeType":"YulIdentifier","src":"6634:2:29"},"nativeSrc":"6634:18:29","nodeType":"YulFunctionCall","src":"6634:18:29"},"nativeSrc":"6631:49:29","nodeType":"YulIf","src":"6631:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6722:11:29","nodeType":"YulIdentifier","src":"6722:11:29"},{"arguments":[{"name":"dataArea","nativeSrc":"6739:8:29","nodeType":"YulIdentifier","src":"6739:8:29"},{"arguments":[{"name":"len","nativeSrc":"6767:3:29","nodeType":"YulIdentifier","src":"6767:3:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6749:17:29","nodeType":"YulIdentifier","src":"6749:17:29"},"nativeSrc":"6749:22:29","nodeType":"YulFunctionCall","src":"6749:22:29"}],"functionName":{"name":"add","nativeSrc":"6735:3:29","nodeType":"YulIdentifier","src":"6735:3:29"},"nativeSrc":"6735:37:29","nodeType":"YulFunctionCall","src":"6735:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6693:28:29","nodeType":"YulIdentifier","src":"6693:28:29"},"nativeSrc":"6693:80:29","nodeType":"YulFunctionCall","src":"6693:80:29"},"nativeSrc":"6693:80:29","nodeType":"YulExpressionStatement","src":"6693:80:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6343:3:29","nodeType":"YulIdentifier","src":"6343:3:29"},{"kind":"number","nativeSrc":"6348:2:29","nodeType":"YulLiteral","src":"6348:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6340:2:29","nodeType":"YulIdentifier","src":"6340:2:29"},"nativeSrc":"6340:11:29","nodeType":"YulFunctionCall","src":"6340:11:29"},"nativeSrc":"6337:446:29","nodeType":"YulIf","src":"6337:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6247:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6302:5:29","nodeType":"YulTypedName","src":"6302:5:29","type":""},{"name":"len","nativeSrc":"6309:3:29","nodeType":"YulTypedName","src":"6309:3:29","type":""},{"name":"startIndex","nativeSrc":"6314:10:29","nodeType":"YulTypedName","src":"6314:10:29","type":""}],"src":"6247:543:29"},{"body":{"nativeSrc":"6859:54:29","nodeType":"YulBlock","src":"6859:54:29","statements":[{"nativeSrc":"6869:37:29","nodeType":"YulAssignment","src":"6869:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"6894:4:29","nodeType":"YulIdentifier","src":"6894:4:29"},{"name":"value","nativeSrc":"6900:5:29","nodeType":"YulIdentifier","src":"6900:5:29"}],"functionName":{"name":"shr","nativeSrc":"6890:3:29","nodeType":"YulIdentifier","src":"6890:3:29"},"nativeSrc":"6890:16:29","nodeType":"YulFunctionCall","src":"6890:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"6869:8:29","nodeType":"YulIdentifier","src":"6869:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"6796:117:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6834:4:29","nodeType":"YulTypedName","src":"6834:4:29","type":""},{"name":"value","nativeSrc":"6840:5:29","nodeType":"YulTypedName","src":"6840:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6850:8:29","nodeType":"YulTypedName","src":"6850:8:29","type":""}],"src":"6796:117:29"},{"body":{"nativeSrc":"6970:118:29","nodeType":"YulBlock","src":"6970:118:29","statements":[{"nativeSrc":"6980:68:29","nodeType":"YulVariableDeclaration","src":"6980:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7029:1:29","nodeType":"YulLiteral","src":"7029:1:29","type":"","value":"8"},{"name":"bytes","nativeSrc":"7032:5:29","nodeType":"YulIdentifier","src":"7032:5:29"}],"functionName":{"name":"mul","nativeSrc":"7025:3:29","nodeType":"YulIdentifier","src":"7025:3:29"},"nativeSrc":"7025:13:29","nodeType":"YulFunctionCall","src":"7025:13:29"},{"arguments":[{"kind":"number","nativeSrc":"7044:1:29","nodeType":"YulLiteral","src":"7044:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7040:3:29","nodeType":"YulIdentifier","src":"7040:3:29"},"nativeSrc":"7040:6:29","nodeType":"YulFunctionCall","src":"7040:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"6996:28:29","nodeType":"YulIdentifier","src":"6996:28:29"},"nativeSrc":"6996:51:29","nodeType":"YulFunctionCall","src":"6996:51:29"}],"functionName":{"name":"not","nativeSrc":"6992:3:29","nodeType":"YulIdentifier","src":"6992:3:29"},"nativeSrc":"6992:56:29","nodeType":"YulFunctionCall","src":"6992:56:29"},"variables":[{"name":"mask","nativeSrc":"6984:4:29","nodeType":"YulTypedName","src":"6984:4:29","type":""}]},{"nativeSrc":"7057:25:29","nodeType":"YulAssignment","src":"7057:25:29","value":{"arguments":[{"name":"data","nativeSrc":"7071:4:29","nodeType":"YulIdentifier","src":"7071:4:29"},{"name":"mask","nativeSrc":"7077:4:29","nodeType":"YulIdentifier","src":"7077:4:29"}],"functionName":{"name":"and","nativeSrc":"7067:3:29","nodeType":"YulIdentifier","src":"7067:3:29"},"nativeSrc":"7067:15:29","nodeType":"YulFunctionCall","src":"7067:15:29"},"variableNames":[{"name":"result","nativeSrc":"7057:6:29","nodeType":"YulIdentifier","src":"7057:6:29"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"6919:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6947:4:29","nodeType":"YulTypedName","src":"6947:4:29","type":""},{"name":"bytes","nativeSrc":"6953:5:29","nodeType":"YulTypedName","src":"6953:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6963:6:29","nodeType":"YulTypedName","src":"6963:6:29","type":""}],"src":"6919:169:29"},{"body":{"nativeSrc":"7174:214:29","nodeType":"YulBlock","src":"7174:214:29","statements":[{"nativeSrc":"7307:37:29","nodeType":"YulAssignment","src":"7307:37:29","value":{"arguments":[{"name":"data","nativeSrc":"7334:4:29","nodeType":"YulIdentifier","src":"7334:4:29"},{"name":"len","nativeSrc":"7340:3:29","nodeType":"YulIdentifier","src":"7340:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7315:18:29","nodeType":"YulIdentifier","src":"7315:18:29"},"nativeSrc":"7315:29:29","nodeType":"YulFunctionCall","src":"7315:29:29"},"variableNames":[{"name":"data","nativeSrc":"7307:4:29","nodeType":"YulIdentifier","src":"7307:4:29"}]},{"nativeSrc":"7353:29:29","nodeType":"YulAssignment","src":"7353:29:29","value":{"arguments":[{"name":"data","nativeSrc":"7364:4:29","nodeType":"YulIdentifier","src":"7364:4:29"},{"arguments":[{"kind":"number","nativeSrc":"7374:1:29","nodeType":"YulLiteral","src":"7374:1:29","type":"","value":"2"},{"name":"len","nativeSrc":"7377:3:29","nodeType":"YulIdentifier","src":"7377:3:29"}],"functionName":{"name":"mul","nativeSrc":"7370:3:29","nodeType":"YulIdentifier","src":"7370:3:29"},"nativeSrc":"7370:11:29","nodeType":"YulFunctionCall","src":"7370:11:29"}],"functionName":{"name":"or","nativeSrc":"7361:2:29","nodeType":"YulIdentifier","src":"7361:2:29"},"nativeSrc":"7361:21:29","nodeType":"YulFunctionCall","src":"7361:21:29"},"variableNames":[{"name":"used","nativeSrc":"7353:4:29","nodeType":"YulIdentifier","src":"7353:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7093:295:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7155:4:29","nodeType":"YulTypedName","src":"7155:4:29","type":""},{"name":"len","nativeSrc":"7161:3:29","nodeType":"YulTypedName","src":"7161:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7169:4:29","nodeType":"YulTypedName","src":"7169:4:29","type":""}],"src":"7093:295:29"},{"body":{"nativeSrc":"7485:1303:29","nodeType":"YulBlock","src":"7485:1303:29","statements":[{"nativeSrc":"7496:51:29","nodeType":"YulVariableDeclaration","src":"7496:51:29","value":{"arguments":[{"name":"src","nativeSrc":"7543:3:29","nodeType":"YulIdentifier","src":"7543:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7510:32:29","nodeType":"YulIdentifier","src":"7510:32:29"},"nativeSrc":"7510:37:29","nodeType":"YulFunctionCall","src":"7510:37:29"},"variables":[{"name":"newLen","nativeSrc":"7500:6:29","nodeType":"YulTypedName","src":"7500:6:29","type":""}]},{"body":{"nativeSrc":"7632:22:29","nodeType":"YulBlock","src":"7632:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7634:16:29","nodeType":"YulIdentifier","src":"7634:16:29"},"nativeSrc":"7634:18:29","nodeType":"YulFunctionCall","src":"7634:18:29"},"nativeSrc":"7634:18:29","nodeType":"YulExpressionStatement","src":"7634:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7604:6:29","nodeType":"YulIdentifier","src":"7604:6:29"},{"kind":"number","nativeSrc":"7612:18:29","nodeType":"YulLiteral","src":"7612:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7601:2:29","nodeType":"YulIdentifier","src":"7601:2:29"},"nativeSrc":"7601:30:29","nodeType":"YulFunctionCall","src":"7601:30:29"},"nativeSrc":"7598:56:29","nodeType":"YulIf","src":"7598:56:29"},{"nativeSrc":"7664:52:29","nodeType":"YulVariableDeclaration","src":"7664:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7710:4:29","nodeType":"YulIdentifier","src":"7710:4:29"}],"functionName":{"name":"sload","nativeSrc":"7704:5:29","nodeType":"YulIdentifier","src":"7704:5:29"},"nativeSrc":"7704:11:29","nodeType":"YulFunctionCall","src":"7704:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7678:25:29","nodeType":"YulIdentifier","src":"7678:25:29"},"nativeSrc":"7678:38:29","nodeType":"YulFunctionCall","src":"7678:38:29"},"variables":[{"name":"oldLen","nativeSrc":"7668:6:29","nodeType":"YulTypedName","src":"7668:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7809:4:29","nodeType":"YulIdentifier","src":"7809:4:29"},{"name":"oldLen","nativeSrc":"7815:6:29","nodeType":"YulIdentifier","src":"7815:6:29"},{"name":"newLen","nativeSrc":"7823:6:29","nodeType":"YulIdentifier","src":"7823:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7763:45:29","nodeType":"YulIdentifier","src":"7763:45:29"},"nativeSrc":"7763:67:29","nodeType":"YulFunctionCall","src":"7763:67:29"},"nativeSrc":"7763:67:29","nodeType":"YulExpressionStatement","src":"7763:67:29"},{"nativeSrc":"7840:18:29","nodeType":"YulVariableDeclaration","src":"7840:18:29","value":{"kind":"number","nativeSrc":"7857:1:29","nodeType":"YulLiteral","src":"7857:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7844:9:29","nodeType":"YulTypedName","src":"7844:9:29","type":""}]},{"nativeSrc":"7868:17:29","nodeType":"YulAssignment","src":"7868:17:29","value":{"kind":"number","nativeSrc":"7881:4:29","nodeType":"YulLiteral","src":"7881:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7868:9:29","nodeType":"YulIdentifier","src":"7868:9:29"}]},{"cases":[{"body":{"nativeSrc":"7932:611:29","nodeType":"YulBlock","src":"7932:611:29","statements":[{"nativeSrc":"7946:37:29","nodeType":"YulVariableDeclaration","src":"7946:37:29","value":{"arguments":[{"name":"newLen","nativeSrc":"7965:6:29","nodeType":"YulIdentifier","src":"7965:6:29"},{"arguments":[{"kind":"number","nativeSrc":"7977:4:29","nodeType":"YulLiteral","src":"7977:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"7973:3:29","nodeType":"YulIdentifier","src":"7973:3:29"},"nativeSrc":"7973:9:29","nodeType":"YulFunctionCall","src":"7973:9:29"}],"functionName":{"name":"and","nativeSrc":"7961:3:29","nodeType":"YulIdentifier","src":"7961:3:29"},"nativeSrc":"7961:22:29","nodeType":"YulFunctionCall","src":"7961:22:29"},"variables":[{"name":"loopEnd","nativeSrc":"7950:7:29","nodeType":"YulTypedName","src":"7950:7:29","type":""}]},{"nativeSrc":"7997:51:29","nodeType":"YulVariableDeclaration","src":"7997:51:29","value":{"arguments":[{"name":"slot","nativeSrc":"8043:4:29","nodeType":"YulIdentifier","src":"8043:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8011:31:29","nodeType":"YulIdentifier","src":"8011:31:29"},"nativeSrc":"8011:37:29","nodeType":"YulFunctionCall","src":"8011:37:29"},"variables":[{"name":"dstPtr","nativeSrc":"8001:6:29","nodeType":"YulTypedName","src":"8001:6:29","type":""}]},{"nativeSrc":"8061:10:29","nodeType":"YulVariableDeclaration","src":"8061:10:29","value":{"kind":"number","nativeSrc":"8070:1:29","nodeType":"YulLiteral","src":"8070:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8065:1:29","nodeType":"YulTypedName","src":"8065:1:29","type":""}]},{"body":{"nativeSrc":"8129:163:29","nodeType":"YulBlock","src":"8129:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8154:6:29","nodeType":"YulIdentifier","src":"8154:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8172:3:29","nodeType":"YulIdentifier","src":"8172:3:29"},{"name":"srcOffset","nativeSrc":"8177:9:29","nodeType":"YulIdentifier","src":"8177:9:29"}],"functionName":{"name":"add","nativeSrc":"8168:3:29","nodeType":"YulIdentifier","src":"8168:3:29"},"nativeSrc":"8168:19:29","nodeType":"YulFunctionCall","src":"8168:19:29"}],"functionName":{"name":"mload","nativeSrc":"8162:5:29","nodeType":"YulIdentifier","src":"8162:5:29"},"nativeSrc":"8162:26:29","nodeType":"YulFunctionCall","src":"8162:26:29"}],"functionName":{"name":"sstore","nativeSrc":"8147:6:29","nodeType":"YulIdentifier","src":"8147:6:29"},"nativeSrc":"8147:42:29","nodeType":"YulFunctionCall","src":"8147:42:29"},"nativeSrc":"8147:42:29","nodeType":"YulExpressionStatement","src":"8147:42:29"},{"nativeSrc":"8206:24:29","nodeType":"YulAssignment","src":"8206:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8220:6:29","nodeType":"YulIdentifier","src":"8220:6:29"},{"kind":"number","nativeSrc":"8228:1:29","nodeType":"YulLiteral","src":"8228:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8216:3:29","nodeType":"YulIdentifier","src":"8216:3:29"},"nativeSrc":"8216:14:29","nodeType":"YulFunctionCall","src":"8216:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"8206:6:29","nodeType":"YulIdentifier","src":"8206:6:29"}]},{"nativeSrc":"8247:31:29","nodeType":"YulAssignment","src":"8247:31:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8264:9:29","nodeType":"YulIdentifier","src":"8264:9:29"},{"kind":"number","nativeSrc":"8275:2:29","nodeType":"YulLiteral","src":"8275:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8260:3:29","nodeType":"YulIdentifier","src":"8260:3:29"},"nativeSrc":"8260:18:29","nodeType":"YulFunctionCall","src":"8260:18:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"8247:9:29","nodeType":"YulIdentifier","src":"8247:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8095:1:29","nodeType":"YulIdentifier","src":"8095:1:29"},{"name":"loopEnd","nativeSrc":"8098:7:29","nodeType":"YulIdentifier","src":"8098:7:29"}],"functionName":{"name":"lt","nativeSrc":"8092:2:29","nodeType":"YulIdentifier","src":"8092:2:29"},"nativeSrc":"8092:14:29","nodeType":"YulFunctionCall","src":"8092:14:29"},"nativeSrc":"8084:208:29","nodeType":"YulForLoop","post":{"nativeSrc":"8107:21:29","nodeType":"YulBlock","src":"8107:21:29","statements":[{"nativeSrc":"8109:17:29","nodeType":"YulAssignment","src":"8109:17:29","value":{"arguments":[{"name":"i","nativeSrc":"8118:1:29","nodeType":"YulIdentifier","src":"8118:1:29"},{"kind":"number","nativeSrc":"8121:4:29","nodeType":"YulLiteral","src":"8121:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8114:3:29","nodeType":"YulIdentifier","src":"8114:3:29"},"nativeSrc":"8114:12:29","nodeType":"YulFunctionCall","src":"8114:12:29"},"variableNames":[{"name":"i","nativeSrc":"8109:1:29","nodeType":"YulIdentifier","src":"8109:1:29"}]}]},"pre":{"nativeSrc":"8088:3:29","nodeType":"YulBlock","src":"8088:3:29","statements":[]},"src":"8084:208:29"},{"body":{"nativeSrc":"8328:156:29","nodeType":"YulBlock","src":"8328:156:29","statements":[{"nativeSrc":"8346:43:29","nodeType":"YulVariableDeclaration","src":"8346:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8373:3:29","nodeType":"YulIdentifier","src":"8373:3:29"},{"name":"srcOffset","nativeSrc":"8378:9:29","nodeType":"YulIdentifier","src":"8378:9:29"}],"functionName":{"name":"add","nativeSrc":"8369:3:29","nodeType":"YulIdentifier","src":"8369:3:29"},"nativeSrc":"8369:19:29","nodeType":"YulFunctionCall","src":"8369:19:29"}],"functionName":{"name":"mload","nativeSrc":"8363:5:29","nodeType":"YulIdentifier","src":"8363:5:29"},"nativeSrc":"8363:26:29","nodeType":"YulFunctionCall","src":"8363:26:29"},"variables":[{"name":"lastValue","nativeSrc":"8350:9:29","nodeType":"YulTypedName","src":"8350:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8413:6:29","nodeType":"YulIdentifier","src":"8413:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"8440:9:29","nodeType":"YulIdentifier","src":"8440:9:29"},{"arguments":[{"name":"newLen","nativeSrc":"8455:6:29","nodeType":"YulIdentifier","src":"8455:6:29"},{"kind":"number","nativeSrc":"8463:4:29","nodeType":"YulLiteral","src":"8463:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8451:3:29","nodeType":"YulIdentifier","src":"8451:3:29"},"nativeSrc":"8451:17:29","nodeType":"YulFunctionCall","src":"8451:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8421:18:29","nodeType":"YulIdentifier","src":"8421:18:29"},"nativeSrc":"8421:48:29","nodeType":"YulFunctionCall","src":"8421:48:29"}],"functionName":{"name":"sstore","nativeSrc":"8406:6:29","nodeType":"YulIdentifier","src":"8406:6:29"},"nativeSrc":"8406:64:29","nodeType":"YulFunctionCall","src":"8406:64:29"},"nativeSrc":"8406:64:29","nodeType":"YulExpressionStatement","src":"8406:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8311:7:29","nodeType":"YulIdentifier","src":"8311:7:29"},{"name":"newLen","nativeSrc":"8320:6:29","nodeType":"YulIdentifier","src":"8320:6:29"}],"functionName":{"name":"lt","nativeSrc":"8308:2:29","nodeType":"YulIdentifier","src":"8308:2:29"},"nativeSrc":"8308:19:29","nodeType":"YulFunctionCall","src":"8308:19:29"},"nativeSrc":"8305:179:29","nodeType":"YulIf","src":"8305:179:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8504:4:29","nodeType":"YulIdentifier","src":"8504:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8518:6:29","nodeType":"YulIdentifier","src":"8518:6:29"},{"kind":"number","nativeSrc":"8526:1:29","nodeType":"YulLiteral","src":"8526:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8514:3:29","nodeType":"YulIdentifier","src":"8514:3:29"},"nativeSrc":"8514:14:29","nodeType":"YulFunctionCall","src":"8514:14:29"},{"kind":"number","nativeSrc":"8530:1:29","nodeType":"YulLiteral","src":"8530:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8510:3:29","nodeType":"YulIdentifier","src":"8510:3:29"},"nativeSrc":"8510:22:29","nodeType":"YulFunctionCall","src":"8510:22:29"}],"functionName":{"name":"sstore","nativeSrc":"8497:6:29","nodeType":"YulIdentifier","src":"8497:6:29"},"nativeSrc":"8497:36:29","nodeType":"YulFunctionCall","src":"8497:36:29"},"nativeSrc":"8497:36:29","nodeType":"YulExpressionStatement","src":"8497:36:29"}]},"nativeSrc":"7925:618:29","nodeType":"YulCase","src":"7925:618:29","value":{"kind":"number","nativeSrc":"7930:1:29","nodeType":"YulLiteral","src":"7930:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"8560:222:29","nodeType":"YulBlock","src":"8560:222:29","statements":[{"nativeSrc":"8574:14:29","nodeType":"YulVariableDeclaration","src":"8574:14:29","value":{"kind":"number","nativeSrc":"8587:1:29","nodeType":"YulLiteral","src":"8587:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8578:5:29","nodeType":"YulTypedName","src":"8578:5:29","type":""}]},{"body":{"nativeSrc":"8611:67:29","nodeType":"YulBlock","src":"8611:67:29","statements":[{"nativeSrc":"8629:35:29","nodeType":"YulAssignment","src":"8629:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8648:3:29","nodeType":"YulIdentifier","src":"8648:3:29"},{"name":"srcOffset","nativeSrc":"8653:9:29","nodeType":"YulIdentifier","src":"8653:9:29"}],"functionName":{"name":"add","nativeSrc":"8644:3:29","nodeType":"YulIdentifier","src":"8644:3:29"},"nativeSrc":"8644:19:29","nodeType":"YulFunctionCall","src":"8644:19:29"}],"functionName":{"name":"mload","nativeSrc":"8638:5:29","nodeType":"YulIdentifier","src":"8638:5:29"},"nativeSrc":"8638:26:29","nodeType":"YulFunctionCall","src":"8638:26:29"},"variableNames":[{"name":"value","nativeSrc":"8629:5:29","nodeType":"YulIdentifier","src":"8629:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"8604:6:29","nodeType":"YulIdentifier","src":"8604:6:29"},"nativeSrc":"8601:77:29","nodeType":"YulIf","src":"8601:77:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8698:4:29","nodeType":"YulIdentifier","src":"8698:4:29"},{"arguments":[{"name":"value","nativeSrc":"8757:5:29","nodeType":"YulIdentifier","src":"8757:5:29"},{"name":"newLen","nativeSrc":"8764:6:29","nodeType":"YulIdentifier","src":"8764:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8704:52:29","nodeType":"YulIdentifier","src":"8704:52:29"},"nativeSrc":"8704:67:29","nodeType":"YulFunctionCall","src":"8704:67:29"}],"functionName":{"name":"sstore","nativeSrc":"8691:6:29","nodeType":"YulIdentifier","src":"8691:6:29"},"nativeSrc":"8691:81:29","nodeType":"YulFunctionCall","src":"8691:81:29"},"nativeSrc":"8691:81:29","nodeType":"YulExpressionStatement","src":"8691:81:29"}]},"nativeSrc":"8552:230:29","nodeType":"YulCase","src":"8552:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"7905:6:29","nodeType":"YulIdentifier","src":"7905:6:29"},{"kind":"number","nativeSrc":"7913:2:29","nodeType":"YulLiteral","src":"7913:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7902:2:29","nodeType":"YulIdentifier","src":"7902:2:29"},"nativeSrc":"7902:14:29","nodeType":"YulFunctionCall","src":"7902:14:29"},"nativeSrc":"7895:887:29","nodeType":"YulSwitch","src":"7895:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7393:1395:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7474:4:29","nodeType":"YulTypedName","src":"7474:4:29","type":""},{"name":"src","nativeSrc":"7480:3:29","nodeType":"YulTypedName","src":"7480:3:29","type":""}],"src":"7393:1395:29"},{"body":{"nativeSrc":"8890:73:29","nodeType":"YulBlock","src":"8890:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8907:3:29","nodeType":"YulIdentifier","src":"8907:3:29"},{"name":"length","nativeSrc":"8912:6:29","nodeType":"YulIdentifier","src":"8912:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8900:6:29","nodeType":"YulIdentifier","src":"8900:6:29"},"nativeSrc":"8900:19:29","nodeType":"YulFunctionCall","src":"8900:19:29"},"nativeSrc":"8900:19:29","nodeType":"YulExpressionStatement","src":"8900:19:29"},{"nativeSrc":"8928:29:29","nodeType":"YulAssignment","src":"8928:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"8947:3:29","nodeType":"YulIdentifier","src":"8947:3:29"},{"kind":"number","nativeSrc":"8952:4:29","nodeType":"YulLiteral","src":"8952:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8943:3:29","nodeType":"YulIdentifier","src":"8943:3:29"},"nativeSrc":"8943:14:29","nodeType":"YulFunctionCall","src":"8943:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"8928:11:29","nodeType":"YulIdentifier","src":"8928:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8794:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8862:3:29","nodeType":"YulTypedName","src":"8862:3:29","type":""},{"name":"length","nativeSrc":"8867:6:29","nodeType":"YulTypedName","src":"8867:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8878:11:29","nodeType":"YulTypedName","src":"8878:11:29","type":""}],"src":"8794:169:29"},{"body":{"nativeSrc":"9075:118:29","nodeType":"YulBlock","src":"9075:118:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9097:6:29","nodeType":"YulIdentifier","src":"9097:6:29"},{"kind":"number","nativeSrc":"9105:1:29","nodeType":"YulLiteral","src":"9105:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9093:3:29","nodeType":"YulIdentifier","src":"9093:3:29"},"nativeSrc":"9093:14:29","nodeType":"YulFunctionCall","src":"9093:14:29"},{"hexValue":"496e697469616c20737570706c79206d75737420626520677265617465722074","kind":"string","nativeSrc":"9109:34:29","nodeType":"YulLiteral","src":"9109:34:29","type":"","value":"Initial supply must be greater t"}],"functionName":{"name":"mstore","nativeSrc":"9086:6:29","nodeType":"YulIdentifier","src":"9086:6:29"},"nativeSrc":"9086:58:29","nodeType":"YulFunctionCall","src":"9086:58:29"},"nativeSrc":"9086:58:29","nodeType":"YulExpressionStatement","src":"9086:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9165:6:29","nodeType":"YulIdentifier","src":"9165:6:29"},{"kind":"number","nativeSrc":"9173:2:29","nodeType":"YulLiteral","src":"9173:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9161:3:29","nodeType":"YulIdentifier","src":"9161:3:29"},"nativeSrc":"9161:15:29","nodeType":"YulFunctionCall","src":"9161:15:29"},{"hexValue":"68616e2030","kind":"string","nativeSrc":"9178:7:29","nodeType":"YulLiteral","src":"9178:7:29","type":"","value":"han 0"}],"functionName":{"name":"mstore","nativeSrc":"9154:6:29","nodeType":"YulIdentifier","src":"9154:6:29"},"nativeSrc":"9154:32:29","nodeType":"YulFunctionCall","src":"9154:32:29"},"nativeSrc":"9154:32:29","nodeType":"YulExpressionStatement","src":"9154:32:29"}]},"name":"store_literal_in_memory_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e","nativeSrc":"8969:224:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9067:6:29","nodeType":"YulTypedName","src":"9067:6:29","type":""}],"src":"8969:224:29"},{"body":{"nativeSrc":"9345:220:29","nodeType":"YulBlock","src":"9345:220:29","statements":[{"nativeSrc":"9355:74:29","nodeType":"YulAssignment","src":"9355:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"9421:3:29","nodeType":"YulIdentifier","src":"9421:3:29"},{"kind":"number","nativeSrc":"9426:2:29","nodeType":"YulLiteral","src":"9426:2:29","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9362:58:29","nodeType":"YulIdentifier","src":"9362:58:29"},"nativeSrc":"9362:67:29","nodeType":"YulFunctionCall","src":"9362:67:29"},"variableNames":[{"name":"pos","nativeSrc":"9355:3:29","nodeType":"YulIdentifier","src":"9355:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9527:3:29","nodeType":"YulIdentifier","src":"9527:3:29"}],"functionName":{"name":"store_literal_in_memory_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e","nativeSrc":"9438:88:29","nodeType":"YulIdentifier","src":"9438:88:29"},"nativeSrc":"9438:93:29","nodeType":"YulFunctionCall","src":"9438:93:29"},"nativeSrc":"9438:93:29","nodeType":"YulExpressionStatement","src":"9438:93:29"},{"nativeSrc":"9540:19:29","nodeType":"YulAssignment","src":"9540:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"9551:3:29","nodeType":"YulIdentifier","src":"9551:3:29"},{"kind":"number","nativeSrc":"9556:2:29","nodeType":"YulLiteral","src":"9556:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9547:3:29","nodeType":"YulIdentifier","src":"9547:3:29"},"nativeSrc":"9547:12:29","nodeType":"YulFunctionCall","src":"9547:12:29"},"variableNames":[{"name":"end","nativeSrc":"9540:3:29","nodeType":"YulIdentifier","src":"9540:3:29"}]}]},"name":"abi_encode_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e_to_t_string_memory_ptr_fromStack","nativeSrc":"9199:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9333:3:29","nodeType":"YulTypedName","src":"9333:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9341:3:29","nodeType":"YulTypedName","src":"9341:3:29","type":""}],"src":"9199:366:29"},{"body":{"nativeSrc":"9742:248:29","nodeType":"YulBlock","src":"9742:248:29","statements":[{"nativeSrc":"9752:26:29","nodeType":"YulAssignment","src":"9752:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9764:9:29","nodeType":"YulIdentifier","src":"9764:9:29"},{"kind":"number","nativeSrc":"9775:2:29","nodeType":"YulLiteral","src":"9775:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9760:3:29","nodeType":"YulIdentifier","src":"9760:3:29"},"nativeSrc":"9760:18:29","nodeType":"YulFunctionCall","src":"9760:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9752:4:29","nodeType":"YulIdentifier","src":"9752:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9799:9:29","nodeType":"YulIdentifier","src":"9799:9:29"},{"kind":"number","nativeSrc":"9810:1:29","nodeType":"YulLiteral","src":"9810:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9795:3:29","nodeType":"YulIdentifier","src":"9795:3:29"},"nativeSrc":"9795:17:29","nodeType":"YulFunctionCall","src":"9795:17:29"},{"arguments":[{"name":"tail","nativeSrc":"9818:4:29","nodeType":"YulIdentifier","src":"9818:4:29"},{"name":"headStart","nativeSrc":"9824:9:29","nodeType":"YulIdentifier","src":"9824:9:29"}],"functionName":{"name":"sub","nativeSrc":"9814:3:29","nodeType":"YulIdentifier","src":"9814:3:29"},"nativeSrc":"9814:20:29","nodeType":"YulFunctionCall","src":"9814:20:29"}],"functionName":{"name":"mstore","nativeSrc":"9788:6:29","nodeType":"YulIdentifier","src":"9788:6:29"},"nativeSrc":"9788:47:29","nodeType":"YulFunctionCall","src":"9788:47:29"},"nativeSrc":"9788:47:29","nodeType":"YulExpressionStatement","src":"9788:47:29"},{"nativeSrc":"9844:139:29","nodeType":"YulAssignment","src":"9844:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"9978:4:29","nodeType":"YulIdentifier","src":"9978:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e_to_t_string_memory_ptr_fromStack","nativeSrc":"9852:124:29","nodeType":"YulIdentifier","src":"9852:124:29"},"nativeSrc":"9852:131:29","nodeType":"YulFunctionCall","src":"9852:131:29"},"variableNames":[{"name":"tail","nativeSrc":"9844:4:29","nodeType":"YulIdentifier","src":"9844:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9571:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9722:9:29","nodeType":"YulTypedName","src":"9722:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9737:4:29","nodeType":"YulTypedName","src":"9737:4:29","type":""}],"src":"9571:419:29"},{"body":{"nativeSrc":"10024:152:29","nodeType":"YulBlock","src":"10024:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10041:1:29","nodeType":"YulLiteral","src":"10041:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10044:77:29","nodeType":"YulLiteral","src":"10044:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10034:6:29","nodeType":"YulIdentifier","src":"10034:6:29"},"nativeSrc":"10034:88:29","nodeType":"YulFunctionCall","src":"10034:88:29"},"nativeSrc":"10034:88:29","nodeType":"YulExpressionStatement","src":"10034:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10138:1:29","nodeType":"YulLiteral","src":"10138:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"10141:4:29","nodeType":"YulLiteral","src":"10141:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10131:6:29","nodeType":"YulIdentifier","src":"10131:6:29"},"nativeSrc":"10131:15:29","nodeType":"YulFunctionCall","src":"10131:15:29"},"nativeSrc":"10131:15:29","nodeType":"YulExpressionStatement","src":"10131:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10162:1:29","nodeType":"YulLiteral","src":"10162:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10165:4:29","nodeType":"YulLiteral","src":"10165:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10155:6:29","nodeType":"YulIdentifier","src":"10155:6:29"},"nativeSrc":"10155:15:29","nodeType":"YulFunctionCall","src":"10155:15:29"},"nativeSrc":"10155:15:29","nodeType":"YulExpressionStatement","src":"10155:15:29"}]},"name":"panic_error_0x12","nativeSrc":"9996:180:29","nodeType":"YulFunctionDefinition","src":"9996:180:29"},{"body":{"nativeSrc":"10247:53:29","nodeType":"YulBlock","src":"10247:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10264:3:29","nodeType":"YulIdentifier","src":"10264:3:29"},{"arguments":[{"name":"value","nativeSrc":"10287:5:29","nodeType":"YulIdentifier","src":"10287:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10269:17:29","nodeType":"YulIdentifier","src":"10269:17:29"},"nativeSrc":"10269:24:29","nodeType":"YulFunctionCall","src":"10269:24:29"}],"functionName":{"name":"mstore","nativeSrc":"10257:6:29","nodeType":"YulIdentifier","src":"10257:6:29"},"nativeSrc":"10257:37:29","nodeType":"YulFunctionCall","src":"10257:37:29"},"nativeSrc":"10257:37:29","nodeType":"YulExpressionStatement","src":"10257:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10182:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10235:5:29","nodeType":"YulTypedName","src":"10235:5:29","type":""},{"name":"pos","nativeSrc":"10242:3:29","nodeType":"YulTypedName","src":"10242:3:29","type":""}],"src":"10182:118:29"},{"body":{"nativeSrc":"10404:124:29","nodeType":"YulBlock","src":"10404:124:29","statements":[{"nativeSrc":"10414:26:29","nodeType":"YulAssignment","src":"10414:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10426:9:29","nodeType":"YulIdentifier","src":"10426:9:29"},{"kind":"number","nativeSrc":"10437:2:29","nodeType":"YulLiteral","src":"10437:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10422:3:29","nodeType":"YulIdentifier","src":"10422:3:29"},"nativeSrc":"10422:18:29","nodeType":"YulFunctionCall","src":"10422:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10414:4:29","nodeType":"YulIdentifier","src":"10414:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10494:6:29","nodeType":"YulIdentifier","src":"10494:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"10507:9:29","nodeType":"YulIdentifier","src":"10507:9:29"},{"kind":"number","nativeSrc":"10518:1:29","nodeType":"YulLiteral","src":"10518:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10503:3:29","nodeType":"YulIdentifier","src":"10503:3:29"},"nativeSrc":"10503:17:29","nodeType":"YulFunctionCall","src":"10503:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10450:43:29","nodeType":"YulIdentifier","src":"10450:43:29"},"nativeSrc":"10450:71:29","nodeType":"YulFunctionCall","src":"10450:71:29"},"nativeSrc":"10450:71:29","nodeType":"YulExpressionStatement","src":"10450:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10306:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10376:9:29","nodeType":"YulTypedName","src":"10376:9:29","type":""},{"name":"value0","nativeSrc":"10388:6:29","nodeType":"YulTypedName","src":"10388:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10399:4:29","nodeType":"YulTypedName","src":"10399:4:29","type":""}],"src":"10306:222:29"},{"body":{"nativeSrc":"10562:152:29","nodeType":"YulBlock","src":"10562:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10579:1:29","nodeType":"YulLiteral","src":"10579:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10582:77:29","nodeType":"YulLiteral","src":"10582:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10572:6:29","nodeType":"YulIdentifier","src":"10572:6:29"},"nativeSrc":"10572:88:29","nodeType":"YulFunctionCall","src":"10572:88:29"},"nativeSrc":"10572:88:29","nodeType":"YulExpressionStatement","src":"10572:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10676:1:29","nodeType":"YulLiteral","src":"10676:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"10679:4:29","nodeType":"YulLiteral","src":"10679:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10669:6:29","nodeType":"YulIdentifier","src":"10669:6:29"},"nativeSrc":"10669:15:29","nodeType":"YulFunctionCall","src":"10669:15:29"},"nativeSrc":"10669:15:29","nodeType":"YulExpressionStatement","src":"10669:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10700:1:29","nodeType":"YulLiteral","src":"10700:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10703:4:29","nodeType":"YulLiteral","src":"10703:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10693:6:29","nodeType":"YulIdentifier","src":"10693:6:29"},"nativeSrc":"10693:15:29","nodeType":"YulFunctionCall","src":"10693:15:29"},"nativeSrc":"10693:15:29","nodeType":"YulExpressionStatement","src":"10693:15:29"}]},"name":"panic_error_0x11","nativeSrc":"10534:180:29","nodeType":"YulFunctionDefinition","src":"10534:180:29"},{"body":{"nativeSrc":"10764:147:29","nodeType":"YulBlock","src":"10764:147:29","statements":[{"nativeSrc":"10774:25:29","nodeType":"YulAssignment","src":"10774:25:29","value":{"arguments":[{"name":"x","nativeSrc":"10797:1:29","nodeType":"YulIdentifier","src":"10797:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10779:17:29","nodeType":"YulIdentifier","src":"10779:17:29"},"nativeSrc":"10779:20:29","nodeType":"YulFunctionCall","src":"10779:20:29"},"variableNames":[{"name":"x","nativeSrc":"10774:1:29","nodeType":"YulIdentifier","src":"10774:1:29"}]},{"nativeSrc":"10808:25:29","nodeType":"YulAssignment","src":"10808:25:29","value":{"arguments":[{"name":"y","nativeSrc":"10831:1:29","nodeType":"YulIdentifier","src":"10831:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10813:17:29","nodeType":"YulIdentifier","src":"10813:17:29"},"nativeSrc":"10813:20:29","nodeType":"YulFunctionCall","src":"10813:20:29"},"variableNames":[{"name":"y","nativeSrc":"10808:1:29","nodeType":"YulIdentifier","src":"10808:1:29"}]},{"nativeSrc":"10842:16:29","nodeType":"YulAssignment","src":"10842:16:29","value":{"arguments":[{"name":"x","nativeSrc":"10853:1:29","nodeType":"YulIdentifier","src":"10853:1:29"},{"name":"y","nativeSrc":"10856:1:29","nodeType":"YulIdentifier","src":"10856:1:29"}],"functionName":{"name":"add","nativeSrc":"10849:3:29","nodeType":"YulIdentifier","src":"10849:3:29"},"nativeSrc":"10849:9:29","nodeType":"YulFunctionCall","src":"10849:9:29"},"variableNames":[{"name":"sum","nativeSrc":"10842:3:29","nodeType":"YulIdentifier","src":"10842:3:29"}]},{"body":{"nativeSrc":"10882:22:29","nodeType":"YulBlock","src":"10882:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10884:16:29","nodeType":"YulIdentifier","src":"10884:16:29"},"nativeSrc":"10884:18:29","nodeType":"YulFunctionCall","src":"10884:18:29"},"nativeSrc":"10884:18:29","nodeType":"YulExpressionStatement","src":"10884:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10874:1:29","nodeType":"YulIdentifier","src":"10874:1:29"},{"name":"sum","nativeSrc":"10877:3:29","nodeType":"YulIdentifier","src":"10877:3:29"}],"functionName":{"name":"gt","nativeSrc":"10871:2:29","nodeType":"YulIdentifier","src":"10871:2:29"},"nativeSrc":"10871:10:29","nodeType":"YulFunctionCall","src":"10871:10:29"},"nativeSrc":"10868:36:29","nodeType":"YulIf","src":"10868:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"10720:191:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10751:1:29","nodeType":"YulTypedName","src":"10751:1:29","type":""},{"name":"y","nativeSrc":"10754:1:29","nodeType":"YulTypedName","src":"10754:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10760:3:29","nodeType":"YulTypedName","src":"10760:3:29","type":""}],"src":"10720:191:29"},{"body":{"nativeSrc":"10982:53:29","nodeType":"YulBlock","src":"10982:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10999:3:29","nodeType":"YulIdentifier","src":"10999:3:29"},{"arguments":[{"name":"value","nativeSrc":"11022:5:29","nodeType":"YulIdentifier","src":"11022:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11004:17:29","nodeType":"YulIdentifier","src":"11004:17:29"},"nativeSrc":"11004:24:29","nodeType":"YulFunctionCall","src":"11004:24:29"}],"functionName":{"name":"mstore","nativeSrc":"10992:6:29","nodeType":"YulIdentifier","src":"10992:6:29"},"nativeSrc":"10992:37:29","nodeType":"YulFunctionCall","src":"10992:37:29"},"nativeSrc":"10992:37:29","nodeType":"YulExpressionStatement","src":"10992:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10917:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10970:5:29","nodeType":"YulTypedName","src":"10970:5:29","type":""},{"name":"pos","nativeSrc":"10977:3:29","nodeType":"YulTypedName","src":"10977:3:29","type":""}],"src":"10917:118:29"},{"body":{"nativeSrc":"11195:288:29","nodeType":"YulBlock","src":"11195:288:29","statements":[{"nativeSrc":"11205:26:29","nodeType":"YulAssignment","src":"11205:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11217:9:29","nodeType":"YulIdentifier","src":"11217:9:29"},{"kind":"number","nativeSrc":"11228:2:29","nodeType":"YulLiteral","src":"11228:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11213:3:29","nodeType":"YulIdentifier","src":"11213:3:29"},"nativeSrc":"11213:18:29","nodeType":"YulFunctionCall","src":"11213:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11205:4:29","nodeType":"YulIdentifier","src":"11205:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11285:6:29","nodeType":"YulIdentifier","src":"11285:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"11298:9:29","nodeType":"YulIdentifier","src":"11298:9:29"},{"kind":"number","nativeSrc":"11309:1:29","nodeType":"YulLiteral","src":"11309:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11294:3:29","nodeType":"YulIdentifier","src":"11294:3:29"},"nativeSrc":"11294:17:29","nodeType":"YulFunctionCall","src":"11294:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11241:43:29","nodeType":"YulIdentifier","src":"11241:43:29"},"nativeSrc":"11241:71:29","nodeType":"YulFunctionCall","src":"11241:71:29"},"nativeSrc":"11241:71:29","nodeType":"YulExpressionStatement","src":"11241:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11366:6:29","nodeType":"YulIdentifier","src":"11366:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"11379:9:29","nodeType":"YulIdentifier","src":"11379:9:29"},{"kind":"number","nativeSrc":"11390:2:29","nodeType":"YulLiteral","src":"11390:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11375:3:29","nodeType":"YulIdentifier","src":"11375:3:29"},"nativeSrc":"11375:18:29","nodeType":"YulFunctionCall","src":"11375:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11322:43:29","nodeType":"YulIdentifier","src":"11322:43:29"},"nativeSrc":"11322:72:29","nodeType":"YulFunctionCall","src":"11322:72:29"},"nativeSrc":"11322:72:29","nodeType":"YulExpressionStatement","src":"11322:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11448:6:29","nodeType":"YulIdentifier","src":"11448:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"11461:9:29","nodeType":"YulIdentifier","src":"11461:9:29"},{"kind":"number","nativeSrc":"11472:2:29","nodeType":"YulLiteral","src":"11472:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11457:3:29","nodeType":"YulIdentifier","src":"11457:3:29"},"nativeSrc":"11457:18:29","nodeType":"YulFunctionCall","src":"11457:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11404:43:29","nodeType":"YulIdentifier","src":"11404:43:29"},"nativeSrc":"11404:72:29","nodeType":"YulFunctionCall","src":"11404:72:29"},"nativeSrc":"11404:72:29","nodeType":"YulExpressionStatement","src":"11404:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11041:442:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11151:9:29","nodeType":"YulTypedName","src":"11151:9:29","type":""},{"name":"value2","nativeSrc":"11163:6:29","nodeType":"YulTypedName","src":"11163:6:29","type":""},{"name":"value1","nativeSrc":"11171:6:29","nodeType":"YulTypedName","src":"11171:6:29","type":""},{"name":"value0","nativeSrc":"11179:6:29","nodeType":"YulTypedName","src":"11179:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11190:4:29","nodeType":"YulTypedName","src":"11190:4:29","type":""}],"src":"11041:442:29"},{"body":{"nativeSrc":"11587:124:29","nodeType":"YulBlock","src":"11587:124:29","statements":[{"nativeSrc":"11597:26:29","nodeType":"YulAssignment","src":"11597:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11609:9:29","nodeType":"YulIdentifier","src":"11609:9:29"},{"kind":"number","nativeSrc":"11620:2:29","nodeType":"YulLiteral","src":"11620:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11605:3:29","nodeType":"YulIdentifier","src":"11605:3:29"},"nativeSrc":"11605:18:29","nodeType":"YulFunctionCall","src":"11605:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11597:4:29","nodeType":"YulIdentifier","src":"11597:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11677:6:29","nodeType":"YulIdentifier","src":"11677:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"11690:9:29","nodeType":"YulIdentifier","src":"11690:9:29"},{"kind":"number","nativeSrc":"11701:1:29","nodeType":"YulLiteral","src":"11701:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11686:3:29","nodeType":"YulIdentifier","src":"11686:3:29"},"nativeSrc":"11686:17:29","nodeType":"YulFunctionCall","src":"11686:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11633:43:29","nodeType":"YulIdentifier","src":"11633:43:29"},"nativeSrc":"11633:71:29","nodeType":"YulFunctionCall","src":"11633:71:29"},"nativeSrc":"11633:71:29","nodeType":"YulExpressionStatement","src":"11633:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"11489:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11559:9:29","nodeType":"YulTypedName","src":"11559:9:29","type":""},{"name":"value0","nativeSrc":"11571:6:29","nodeType":"YulTypedName","src":"11571:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11582:4:29","nodeType":"YulTypedName","src":"11582:4:29","type":""}],"src":"11489:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PikaPay_$7473(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PikaPay_$7473(value) {\n        if iszero(eq(value, cleanup_t_contract$_PikaPay_$7473(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PikaPay_$7473_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PikaPay_$7473(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PikaPay_$7473t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PikaPay_$7473_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_to_t_bytes26_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \"PikaPay Fractional Batch #\")\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_t_string_memory_ptr__to_t_bytes26_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_stringliteral_bda506d56b5873d838a13705942d63acf3cff49c559d882f5ec09a66a271d03d_to_t_bytes26_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 26)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial supply must be greater t\")\n\n        mstore(add(memPtr, 32), \"han 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00319164c20a91720f4fb22d1723f3362a97d748c8f8c7414e6a1b54e549291e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611c13380380611c13833981810160405281019061003291906106da565b6100418261015b60201b60201c565b60405160200161005191906107c4565b6040516020818303038152906040526040518060400160405280600481526020017f504641540000000000000000000000000000000000000000000000000000000081525081600390816100a59190610a25565b5080600490816100b59190610a25565b505050600081116100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f290610b7a565b60405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600681905550610153338261022f60201b60201c565b505050610cb7565b606060006001610170846102b760201b60201c565b01905060008167ffffffffffffffff81111561018f5761018e6107ea565b5b6040519080825280601f01601f1916602001820160405280156101c15781602001600182028036833780820191505090505b509050600082602001820190505b600115610224578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161021857610217610b9a565b5b049450600085036101cf575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102989190610bd8565b60405180910390fd5b6102b36000838361040a60201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610315577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161030b5761030a610b9a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610352576d04ee2d6d415b85acef8100000000838161034857610347610b9a565b5b0492506020810190505b662386f26fc10000831061038157662386f26fc10000838161037757610376610b9a565b5b0492506010810190505b6305f5e10083106103aa576305f5e10083816103a05761039f610b9a565b5b0492506008810190505b61271083106103cf5761271083816103c5576103c4610b9a565b5b0492506004810190505b606483106103f257606483816103e8576103e7610b9a565b5b0492506002810190505b600a8310610401576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361045c5780600260008282546104509190610c22565b9250508190555061052f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156104e8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104df93929190610c65565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361057857806002600082825403925050819055506105c5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106229190610c9c565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065f82610634565b9050919050565b600061067182610654565b9050919050565b61068181610666565b811461068c57600080fd5b50565b60008151905061069e81610678565b92915050565b6000819050919050565b6106b7816106a4565b81146106c257600080fd5b50565b6000815190506106d4816106ae565b92915050565b6000806000606084860312156106f3576106f261062f565b5b60006107018682870161068f565b9350506020610712868287016106c5565b9250506040610723868287016106c5565b9150509250925092565b7f50696b61506179204672616374696f6e616c2042617463682023000000000000815250565b600081519050919050565b600081905092915050565b60005b8381101561078757808201518184015260208101905061076c565b60008484015250505050565b600061079e82610753565b6107a8818561075e565b93506107b8818560208601610769565b80840191505092915050565b60006107cf8261072d565b601a820191506107df8284610793565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086057607f821691505b60208210810361087357610872610819565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261089e565b6108e5868361089e565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092261091d610918846106a4565b6108fd565b6106a4565b9050919050565b6000819050919050565b61093c83610907565b61095061094882610929565b8484546108ab565b825550505050565b600090565b610965610958565b610970818484610933565b505050565b5b818110156109945761098960008261095d565b600181019050610976565b5050565b601f8211156109d9576109aa81610879565b6109b38461088e565b810160208510156109c2578190505b6109d66109ce8561088e565b830182610975565b50505b505050565b600082821c905092915050565b60006109fc600019846008026109de565b1980831691505092915050565b6000610a1583836109eb565b9150826002028217905092915050565b610a2e82610753565b67ffffffffffffffff811115610a4757610a466107ea565b5b610a518254610848565b610a5c828285610998565b600060209050601f831160018114610a8f5760008415610a7d578287015190505b610a878582610a09565b865550610aef565b601f198416610a9d86610879565b60005b82811015610ac557848901518255600182019150602085019450602081019050610aa0565b86831015610ae25784890151610ade601f8916826109eb565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f496e697469616c20737570706c79206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610b64602583610af7565b9150610b6f82610b08565b604082019050919050565b60006020820190508181036000830152610b9381610b57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610bd281610654565b82525050565b6000602082019050610bed6000830184610bc9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2d826106a4565b9150610c38836106a4565b9250828201905080821115610c5057610c4f610bf3565b5b92915050565b610c5f816106a4565b82525050565b6000606082019050610c7a6000830186610bc9565b610c876020830185610c56565b610c946040830184610c56565b949350505050565b6000602082019050610cb16000830184610c56565b92915050565b610f4d80610cc66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea2646970667358221220b4e71c62684899feb18d46be648c751d428f2e8a2edec2027a66ba146e42d9a164736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C13 CODESIZE SUB DUP1 PUSH2 0x1C13 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x41 DUP3 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5046415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x153 CALLER DUP3 PUSH2 0x22F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x170 DUP5 PUSH2 0x2B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F JUMPI PUSH2 0x18E PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x224 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x218 JUMPI PUSH2 0x217 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1CF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x40A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x315 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x352 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x381 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3AA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3CF JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3F2 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x401 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x578 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5C5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65F DUP3 PUSH2 0x634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 DUP3 PUSH2 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH2 0x666 JUMP JUMPDEST DUP2 EQ PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x69E DUP2 PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D4 DUP2 PUSH2 0x6AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6F2 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP7 DUP3 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x712 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x723 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B61506179204672616374696F6E616C2042617463682023000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x7A8 DUP2 DUP6 PUSH2 0x75E JUMP JUMPDEST SWAP4 POP PUSH2 0x7B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x769 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP3 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP2 POP PUSH2 0x7DF DUP3 DUP5 PUSH2 0x793 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x860 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x819 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8E5 DUP7 DUP4 PUSH2 0x89E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 PUSH2 0x91D PUSH2 0x918 DUP5 PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP4 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x950 PUSH2 0x948 DUP3 PUSH2 0x929 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x965 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x970 DUP2 DUP5 DUP5 PUSH2 0x933 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x994 JUMPI PUSH2 0x989 PUSH1 0x0 DUP3 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x976 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D9 JUMPI PUSH2 0x9AA DUP2 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x9B3 DUP5 PUSH2 0x88E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9D6 PUSH2 0x9CE DUP6 PUSH2 0x88E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x975 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9DE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP4 DUP4 PUSH2 0x9EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA46 PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH2 0xA51 DUP3 SLOAD PUSH2 0x848 JUMP JUMPDEST PUSH2 0xA5C DUP3 DUP3 DUP6 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA8F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA7D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA87 DUP6 DUP3 PUSH2 0xA09 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA9D DUP7 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAE2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xADE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C79206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 PUSH1 0x25 DUP4 PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP3 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB93 DUP2 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x654 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2D DUP3 PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC7A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xC87 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0xC94 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH2 0xCC6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE7 SHR PUSH3 0x684899 INVALID 0xB1 DUP14 CHAINID 0xBE PUSH5 0x8C751D428F 0x2E DUP11 0x2E 0xDE 0xC2 MUL PUSH27 0x66BA146E42D9A164736F6C634300081B0033000000000000000000 ","sourceMap":"270:1120:27:-:0;;;471:574;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;677:26;694:8;677:16;;;:26;;:::i;:::-;600:117;;;;;;;;:::i;:::-;;;;;;;;;;;;;1601:113:6;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;844:1:27::1;827:14;:18;819:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;907:8;897:7;;:18;;;;;;;;;;;;;;;;;;935:8;925:7;:18;;;;953:33;959:10;971:14;953:5;;;:33;;:::i;:::-;471:574:::0;;;270:1120;;637:632:19;693:13;742:14;779:1;759:17;770:5;759:10;;;:17;;:::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;25316:916:24:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;6008:1107:6:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:77::-;1064:7;1093:5;1082:16;;1027:77;;;:::o;1110:122::-;1183:24;1201:5;1183:24;:::i;:::-;1176:5;1173:35;1163:63;;1222:1;1219;1212:12;1163:63;1110:122;:::o;1238:143::-;1295:5;1326:6;1320:13;1311:22;;1342:33;1369:5;1342:33;:::i;:::-;1238:143;;;;:::o;1387:695::-;1491:6;1499;1507;1556:2;1544:9;1535:7;1531:23;1527:32;1524:119;;;1562:79;;:::i;:::-;1524:119;1682:1;1707:80;1779:7;1770:6;1759:9;1755:22;1707:80;:::i;:::-;1697:90;;1653:144;1836:2;1862:64;1918:7;1909:6;1898:9;1894:22;1862:64;:::i;:::-;1852:74;;1807:129;1975:2;2001:64;2057:7;2048:6;2037:9;2033:22;2001:64;:::i;:::-;1991:74;;1946:129;1387:695;;;;;:::o;2088:204::-;2257:28;2252:3;2245:41;2088:204;:::o;2298:99::-;2350:6;2384:5;2378:12;2368:22;;2298:99;;;:::o;2403:148::-;2505:11;2542:3;2527:18;;2403:148;;;;:::o;2557:248::-;2639:1;2649:113;2663:6;2660:1;2657:13;2649:113;;;2748:1;2743:3;2739:11;2733:18;2729:1;2724:3;2720:11;2713:39;2685:2;2682:1;2678:10;2673:15;;2649:113;;;2796:1;2787:6;2782:3;2778:16;2771:27;2619:186;2557:248;;;:::o;2811:390::-;2917:3;2945:39;2978:5;2945:39;:::i;:::-;3000:89;3082:6;3077:3;3000:89;:::i;:::-;2993:96;;3098:65;3156:6;3151:3;3144:4;3137:5;3133:16;3098:65;:::i;:::-;3188:6;3183:3;3179:16;3172:23;;2921:280;2811:390;;;;:::o;3207:542::-;3430:3;3445:138;3579:3;3445:138;:::i;:::-;3608:2;3603:3;3599:12;3592:19;;3628:95;3719:3;3710:6;3628:95;:::i;:::-;3621:102;;3740:3;3733:10;;3207:542;;;;:::o;3755:180::-;3803:77;3800:1;3793:88;3900:4;3897:1;3890:15;3924:4;3921:1;3914:15;3941:180;3989:77;3986:1;3979:88;4086:4;4083:1;4076:15;4110:4;4107:1;4100:15;4127:320;4171:6;4208:1;4202:4;4198:12;4188:22;;4255:1;4249:4;4245:12;4276:18;4266:81;;4332:4;4324:6;4320:17;4310:27;;4266:81;4394:2;4386:6;4383:14;4363:18;4360:38;4357:84;;4413:18;;:::i;:::-;4357:84;4178:269;4127:320;;;:::o;4453:141::-;4502:4;4525:3;4517:11;;4548:3;4545:1;4538:14;4582:4;4579:1;4569:18;4561:26;;4453:141;;;:::o;4600:93::-;4637:6;4684:2;4679;4672:5;4668:14;4664:23;4654:33;;4600:93;;;:::o;4699:107::-;4743:8;4793:5;4787:4;4783:16;4762:37;;4699:107;;;;:::o;4812:393::-;4881:6;4931:1;4919:10;4915:18;4954:97;4984:66;4973:9;4954:97;:::i;:::-;5072:39;5102:8;5091:9;5072:39;:::i;:::-;5060:51;;5144:4;5140:9;5133:5;5129:21;5120:30;;5193:4;5183:8;5179:19;5172:5;5169:30;5159:40;;4888:317;;4812:393;;;;;:::o;5211:60::-;5239:3;5260:5;5253:12;;5211:60;;;:::o;5277:142::-;5327:9;5360:53;5378:34;5387:24;5405:5;5387:24;:::i;:::-;5378:34;:::i;:::-;5360:53;:::i;:::-;5347:66;;5277:142;;;:::o;5425:75::-;5468:3;5489:5;5482:12;;5425:75;;;:::o;5506:269::-;5616:39;5647:7;5616:39;:::i;:::-;5677:91;5726:41;5750:16;5726:41;:::i;:::-;5718:6;5711:4;5705:11;5677:91;:::i;:::-;5671:4;5664:105;5582:193;5506:269;;;:::o;5781:73::-;5826:3;5781:73;:::o;5860:189::-;5937:32;;:::i;:::-;5978:65;6036:6;6028;6022:4;5978:65;:::i;:::-;5913:136;5860:189;;:::o;6055:186::-;6115:120;6132:3;6125:5;6122:14;6115:120;;;6186:39;6223:1;6216:5;6186:39;:::i;:::-;6159:1;6152:5;6148:13;6139:22;;6115:120;;;6055:186;;:::o;6247:543::-;6348:2;6343:3;6340:11;6337:446;;;6382:38;6414:5;6382:38;:::i;:::-;6466:29;6484:10;6466:29;:::i;:::-;6456:8;6452:44;6649:2;6637:10;6634:18;6631:49;;;6670:8;6655:23;;6631:49;6693:80;6749:22;6767:3;6749:22;:::i;:::-;6739:8;6735:37;6722:11;6693:80;:::i;:::-;6352:431;;6337:446;6247:543;;;:::o;6796:117::-;6850:8;6900:5;6894:4;6890:16;6869:37;;6796:117;;;;:::o;6919:169::-;6963:6;6996:51;7044:1;7040:6;7032:5;7029:1;7025:13;6996:51;:::i;:::-;6992:56;7077:4;7071;7067:15;7057:25;;6970:118;6919:169;;;;:::o;7093:295::-;7169:4;7315:29;7340:3;7334:4;7315:29;:::i;:::-;7307:37;;7377:3;7374:1;7370:11;7364:4;7361:21;7353:29;;7093:295;;;;:::o;7393:1395::-;7510:37;7543:3;7510:37;:::i;:::-;7612:18;7604:6;7601:30;7598:56;;;7634:18;;:::i;:::-;7598:56;7678:38;7710:4;7704:11;7678:38;:::i;:::-;7763:67;7823:6;7815;7809:4;7763:67;:::i;:::-;7857:1;7881:4;7868:17;;7913:2;7905:6;7902:14;7930:1;7925:618;;;;8587:1;8604:6;8601:77;;;8653:9;8648:3;8644:19;8638:26;8629:35;;8601:77;8704:67;8764:6;8757:5;8704:67;:::i;:::-;8698:4;8691:81;8560:222;7895:887;;7925:618;7977:4;7973:9;7965:6;7961:22;8011:37;8043:4;8011:37;:::i;:::-;8070:1;8084:208;8098:7;8095:1;8092:14;8084:208;;;8177:9;8172:3;8168:19;8162:26;8154:6;8147:42;8228:1;8220:6;8216:14;8206:24;;8275:2;8264:9;8260:18;8247:31;;8121:4;8118:1;8114:12;8109:17;;8084:208;;;8320:6;8311:7;8308:19;8305:179;;;8378:9;8373:3;8369:19;8363:26;8421:48;8463:4;8455:6;8451:17;8440:9;8421:48;:::i;:::-;8413:6;8406:64;8328:156;8305:179;8530:1;8526;8518:6;8514:14;8510:22;8504:4;8497:36;7932:611;;;7895:887;;7485:1303;;;7393:1395;;:::o;8794:169::-;8878:11;8912:6;8907:3;8900:19;8952:4;8947:3;8943:14;8928:29;;8794:169;;;;:::o;8969:224::-;9109:34;9105:1;9097:6;9093:14;9086:58;9178:7;9173:2;9165:6;9161:15;9154:32;8969:224;:::o;9199:366::-;9341:3;9362:67;9426:2;9421:3;9362:67;:::i;:::-;9355:74;;9438:93;9527:3;9438:93;:::i;:::-;9556:2;9551:3;9547:12;9540:19;;9199:366;;;:::o;9571:419::-;9737:4;9775:2;9764:9;9760:18;9752:26;;9824:9;9818:4;9814:20;9810:1;9799:9;9795:17;9788:47;9852:131;9978:4;9852:131;:::i;:::-;9844:139;;9571:419;;;:::o;9996:180::-;10044:77;10041:1;10034:88;10141:4;10138:1;10131:15;10165:4;10162:1;10155:15;10182:118;10269:24;10287:5;10269:24;:::i;:::-;10264:3;10257:37;10182:118;;:::o;10306:222::-;10399:4;10437:2;10426:9;10422:18;10414:26;;10450:71;10518:1;10507:9;10503:17;10494:6;10450:71;:::i;:::-;10306:222;;;;:::o;10534:180::-;10582:77;10579:1;10572:88;10679:4;10676:1;10669:15;10703:4;10700:1;10693:15;10720:191;10760:3;10779:20;10797:1;10779:20;:::i;:::-;10774:25;;10813:20;10831:1;10813:20;:::i;:::-;10808:25;;10856:1;10853;10849:9;10842:16;;10877:3;10874:1;10871:10;10868:36;;;10884:18;;:::i;:::-;10868:36;10720:191;;;;:::o;10917:118::-;11004:24;11022:5;11004:24;:::i;:::-;10999:3;10992:37;10917:118;;:::o;11041:442::-;11190:4;11228:2;11217:9;11213:18;11205:26;;11241:71;11309:1;11298:9;11294:17;11285:6;11241:71;:::i;:::-;11322:72;11390:2;11379:9;11375:18;11366:6;11322:72;:::i;:::-;11404;11472:2;11461:9;11457:18;11448:6;11404:72;:::i;:::-;11041:442;;;;;;:::o;11489:222::-;11582:4;11620:2;11609:9;11605:18;11597:26;;11633:71;11701:1;11690:9;11686:17;11677:6;11633:71;:::i;:::-;11489:222;;;;:::o;270:1120:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_805":{"entryPoint":1281,"id":805,"parameterSlots":3,"returnSlots":0},"@_approve_865":{"entryPoint":1691,"id":865,"parameterSlots":4,"returnSlots":0},"@_msgSender_1890":{"entryPoint":1273,"id":1890,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_913":{"entryPoint":1299,"id":913,"parameterSlots":3,"returnSlots":0},"@_transfer_644":{"entryPoint":1447,"id":644,"parameterSlots":3,"returnSlots":0},"@_update_721":{"entryPoint":2162,"id":721,"parameterSlots":3,"returnSlots":0},"@allowance_541":{"entryPoint":1138,"id":541,"parameterSlots":2,"returnSlots":1},"@approve_565":{"entryPoint":740,"id":565,"parameterSlots":2,"returnSlots":1},"@balanceOf_500":{"entryPoint":885,"id":500,"parameterSlots":1,"returnSlots":1},"@batchId_6899":{"entryPoint":879,"id":6899,"parameterSlots":0,"returnSlots":0},"@decimals_478":{"entryPoint":832,"id":478,"parameterSlots":0,"returnSlots":1},"@name_460":{"entryPoint":594,"id":460,"parameterSlots":0,"returnSlots":1},"@pikaPay_6897":{"entryPoint":841,"id":6897,"parameterSlots":0,"returnSlots":0},"@symbol_469":{"entryPoint":957,"id":469,"parameterSlots":0,"returnSlots":1},"@totalSupply_487":{"entryPoint":775,"id":487,"parameterSlots":0,"returnSlots":1},"@transferFrom_597":{"entryPoint":785,"id":597,"parameterSlots":3,"returnSlots":1},"@transfer_524":{"entryPoint":1103,"id":524,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3507,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3202,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3042,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3118,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack":{"entryPoint":3420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3160,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3682,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_PikaPay_$7473__to_t_address__fromStack_reversed":{"entryPoint":3435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2711,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2722,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3106,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2894,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2988,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3285,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaPay_$7473_to_t_address":{"entryPoint":3402,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3384,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3350,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2739,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3618,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":3340,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3764,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3571,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2889,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2781,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2944,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2998,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8285:29","nodeType":"YulBlock","src":"0:8285:29","statements":[{"body":{"nativeSrc":"66:40:29","nodeType":"YulBlock","src":"66:40:29","statements":[{"nativeSrc":"77:22:29","nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nativeSrc":"93:5:29","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nativeSrc":"87:5:29","nodeType":"YulIdentifier","src":"87:5:29"},"nativeSrc":"87:12:29","nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nativeSrc":"77:6:29","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:29","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:29","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nativeSrc":"208:73:29","nodeType":"YulBlock","src":"208:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:29","nodeType":"YulIdentifier","src":"225:3:29"},{"name":"length","nativeSrc":"230:6:29","nodeType":"YulIdentifier","src":"230:6:29"}],"functionName":{"name":"mstore","nativeSrc":"218:6:29","nodeType":"YulIdentifier","src":"218:6:29"},"nativeSrc":"218:19:29","nodeType":"YulFunctionCall","src":"218:19:29"},"nativeSrc":"218:19:29","nodeType":"YulExpressionStatement","src":"218:19:29"},{"nativeSrc":"246:29:29","nodeType":"YulAssignment","src":"246:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:29","nodeType":"YulIdentifier","src":"265:3:29"},{"kind":"number","nativeSrc":"270:4:29","nodeType":"YulLiteral","src":"270:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:29","nodeType":"YulIdentifier","src":"261:3:29"},"nativeSrc":"261:14:29","nodeType":"YulFunctionCall","src":"261:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:29","nodeType":"YulIdentifier","src":"246:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:29","nodeType":"YulTypedName","src":"180:3:29","type":""},{"name":"length","nativeSrc":"185:6:29","nodeType":"YulTypedName","src":"185:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:29","nodeType":"YulTypedName","src":"196:11:29","type":""}],"src":"112:169:29"},{"body":{"nativeSrc":"349:186:29","nodeType":"YulBlock","src":"349:186:29","statements":[{"nativeSrc":"360:10:29","nodeType":"YulVariableDeclaration","src":"360:10:29","value":{"kind":"number","nativeSrc":"369:1:29","nodeType":"YulLiteral","src":"369:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:29","nodeType":"YulTypedName","src":"364:1:29","type":""}]},{"body":{"nativeSrc":"429:63:29","nodeType":"YulBlock","src":"429:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:29","nodeType":"YulIdentifier","src":"454:3:29"},{"name":"i","nativeSrc":"459:1:29","nodeType":"YulIdentifier","src":"459:1:29"}],"functionName":{"name":"add","nativeSrc":"450:3:29","nodeType":"YulIdentifier","src":"450:3:29"},"nativeSrc":"450:11:29","nodeType":"YulFunctionCall","src":"450:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:29","nodeType":"YulIdentifier","src":"473:3:29"},{"name":"i","nativeSrc":"478:1:29","nodeType":"YulIdentifier","src":"478:1:29"}],"functionName":{"name":"add","nativeSrc":"469:3:29","nodeType":"YulIdentifier","src":"469:3:29"},"nativeSrc":"469:11:29","nodeType":"YulFunctionCall","src":"469:11:29"}],"functionName":{"name":"mload","nativeSrc":"463:5:29","nodeType":"YulIdentifier","src":"463:5:29"},"nativeSrc":"463:18:29","nodeType":"YulFunctionCall","src":"463:18:29"}],"functionName":{"name":"mstore","nativeSrc":"443:6:29","nodeType":"YulIdentifier","src":"443:6:29"},"nativeSrc":"443:39:29","nodeType":"YulFunctionCall","src":"443:39:29"},"nativeSrc":"443:39:29","nodeType":"YulExpressionStatement","src":"443:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:29","nodeType":"YulIdentifier","src":"390:1:29"},{"name":"length","nativeSrc":"393:6:29","nodeType":"YulIdentifier","src":"393:6:29"}],"functionName":{"name":"lt","nativeSrc":"387:2:29","nodeType":"YulIdentifier","src":"387:2:29"},"nativeSrc":"387:13:29","nodeType":"YulFunctionCall","src":"387:13:29"},"nativeSrc":"379:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:29","nodeType":"YulBlock","src":"401:19:29","statements":[{"nativeSrc":"403:15:29","nodeType":"YulAssignment","src":"403:15:29","value":{"arguments":[{"name":"i","nativeSrc":"412:1:29","nodeType":"YulIdentifier","src":"412:1:29"},{"kind":"number","nativeSrc":"415:2:29","nodeType":"YulLiteral","src":"415:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:29","nodeType":"YulIdentifier","src":"408:3:29"},"nativeSrc":"408:10:29","nodeType":"YulFunctionCall","src":"408:10:29"},"variableNames":[{"name":"i","nativeSrc":"403:1:29","nodeType":"YulIdentifier","src":"403:1:29"}]}]},"pre":{"nativeSrc":"383:3:29","nodeType":"YulBlock","src":"383:3:29","statements":[]},"src":"379:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:29","nodeType":"YulIdentifier","src":"512:3:29"},{"name":"length","nativeSrc":"517:6:29","nodeType":"YulIdentifier","src":"517:6:29"}],"functionName":{"name":"add","nativeSrc":"508:3:29","nodeType":"YulIdentifier","src":"508:3:29"},"nativeSrc":"508:16:29","nodeType":"YulFunctionCall","src":"508:16:29"},{"kind":"number","nativeSrc":"526:1:29","nodeType":"YulLiteral","src":"526:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:29","nodeType":"YulIdentifier","src":"501:6:29"},"nativeSrc":"501:27:29","nodeType":"YulFunctionCall","src":"501:27:29"},"nativeSrc":"501:27:29","nodeType":"YulExpressionStatement","src":"501:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:29","nodeType":"YulTypedName","src":"331:3:29","type":""},{"name":"dst","nativeSrc":"336:3:29","nodeType":"YulTypedName","src":"336:3:29","type":""},{"name":"length","nativeSrc":"341:6:29","nodeType":"YulTypedName","src":"341:6:29","type":""}],"src":"287:248:29"},{"body":{"nativeSrc":"589:54:29","nodeType":"YulBlock","src":"589:54:29","statements":[{"nativeSrc":"599:38:29","nodeType":"YulAssignment","src":"599:38:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:29","nodeType":"YulIdentifier","src":"617:5:29"},{"kind":"number","nativeSrc":"624:2:29","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:29","nodeType":"YulIdentifier","src":"613:3:29"},"nativeSrc":"613:14:29","nodeType":"YulFunctionCall","src":"613:14:29"},{"arguments":[{"kind":"number","nativeSrc":"633:2:29","nodeType":"YulLiteral","src":"633:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:29","nodeType":"YulIdentifier","src":"629:3:29"},"nativeSrc":"629:7:29","nodeType":"YulFunctionCall","src":"629:7:29"}],"functionName":{"name":"and","nativeSrc":"609:3:29","nodeType":"YulIdentifier","src":"609:3:29"},"nativeSrc":"609:28:29","nodeType":"YulFunctionCall","src":"609:28:29"},"variableNames":[{"name":"result","nativeSrc":"599:6:29","nodeType":"YulIdentifier","src":"599:6:29"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:29","nodeType":"YulTypedName","src":"572:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:29","nodeType":"YulTypedName","src":"582:6:29","type":""}],"src":"541:102:29"},{"body":{"nativeSrc":"741:285:29","nodeType":"YulBlock","src":"741:285:29","statements":[{"nativeSrc":"751:53:29","nodeType":"YulVariableDeclaration","src":"751:53:29","value":{"arguments":[{"name":"value","nativeSrc":"798:5:29","nodeType":"YulIdentifier","src":"798:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:29","nodeType":"YulIdentifier","src":"765:32:29"},"nativeSrc":"765:39:29","nodeType":"YulFunctionCall","src":"765:39:29"},"variables":[{"name":"length","nativeSrc":"755:6:29","nodeType":"YulTypedName","src":"755:6:29","type":""}]},{"nativeSrc":"813:78:29","nodeType":"YulAssignment","src":"813:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:29","nodeType":"YulIdentifier","src":"879:3:29"},{"name":"length","nativeSrc":"884:6:29","nodeType":"YulIdentifier","src":"884:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:29","nodeType":"YulIdentifier","src":"820:58:29"},"nativeSrc":"820:71:29","nodeType":"YulFunctionCall","src":"820:71:29"},"variableNames":[{"name":"pos","nativeSrc":"813:3:29","nodeType":"YulIdentifier","src":"813:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:29","nodeType":"YulIdentifier","src":"939:5:29"},{"kind":"number","nativeSrc":"946:4:29","nodeType":"YulLiteral","src":"946:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:29","nodeType":"YulIdentifier","src":"935:3:29"},"nativeSrc":"935:16:29","nodeType":"YulFunctionCall","src":"935:16:29"},{"name":"pos","nativeSrc":"953:3:29","nodeType":"YulIdentifier","src":"953:3:29"},{"name":"length","nativeSrc":"958:6:29","nodeType":"YulIdentifier","src":"958:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:29","nodeType":"YulIdentifier","src":"900:34:29"},"nativeSrc":"900:65:29","nodeType":"YulFunctionCall","src":"900:65:29"},"nativeSrc":"900:65:29","nodeType":"YulExpressionStatement","src":"900:65:29"},{"nativeSrc":"974:46:29","nodeType":"YulAssignment","src":"974:46:29","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:29","nodeType":"YulIdentifier","src":"985:3:29"},{"arguments":[{"name":"length","nativeSrc":"1012:6:29","nodeType":"YulIdentifier","src":"1012:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:29","nodeType":"YulIdentifier","src":"990:21:29"},"nativeSrc":"990:29:29","nodeType":"YulFunctionCall","src":"990:29:29"}],"functionName":{"name":"add","nativeSrc":"981:3:29","nodeType":"YulIdentifier","src":"981:3:29"},"nativeSrc":"981:39:29","nodeType":"YulFunctionCall","src":"981:39:29"},"variableNames":[{"name":"end","nativeSrc":"974:3:29","nodeType":"YulIdentifier","src":"974:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:29","nodeType":"YulTypedName","src":"722:5:29","type":""},{"name":"pos","nativeSrc":"729:3:29","nodeType":"YulTypedName","src":"729:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:29","nodeType":"YulTypedName","src":"737:3:29","type":""}],"src":"649:377:29"},{"body":{"nativeSrc":"1150:195:29","nodeType":"YulBlock","src":"1150:195:29","statements":[{"nativeSrc":"1160:26:29","nodeType":"YulAssignment","src":"1160:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:29","nodeType":"YulIdentifier","src":"1172:9:29"},{"kind":"number","nativeSrc":"1183:2:29","nodeType":"YulLiteral","src":"1183:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:29","nodeType":"YulIdentifier","src":"1168:3:29"},"nativeSrc":"1168:18:29","nodeType":"YulFunctionCall","src":"1168:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:29","nodeType":"YulIdentifier","src":"1160:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:29","nodeType":"YulIdentifier","src":"1207:9:29"},{"kind":"number","nativeSrc":"1218:1:29","nodeType":"YulLiteral","src":"1218:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:29","nodeType":"YulIdentifier","src":"1203:3:29"},"nativeSrc":"1203:17:29","nodeType":"YulFunctionCall","src":"1203:17:29"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:29","nodeType":"YulIdentifier","src":"1226:4:29"},{"name":"headStart","nativeSrc":"1232:9:29","nodeType":"YulIdentifier","src":"1232:9:29"}],"functionName":{"name":"sub","nativeSrc":"1222:3:29","nodeType":"YulIdentifier","src":"1222:3:29"},"nativeSrc":"1222:20:29","nodeType":"YulFunctionCall","src":"1222:20:29"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:29","nodeType":"YulIdentifier","src":"1196:6:29"},"nativeSrc":"1196:47:29","nodeType":"YulFunctionCall","src":"1196:47:29"},"nativeSrc":"1196:47:29","nodeType":"YulExpressionStatement","src":"1196:47:29"},{"nativeSrc":"1252:86:29","nodeType":"YulAssignment","src":"1252:86:29","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:29","nodeType":"YulIdentifier","src":"1324:6:29"},{"name":"tail","nativeSrc":"1333:4:29","nodeType":"YulIdentifier","src":"1333:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:29","nodeType":"YulIdentifier","src":"1260:63:29"},"nativeSrc":"1260:78:29","nodeType":"YulFunctionCall","src":"1260:78:29"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:29","nodeType":"YulIdentifier","src":"1252:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:29","nodeType":"YulTypedName","src":"1122:9:29","type":""},{"name":"value0","nativeSrc":"1134:6:29","nodeType":"YulTypedName","src":"1134:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:29","nodeType":"YulTypedName","src":"1145:4:29","type":""}],"src":"1032:313:29"},{"body":{"nativeSrc":"1391:35:29","nodeType":"YulBlock","src":"1391:35:29","statements":[{"nativeSrc":"1401:19:29","nodeType":"YulAssignment","src":"1401:19:29","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:29","nodeType":"YulLiteral","src":"1417:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:29","nodeType":"YulIdentifier","src":"1411:5:29"},"nativeSrc":"1411:9:29","nodeType":"YulFunctionCall","src":"1411:9:29"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:29","nodeType":"YulIdentifier","src":"1401:6:29"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:29","nodeType":"YulTypedName","src":"1384:6:29","type":""}],"src":"1351:75:29"},{"body":{"nativeSrc":"1521:28:29","nodeType":"YulBlock","src":"1521:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:29","nodeType":"YulLiteral","src":"1538:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:29","nodeType":"YulLiteral","src":"1541:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:29","nodeType":"YulIdentifier","src":"1531:6:29"},"nativeSrc":"1531:12:29","nodeType":"YulFunctionCall","src":"1531:12:29"},"nativeSrc":"1531:12:29","nodeType":"YulExpressionStatement","src":"1531:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:29","nodeType":"YulFunctionDefinition","src":"1432:117:29"},{"body":{"nativeSrc":"1644:28:29","nodeType":"YulBlock","src":"1644:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:29","nodeType":"YulLiteral","src":"1661:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:29","nodeType":"YulLiteral","src":"1664:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:29","nodeType":"YulIdentifier","src":"1654:6:29"},"nativeSrc":"1654:12:29","nodeType":"YulFunctionCall","src":"1654:12:29"},"nativeSrc":"1654:12:29","nodeType":"YulExpressionStatement","src":"1654:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:29","nodeType":"YulFunctionDefinition","src":"1555:117:29"},{"body":{"nativeSrc":"1723:81:29","nodeType":"YulBlock","src":"1723:81:29","statements":[{"nativeSrc":"1733:65:29","nodeType":"YulAssignment","src":"1733:65:29","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:29","nodeType":"YulIdentifier","src":"1748:5:29"},{"kind":"number","nativeSrc":"1755:42:29","nodeType":"YulLiteral","src":"1755:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:29","nodeType":"YulIdentifier","src":"1744:3:29"},"nativeSrc":"1744:54:29","nodeType":"YulFunctionCall","src":"1744:54:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:29","nodeType":"YulIdentifier","src":"1733:7:29"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:29","nodeType":"YulTypedName","src":"1705:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:29","nodeType":"YulTypedName","src":"1715:7:29","type":""}],"src":"1678:126:29"},{"body":{"nativeSrc":"1855:51:29","nodeType":"YulBlock","src":"1855:51:29","statements":[{"nativeSrc":"1865:35:29","nodeType":"YulAssignment","src":"1865:35:29","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:29","nodeType":"YulIdentifier","src":"1894:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:29","nodeType":"YulIdentifier","src":"1876:17:29"},"nativeSrc":"1876:24:29","nodeType":"YulFunctionCall","src":"1876:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:29","nodeType":"YulIdentifier","src":"1865:7:29"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:29","nodeType":"YulTypedName","src":"1837:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:29","nodeType":"YulTypedName","src":"1847:7:29","type":""}],"src":"1810:96:29"},{"body":{"nativeSrc":"1955:79:29","nodeType":"YulBlock","src":"1955:79:29","statements":[{"body":{"nativeSrc":"2012:16:29","nodeType":"YulBlock","src":"2012:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:29","nodeType":"YulLiteral","src":"2021:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:29","nodeType":"YulLiteral","src":"2024:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:29","nodeType":"YulIdentifier","src":"2014:6:29"},"nativeSrc":"2014:12:29","nodeType":"YulFunctionCall","src":"2014:12:29"},"nativeSrc":"2014:12:29","nodeType":"YulExpressionStatement","src":"2014:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:29","nodeType":"YulIdentifier","src":"1978:5:29"},{"arguments":[{"name":"value","nativeSrc":"2003:5:29","nodeType":"YulIdentifier","src":"2003:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:29","nodeType":"YulIdentifier","src":"1985:17:29"},"nativeSrc":"1985:24:29","nodeType":"YulFunctionCall","src":"1985:24:29"}],"functionName":{"name":"eq","nativeSrc":"1975:2:29","nodeType":"YulIdentifier","src":"1975:2:29"},"nativeSrc":"1975:35:29","nodeType":"YulFunctionCall","src":"1975:35:29"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:29","nodeType":"YulIdentifier","src":"1968:6:29"},"nativeSrc":"1968:43:29","nodeType":"YulFunctionCall","src":"1968:43:29"},"nativeSrc":"1965:63:29","nodeType":"YulIf","src":"1965:63:29"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:29","nodeType":"YulTypedName","src":"1948:5:29","type":""}],"src":"1912:122:29"},{"body":{"nativeSrc":"2092:87:29","nodeType":"YulBlock","src":"2092:87:29","statements":[{"nativeSrc":"2102:29:29","nodeType":"YulAssignment","src":"2102:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:29","nodeType":"YulIdentifier","src":"2124:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:29","nodeType":"YulIdentifier","src":"2111:12:29"},"nativeSrc":"2111:20:29","nodeType":"YulFunctionCall","src":"2111:20:29"},"variableNames":[{"name":"value","nativeSrc":"2102:5:29","nodeType":"YulIdentifier","src":"2102:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:29","nodeType":"YulIdentifier","src":"2167:5:29"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:29","nodeType":"YulIdentifier","src":"2140:26:29"},"nativeSrc":"2140:33:29","nodeType":"YulFunctionCall","src":"2140:33:29"},"nativeSrc":"2140:33:29","nodeType":"YulExpressionStatement","src":"2140:33:29"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:29","nodeType":"YulTypedName","src":"2070:6:29","type":""},{"name":"end","nativeSrc":"2078:3:29","nodeType":"YulTypedName","src":"2078:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:29","nodeType":"YulTypedName","src":"2086:5:29","type":""}],"src":"2040:139:29"},{"body":{"nativeSrc":"2230:32:29","nodeType":"YulBlock","src":"2230:32:29","statements":[{"nativeSrc":"2240:16:29","nodeType":"YulAssignment","src":"2240:16:29","value":{"name":"value","nativeSrc":"2251:5:29","nodeType":"YulIdentifier","src":"2251:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:29","nodeType":"YulIdentifier","src":"2240:7:29"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:29","nodeType":"YulTypedName","src":"2212:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:29","nodeType":"YulTypedName","src":"2222:7:29","type":""}],"src":"2185:77:29"},{"body":{"nativeSrc":"2311:79:29","nodeType":"YulBlock","src":"2311:79:29","statements":[{"body":{"nativeSrc":"2368:16:29","nodeType":"YulBlock","src":"2368:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:29","nodeType":"YulLiteral","src":"2377:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:29","nodeType":"YulLiteral","src":"2380:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:29","nodeType":"YulIdentifier","src":"2370:6:29"},"nativeSrc":"2370:12:29","nodeType":"YulFunctionCall","src":"2370:12:29"},"nativeSrc":"2370:12:29","nodeType":"YulExpressionStatement","src":"2370:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:29","nodeType":"YulIdentifier","src":"2334:5:29"},{"arguments":[{"name":"value","nativeSrc":"2359:5:29","nodeType":"YulIdentifier","src":"2359:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:29","nodeType":"YulIdentifier","src":"2341:17:29"},"nativeSrc":"2341:24:29","nodeType":"YulFunctionCall","src":"2341:24:29"}],"functionName":{"name":"eq","nativeSrc":"2331:2:29","nodeType":"YulIdentifier","src":"2331:2:29"},"nativeSrc":"2331:35:29","nodeType":"YulFunctionCall","src":"2331:35:29"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:29","nodeType":"YulIdentifier","src":"2324:6:29"},"nativeSrc":"2324:43:29","nodeType":"YulFunctionCall","src":"2324:43:29"},"nativeSrc":"2321:63:29","nodeType":"YulIf","src":"2321:63:29"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:29","nodeType":"YulTypedName","src":"2304:5:29","type":""}],"src":"2268:122:29"},{"body":{"nativeSrc":"2448:87:29","nodeType":"YulBlock","src":"2448:87:29","statements":[{"nativeSrc":"2458:29:29","nodeType":"YulAssignment","src":"2458:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:29","nodeType":"YulIdentifier","src":"2480:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:29","nodeType":"YulIdentifier","src":"2467:12:29"},"nativeSrc":"2467:20:29","nodeType":"YulFunctionCall","src":"2467:20:29"},"variableNames":[{"name":"value","nativeSrc":"2458:5:29","nodeType":"YulIdentifier","src":"2458:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:29","nodeType":"YulIdentifier","src":"2523:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:29","nodeType":"YulIdentifier","src":"2496:26:29"},"nativeSrc":"2496:33:29","nodeType":"YulFunctionCall","src":"2496:33:29"},"nativeSrc":"2496:33:29","nodeType":"YulExpressionStatement","src":"2496:33:29"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:29","nodeType":"YulTypedName","src":"2426:6:29","type":""},{"name":"end","nativeSrc":"2434:3:29","nodeType":"YulTypedName","src":"2434:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:29","nodeType":"YulTypedName","src":"2442:5:29","type":""}],"src":"2396:139:29"},{"body":{"nativeSrc":"2624:391:29","nodeType":"YulBlock","src":"2624:391:29","statements":[{"body":{"nativeSrc":"2670:83:29","nodeType":"YulBlock","src":"2670:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:29","nodeType":"YulIdentifier","src":"2672:77:29"},"nativeSrc":"2672:79:29","nodeType":"YulFunctionCall","src":"2672:79:29"},"nativeSrc":"2672:79:29","nodeType":"YulExpressionStatement","src":"2672:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:29","nodeType":"YulIdentifier","src":"2645:7:29"},{"name":"headStart","nativeSrc":"2654:9:29","nodeType":"YulIdentifier","src":"2654:9:29"}],"functionName":{"name":"sub","nativeSrc":"2641:3:29","nodeType":"YulIdentifier","src":"2641:3:29"},"nativeSrc":"2641:23:29","nodeType":"YulFunctionCall","src":"2641:23:29"},{"kind":"number","nativeSrc":"2666:2:29","nodeType":"YulLiteral","src":"2666:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:29","nodeType":"YulIdentifier","src":"2637:3:29"},"nativeSrc":"2637:32:29","nodeType":"YulFunctionCall","src":"2637:32:29"},"nativeSrc":"2634:119:29","nodeType":"YulIf","src":"2634:119:29"},{"nativeSrc":"2763:117:29","nodeType":"YulBlock","src":"2763:117:29","statements":[{"nativeSrc":"2778:15:29","nodeType":"YulVariableDeclaration","src":"2778:15:29","value":{"kind":"number","nativeSrc":"2792:1:29","nodeType":"YulLiteral","src":"2792:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:29","nodeType":"YulTypedName","src":"2782:6:29","type":""}]},{"nativeSrc":"2807:63:29","nodeType":"YulAssignment","src":"2807:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:29","nodeType":"YulIdentifier","src":"2842:9:29"},{"name":"offset","nativeSrc":"2853:6:29","nodeType":"YulIdentifier","src":"2853:6:29"}],"functionName":{"name":"add","nativeSrc":"2838:3:29","nodeType":"YulIdentifier","src":"2838:3:29"},"nativeSrc":"2838:22:29","nodeType":"YulFunctionCall","src":"2838:22:29"},{"name":"dataEnd","nativeSrc":"2862:7:29","nodeType":"YulIdentifier","src":"2862:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:29","nodeType":"YulIdentifier","src":"2817:20:29"},"nativeSrc":"2817:53:29","nodeType":"YulFunctionCall","src":"2817:53:29"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:29","nodeType":"YulIdentifier","src":"2807:6:29"}]}]},{"nativeSrc":"2890:118:29","nodeType":"YulBlock","src":"2890:118:29","statements":[{"nativeSrc":"2905:16:29","nodeType":"YulVariableDeclaration","src":"2905:16:29","value":{"kind":"number","nativeSrc":"2919:2:29","nodeType":"YulLiteral","src":"2919:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:29","nodeType":"YulTypedName","src":"2909:6:29","type":""}]},{"nativeSrc":"2935:63:29","nodeType":"YulAssignment","src":"2935:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:29","nodeType":"YulIdentifier","src":"2970:9:29"},{"name":"offset","nativeSrc":"2981:6:29","nodeType":"YulIdentifier","src":"2981:6:29"}],"functionName":{"name":"add","nativeSrc":"2966:3:29","nodeType":"YulIdentifier","src":"2966:3:29"},"nativeSrc":"2966:22:29","nodeType":"YulFunctionCall","src":"2966:22:29"},{"name":"dataEnd","nativeSrc":"2990:7:29","nodeType":"YulIdentifier","src":"2990:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:29","nodeType":"YulIdentifier","src":"2945:20:29"},"nativeSrc":"2945:53:29","nodeType":"YulFunctionCall","src":"2945:53:29"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:29","nodeType":"YulIdentifier","src":"2935:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:29","nodeType":"YulTypedName","src":"2586:9:29","type":""},{"name":"dataEnd","nativeSrc":"2597:7:29","nodeType":"YulTypedName","src":"2597:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:29","nodeType":"YulTypedName","src":"2609:6:29","type":""},{"name":"value1","nativeSrc":"2617:6:29","nodeType":"YulTypedName","src":"2617:6:29","type":""}],"src":"2541:474:29"},{"body":{"nativeSrc":"3063:48:29","nodeType":"YulBlock","src":"3063:48:29","statements":[{"nativeSrc":"3073:32:29","nodeType":"YulAssignment","src":"3073:32:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:29","nodeType":"YulIdentifier","src":"3098:5:29"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:29","nodeType":"YulIdentifier","src":"3091:6:29"},"nativeSrc":"3091:13:29","nodeType":"YulFunctionCall","src":"3091:13:29"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:29","nodeType":"YulIdentifier","src":"3084:6:29"},"nativeSrc":"3084:21:29","nodeType":"YulFunctionCall","src":"3084:21:29"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:29","nodeType":"YulIdentifier","src":"3073:7:29"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:29","nodeType":"YulTypedName","src":"3045:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:29","nodeType":"YulTypedName","src":"3055:7:29","type":""}],"src":"3021:90:29"},{"body":{"nativeSrc":"3176:50:29","nodeType":"YulBlock","src":"3176:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:29","nodeType":"YulIdentifier","src":"3193:3:29"},{"arguments":[{"name":"value","nativeSrc":"3213:5:29","nodeType":"YulIdentifier","src":"3213:5:29"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:29","nodeType":"YulIdentifier","src":"3198:14:29"},"nativeSrc":"3198:21:29","nodeType":"YulFunctionCall","src":"3198:21:29"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:29","nodeType":"YulIdentifier","src":"3186:6:29"},"nativeSrc":"3186:34:29","nodeType":"YulFunctionCall","src":"3186:34:29"},"nativeSrc":"3186:34:29","nodeType":"YulExpressionStatement","src":"3186:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:29","nodeType":"YulTypedName","src":"3164:5:29","type":""},{"name":"pos","nativeSrc":"3171:3:29","nodeType":"YulTypedName","src":"3171:3:29","type":""}],"src":"3117:109:29"},{"body":{"nativeSrc":"3324:118:29","nodeType":"YulBlock","src":"3324:118:29","statements":[{"nativeSrc":"3334:26:29","nodeType":"YulAssignment","src":"3334:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:29","nodeType":"YulIdentifier","src":"3346:9:29"},{"kind":"number","nativeSrc":"3357:2:29","nodeType":"YulLiteral","src":"3357:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:29","nodeType":"YulIdentifier","src":"3342:3:29"},"nativeSrc":"3342:18:29","nodeType":"YulFunctionCall","src":"3342:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:29","nodeType":"YulIdentifier","src":"3334:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:29","nodeType":"YulIdentifier","src":"3408:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:29","nodeType":"YulIdentifier","src":"3421:9:29"},{"kind":"number","nativeSrc":"3432:1:29","nodeType":"YulLiteral","src":"3432:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:29","nodeType":"YulIdentifier","src":"3417:3:29"},"nativeSrc":"3417:17:29","nodeType":"YulFunctionCall","src":"3417:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:29","nodeType":"YulIdentifier","src":"3370:37:29"},"nativeSrc":"3370:65:29","nodeType":"YulFunctionCall","src":"3370:65:29"},"nativeSrc":"3370:65:29","nodeType":"YulExpressionStatement","src":"3370:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:29","nodeType":"YulTypedName","src":"3296:9:29","type":""},{"name":"value0","nativeSrc":"3308:6:29","nodeType":"YulTypedName","src":"3308:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:29","nodeType":"YulTypedName","src":"3319:4:29","type":""}],"src":"3232:210:29"},{"body":{"nativeSrc":"3513:53:29","nodeType":"YulBlock","src":"3513:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:29","nodeType":"YulIdentifier","src":"3530:3:29"},{"arguments":[{"name":"value","nativeSrc":"3553:5:29","nodeType":"YulIdentifier","src":"3553:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:29","nodeType":"YulIdentifier","src":"3535:17:29"},"nativeSrc":"3535:24:29","nodeType":"YulFunctionCall","src":"3535:24:29"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:29","nodeType":"YulIdentifier","src":"3523:6:29"},"nativeSrc":"3523:37:29","nodeType":"YulFunctionCall","src":"3523:37:29"},"nativeSrc":"3523:37:29","nodeType":"YulExpressionStatement","src":"3523:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:29","nodeType":"YulTypedName","src":"3501:5:29","type":""},{"name":"pos","nativeSrc":"3508:3:29","nodeType":"YulTypedName","src":"3508:3:29","type":""}],"src":"3448:118:29"},{"body":{"nativeSrc":"3670:124:29","nodeType":"YulBlock","src":"3670:124:29","statements":[{"nativeSrc":"3680:26:29","nodeType":"YulAssignment","src":"3680:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:29","nodeType":"YulIdentifier","src":"3692:9:29"},{"kind":"number","nativeSrc":"3703:2:29","nodeType":"YulLiteral","src":"3703:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:29","nodeType":"YulIdentifier","src":"3688:3:29"},"nativeSrc":"3688:18:29","nodeType":"YulFunctionCall","src":"3688:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:29","nodeType":"YulIdentifier","src":"3680:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:29","nodeType":"YulIdentifier","src":"3760:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:29","nodeType":"YulIdentifier","src":"3773:9:29"},{"kind":"number","nativeSrc":"3784:1:29","nodeType":"YulLiteral","src":"3784:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:29","nodeType":"YulIdentifier","src":"3769:3:29"},"nativeSrc":"3769:17:29","nodeType":"YulFunctionCall","src":"3769:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:29","nodeType":"YulIdentifier","src":"3716:43:29"},"nativeSrc":"3716:71:29","nodeType":"YulFunctionCall","src":"3716:71:29"},"nativeSrc":"3716:71:29","nodeType":"YulExpressionStatement","src":"3716:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:29","nodeType":"YulTypedName","src":"3642:9:29","type":""},{"name":"value0","nativeSrc":"3654:6:29","nodeType":"YulTypedName","src":"3654:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:29","nodeType":"YulTypedName","src":"3665:4:29","type":""}],"src":"3572:222:29"},{"body":{"nativeSrc":"3900:519:29","nodeType":"YulBlock","src":"3900:519:29","statements":[{"body":{"nativeSrc":"3946:83:29","nodeType":"YulBlock","src":"3946:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:29","nodeType":"YulIdentifier","src":"3948:77:29"},"nativeSrc":"3948:79:29","nodeType":"YulFunctionCall","src":"3948:79:29"},"nativeSrc":"3948:79:29","nodeType":"YulExpressionStatement","src":"3948:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:29","nodeType":"YulIdentifier","src":"3921:7:29"},{"name":"headStart","nativeSrc":"3930:9:29","nodeType":"YulIdentifier","src":"3930:9:29"}],"functionName":{"name":"sub","nativeSrc":"3917:3:29","nodeType":"YulIdentifier","src":"3917:3:29"},"nativeSrc":"3917:23:29","nodeType":"YulFunctionCall","src":"3917:23:29"},{"kind":"number","nativeSrc":"3942:2:29","nodeType":"YulLiteral","src":"3942:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:29","nodeType":"YulIdentifier","src":"3913:3:29"},"nativeSrc":"3913:32:29","nodeType":"YulFunctionCall","src":"3913:32:29"},"nativeSrc":"3910:119:29","nodeType":"YulIf","src":"3910:119:29"},{"nativeSrc":"4039:117:29","nodeType":"YulBlock","src":"4039:117:29","statements":[{"nativeSrc":"4054:15:29","nodeType":"YulVariableDeclaration","src":"4054:15:29","value":{"kind":"number","nativeSrc":"4068:1:29","nodeType":"YulLiteral","src":"4068:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:29","nodeType":"YulTypedName","src":"4058:6:29","type":""}]},{"nativeSrc":"4083:63:29","nodeType":"YulAssignment","src":"4083:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:29","nodeType":"YulIdentifier","src":"4118:9:29"},{"name":"offset","nativeSrc":"4129:6:29","nodeType":"YulIdentifier","src":"4129:6:29"}],"functionName":{"name":"add","nativeSrc":"4114:3:29","nodeType":"YulIdentifier","src":"4114:3:29"},"nativeSrc":"4114:22:29","nodeType":"YulFunctionCall","src":"4114:22:29"},{"name":"dataEnd","nativeSrc":"4138:7:29","nodeType":"YulIdentifier","src":"4138:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:29","nodeType":"YulIdentifier","src":"4093:20:29"},"nativeSrc":"4093:53:29","nodeType":"YulFunctionCall","src":"4093:53:29"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:29","nodeType":"YulIdentifier","src":"4083:6:29"}]}]},{"nativeSrc":"4166:118:29","nodeType":"YulBlock","src":"4166:118:29","statements":[{"nativeSrc":"4181:16:29","nodeType":"YulVariableDeclaration","src":"4181:16:29","value":{"kind":"number","nativeSrc":"4195:2:29","nodeType":"YulLiteral","src":"4195:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:29","nodeType":"YulTypedName","src":"4185:6:29","type":""}]},{"nativeSrc":"4211:63:29","nodeType":"YulAssignment","src":"4211:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:29","nodeType":"YulIdentifier","src":"4246:9:29"},{"name":"offset","nativeSrc":"4257:6:29","nodeType":"YulIdentifier","src":"4257:6:29"}],"functionName":{"name":"add","nativeSrc":"4242:3:29","nodeType":"YulIdentifier","src":"4242:3:29"},"nativeSrc":"4242:22:29","nodeType":"YulFunctionCall","src":"4242:22:29"},{"name":"dataEnd","nativeSrc":"4266:7:29","nodeType":"YulIdentifier","src":"4266:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:29","nodeType":"YulIdentifier","src":"4221:20:29"},"nativeSrc":"4221:53:29","nodeType":"YulFunctionCall","src":"4221:53:29"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:29","nodeType":"YulIdentifier","src":"4211:6:29"}]}]},{"nativeSrc":"4294:118:29","nodeType":"YulBlock","src":"4294:118:29","statements":[{"nativeSrc":"4309:16:29","nodeType":"YulVariableDeclaration","src":"4309:16:29","value":{"kind":"number","nativeSrc":"4323:2:29","nodeType":"YulLiteral","src":"4323:2:29","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:29","nodeType":"YulTypedName","src":"4313:6:29","type":""}]},{"nativeSrc":"4339:63:29","nodeType":"YulAssignment","src":"4339:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:29","nodeType":"YulIdentifier","src":"4374:9:29"},{"name":"offset","nativeSrc":"4385:6:29","nodeType":"YulIdentifier","src":"4385:6:29"}],"functionName":{"name":"add","nativeSrc":"4370:3:29","nodeType":"YulIdentifier","src":"4370:3:29"},"nativeSrc":"4370:22:29","nodeType":"YulFunctionCall","src":"4370:22:29"},{"name":"dataEnd","nativeSrc":"4394:7:29","nodeType":"YulIdentifier","src":"4394:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:29","nodeType":"YulIdentifier","src":"4349:20:29"},"nativeSrc":"4349:53:29","nodeType":"YulFunctionCall","src":"4349:53:29"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:29","nodeType":"YulIdentifier","src":"4339:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:29","nodeType":"YulTypedName","src":"3854:9:29","type":""},{"name":"dataEnd","nativeSrc":"3865:7:29","nodeType":"YulTypedName","src":"3865:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:29","nodeType":"YulTypedName","src":"3877:6:29","type":""},{"name":"value1","nativeSrc":"3885:6:29","nodeType":"YulTypedName","src":"3885:6:29","type":""},{"name":"value2","nativeSrc":"3893:6:29","nodeType":"YulTypedName","src":"3893:6:29","type":""}],"src":"3800:619:29"},{"body":{"nativeSrc":"4468:43:29","nodeType":"YulBlock","src":"4468:43:29","statements":[{"nativeSrc":"4478:27:29","nodeType":"YulAssignment","src":"4478:27:29","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:29","nodeType":"YulIdentifier","src":"4493:5:29"},{"kind":"number","nativeSrc":"4500:4:29","nodeType":"YulLiteral","src":"4500:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:29","nodeType":"YulIdentifier","src":"4489:3:29"},"nativeSrc":"4489:16:29","nodeType":"YulFunctionCall","src":"4489:16:29"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:29","nodeType":"YulIdentifier","src":"4478:7:29"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:29","nodeType":"YulTypedName","src":"4450:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:29","nodeType":"YulTypedName","src":"4460:7:29","type":""}],"src":"4425:86:29"},{"body":{"nativeSrc":"4578:51:29","nodeType":"YulBlock","src":"4578:51:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:29","nodeType":"YulIdentifier","src":"4595:3:29"},{"arguments":[{"name":"value","nativeSrc":"4616:5:29","nodeType":"YulIdentifier","src":"4616:5:29"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:29","nodeType":"YulIdentifier","src":"4600:15:29"},"nativeSrc":"4600:22:29","nodeType":"YulFunctionCall","src":"4600:22:29"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:29","nodeType":"YulIdentifier","src":"4588:6:29"},"nativeSrc":"4588:35:29","nodeType":"YulFunctionCall","src":"4588:35:29"},"nativeSrc":"4588:35:29","nodeType":"YulExpressionStatement","src":"4588:35:29"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:29","nodeType":"YulTypedName","src":"4566:5:29","type":""},{"name":"pos","nativeSrc":"4573:3:29","nodeType":"YulTypedName","src":"4573:3:29","type":""}],"src":"4517:112:29"},{"body":{"nativeSrc":"4729:120:29","nodeType":"YulBlock","src":"4729:120:29","statements":[{"nativeSrc":"4739:26:29","nodeType":"YulAssignment","src":"4739:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:29","nodeType":"YulIdentifier","src":"4751:9:29"},{"kind":"number","nativeSrc":"4762:2:29","nodeType":"YulLiteral","src":"4762:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:29","nodeType":"YulIdentifier","src":"4747:3:29"},"nativeSrc":"4747:18:29","nodeType":"YulFunctionCall","src":"4747:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:29","nodeType":"YulIdentifier","src":"4739:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:29","nodeType":"YulIdentifier","src":"4815:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:29","nodeType":"YulIdentifier","src":"4828:9:29"},{"kind":"number","nativeSrc":"4839:1:29","nodeType":"YulLiteral","src":"4839:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:29","nodeType":"YulIdentifier","src":"4824:3:29"},"nativeSrc":"4824:17:29","nodeType":"YulFunctionCall","src":"4824:17:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:29","nodeType":"YulIdentifier","src":"4775:39:29"},"nativeSrc":"4775:67:29","nodeType":"YulFunctionCall","src":"4775:67:29"},"nativeSrc":"4775:67:29","nodeType":"YulExpressionStatement","src":"4775:67:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:29","nodeType":"YulTypedName","src":"4701:9:29","type":""},{"name":"value0","nativeSrc":"4713:6:29","nodeType":"YulTypedName","src":"4713:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:29","nodeType":"YulTypedName","src":"4724:4:29","type":""}],"src":"4635:214:29"},{"body":{"nativeSrc":"4887:28:29","nodeType":"YulBlock","src":"4887:28:29","statements":[{"nativeSrc":"4897:12:29","nodeType":"YulAssignment","src":"4897:12:29","value":{"name":"value","nativeSrc":"4904:5:29","nodeType":"YulIdentifier","src":"4904:5:29"},"variableNames":[{"name":"ret","nativeSrc":"4897:3:29","nodeType":"YulIdentifier","src":"4897:3:29"}]}]},"name":"identity","nativeSrc":"4855:60:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4873:5:29","nodeType":"YulTypedName","src":"4873:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4883:3:29","nodeType":"YulTypedName","src":"4883:3:29","type":""}],"src":"4855:60:29"},{"body":{"nativeSrc":"4981:82:29","nodeType":"YulBlock","src":"4981:82:29","statements":[{"nativeSrc":"4991:66:29","nodeType":"YulAssignment","src":"4991:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5049:5:29","nodeType":"YulIdentifier","src":"5049:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5031:17:29","nodeType":"YulIdentifier","src":"5031:17:29"},"nativeSrc":"5031:24:29","nodeType":"YulFunctionCall","src":"5031:24:29"}],"functionName":{"name":"identity","nativeSrc":"5022:8:29","nodeType":"YulIdentifier","src":"5022:8:29"},"nativeSrc":"5022:34:29","nodeType":"YulFunctionCall","src":"5022:34:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5004:17:29","nodeType":"YulIdentifier","src":"5004:17:29"},"nativeSrc":"5004:53:29","nodeType":"YulFunctionCall","src":"5004:53:29"},"variableNames":[{"name":"converted","nativeSrc":"4991:9:29","nodeType":"YulIdentifier","src":"4991:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"4921:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4961:5:29","nodeType":"YulTypedName","src":"4961:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4971:9:29","nodeType":"YulTypedName","src":"4971:9:29","type":""}],"src":"4921:142:29"},{"body":{"nativeSrc":"5129:66:29","nodeType":"YulBlock","src":"5129:66:29","statements":[{"nativeSrc":"5139:50:29","nodeType":"YulAssignment","src":"5139:50:29","value":{"arguments":[{"name":"value","nativeSrc":"5183:5:29","nodeType":"YulIdentifier","src":"5183:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"5152:30:29","nodeType":"YulIdentifier","src":"5152:30:29"},"nativeSrc":"5152:37:29","nodeType":"YulFunctionCall","src":"5152:37:29"},"variableNames":[{"name":"converted","nativeSrc":"5139:9:29","nodeType":"YulIdentifier","src":"5139:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"5069:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5109:5:29","nodeType":"YulTypedName","src":"5109:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5119:9:29","nodeType":"YulTypedName","src":"5119:9:29","type":""}],"src":"5069:126:29"},{"body":{"nativeSrc":"5277:66:29","nodeType":"YulBlock","src":"5277:66:29","statements":[{"nativeSrc":"5287:50:29","nodeType":"YulAssignment","src":"5287:50:29","value":{"arguments":[{"name":"value","nativeSrc":"5331:5:29","nodeType":"YulIdentifier","src":"5331:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"5300:30:29","nodeType":"YulIdentifier","src":"5300:30:29"},"nativeSrc":"5300:37:29","nodeType":"YulFunctionCall","src":"5300:37:29"},"variableNames":[{"name":"converted","nativeSrc":"5287:9:29","nodeType":"YulIdentifier","src":"5287:9:29"}]}]},"name":"convert_t_contract$_PikaPay_$7473_to_t_address","nativeSrc":"5201:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5257:5:29","nodeType":"YulTypedName","src":"5257:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5267:9:29","nodeType":"YulTypedName","src":"5267:9:29","type":""}],"src":"5201:142:29"},{"body":{"nativeSrc":"5430:82:29","nodeType":"YulBlock","src":"5430:82:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5447:3:29","nodeType":"YulIdentifier","src":"5447:3:29"},{"arguments":[{"name":"value","nativeSrc":"5499:5:29","nodeType":"YulIdentifier","src":"5499:5:29"}],"functionName":{"name":"convert_t_contract$_PikaPay_$7473_to_t_address","nativeSrc":"5452:46:29","nodeType":"YulIdentifier","src":"5452:46:29"},"nativeSrc":"5452:53:29","nodeType":"YulFunctionCall","src":"5452:53:29"}],"functionName":{"name":"mstore","nativeSrc":"5440:6:29","nodeType":"YulIdentifier","src":"5440:6:29"},"nativeSrc":"5440:66:29","nodeType":"YulFunctionCall","src":"5440:66:29"},"nativeSrc":"5440:66:29","nodeType":"YulExpressionStatement","src":"5440:66:29"}]},"name":"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack","nativeSrc":"5349:163:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5418:5:29","nodeType":"YulTypedName","src":"5418:5:29","type":""},{"name":"pos","nativeSrc":"5425:3:29","nodeType":"YulTypedName","src":"5425:3:29","type":""}],"src":"5349:163:29"},{"body":{"nativeSrc":"5632:140:29","nodeType":"YulBlock","src":"5632:140:29","statements":[{"nativeSrc":"5642:26:29","nodeType":"YulAssignment","src":"5642:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5654:9:29","nodeType":"YulIdentifier","src":"5654:9:29"},{"kind":"number","nativeSrc":"5665:2:29","nodeType":"YulLiteral","src":"5665:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5650:3:29","nodeType":"YulIdentifier","src":"5650:3:29"},"nativeSrc":"5650:18:29","nodeType":"YulFunctionCall","src":"5650:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5642:4:29","nodeType":"YulIdentifier","src":"5642:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5738:6:29","nodeType":"YulIdentifier","src":"5738:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5751:9:29","nodeType":"YulIdentifier","src":"5751:9:29"},{"kind":"number","nativeSrc":"5762:1:29","nodeType":"YulLiteral","src":"5762:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5747:3:29","nodeType":"YulIdentifier","src":"5747:3:29"},"nativeSrc":"5747:17:29","nodeType":"YulFunctionCall","src":"5747:17:29"}],"functionName":{"name":"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack","nativeSrc":"5678:59:29","nodeType":"YulIdentifier","src":"5678:59:29"},"nativeSrc":"5678:87:29","nodeType":"YulFunctionCall","src":"5678:87:29"},"nativeSrc":"5678:87:29","nodeType":"YulExpressionStatement","src":"5678:87:29"}]},"name":"abi_encode_tuple_t_contract$_PikaPay_$7473__to_t_address__fromStack_reversed","nativeSrc":"5518:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5604:9:29","nodeType":"YulTypedName","src":"5604:9:29","type":""},{"name":"value0","nativeSrc":"5616:6:29","nodeType":"YulTypedName","src":"5616:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5627:4:29","nodeType":"YulTypedName","src":"5627:4:29","type":""}],"src":"5518:254:29"},{"body":{"nativeSrc":"5844:263:29","nodeType":"YulBlock","src":"5844:263:29","statements":[{"body":{"nativeSrc":"5890:83:29","nodeType":"YulBlock","src":"5890:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5892:77:29","nodeType":"YulIdentifier","src":"5892:77:29"},"nativeSrc":"5892:79:29","nodeType":"YulFunctionCall","src":"5892:79:29"},"nativeSrc":"5892:79:29","nodeType":"YulExpressionStatement","src":"5892:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5865:7:29","nodeType":"YulIdentifier","src":"5865:7:29"},{"name":"headStart","nativeSrc":"5874:9:29","nodeType":"YulIdentifier","src":"5874:9:29"}],"functionName":{"name":"sub","nativeSrc":"5861:3:29","nodeType":"YulIdentifier","src":"5861:3:29"},"nativeSrc":"5861:23:29","nodeType":"YulFunctionCall","src":"5861:23:29"},{"kind":"number","nativeSrc":"5886:2:29","nodeType":"YulLiteral","src":"5886:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5857:3:29","nodeType":"YulIdentifier","src":"5857:3:29"},"nativeSrc":"5857:32:29","nodeType":"YulFunctionCall","src":"5857:32:29"},"nativeSrc":"5854:119:29","nodeType":"YulIf","src":"5854:119:29"},{"nativeSrc":"5983:117:29","nodeType":"YulBlock","src":"5983:117:29","statements":[{"nativeSrc":"5998:15:29","nodeType":"YulVariableDeclaration","src":"5998:15:29","value":{"kind":"number","nativeSrc":"6012:1:29","nodeType":"YulLiteral","src":"6012:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6002:6:29","nodeType":"YulTypedName","src":"6002:6:29","type":""}]},{"nativeSrc":"6027:63:29","nodeType":"YulAssignment","src":"6027:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6062:9:29","nodeType":"YulIdentifier","src":"6062:9:29"},{"name":"offset","nativeSrc":"6073:6:29","nodeType":"YulIdentifier","src":"6073:6:29"}],"functionName":{"name":"add","nativeSrc":"6058:3:29","nodeType":"YulIdentifier","src":"6058:3:29"},"nativeSrc":"6058:22:29","nodeType":"YulFunctionCall","src":"6058:22:29"},{"name":"dataEnd","nativeSrc":"6082:7:29","nodeType":"YulIdentifier","src":"6082:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6037:20:29","nodeType":"YulIdentifier","src":"6037:20:29"},"nativeSrc":"6037:53:29","nodeType":"YulFunctionCall","src":"6037:53:29"},"variableNames":[{"name":"value0","nativeSrc":"6027:6:29","nodeType":"YulIdentifier","src":"6027:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5778:329:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5814:9:29","nodeType":"YulTypedName","src":"5814:9:29","type":""},{"name":"dataEnd","nativeSrc":"5825:7:29","nodeType":"YulTypedName","src":"5825:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5837:6:29","nodeType":"YulTypedName","src":"5837:6:29","type":""}],"src":"5778:329:29"},{"body":{"nativeSrc":"6196:391:29","nodeType":"YulBlock","src":"6196:391:29","statements":[{"body":{"nativeSrc":"6242:83:29","nodeType":"YulBlock","src":"6242:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6244:77:29","nodeType":"YulIdentifier","src":"6244:77:29"},"nativeSrc":"6244:79:29","nodeType":"YulFunctionCall","src":"6244:79:29"},"nativeSrc":"6244:79:29","nodeType":"YulExpressionStatement","src":"6244:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6217:7:29","nodeType":"YulIdentifier","src":"6217:7:29"},{"name":"headStart","nativeSrc":"6226:9:29","nodeType":"YulIdentifier","src":"6226:9:29"}],"functionName":{"name":"sub","nativeSrc":"6213:3:29","nodeType":"YulIdentifier","src":"6213:3:29"},"nativeSrc":"6213:23:29","nodeType":"YulFunctionCall","src":"6213:23:29"},{"kind":"number","nativeSrc":"6238:2:29","nodeType":"YulLiteral","src":"6238:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6209:3:29","nodeType":"YulIdentifier","src":"6209:3:29"},"nativeSrc":"6209:32:29","nodeType":"YulFunctionCall","src":"6209:32:29"},"nativeSrc":"6206:119:29","nodeType":"YulIf","src":"6206:119:29"},{"nativeSrc":"6335:117:29","nodeType":"YulBlock","src":"6335:117:29","statements":[{"nativeSrc":"6350:15:29","nodeType":"YulVariableDeclaration","src":"6350:15:29","value":{"kind":"number","nativeSrc":"6364:1:29","nodeType":"YulLiteral","src":"6364:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6354:6:29","nodeType":"YulTypedName","src":"6354:6:29","type":""}]},{"nativeSrc":"6379:63:29","nodeType":"YulAssignment","src":"6379:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6414:9:29","nodeType":"YulIdentifier","src":"6414:9:29"},{"name":"offset","nativeSrc":"6425:6:29","nodeType":"YulIdentifier","src":"6425:6:29"}],"functionName":{"name":"add","nativeSrc":"6410:3:29","nodeType":"YulIdentifier","src":"6410:3:29"},"nativeSrc":"6410:22:29","nodeType":"YulFunctionCall","src":"6410:22:29"},{"name":"dataEnd","nativeSrc":"6434:7:29","nodeType":"YulIdentifier","src":"6434:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6389:20:29","nodeType":"YulIdentifier","src":"6389:20:29"},"nativeSrc":"6389:53:29","nodeType":"YulFunctionCall","src":"6389:53:29"},"variableNames":[{"name":"value0","nativeSrc":"6379:6:29","nodeType":"YulIdentifier","src":"6379:6:29"}]}]},{"nativeSrc":"6462:118:29","nodeType":"YulBlock","src":"6462:118:29","statements":[{"nativeSrc":"6477:16:29","nodeType":"YulVariableDeclaration","src":"6477:16:29","value":{"kind":"number","nativeSrc":"6491:2:29","nodeType":"YulLiteral","src":"6491:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6481:6:29","nodeType":"YulTypedName","src":"6481:6:29","type":""}]},{"nativeSrc":"6507:63:29","nodeType":"YulAssignment","src":"6507:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6542:9:29","nodeType":"YulIdentifier","src":"6542:9:29"},{"name":"offset","nativeSrc":"6553:6:29","nodeType":"YulIdentifier","src":"6553:6:29"}],"functionName":{"name":"add","nativeSrc":"6538:3:29","nodeType":"YulIdentifier","src":"6538:3:29"},"nativeSrc":"6538:22:29","nodeType":"YulFunctionCall","src":"6538:22:29"},{"name":"dataEnd","nativeSrc":"6562:7:29","nodeType":"YulIdentifier","src":"6562:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6517:20:29","nodeType":"YulIdentifier","src":"6517:20:29"},"nativeSrc":"6517:53:29","nodeType":"YulFunctionCall","src":"6517:53:29"},"variableNames":[{"name":"value1","nativeSrc":"6507:6:29","nodeType":"YulIdentifier","src":"6507:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6113:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6158:9:29","nodeType":"YulTypedName","src":"6158:9:29","type":""},{"name":"dataEnd","nativeSrc":"6169:7:29","nodeType":"YulTypedName","src":"6169:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6181:6:29","nodeType":"YulTypedName","src":"6181:6:29","type":""},{"name":"value1","nativeSrc":"6189:6:29","nodeType":"YulTypedName","src":"6189:6:29","type":""}],"src":"6113:474:29"},{"body":{"nativeSrc":"6621:152:29","nodeType":"YulBlock","src":"6621:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6638:1:29","nodeType":"YulLiteral","src":"6638:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6641:77:29","nodeType":"YulLiteral","src":"6641:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6631:6:29","nodeType":"YulIdentifier","src":"6631:6:29"},"nativeSrc":"6631:88:29","nodeType":"YulFunctionCall","src":"6631:88:29"},"nativeSrc":"6631:88:29","nodeType":"YulExpressionStatement","src":"6631:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6735:1:29","nodeType":"YulLiteral","src":"6735:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"6738:4:29","nodeType":"YulLiteral","src":"6738:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6728:6:29","nodeType":"YulIdentifier","src":"6728:6:29"},"nativeSrc":"6728:15:29","nodeType":"YulFunctionCall","src":"6728:15:29"},"nativeSrc":"6728:15:29","nodeType":"YulExpressionStatement","src":"6728:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6759:1:29","nodeType":"YulLiteral","src":"6759:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6762:4:29","nodeType":"YulLiteral","src":"6762:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6752:6:29","nodeType":"YulIdentifier","src":"6752:6:29"},"nativeSrc":"6752:15:29","nodeType":"YulFunctionCall","src":"6752:15:29"},"nativeSrc":"6752:15:29","nodeType":"YulExpressionStatement","src":"6752:15:29"}]},"name":"panic_error_0x22","nativeSrc":"6593:180:29","nodeType":"YulFunctionDefinition","src":"6593:180:29"},{"body":{"nativeSrc":"6830:269:29","nodeType":"YulBlock","src":"6830:269:29","statements":[{"nativeSrc":"6840:22:29","nodeType":"YulAssignment","src":"6840:22:29","value":{"arguments":[{"name":"data","nativeSrc":"6854:4:29","nodeType":"YulIdentifier","src":"6854:4:29"},{"kind":"number","nativeSrc":"6860:1:29","nodeType":"YulLiteral","src":"6860:1:29","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6850:3:29","nodeType":"YulIdentifier","src":"6850:3:29"},"nativeSrc":"6850:12:29","nodeType":"YulFunctionCall","src":"6850:12:29"},"variableNames":[{"name":"length","nativeSrc":"6840:6:29","nodeType":"YulIdentifier","src":"6840:6:29"}]},{"nativeSrc":"6871:38:29","nodeType":"YulVariableDeclaration","src":"6871:38:29","value":{"arguments":[{"name":"data","nativeSrc":"6901:4:29","nodeType":"YulIdentifier","src":"6901:4:29"},{"kind":"number","nativeSrc":"6907:1:29","nodeType":"YulLiteral","src":"6907:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6897:3:29","nodeType":"YulIdentifier","src":"6897:3:29"},"nativeSrc":"6897:12:29","nodeType":"YulFunctionCall","src":"6897:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6875:18:29","nodeType":"YulTypedName","src":"6875:18:29","type":""}]},{"body":{"nativeSrc":"6948:51:29","nodeType":"YulBlock","src":"6948:51:29","statements":[{"nativeSrc":"6962:27:29","nodeType":"YulAssignment","src":"6962:27:29","value":{"arguments":[{"name":"length","nativeSrc":"6976:6:29","nodeType":"YulIdentifier","src":"6976:6:29"},{"kind":"number","nativeSrc":"6984:4:29","nodeType":"YulLiteral","src":"6984:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6972:3:29","nodeType":"YulIdentifier","src":"6972:3:29"},"nativeSrc":"6972:17:29","nodeType":"YulFunctionCall","src":"6972:17:29"},"variableNames":[{"name":"length","nativeSrc":"6962:6:29","nodeType":"YulIdentifier","src":"6962:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6928:18:29","nodeType":"YulIdentifier","src":"6928:18:29"}],"functionName":{"name":"iszero","nativeSrc":"6921:6:29","nodeType":"YulIdentifier","src":"6921:6:29"},"nativeSrc":"6921:26:29","nodeType":"YulFunctionCall","src":"6921:26:29"},"nativeSrc":"6918:81:29","nodeType":"YulIf","src":"6918:81:29"},{"body":{"nativeSrc":"7051:42:29","nodeType":"YulBlock","src":"7051:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"7065:16:29","nodeType":"YulIdentifier","src":"7065:16:29"},"nativeSrc":"7065:18:29","nodeType":"YulFunctionCall","src":"7065:18:29"},"nativeSrc":"7065:18:29","nodeType":"YulExpressionStatement","src":"7065:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7015:18:29","nodeType":"YulIdentifier","src":"7015:18:29"},{"arguments":[{"name":"length","nativeSrc":"7038:6:29","nodeType":"YulIdentifier","src":"7038:6:29"},{"kind":"number","nativeSrc":"7046:2:29","nodeType":"YulLiteral","src":"7046:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7035:2:29","nodeType":"YulIdentifier","src":"7035:2:29"},"nativeSrc":"7035:14:29","nodeType":"YulFunctionCall","src":"7035:14:29"}],"functionName":{"name":"eq","nativeSrc":"7012:2:29","nodeType":"YulIdentifier","src":"7012:2:29"},"nativeSrc":"7012:38:29","nodeType":"YulFunctionCall","src":"7012:38:29"},"nativeSrc":"7009:84:29","nodeType":"YulIf","src":"7009:84:29"}]},"name":"extract_byte_array_length","nativeSrc":"6779:320:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6814:4:29","nodeType":"YulTypedName","src":"6814:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6823:6:29","nodeType":"YulTypedName","src":"6823:6:29","type":""}],"src":"6779:320:29"},{"body":{"nativeSrc":"7170:53:29","nodeType":"YulBlock","src":"7170:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7187:3:29","nodeType":"YulIdentifier","src":"7187:3:29"},{"arguments":[{"name":"value","nativeSrc":"7210:5:29","nodeType":"YulIdentifier","src":"7210:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7192:17:29","nodeType":"YulIdentifier","src":"7192:17:29"},"nativeSrc":"7192:24:29","nodeType":"YulFunctionCall","src":"7192:24:29"}],"functionName":{"name":"mstore","nativeSrc":"7180:6:29","nodeType":"YulIdentifier","src":"7180:6:29"},"nativeSrc":"7180:37:29","nodeType":"YulFunctionCall","src":"7180:37:29"},"nativeSrc":"7180:37:29","nodeType":"YulExpressionStatement","src":"7180:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7105:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7158:5:29","nodeType":"YulTypedName","src":"7158:5:29","type":""},{"name":"pos","nativeSrc":"7165:3:29","nodeType":"YulTypedName","src":"7165:3:29","type":""}],"src":"7105:118:29"},{"body":{"nativeSrc":"7383:288:29","nodeType":"YulBlock","src":"7383:288:29","statements":[{"nativeSrc":"7393:26:29","nodeType":"YulAssignment","src":"7393:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7405:9:29","nodeType":"YulIdentifier","src":"7405:9:29"},{"kind":"number","nativeSrc":"7416:2:29","nodeType":"YulLiteral","src":"7416:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7401:3:29","nodeType":"YulIdentifier","src":"7401:3:29"},"nativeSrc":"7401:18:29","nodeType":"YulFunctionCall","src":"7401:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7393:4:29","nodeType":"YulIdentifier","src":"7393:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7473:6:29","nodeType":"YulIdentifier","src":"7473:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"7486:9:29","nodeType":"YulIdentifier","src":"7486:9:29"},{"kind":"number","nativeSrc":"7497:1:29","nodeType":"YulLiteral","src":"7497:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7482:3:29","nodeType":"YulIdentifier","src":"7482:3:29"},"nativeSrc":"7482:17:29","nodeType":"YulFunctionCall","src":"7482:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7429:43:29","nodeType":"YulIdentifier","src":"7429:43:29"},"nativeSrc":"7429:71:29","nodeType":"YulFunctionCall","src":"7429:71:29"},"nativeSrc":"7429:71:29","nodeType":"YulExpressionStatement","src":"7429:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7554:6:29","nodeType":"YulIdentifier","src":"7554:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"7567:9:29","nodeType":"YulIdentifier","src":"7567:9:29"},{"kind":"number","nativeSrc":"7578:2:29","nodeType":"YulLiteral","src":"7578:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7563:3:29","nodeType":"YulIdentifier","src":"7563:3:29"},"nativeSrc":"7563:18:29","nodeType":"YulFunctionCall","src":"7563:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7510:43:29","nodeType":"YulIdentifier","src":"7510:43:29"},"nativeSrc":"7510:72:29","nodeType":"YulFunctionCall","src":"7510:72:29"},"nativeSrc":"7510:72:29","nodeType":"YulExpressionStatement","src":"7510:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7636:6:29","nodeType":"YulIdentifier","src":"7636:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"7649:9:29","nodeType":"YulIdentifier","src":"7649:9:29"},{"kind":"number","nativeSrc":"7660:2:29","nodeType":"YulLiteral","src":"7660:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7645:3:29","nodeType":"YulIdentifier","src":"7645:3:29"},"nativeSrc":"7645:18:29","nodeType":"YulFunctionCall","src":"7645:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7592:43:29","nodeType":"YulIdentifier","src":"7592:43:29"},"nativeSrc":"7592:72:29","nodeType":"YulFunctionCall","src":"7592:72:29"},"nativeSrc":"7592:72:29","nodeType":"YulExpressionStatement","src":"7592:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7229:442:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7339:9:29","nodeType":"YulTypedName","src":"7339:9:29","type":""},{"name":"value2","nativeSrc":"7351:6:29","nodeType":"YulTypedName","src":"7351:6:29","type":""},{"name":"value1","nativeSrc":"7359:6:29","nodeType":"YulTypedName","src":"7359:6:29","type":""},{"name":"value0","nativeSrc":"7367:6:29","nodeType":"YulTypedName","src":"7367:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7378:4:29","nodeType":"YulTypedName","src":"7378:4:29","type":""}],"src":"7229:442:29"},{"body":{"nativeSrc":"7775:124:29","nodeType":"YulBlock","src":"7775:124:29","statements":[{"nativeSrc":"7785:26:29","nodeType":"YulAssignment","src":"7785:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7797:9:29","nodeType":"YulIdentifier","src":"7797:9:29"},{"kind":"number","nativeSrc":"7808:2:29","nodeType":"YulLiteral","src":"7808:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7793:3:29","nodeType":"YulIdentifier","src":"7793:3:29"},"nativeSrc":"7793:18:29","nodeType":"YulFunctionCall","src":"7793:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7785:4:29","nodeType":"YulIdentifier","src":"7785:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7865:6:29","nodeType":"YulIdentifier","src":"7865:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"7878:9:29","nodeType":"YulIdentifier","src":"7878:9:29"},{"kind":"number","nativeSrc":"7889:1:29","nodeType":"YulLiteral","src":"7889:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7874:3:29","nodeType":"YulIdentifier","src":"7874:3:29"},"nativeSrc":"7874:17:29","nodeType":"YulFunctionCall","src":"7874:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7821:43:29","nodeType":"YulIdentifier","src":"7821:43:29"},"nativeSrc":"7821:71:29","nodeType":"YulFunctionCall","src":"7821:71:29"},"nativeSrc":"7821:71:29","nodeType":"YulExpressionStatement","src":"7821:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7677:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7747:9:29","nodeType":"YulTypedName","src":"7747:9:29","type":""},{"name":"value0","nativeSrc":"7759:6:29","nodeType":"YulTypedName","src":"7759:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7770:4:29","nodeType":"YulTypedName","src":"7770:4:29","type":""}],"src":"7677:222:29"},{"body":{"nativeSrc":"7933:152:29","nodeType":"YulBlock","src":"7933:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7950:1:29","nodeType":"YulLiteral","src":"7950:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"7953:77:29","nodeType":"YulLiteral","src":"7953:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7943:6:29","nodeType":"YulIdentifier","src":"7943:6:29"},"nativeSrc":"7943:88:29","nodeType":"YulFunctionCall","src":"7943:88:29"},"nativeSrc":"7943:88:29","nodeType":"YulExpressionStatement","src":"7943:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8047:1:29","nodeType":"YulLiteral","src":"8047:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"8050:4:29","nodeType":"YulLiteral","src":"8050:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8040:6:29","nodeType":"YulIdentifier","src":"8040:6:29"},"nativeSrc":"8040:15:29","nodeType":"YulFunctionCall","src":"8040:15:29"},"nativeSrc":"8040:15:29","nodeType":"YulExpressionStatement","src":"8040:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8071:1:29","nodeType":"YulLiteral","src":"8071:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"8074:4:29","nodeType":"YulLiteral","src":"8074:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8064:6:29","nodeType":"YulIdentifier","src":"8064:6:29"},"nativeSrc":"8064:15:29","nodeType":"YulFunctionCall","src":"8064:15:29"},"nativeSrc":"8064:15:29","nodeType":"YulExpressionStatement","src":"8064:15:29"}]},"name":"panic_error_0x11","nativeSrc":"7905:180:29","nodeType":"YulFunctionDefinition","src":"7905:180:29"},{"body":{"nativeSrc":"8135:147:29","nodeType":"YulBlock","src":"8135:147:29","statements":[{"nativeSrc":"8145:25:29","nodeType":"YulAssignment","src":"8145:25:29","value":{"arguments":[{"name":"x","nativeSrc":"8168:1:29","nodeType":"YulIdentifier","src":"8168:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8150:17:29","nodeType":"YulIdentifier","src":"8150:17:29"},"nativeSrc":"8150:20:29","nodeType":"YulFunctionCall","src":"8150:20:29"},"variableNames":[{"name":"x","nativeSrc":"8145:1:29","nodeType":"YulIdentifier","src":"8145:1:29"}]},{"nativeSrc":"8179:25:29","nodeType":"YulAssignment","src":"8179:25:29","value":{"arguments":[{"name":"y","nativeSrc":"8202:1:29","nodeType":"YulIdentifier","src":"8202:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8184:17:29","nodeType":"YulIdentifier","src":"8184:17:29"},"nativeSrc":"8184:20:29","nodeType":"YulFunctionCall","src":"8184:20:29"},"variableNames":[{"name":"y","nativeSrc":"8179:1:29","nodeType":"YulIdentifier","src":"8179:1:29"}]},{"nativeSrc":"8213:16:29","nodeType":"YulAssignment","src":"8213:16:29","value":{"arguments":[{"name":"x","nativeSrc":"8224:1:29","nodeType":"YulIdentifier","src":"8224:1:29"},{"name":"y","nativeSrc":"8227:1:29","nodeType":"YulIdentifier","src":"8227:1:29"}],"functionName":{"name":"add","nativeSrc":"8220:3:29","nodeType":"YulIdentifier","src":"8220:3:29"},"nativeSrc":"8220:9:29","nodeType":"YulFunctionCall","src":"8220:9:29"},"variableNames":[{"name":"sum","nativeSrc":"8213:3:29","nodeType":"YulIdentifier","src":"8213:3:29"}]},{"body":{"nativeSrc":"8253:22:29","nodeType":"YulBlock","src":"8253:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8255:16:29","nodeType":"YulIdentifier","src":"8255:16:29"},"nativeSrc":"8255:18:29","nodeType":"YulFunctionCall","src":"8255:18:29"},"nativeSrc":"8255:18:29","nodeType":"YulExpressionStatement","src":"8255:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8245:1:29","nodeType":"YulIdentifier","src":"8245:1:29"},{"name":"sum","nativeSrc":"8248:3:29","nodeType":"YulIdentifier","src":"8248:3:29"}],"functionName":{"name":"gt","nativeSrc":"8242:2:29","nodeType":"YulIdentifier","src":"8242:2:29"},"nativeSrc":"8242:10:29","nodeType":"YulFunctionCall","src":"8242:10:29"},"nativeSrc":"8239:36:29","nodeType":"YulIf","src":"8239:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"8091:191:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8122:1:29","nodeType":"YulTypedName","src":"8122:1:29","type":""},{"name":"y","nativeSrc":"8125:1:29","nodeType":"YulTypedName","src":"8125:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8131:3:29","nodeType":"YulTypedName","src":"8131:3:29","type":""}],"src":"8091:191:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PikaPay_$7473_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaPay_$7473_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PikaPay_$7473__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea2646970667358221220b4e71c62684899feb18d46be648c751d428f2e8a2edec2027a66ba146e42d9a164736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE7 SHR PUSH3 0x684899 INVALID 0xB1 DUP14 CHAINID 0xBE PUSH5 0x8C751D428F 0x2E DUP11 0x2E 0xDE 0xC2 MUL PUSH27 0x66BA146E42D9A164736F6C634300081B0033000000000000000000 ","sourceMap":"270:1120:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:22:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;325:22:27:-;;;;;;;;;;;;;:::o;353:::-;;;;:::o;3004:116:6:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:60::-;4883:3;4904:5;4897:12;;4855:60;;;:::o;4921:142::-;4971:9;5004:53;5022:34;5031:24;5049:5;5031:24;:::i;:::-;5022:34;:::i;:::-;5004:53;:::i;:::-;4991:66;;4921:142;;;:::o;5069:126::-;5119:9;5152:37;5183:5;5152:37;:::i;:::-;5139:50;;5069:126;;;:::o;5201:142::-;5267:9;5300:37;5331:5;5300:37;:::i;:::-;5287:50;;5201:142;;;:::o;5349:163::-;5452:53;5499:5;5452:53;:::i;:::-;5447:3;5440:66;5349:163;;:::o;5518:254::-;5627:4;5665:2;5654:9;5650:18;5642:26;;5678:87;5762:1;5751:9;5747:17;5738:6;5678:87;:::i;:::-;5518:254;;;;:::o;5778:329::-;5837:6;5886:2;5874:9;5865:7;5861:23;5857:32;5854:119;;;5892:79;;:::i;:::-;5854:119;6012:1;6037:53;6082:7;6073:6;6062:9;6058:22;6037:53;:::i;:::-;6027:63;;5983:117;5778:329;;;;:::o;6113:474::-;6181:6;6189;6238:2;6226:9;6217:7;6213:23;6209:32;6206:119;;;6244:79;;:::i;:::-;6206:119;6364:1;6389:53;6434:7;6425:6;6414:9;6410:22;6389:53;:::i;:::-;6379:63;;6335:117;6491:2;6517:53;6562:7;6553:6;6542:9;6538:22;6517:53;:::i;:::-;6507:63;;6462:118;6113:474;;;;;:::o;6593:180::-;6641:77;6638:1;6631:88;6738:4;6735:1;6728:15;6762:4;6759:1;6752:15;6779:320;6823:6;6860:1;6854:4;6850:12;6840:22;;6907:1;6901:4;6897:12;6928:18;6918:81;;6984:4;6976:6;6972:17;6962:27;;6918:81;7046:2;7038:6;7035:14;7015:18;7012:38;7009:84;;7065:18;;:::i;:::-;7009:84;6830:269;6779:320;;;:::o;7105:118::-;7192:24;7210:5;7192:24;:::i;:::-;7187:3;7180:37;7105:118;;:::o;7229:442::-;7378:4;7416:2;7405:9;7401:18;7393:26;;7429:71;7497:1;7486:9;7482:17;7473:6;7429:71;:::i;:::-;7510:72;7578:2;7567:9;7563:18;7554:6;7510:72;:::i;:::-;7592;7660:2;7649:9;7645:18;7636:6;7592:72;:::i;:::-;7229:442;;;;;;:::o;7677:222::-;7770:4;7808:2;7797:9;7793:18;7785:26;;7821:71;7889:1;7878:9;7874:17;7865:6;7821:71;:::i;:::-;7677:222;;;;:::o;7905:180::-;7953:77;7950:1;7943:88;8050:4;8047:1;8040:15;8074:4;8071:1;8064:15;8091:191;8131:3;8150:20;8168:1;8150:20;:::i;:::-;8145:25;;8184:20;8202:1;8184:20;:::i;:::-;8179:25;;8227:1;8224;8220:9;8213:16;;8248:3;8245:1;8242:10;8239:36;;;8255:18;;:::i;:::-;8239:36;8091:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchId()":"4972134a","decimals()":"313ce567","name()":"06fdde03","pikaPay()":"3804eea0","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PikaPay\",\"name\":\"_pikaPay\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pikaPay\",\"outputs\":[{\"internalType\":\"contract PikaPay\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PikaPay.sol\":\"PikaFractionalAttestationToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/PikaPay.sol\":{\"keccak256\":\"0x558b0db66c0f9f7da7f18439e3c41a4e5eeb217515ce09a8354b804b9437a378\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11a2484be0e8650a7584b82c30dc3ed3bfee7cf70234e120935b258414ea533a\",\"dweb:/ipfs/QmZJ3rsFTQ6XtMftAz2oBWuUAkdaE2Fq4w1L7bxLoiErgJ\"]}},\"version\":1}"},"PikaPay":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"attestation","type":"string"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"}],"name":"AttestedWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"attestationDetails","type":"string"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"}],"name":"BatchCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"}],"name":"BatchFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"string","name":"updatedAttestationDetails","type":"string"}],"name":"BatchUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"}],"name":"PrivateWithdrawal","type":"event"},{"inputs":[],"name":"USDT","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"batchRegistry","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"contract PikaFractionalAttestationToken","name":"token","type":"address"},{"internalType":"string","name":"attestationDetails","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"remainingSupply","type":"uint256"},{"internalType":"bool","name":"isFinalized","type":"bool"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"beneficiaryBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_attestationDetails","type":"string"},{"internalType":"uint256","name":"_depositAmount","type":"uint256"}],"name":"createNewBatchWithAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"string","name":"_newAttestationDetails","type":"string"}],"name":"modifyBatchAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalBatches","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"address","name":"_newOwner","type":"address"},{"internalType":"uint256","name":"_transferAmount","type":"uint256"}],"name":"transferBatchOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_withdrawAmount","type":"uint256"},{"internalType":"string","name":"_metadata","type":"string"}],"name":"withdrawWithAttestationProof","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_withdrawAmount","type":"uint256"},{"internalType":"string","name":"_metadata","type":"string"}],"name":"withdrawWithoutAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405260008055348015601357600080fd5b5061417e806100236000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a913d7b911610066578063a913d7b914610138578063bdecd21b14610154578063c54e44eb14610170578063c69ac7d31461018e578063f4122807146101aa57610093565b80633d2d07e2146100985780634f4ed78f146100c857806350ba8364146100fe57806369ff6abb1461011a575b600080fd5b6100b260048036038101906100ad919061143a565b6101c6565b6040516100bf9190611489565b60405180910390f35b6100e260048036038101906100dd91906114a4565b6101eb565b6040516100f597969594939291906115ea565b60405180910390f35b610118600480360381019061011391906116c5565b610302565b005b61012261062b565b60405161012f9190611489565b60405180910390f35b610152600480360381019061014d9190611739565b610631565b005b61016e60048036038101906101699190611799565b61095f565b005b610178610c94565b604051610185919061180d565b60405180910390f35b6101a860048036038101906101a391906116c5565b610cac565b005b6101c460048036038101906101bf9190611828565b610f2d565b005b6002602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461023a906118b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610266906118b7565b80156102b35780601f10610288576101008083540402835291602001916102b3565b820191906000526020600020905b81548152906001019060200180831161029657829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b8360008111801561031557506000548111155b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90611934565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff16156103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b4906119c6565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790611a58565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104b09190611aa7565b92505081905550848160040160008282546104cb9190611aa7565b9250508190555061051133867348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff166110e49092919063ffffffff16565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610570929190611adb565b6020604051808303816000875af115801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190611b30565b503373ffffffffffffffffffffffffffffffffffffffff167f8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d7888787846002018888604051610605959493929190611c32565b60405180910390a260008160040154036106235761062286611163565b5b505050505050565b60005481565b60008111610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611cf9565b60405180910390fd5b60016000808282546106869190611d19565b925050819055506106ce3330837348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff1661126b909392919063ffffffff16565b600030600054836040516106e19061138f565b6106ed93929190611d6e565b604051809103906000f080158015610709573d6000803e3d6000fd5b5090506040518060e0016040528060005481526020018273ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018381526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908161082e9190611f61565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600260008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f24d4dd2cd73442ce7ba8d012afd0ab2601a6b3c593b368a0a91b1bac5d5d27f26000548686866040516109519493929190612033565b60405180910390a250505050565b8260008111801561097257506000548111155b6109b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a890611934565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d906120bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc9061212b565b60405180910390fd5b826002600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f906121bd565b60405180910390fd5b826002600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb89190611aa7565b92505081905550826002600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1f9190611d19565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f06f354ec7b9d2ca4e029f73ccb9119943a48c3295704dd66ca8beda0c7bae33f8786604051610c859291906121dd565b60405180910390a35050505050565b7348db5c1155836de945fb82b6a9cf82d91ac21f1681565b83600081118015610cbf57506000548111155b610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf590611934565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff1615610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e906119c6565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df190611a58565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e5a9190611aa7565b9250508190555084816004016000828254610e759190611aa7565b92505081905550610ebb33867348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff166110e49092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c6187878787604051610f079493929190612206565b60405180910390a26000816004015403610f2557610f2486611163565b5b505050505050565b82600081118015610f4057506000548111155b610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690611934565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b906120bf565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff161561108d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611084906122b8565b60405180910390fd5b84848260020191826110a09291906122e3565b507fcc1163b9f5b7a48feb09e3106d97fe333e2b9b8d72544e2f9d4470f483e5214e8686866040516110d4939291906123b3565b60405180910390a1505050505050565b61115e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611117929190611adb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ed565b505050565b60006001600083815260200190815260200160002090508060050160009054906101000a900460ff16156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390612431565b60405180910390fd5b6000816004015414611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a906124c3565b60405180910390fd5b60018160050160006101000a81548160ff0219169083151502179055507f5cff112f1cb588779b4e6aae6baf0d738747fcf132f0ff202adcec605f9cabdf8260405161125f9190611489565b60405180910390a15050565b6112e7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016112a0939291906124e3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ed565b50505050565b600080602060008451602086016000885af180611310576040513d6000823e3d81fd5b3d92506000519150506000821461132b576001811415611347565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561138957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611380919061251a565b60405180910390fd5b50505050565b611c138061253683390190565b600080fd5b600080fd5b6000819050919050565b6113b9816113a6565b81146113c457600080fd5b50565b6000813590506113d6816113b0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611407826113dc565b9050919050565b611417816113fc565b811461142257600080fd5b50565b6000813590506114348161140e565b92915050565b600080604083850312156114515761145061139c565b5b600061145f858286016113c7565b925050602061147085828601611425565b9150509250929050565b611483816113a6565b82525050565b600060208201905061149e600083018461147a565b92915050565b6000602082840312156114ba576114b961139c565b5b60006114c8848285016113c7565b91505092915050565b6000819050919050565b60006114f66114f16114ec846113dc565b6114d1565b6113dc565b9050919050565b6000611508826114db565b9050919050565b600061151a826114fd565b9050919050565b61152a8161150f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156a57808201518184015260208101905061154f565b60008484015250505050565b6000601f19601f8301169050919050565b600061159282611530565b61159c818561153b565b93506115ac81856020860161154c565b6115b581611576565b840191505092915050565b60008115159050919050565b6115d5816115c0565b82525050565b6115e4816113fc565b82525050565b600060e0820190506115ff600083018a61147a565b61160c6020830189611521565b818103604083015261161e8188611587565b905061162d606083018761147a565b61163a608083018661147a565b61164760a08301856115cc565b61165460c08301846115db565b98975050505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261168557611684611660565b5b8235905067ffffffffffffffff8111156116a2576116a1611665565b5b6020830191508360018202830111156116be576116bd61166a565b5b9250929050565b600080600080606085870312156116df576116de61139c565b5b60006116ed878288016113c7565b94505060206116fe878288016113c7565b935050604085013567ffffffffffffffff81111561171f5761171e6113a1565b5b61172b8782880161166f565b925092505092959194509250565b6000806000604084860312156117525761175161139c565b5b600084013567ffffffffffffffff8111156117705761176f6113a1565b5b61177c8682870161166f565b9350935050602061178f868287016113c7565b9150509250925092565b6000806000606084860312156117b2576117b161139c565b5b60006117c0868287016113c7565b93505060206117d186828701611425565b92505060406117e2868287016113c7565b9150509250925092565b60006117f7826114fd565b9050919050565b611807816117ec565b82525050565b600060208201905061182260008301846117fe565b92915050565b6000806000604084860312156118415761184061139c565b5b600061184f868287016113c7565b935050602084013567ffffffffffffffff8111156118705761186f6113a1565b5b61187c8682870161166f565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118cf57607f821691505b6020821081036118e2576118e1611888565b5b50919050565b7f496e76616c696420626174636820494400000000000000000000000000000000600082015250565b600061191e60108361153b565b9150611929826118e8565b602082019050919050565b6000602082019050818103600083015261194d81611911565b9050919050565b7f42617463682068617320616c7265616479206265656e2066696e616c697a656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006119b060218361153b565b91506119bb82611954565b604082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b7f496e73756666696369656e742062616c616e636520666f72207769746864726160008201527f77616c2e00000000000000000000000000000000000000000000000000000000602082015250565b6000611a4260248361153b565b9150611a4d826119e6565b604082019050919050565b60006020820190508181036000830152611a7181611a35565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ab2826113a6565b9150611abd836113a6565b9250828203905081811115611ad557611ad4611a78565b5b92915050565b6000604082019050611af060008301856115db565b611afd602083018461147a565b9392505050565b611b0d816115c0565b8114611b1857600080fd5b50565b600081519050611b2a81611b04565b92915050565b600060208284031215611b4657611b4561139c565b5b6000611b5484828501611b1b565b91505092915050565b60008190508160005260206000209050919050565b60008154611b7f816118b7565b611b89818661153b565b94506001821660008114611ba45760018114611bba57611bed565b60ff198316865281151560200286019350611bed565b611bc385611b5d565b60005b83811015611be557815481890152600182019150602081019050611bc6565b808801955050505b50505092915050565b82818337600083830152505050565b6000611c11838561153b565b9350611c1e838584611bf6565b611c2783611576565b840190509392505050565b6000608082019050611c47600083018861147a565b611c54602083018761147a565b8181036040830152611c668186611b72565b90508181036060830152611c7b818486611c05565b90509695505050505050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000611ce360258361153b565b9150611cee82611c87565b604082019050919050565b60006020820190508181036000830152611d1281611cd6565b9050919050565b6000611d24826113a6565b9150611d2f836113a6565b9250828201905080821115611d4757611d46611a78565b5b92915050565b6000611d58826114fd565b9050919050565b611d6881611d4d565b82525050565b6000606082019050611d836000830186611d5f565b611d90602083018561147a565b611d9d604083018461147a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611de4565b611e2b8683611de4565b95508019841693508086168417925050509392505050565b6000611e5e611e59611e54846113a6565b6114d1565b6113a6565b9050919050565b6000819050919050565b611e7883611e43565b611e8c611e8482611e65565b848454611df1565b825550505050565b600090565b611ea1611e94565b611eac818484611e6f565b505050565b5b81811015611ed057611ec5600082611e99565b600181019050611eb2565b5050565b601f821115611f1557611ee681611b5d565b611eef84611dd4565b81016020851015611efe578190505b611f12611f0a85611dd4565b830182611eb1565b50505b505050565b600082821c905092915050565b6000611f3860001984600802611f1a565b1980831691505092915050565b6000611f518383611f27565b9150826002028217905092915050565b611f6a82611530565b67ffffffffffffffff811115611f8357611f82611da5565b5b611f8d82546118b7565b611f98828285611ed4565b600060209050601f831160018114611fcb5760008415611fb9578287015190505b611fc38582611f45565b86555061202b565b601f198416611fd986611b5d565b60005b8281101561200157848901518255600182019150602085019450602081019050611fdc565b8683101561201e578489015161201a601f891682611f27565b8355505b6001600288020188555050505b505050505050565b6000606082019050612048600083018761147a565b818103602083015261205b818587611c05565b905061206a604083018461147a565b95945050505050565b7f43616c6c6572206973206e6f7420746865206261746368206f776e6572000000600082015250565b60006120a9601d8361153b565b91506120b482612073565b602082019050919050565b600060208201905081810360008301526120d88161209c565b9050919050565b7f496e76616c6964206e6577206f776e6572206164647265737300000000000000600082015250565b600061211560198361153b565b9150612120826120df565b602082019050919050565b6000602082019050818103600083015261214481612108565b9050919050565b7f496e73756666696369656e742062616c616e636520666f72207472616e73666560008201527f722e000000000000000000000000000000000000000000000000000000000000602082015250565b60006121a760228361153b565b91506121b28261214b565b604082019050919050565b600060208201905081810360008301526121d68161219a565b9050919050565b60006040820190506121f2600083018561147a565b6121ff602083018461147a565b9392505050565b600060608201905061221b600083018761147a565b612228602083018661147a565b818103604083015261223b818486611c05565b905095945050505050565b7f43616e6e6f7420757064617465206174746573746174696f6e20666f7220612060008201527f66696e616c697a65642062617463682e00000000000000000000000000000000602082015250565b60006122a260308361153b565b91506122ad82612246565b604082019050919050565b600060208201905081810360008301526122d181612295565b9050919050565b600082905092915050565b6122ed83836122d8565b67ffffffffffffffff81111561230657612305611da5565b5b61231082546118b7565b61231b828285611ed4565b6000601f83116001811461234a5760008415612338578287013590505b6123428582611f45565b8655506123aa565b601f19841661235886611b5d565b60005b828110156123805784890135825560018201915060208501945060208101905061235b565b8683101561239d5784890135612399601f891682611f27565b8355505b6001600288020188555050505b50505050505050565b60006040820190506123c8600083018661147a565b81810360208301526123db818486611c05565b9050949350505050565b7f426174636820697320616c72656164792066696e616c697a65642e0000000000600082015250565b600061241b601b8361153b565b9150612426826123e5565b602082019050919050565b6000602082019050818103600083015261244a8161240e565b9050919050565b7f546865726520617265207374696c6c20756e77697468647261776e20746f6b6560008201527f6e732e0000000000000000000000000000000000000000000000000000000000602082015250565b60006124ad60238361153b565b91506124b882612451565b604082019050919050565b600060208201905081810360008301526124dc816124a0565b9050919050565b60006060820190506124f860008301866115db565b61250560208301856115db565b612512604083018461147a565b949350505050565b600060208201905061252f60008301846115db565b9291505056fe608060405234801561001057600080fd5b50604051611c13380380611c13833981810160405281019061003291906106da565b6100418261015b60201b60201c565b60405160200161005191906107c4565b6040516020818303038152906040526040518060400160405280600481526020017f504641540000000000000000000000000000000000000000000000000000000081525081600390816100a59190610a25565b5080600490816100b59190610a25565b505050600081116100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f290610b7a565b60405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600681905550610153338261022f60201b60201c565b505050610cb7565b606060006001610170846102b760201b60201c565b01905060008167ffffffffffffffff81111561018f5761018e6107ea565b5b6040519080825280601f01601f1916602001820160405280156101c15781602001600182028036833780820191505090505b509050600082602001820190505b600115610224578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161021857610217610b9a565b5b049450600085036101cf575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102989190610bd8565b60405180910390fd5b6102b36000838361040a60201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610315577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161030b5761030a610b9a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610352576d04ee2d6d415b85acef8100000000838161034857610347610b9a565b5b0492506020810190505b662386f26fc10000831061038157662386f26fc10000838161037757610376610b9a565b5b0492506010810190505b6305f5e10083106103aa576305f5e10083816103a05761039f610b9a565b5b0492506008810190505b61271083106103cf5761271083816103c5576103c4610b9a565b5b0492506004810190505b606483106103f257606483816103e8576103e7610b9a565b5b0492506002810190505b600a8310610401576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361045c5780600260008282546104509190610c22565b9250508190555061052f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156104e8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104df93929190610c65565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361057857806002600082825403925050819055506105c5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106229190610c9c565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065f82610634565b9050919050565b600061067182610654565b9050919050565b61068181610666565b811461068c57600080fd5b50565b60008151905061069e81610678565b92915050565b6000819050919050565b6106b7816106a4565b81146106c257600080fd5b50565b6000815190506106d4816106ae565b92915050565b6000806000606084860312156106f3576106f261062f565b5b60006107018682870161068f565b9350506020610712868287016106c5565b9250506040610723868287016106c5565b9150509250925092565b7f50696b61506179204672616374696f6e616c2042617463682023000000000000815250565b600081519050919050565b600081905092915050565b60005b8381101561078757808201518184015260208101905061076c565b60008484015250505050565b600061079e82610753565b6107a8818561075e565b93506107b8818560208601610769565b80840191505092915050565b60006107cf8261072d565b601a820191506107df8284610793565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086057607f821691505b60208210810361087357610872610819565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261089e565b6108e5868361089e565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092261091d610918846106a4565b6108fd565b6106a4565b9050919050565b6000819050919050565b61093c83610907565b61095061094882610929565b8484546108ab565b825550505050565b600090565b610965610958565b610970818484610933565b505050565b5b818110156109945761098960008261095d565b600181019050610976565b5050565b601f8211156109d9576109aa81610879565b6109b38461088e565b810160208510156109c2578190505b6109d66109ce8561088e565b830182610975565b50505b505050565b600082821c905092915050565b60006109fc600019846008026109de565b1980831691505092915050565b6000610a1583836109eb565b9150826002028217905092915050565b610a2e82610753565b67ffffffffffffffff811115610a4757610a466107ea565b5b610a518254610848565b610a5c828285610998565b600060209050601f831160018114610a8f5760008415610a7d578287015190505b610a878582610a09565b865550610aef565b601f198416610a9d86610879565b60005b82811015610ac557848901518255600182019150602085019450602081019050610aa0565b86831015610ae25784890151610ade601f8916826109eb565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f496e697469616c20737570706c79206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610b64602583610af7565b9150610b6f82610b08565b604082019050919050565b60006020820190508181036000830152610b9381610b57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610bd281610654565b82525050565b6000602082019050610bed6000830184610bc9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2d826106a4565b9150610c38836106a4565b9250828201905080821115610c5057610c4f610bf3565b5b92915050565b610c5f816106a4565b82525050565b6000606082019050610c7a6000830186610bc9565b610c876020830185610c56565b610c946040830184610c56565b949350505050565b6000602082019050610cb16000830184610c56565b92915050565b610f4d80610cc66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea2646970667358221220b4e71c62684899feb18d46be648c751d428f2e8a2edec2027a66ba146e42d9a164736f6c634300081b0033a264697066735822122028d9d2aa3b890aaf97add8e4eb0fbfbe2063d2d266e9c215eccfbc8fbcb7108b64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417E DUP1 PUSH2 0x23 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA913D7B9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA913D7B9 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xBDECD21B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xC69AC7D3 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF4122807 EQ PUSH2 0x1AA JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3D2D07E2 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x4F4ED78F EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x50BA8364 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x69FF6ABB EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x23A SWAP1 PUSH2 0x18B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x288 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x296 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x315 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x511 CALLER DUP7 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EB386EA7CBDB4A91109CEA5FED53B6B02F667C149086A609AD4347FB0A5D788 DUP8 DUP8 DUP5 PUSH1 0x2 ADD DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x605 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x623 JUMPI PUSH2 0x622 DUP7 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6CE CALLER ADDRESS DUP4 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x0 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH2 0x6ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24D4DD2CD73442CE7BA8D012AFD0AB2601A6B3C593B368A0A91B1BAC5D5D27F2 PUSH1 0x0 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x972 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x9B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F354EC7B9D2CA4E029F73CCB9119943A48C3295704DD66CA8BEDA0C7BAE33F DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC85 SWAP3 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 DUP2 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xCBF JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEBB CALLER DUP7 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB27B8AED46D863AA21F1C0DD0CA6804E332CE068329761DE4584F4F59740C61 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF07 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0xF25 JUMPI PUSH2 0xF24 DUP7 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xF40 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST POP PUSH32 0xCC1163B9F5B7A48FEB09E3106D97FE333E2B9B8D72544E2F9D4470F483E5214E DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x115E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1117 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x1213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP1 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5CFF112F1CB588779B4E6AAE6BAF0D738747FCF132F0FF202ADCEC605F9CABDF DUP3 PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x132B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1389 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x251A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C13 DUP1 PUSH2 0x2536 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x13A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D6 DUP2 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1434 DUP2 PUSH2 0x140E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1451 JUMPI PUSH2 0x1450 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x145F DUP6 DUP3 DUP7 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1470 DUP6 DUP3 DUP7 ADD PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1483 DUP2 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP5 DUP3 DUP6 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH2 0x14F1 PUSH2 0x14EC DUP5 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151A DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x150F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1592 DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x159C DUP2 DUP6 PUSH2 0x153B JUMP JUMPDEST SWAP4 POP PUSH2 0x15AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154C JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D5 DUP2 PUSH2 0x15C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15E4 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1521 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x161E DUP2 DUP9 PUSH2 0x1587 JUMP JUMPDEST SWAP1 POP PUSH2 0x162D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x163A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1647 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15CC JUMP JUMPDEST PUSH2 0x1654 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x15DB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x1665 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16FE DUP8 DUP3 DUP9 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x172B DUP8 DUP3 DUP9 ADD PUSH2 0x166F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH2 0x1751 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x177C DUP7 DUP3 DUP8 ADD PUSH2 0x166F JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x178F DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C0 DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17D1 DUP7 DUP3 DUP8 ADD PUSH2 0x1425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17E2 DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F7 DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x187C DUP7 DUP3 DUP8 ADD PUSH2 0x166F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1888 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420626174636820494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191E PUSH1 0x10 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1929 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194D DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463682068617320616C7265616479206265656E2066696E616C697A6564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x21 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19DF DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722077697468647261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616C2E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH1 0x24 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4D DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 DUP3 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABD DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0D DUP2 PUSH2 0x15C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B2A DUP2 PUSH2 0x1B04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B54 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1B7F DUP2 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1B89 DUP2 DUP7 PUSH2 0x153B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1BA4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1BBA JUMPI PUSH2 0x1BED JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1BC3 DUP6 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE5 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC6 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C11 DUP4 DUP6 PUSH2 0x153B JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1E DUP4 DUP6 DUP5 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1C27 DUP4 PUSH2 0x1576 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C47 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1C54 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 DUP7 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE3 PUSH1 0x25 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP3 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D12 DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D24 DUP3 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1D90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1D9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1E21 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1E2B DUP7 DUP4 PUSH2 0x1DE4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E PUSH2 0x1E59 PUSH2 0x1E54 DUP5 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E78 DUP4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x1E84 DUP3 PUSH2 0x1E65 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1DF1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1EAC DUP2 DUP5 DUP5 PUSH2 0x1E6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1EC5 PUSH1 0x0 DUP3 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1EE6 DUP2 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x1EEF DUP5 PUSH2 0x1DD4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1EFE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1F12 PUSH2 0x1F0A DUP6 PUSH2 0x1DD4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1EB1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1F1A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 DUP4 DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F6A DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F83 JUMPI PUSH2 0x1F82 PUSH2 0x1DA5 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8D DUP3 SLOAD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1F98 DUP3 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1FB9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1FC3 DUP6 DUP3 PUSH2 0x1F45 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x202B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1FD9 DUP7 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2001 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FDC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x201E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x201A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F27 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x205B DUP2 DUP6 DUP8 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP PUSH2 0x206A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206261746368206F776E6572000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A9 PUSH1 0x1D DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x20B4 DUP3 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D8 DUP2 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2115 PUSH1 0x19 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x2120 DUP3 PUSH2 0x20DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2144 DUP2 PUSH2 0x2108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F72207472616E736665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A7 PUSH1 0x22 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x21B2 DUP3 PUSH2 0x214B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D6 DUP2 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x21FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x221B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x2228 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x223B DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420757064617465206174746573746174696F6E20666F72206120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x66696E616C697A65642062617463682E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A2 PUSH1 0x30 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x22AD DUP3 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D1 DUP2 PUSH2 0x2295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22ED DUP4 DUP4 PUSH2 0x22D8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2306 JUMPI PUSH2 0x2305 PUSH2 0x1DA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2310 DUP3 SLOAD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x231B DUP3 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2338 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x2342 DUP6 DUP3 PUSH2 0x1F45 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2358 DUP7 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2380 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x235B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x239D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x2399 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F27 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23C8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23DB DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426174636820697320616C72656164792066696E616C697A65642E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241B PUSH1 0x1B DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x2426 DUP3 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x244A DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865726520617265207374696C6C20756E77697468647261776E20746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E732E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD PUSH1 0x23 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x24B8 DUP3 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DC DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x2505 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x2512 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x252F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C13 CODESIZE SUB DUP1 PUSH2 0x1C13 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x41 DUP3 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5046415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x153 CALLER DUP3 PUSH2 0x22F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x170 DUP5 PUSH2 0x2B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F JUMPI PUSH2 0x18E PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x224 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x218 JUMPI PUSH2 0x217 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1CF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x40A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x315 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x352 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x381 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3AA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3CF JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3F2 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x401 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x578 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5C5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65F DUP3 PUSH2 0x634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 DUP3 PUSH2 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH2 0x666 JUMP JUMPDEST DUP2 EQ PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x69E DUP2 PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D4 DUP2 PUSH2 0x6AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6F2 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP7 DUP3 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x712 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x723 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B61506179204672616374696F6E616C2042617463682023000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x7A8 DUP2 DUP6 PUSH2 0x75E JUMP JUMPDEST SWAP4 POP PUSH2 0x7B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x769 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP3 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP2 POP PUSH2 0x7DF DUP3 DUP5 PUSH2 0x793 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x860 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x819 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8E5 DUP7 DUP4 PUSH2 0x89E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 PUSH2 0x91D PUSH2 0x918 DUP5 PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP4 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x950 PUSH2 0x948 DUP3 PUSH2 0x929 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x965 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x970 DUP2 DUP5 DUP5 PUSH2 0x933 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x994 JUMPI PUSH2 0x989 PUSH1 0x0 DUP3 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x976 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D9 JUMPI PUSH2 0x9AA DUP2 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x9B3 DUP5 PUSH2 0x88E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9D6 PUSH2 0x9CE DUP6 PUSH2 0x88E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x975 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9DE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP4 DUP4 PUSH2 0x9EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA46 PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH2 0xA51 DUP3 SLOAD PUSH2 0x848 JUMP JUMPDEST PUSH2 0xA5C DUP3 DUP3 DUP6 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA8F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA7D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA87 DUP6 DUP3 PUSH2 0xA09 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA9D DUP7 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAE2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xADE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C79206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 PUSH1 0x25 DUP4 PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP3 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB93 DUP2 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x654 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2D DUP3 PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC7A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xC87 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0xC94 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH2 0xCC6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE7 SHR PUSH3 0x684899 INVALID 0xB1 DUP14 CHAINID 0xBE PUSH5 0x8C751D428F 0x2E DUP11 0x2E 0xDE 0xC2 MUL PUSH27 0x66BA146E42D9A164736F6C634300081B0033A26469706673582212 KECCAK256 0x28 0xD9 0xD2 0xAA EXTCODESIZE DUP10 EXP 0xAF SWAP8 0xAD 0xD8 0xE4 0xEB 0xF 0xBF 0xBE KECCAK256 PUSH4 0xD2D266E9 0xC2 ISZERO 0xEC 0xCF 0xBC DUP16 0xBC 0xB7 LT DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1392:7756:27:-:0;;;2046:1;2016:31;;1392:7756;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@USDT_7052":{"entryPoint":3220,"id":7052,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1577":{"entryPoint":4845,"id":1577,"parameterSlots":2,"returnSlots":0},"@batchRegistry_6988":{"entryPoint":491,"id":6988,"parameterSlots":0,"returnSlots":0},"@beneficiaryBalances_6994":{"entryPoint":454,"id":6994,"parameterSlots":0,"returnSlots":0},"@createNewBatchWithAttestation_7160":{"entryPoint":1585,"id":7160,"parameterSlots":3,"returnSlots":0},"@finalizeBatch_7433":{"entryPoint":4451,"id":7433,"parameterSlots":1,"returnSlots":0},"@modifyBatchAttestation_7472":{"entryPoint":3885,"id":7472,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1282":{"entryPoint":4715,"id":1282,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1255":{"entryPoint":4324,"id":1255,"parameterSlots":3,"returnSlots":0},"@totalBatches_6983":{"entryPoint":1579,"id":6983,"parameterSlots":0,"returnSlots":0},"@transferBatchOwnership_7223":{"entryPoint":2399,"id":7223,"parameterSlots":3,"returnSlots":0},"@withdrawWithAttestationProof_7315":{"entryPoint":770,"id":7315,"parameterSlots":4,"returnSlots":0},"@withdrawWithoutAttestation_7395":{"entryPoint":3244,"id":7395,"parameterSlots":4,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":5743,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":5063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_uint256":{"entryPoint":5945,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":5284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_uint256":{"entryPoint":6041,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_calldata_ptr":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr":{"entryPoint":5829,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5595,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5580,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_ERC20_$914_to_t_address_fromStack":{"entryPoint":6142,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address_fromStack":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack":{"entryPoint":7519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7173,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":7026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6_to_t_string_memory_ptr_fromStack":{"entryPoint":7382,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d_to_t_string_memory_ptr_fromStack":{"entryPoint":6563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0_to_t_string_memory_ptr_fromStack":{"entryPoint":9376,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764_to_t_string_memory_ptr_fromStack":{"entryPoint":8602,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741_to_t_string_memory_ptr_fromStack":{"entryPoint":6709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16_to_t_string_memory_ptr_fromStack":{"entryPoint":9230,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222_to_t_string_memory_ptr_fromStack":{"entryPoint":8456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b_to_t_string_memory_ptr_fromStack":{"entryPoint":6417,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9_to_t_string_memory_ptr_fromStack":{"entryPoint":8348,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae_to_t_string_memory_ptr_fromStack":{"entryPoint":8853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":9443,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6875,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_ERC20_$914__to_t_address__fromStack_reversed":{"entryPoint":6157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_PikaPay_$7473_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7534,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7417,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9411,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6452,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8888,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$6960_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed":{"entryPoint":5610,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9139,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":8243,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8669,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8710,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7218,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":8920,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5424,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5435,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6823,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":7892,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5116,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5568,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5030,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":7857,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_ERC20_$914_to_t_address":{"entryPoint":6124,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address":{"entryPoint":5391,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PikaPay_$7473_to_t_address":{"entryPoint":7501,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5373,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5339,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":7747,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":8931,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":8033,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7158,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5452,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":7636,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6327,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":8005,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":5329,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":7975,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6776,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6280,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7589,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":7781,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5733,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5728,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5738,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5025,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5020,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5494,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":7652,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":7833,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6":{"entryPoint":7303,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d":{"entryPoint":6484,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0":{"entryPoint":9297,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764":{"entryPoint":8523,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16":{"entryPoint":9189,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222":{"entryPoint":8415,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b":{"entryPoint":6376,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9":{"entryPoint":8307,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae":{"entryPoint":8774,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":7665,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":7791,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5134,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6916,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5040,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":7828,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:33405:29","nodeType":"YulBlock","src":"0:33405:29","statements":[{"body":{"nativeSrc":"47:35:29","nodeType":"YulBlock","src":"47:35:29","statements":[{"nativeSrc":"57:19:29","nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:29","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:29","nodeType":"YulIdentifier","src":"67:5:29"},"nativeSrc":"67:9:29","nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:29","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:29","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nativeSrc":"177:28:29","nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:29","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:29","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:29","nodeType":"YulIdentifier","src":"187:6:29"},"nativeSrc":"187:12:29","nodeType":"YulFunctionCall","src":"187:12:29"},"nativeSrc":"187:12:29","nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:29","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nativeSrc":"300:28:29","nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:29","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:29","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:29","nodeType":"YulIdentifier","src":"310:6:29"},"nativeSrc":"310:12:29","nodeType":"YulFunctionCall","src":"310:12:29"},"nativeSrc":"310:12:29","nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:29","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nativeSrc":"379:32:29","nodeType":"YulBlock","src":"379:32:29","statements":[{"nativeSrc":"389:16:29","nodeType":"YulAssignment","src":"389:16:29","value":{"name":"value","nativeSrc":"400:5:29","nodeType":"YulIdentifier","src":"400:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:29","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:29","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:29","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:77:29"},{"body":{"nativeSrc":"460:79:29","nodeType":"YulBlock","src":"460:79:29","statements":[{"body":{"nativeSrc":"517:16:29","nodeType":"YulBlock","src":"517:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:29","nodeType":"YulLiteral","src":"526:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:29","nodeType":"YulLiteral","src":"529:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:29","nodeType":"YulIdentifier","src":"519:6:29"},"nativeSrc":"519:12:29","nodeType":"YulFunctionCall","src":"519:12:29"},"nativeSrc":"519:12:29","nodeType":"YulExpressionStatement","src":"519:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:29","nodeType":"YulIdentifier","src":"483:5:29"},{"arguments":[{"name":"value","nativeSrc":"508:5:29","nodeType":"YulIdentifier","src":"508:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:29","nodeType":"YulIdentifier","src":"490:17:29"},"nativeSrc":"490:24:29","nodeType":"YulFunctionCall","src":"490:24:29"}],"functionName":{"name":"eq","nativeSrc":"480:2:29","nodeType":"YulIdentifier","src":"480:2:29"},"nativeSrc":"480:35:29","nodeType":"YulFunctionCall","src":"480:35:29"}],"functionName":{"name":"iszero","nativeSrc":"473:6:29","nodeType":"YulIdentifier","src":"473:6:29"},"nativeSrc":"473:43:29","nodeType":"YulFunctionCall","src":"473:43:29"},"nativeSrc":"470:63:29","nodeType":"YulIf","src":"470:63:29"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:29","nodeType":"YulTypedName","src":"453:5:29","type":""}],"src":"417:122:29"},{"body":{"nativeSrc":"597:87:29","nodeType":"YulBlock","src":"597:87:29","statements":[{"nativeSrc":"607:29:29","nodeType":"YulAssignment","src":"607:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:29","nodeType":"YulIdentifier","src":"629:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:29","nodeType":"YulIdentifier","src":"616:12:29"},"nativeSrc":"616:20:29","nodeType":"YulFunctionCall","src":"616:20:29"},"variableNames":[{"name":"value","nativeSrc":"607:5:29","nodeType":"YulIdentifier","src":"607:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:29","nodeType":"YulIdentifier","src":"672:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"645:26:29","nodeType":"YulIdentifier","src":"645:26:29"},"nativeSrc":"645:33:29","nodeType":"YulFunctionCall","src":"645:33:29"},"nativeSrc":"645:33:29","nodeType":"YulExpressionStatement","src":"645:33:29"}]},"name":"abi_decode_t_uint256","nativeSrc":"545:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:29","nodeType":"YulTypedName","src":"575:6:29","type":""},{"name":"end","nativeSrc":"583:3:29","nodeType":"YulTypedName","src":"583:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:29","nodeType":"YulTypedName","src":"591:5:29","type":""}],"src":"545:139:29"},{"body":{"nativeSrc":"735:81:29","nodeType":"YulBlock","src":"735:81:29","statements":[{"nativeSrc":"745:65:29","nodeType":"YulAssignment","src":"745:65:29","value":{"arguments":[{"name":"value","nativeSrc":"760:5:29","nodeType":"YulIdentifier","src":"760:5:29"},{"kind":"number","nativeSrc":"767:42:29","nodeType":"YulLiteral","src":"767:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"756:3:29","nodeType":"YulIdentifier","src":"756:3:29"},"nativeSrc":"756:54:29","nodeType":"YulFunctionCall","src":"756:54:29"},"variableNames":[{"name":"cleaned","nativeSrc":"745:7:29","nodeType":"YulIdentifier","src":"745:7:29"}]}]},"name":"cleanup_t_uint160","nativeSrc":"690:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"717:5:29","nodeType":"YulTypedName","src":"717:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"727:7:29","nodeType":"YulTypedName","src":"727:7:29","type":""}],"src":"690:126:29"},{"body":{"nativeSrc":"867:51:29","nodeType":"YulBlock","src":"867:51:29","statements":[{"nativeSrc":"877:35:29","nodeType":"YulAssignment","src":"877:35:29","value":{"arguments":[{"name":"value","nativeSrc":"906:5:29","nodeType":"YulIdentifier","src":"906:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"888:17:29","nodeType":"YulIdentifier","src":"888:17:29"},"nativeSrc":"888:24:29","nodeType":"YulFunctionCall","src":"888:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"877:7:29","nodeType":"YulIdentifier","src":"877:7:29"}]}]},"name":"cleanup_t_address","nativeSrc":"822:96:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"849:5:29","nodeType":"YulTypedName","src":"849:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"859:7:29","nodeType":"YulTypedName","src":"859:7:29","type":""}],"src":"822:96:29"},{"body":{"nativeSrc":"967:79:29","nodeType":"YulBlock","src":"967:79:29","statements":[{"body":{"nativeSrc":"1024:16:29","nodeType":"YulBlock","src":"1024:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:29","nodeType":"YulLiteral","src":"1033:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:29","nodeType":"YulLiteral","src":"1036:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:29","nodeType":"YulIdentifier","src":"1026:6:29"},"nativeSrc":"1026:12:29","nodeType":"YulFunctionCall","src":"1026:12:29"},"nativeSrc":"1026:12:29","nodeType":"YulExpressionStatement","src":"1026:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:29","nodeType":"YulIdentifier","src":"990:5:29"},{"arguments":[{"name":"value","nativeSrc":"1015:5:29","nodeType":"YulIdentifier","src":"1015:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"997:17:29","nodeType":"YulIdentifier","src":"997:17:29"},"nativeSrc":"997:24:29","nodeType":"YulFunctionCall","src":"997:24:29"}],"functionName":{"name":"eq","nativeSrc":"987:2:29","nodeType":"YulIdentifier","src":"987:2:29"},"nativeSrc":"987:35:29","nodeType":"YulFunctionCall","src":"987:35:29"}],"functionName":{"name":"iszero","nativeSrc":"980:6:29","nodeType":"YulIdentifier","src":"980:6:29"},"nativeSrc":"980:43:29","nodeType":"YulFunctionCall","src":"980:43:29"},"nativeSrc":"977:63:29","nodeType":"YulIf","src":"977:63:29"}]},"name":"validator_revert_t_address","nativeSrc":"924:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:29","nodeType":"YulTypedName","src":"960:5:29","type":""}],"src":"924:122:29"},{"body":{"nativeSrc":"1104:87:29","nodeType":"YulBlock","src":"1104:87:29","statements":[{"nativeSrc":"1114:29:29","nodeType":"YulAssignment","src":"1114:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:29","nodeType":"YulIdentifier","src":"1136:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:29","nodeType":"YulIdentifier","src":"1123:12:29"},"nativeSrc":"1123:20:29","nodeType":"YulFunctionCall","src":"1123:20:29"},"variableNames":[{"name":"value","nativeSrc":"1114:5:29","nodeType":"YulIdentifier","src":"1114:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:29","nodeType":"YulIdentifier","src":"1179:5:29"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1152:26:29","nodeType":"YulIdentifier","src":"1152:26:29"},"nativeSrc":"1152:33:29","nodeType":"YulFunctionCall","src":"1152:33:29"},"nativeSrc":"1152:33:29","nodeType":"YulExpressionStatement","src":"1152:33:29"}]},"name":"abi_decode_t_address","nativeSrc":"1052:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:29","nodeType":"YulTypedName","src":"1082:6:29","type":""},{"name":"end","nativeSrc":"1090:3:29","nodeType":"YulTypedName","src":"1090:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:29","nodeType":"YulTypedName","src":"1098:5:29","type":""}],"src":"1052:139:29"},{"body":{"nativeSrc":"1280:391:29","nodeType":"YulBlock","src":"1280:391:29","statements":[{"body":{"nativeSrc":"1326:83:29","nodeType":"YulBlock","src":"1326:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:29","nodeType":"YulIdentifier","src":"1328:77:29"},"nativeSrc":"1328:79:29","nodeType":"YulFunctionCall","src":"1328:79:29"},"nativeSrc":"1328:79:29","nodeType":"YulExpressionStatement","src":"1328:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:29","nodeType":"YulIdentifier","src":"1301:7:29"},{"name":"headStart","nativeSrc":"1310:9:29","nodeType":"YulIdentifier","src":"1310:9:29"}],"functionName":{"name":"sub","nativeSrc":"1297:3:29","nodeType":"YulIdentifier","src":"1297:3:29"},"nativeSrc":"1297:23:29","nodeType":"YulFunctionCall","src":"1297:23:29"},{"kind":"number","nativeSrc":"1322:2:29","nodeType":"YulLiteral","src":"1322:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:29","nodeType":"YulIdentifier","src":"1293:3:29"},"nativeSrc":"1293:32:29","nodeType":"YulFunctionCall","src":"1293:32:29"},"nativeSrc":"1290:119:29","nodeType":"YulIf","src":"1290:119:29"},{"nativeSrc":"1419:117:29","nodeType":"YulBlock","src":"1419:117:29","statements":[{"nativeSrc":"1434:15:29","nodeType":"YulVariableDeclaration","src":"1434:15:29","value":{"kind":"number","nativeSrc":"1448:1:29","nodeType":"YulLiteral","src":"1448:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:29","nodeType":"YulTypedName","src":"1438:6:29","type":""}]},{"nativeSrc":"1463:63:29","nodeType":"YulAssignment","src":"1463:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:29","nodeType":"YulIdentifier","src":"1498:9:29"},{"name":"offset","nativeSrc":"1509:6:29","nodeType":"YulIdentifier","src":"1509:6:29"}],"functionName":{"name":"add","nativeSrc":"1494:3:29","nodeType":"YulIdentifier","src":"1494:3:29"},"nativeSrc":"1494:22:29","nodeType":"YulFunctionCall","src":"1494:22:29"},{"name":"dataEnd","nativeSrc":"1518:7:29","nodeType":"YulIdentifier","src":"1518:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1473:20:29","nodeType":"YulIdentifier","src":"1473:20:29"},"nativeSrc":"1473:53:29","nodeType":"YulFunctionCall","src":"1473:53:29"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:29","nodeType":"YulIdentifier","src":"1463:6:29"}]}]},{"nativeSrc":"1546:118:29","nodeType":"YulBlock","src":"1546:118:29","statements":[{"nativeSrc":"1561:16:29","nodeType":"YulVariableDeclaration","src":"1561:16:29","value":{"kind":"number","nativeSrc":"1575:2:29","nodeType":"YulLiteral","src":"1575:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:29","nodeType":"YulTypedName","src":"1565:6:29","type":""}]},{"nativeSrc":"1591:63:29","nodeType":"YulAssignment","src":"1591:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:29","nodeType":"YulIdentifier","src":"1626:9:29"},{"name":"offset","nativeSrc":"1637:6:29","nodeType":"YulIdentifier","src":"1637:6:29"}],"functionName":{"name":"add","nativeSrc":"1622:3:29","nodeType":"YulIdentifier","src":"1622:3:29"},"nativeSrc":"1622:22:29","nodeType":"YulFunctionCall","src":"1622:22:29"},{"name":"dataEnd","nativeSrc":"1646:7:29","nodeType":"YulIdentifier","src":"1646:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1601:20:29","nodeType":"YulIdentifier","src":"1601:20:29"},"nativeSrc":"1601:53:29","nodeType":"YulFunctionCall","src":"1601:53:29"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:29","nodeType":"YulIdentifier","src":"1591:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"1197:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:29","nodeType":"YulTypedName","src":"1242:9:29","type":""},{"name":"dataEnd","nativeSrc":"1253:7:29","nodeType":"YulTypedName","src":"1253:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:29","nodeType":"YulTypedName","src":"1265:6:29","type":""},{"name":"value1","nativeSrc":"1273:6:29","nodeType":"YulTypedName","src":"1273:6:29","type":""}],"src":"1197:474:29"},{"body":{"nativeSrc":"1742:53:29","nodeType":"YulBlock","src":"1742:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:29","nodeType":"YulIdentifier","src":"1759:3:29"},{"arguments":[{"name":"value","nativeSrc":"1782:5:29","nodeType":"YulIdentifier","src":"1782:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1764:17:29","nodeType":"YulIdentifier","src":"1764:17:29"},"nativeSrc":"1764:24:29","nodeType":"YulFunctionCall","src":"1764:24:29"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:29","nodeType":"YulIdentifier","src":"1752:6:29"},"nativeSrc":"1752:37:29","nodeType":"YulFunctionCall","src":"1752:37:29"},"nativeSrc":"1752:37:29","nodeType":"YulExpressionStatement","src":"1752:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1677:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:29","nodeType":"YulTypedName","src":"1730:5:29","type":""},{"name":"pos","nativeSrc":"1737:3:29","nodeType":"YulTypedName","src":"1737:3:29","type":""}],"src":"1677:118:29"},{"body":{"nativeSrc":"1899:124:29","nodeType":"YulBlock","src":"1899:124:29","statements":[{"nativeSrc":"1909:26:29","nodeType":"YulAssignment","src":"1909:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:29","nodeType":"YulIdentifier","src":"1921:9:29"},{"kind":"number","nativeSrc":"1932:2:29","nodeType":"YulLiteral","src":"1932:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:29","nodeType":"YulIdentifier","src":"1917:3:29"},"nativeSrc":"1917:18:29","nodeType":"YulFunctionCall","src":"1917:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:29","nodeType":"YulIdentifier","src":"1909:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:29","nodeType":"YulIdentifier","src":"1989:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:29","nodeType":"YulIdentifier","src":"2002:9:29"},{"kind":"number","nativeSrc":"2013:1:29","nodeType":"YulLiteral","src":"2013:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:29","nodeType":"YulIdentifier","src":"1998:3:29"},"nativeSrc":"1998:17:29","nodeType":"YulFunctionCall","src":"1998:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1945:43:29","nodeType":"YulIdentifier","src":"1945:43:29"},"nativeSrc":"1945:71:29","nodeType":"YulFunctionCall","src":"1945:71:29"},"nativeSrc":"1945:71:29","nodeType":"YulExpressionStatement","src":"1945:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1801:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:29","nodeType":"YulTypedName","src":"1871:9:29","type":""},{"name":"value0","nativeSrc":"1883:6:29","nodeType":"YulTypedName","src":"1883:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:29","nodeType":"YulTypedName","src":"1894:4:29","type":""}],"src":"1801:222:29"},{"body":{"nativeSrc":"2095:263:29","nodeType":"YulBlock","src":"2095:263:29","statements":[{"body":{"nativeSrc":"2141:83:29","nodeType":"YulBlock","src":"2141:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2143:77:29","nodeType":"YulIdentifier","src":"2143:77:29"},"nativeSrc":"2143:79:29","nodeType":"YulFunctionCall","src":"2143:79:29"},"nativeSrc":"2143:79:29","nodeType":"YulExpressionStatement","src":"2143:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2116:7:29","nodeType":"YulIdentifier","src":"2116:7:29"},{"name":"headStart","nativeSrc":"2125:9:29","nodeType":"YulIdentifier","src":"2125:9:29"}],"functionName":{"name":"sub","nativeSrc":"2112:3:29","nodeType":"YulIdentifier","src":"2112:3:29"},"nativeSrc":"2112:23:29","nodeType":"YulFunctionCall","src":"2112:23:29"},{"kind":"number","nativeSrc":"2137:2:29","nodeType":"YulLiteral","src":"2137:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2108:3:29","nodeType":"YulIdentifier","src":"2108:3:29"},"nativeSrc":"2108:32:29","nodeType":"YulFunctionCall","src":"2108:32:29"},"nativeSrc":"2105:119:29","nodeType":"YulIf","src":"2105:119:29"},{"nativeSrc":"2234:117:29","nodeType":"YulBlock","src":"2234:117:29","statements":[{"nativeSrc":"2249:15:29","nodeType":"YulVariableDeclaration","src":"2249:15:29","value":{"kind":"number","nativeSrc":"2263:1:29","nodeType":"YulLiteral","src":"2263:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2253:6:29","nodeType":"YulTypedName","src":"2253:6:29","type":""}]},{"nativeSrc":"2278:63:29","nodeType":"YulAssignment","src":"2278:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2313:9:29","nodeType":"YulIdentifier","src":"2313:9:29"},{"name":"offset","nativeSrc":"2324:6:29","nodeType":"YulIdentifier","src":"2324:6:29"}],"functionName":{"name":"add","nativeSrc":"2309:3:29","nodeType":"YulIdentifier","src":"2309:3:29"},"nativeSrc":"2309:22:29","nodeType":"YulFunctionCall","src":"2309:22:29"},{"name":"dataEnd","nativeSrc":"2333:7:29","nodeType":"YulIdentifier","src":"2333:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2288:20:29","nodeType":"YulIdentifier","src":"2288:20:29"},"nativeSrc":"2288:53:29","nodeType":"YulFunctionCall","src":"2288:53:29"},"variableNames":[{"name":"value0","nativeSrc":"2278:6:29","nodeType":"YulIdentifier","src":"2278:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2029:329:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2065:9:29","nodeType":"YulTypedName","src":"2065:9:29","type":""},{"name":"dataEnd","nativeSrc":"2076:7:29","nodeType":"YulTypedName","src":"2076:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2088:6:29","nodeType":"YulTypedName","src":"2088:6:29","type":""}],"src":"2029:329:29"},{"body":{"nativeSrc":"2396:28:29","nodeType":"YulBlock","src":"2396:28:29","statements":[{"nativeSrc":"2406:12:29","nodeType":"YulAssignment","src":"2406:12:29","value":{"name":"value","nativeSrc":"2413:5:29","nodeType":"YulIdentifier","src":"2413:5:29"},"variableNames":[{"name":"ret","nativeSrc":"2406:3:29","nodeType":"YulIdentifier","src":"2406:3:29"}]}]},"name":"identity","nativeSrc":"2364:60:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2382:5:29","nodeType":"YulTypedName","src":"2382:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2392:3:29","nodeType":"YulTypedName","src":"2392:3:29","type":""}],"src":"2364:60:29"},{"body":{"nativeSrc":"2490:82:29","nodeType":"YulBlock","src":"2490:82:29","statements":[{"nativeSrc":"2500:66:29","nodeType":"YulAssignment","src":"2500:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2558:5:29","nodeType":"YulIdentifier","src":"2558:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2540:17:29","nodeType":"YulIdentifier","src":"2540:17:29"},"nativeSrc":"2540:24:29","nodeType":"YulFunctionCall","src":"2540:24:29"}],"functionName":{"name":"identity","nativeSrc":"2531:8:29","nodeType":"YulIdentifier","src":"2531:8:29"},"nativeSrc":"2531:34:29","nodeType":"YulFunctionCall","src":"2531:34:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2513:17:29","nodeType":"YulIdentifier","src":"2513:17:29"},"nativeSrc":"2513:53:29","nodeType":"YulFunctionCall","src":"2513:53:29"},"variableNames":[{"name":"converted","nativeSrc":"2500:9:29","nodeType":"YulIdentifier","src":"2500:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2430:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2470:5:29","nodeType":"YulTypedName","src":"2470:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2480:9:29","nodeType":"YulTypedName","src":"2480:9:29","type":""}],"src":"2430:142:29"},{"body":{"nativeSrc":"2638:66:29","nodeType":"YulBlock","src":"2638:66:29","statements":[{"nativeSrc":"2648:50:29","nodeType":"YulAssignment","src":"2648:50:29","value":{"arguments":[{"name":"value","nativeSrc":"2692:5:29","nodeType":"YulIdentifier","src":"2692:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2661:30:29","nodeType":"YulIdentifier","src":"2661:30:29"},"nativeSrc":"2661:37:29","nodeType":"YulFunctionCall","src":"2661:37:29"},"variableNames":[{"name":"converted","nativeSrc":"2648:9:29","nodeType":"YulIdentifier","src":"2648:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"2578:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2618:5:29","nodeType":"YulTypedName","src":"2618:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2628:9:29","nodeType":"YulTypedName","src":"2628:9:29","type":""}],"src":"2578:126:29"},{"body":{"nativeSrc":"2809:66:29","nodeType":"YulBlock","src":"2809:66:29","statements":[{"nativeSrc":"2819:50:29","nodeType":"YulAssignment","src":"2819:50:29","value":{"arguments":[{"name":"value","nativeSrc":"2863:5:29","nodeType":"YulIdentifier","src":"2863:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"2832:30:29","nodeType":"YulIdentifier","src":"2832:30:29"},"nativeSrc":"2832:37:29","nodeType":"YulFunctionCall","src":"2832:37:29"},"variableNames":[{"name":"converted","nativeSrc":"2819:9:29","nodeType":"YulIdentifier","src":"2819:9:29"}]}]},"name":"convert_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address","nativeSrc":"2710:165:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2789:5:29","nodeType":"YulTypedName","src":"2789:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2799:9:29","nodeType":"YulTypedName","src":"2799:9:29","type":""}],"src":"2710:165:29"},{"body":{"nativeSrc":"2985:105:29","nodeType":"YulBlock","src":"2985:105:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3002:3:29","nodeType":"YulIdentifier","src":"3002:3:29"},{"arguments":[{"name":"value","nativeSrc":"3077:5:29","nodeType":"YulIdentifier","src":"3077:5:29"}],"functionName":{"name":"convert_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address","nativeSrc":"3007:69:29","nodeType":"YulIdentifier","src":"3007:69:29"},"nativeSrc":"3007:76:29","nodeType":"YulFunctionCall","src":"3007:76:29"}],"functionName":{"name":"mstore","nativeSrc":"2995:6:29","nodeType":"YulIdentifier","src":"2995:6:29"},"nativeSrc":"2995:89:29","nodeType":"YulFunctionCall","src":"2995:89:29"},"nativeSrc":"2995:89:29","nodeType":"YulExpressionStatement","src":"2995:89:29"}]},"name":"abi_encode_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address_fromStack","nativeSrc":"2881:209:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2973:5:29","nodeType":"YulTypedName","src":"2973:5:29","type":""},{"name":"pos","nativeSrc":"2980:3:29","nodeType":"YulTypedName","src":"2980:3:29","type":""}],"src":"2881:209:29"},{"body":{"nativeSrc":"3155:40:29","nodeType":"YulBlock","src":"3155:40:29","statements":[{"nativeSrc":"3166:22:29","nodeType":"YulAssignment","src":"3166:22:29","value":{"arguments":[{"name":"value","nativeSrc":"3182:5:29","nodeType":"YulIdentifier","src":"3182:5:29"}],"functionName":{"name":"mload","nativeSrc":"3176:5:29","nodeType":"YulIdentifier","src":"3176:5:29"},"nativeSrc":"3176:12:29","nodeType":"YulFunctionCall","src":"3176:12:29"},"variableNames":[{"name":"length","nativeSrc":"3166:6:29","nodeType":"YulIdentifier","src":"3166:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3096:99:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3138:5:29","nodeType":"YulTypedName","src":"3138:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3148:6:29","nodeType":"YulTypedName","src":"3148:6:29","type":""}],"src":"3096:99:29"},{"body":{"nativeSrc":"3297:73:29","nodeType":"YulBlock","src":"3297:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3314:3:29","nodeType":"YulIdentifier","src":"3314:3:29"},{"name":"length","nativeSrc":"3319:6:29","nodeType":"YulIdentifier","src":"3319:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3307:6:29","nodeType":"YulIdentifier","src":"3307:6:29"},"nativeSrc":"3307:19:29","nodeType":"YulFunctionCall","src":"3307:19:29"},"nativeSrc":"3307:19:29","nodeType":"YulExpressionStatement","src":"3307:19:29"},{"nativeSrc":"3335:29:29","nodeType":"YulAssignment","src":"3335:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"3354:3:29","nodeType":"YulIdentifier","src":"3354:3:29"},{"kind":"number","nativeSrc":"3359:4:29","nodeType":"YulLiteral","src":"3359:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3350:3:29","nodeType":"YulIdentifier","src":"3350:3:29"},"nativeSrc":"3350:14:29","nodeType":"YulFunctionCall","src":"3350:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"3335:11:29","nodeType":"YulIdentifier","src":"3335:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3201:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3269:3:29","nodeType":"YulTypedName","src":"3269:3:29","type":""},{"name":"length","nativeSrc":"3274:6:29","nodeType":"YulTypedName","src":"3274:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3285:11:29","nodeType":"YulTypedName","src":"3285:11:29","type":""}],"src":"3201:169:29"},{"body":{"nativeSrc":"3438:186:29","nodeType":"YulBlock","src":"3438:186:29","statements":[{"nativeSrc":"3449:10:29","nodeType":"YulVariableDeclaration","src":"3449:10:29","value":{"kind":"number","nativeSrc":"3458:1:29","nodeType":"YulLiteral","src":"3458:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3453:1:29","nodeType":"YulTypedName","src":"3453:1:29","type":""}]},{"body":{"nativeSrc":"3518:63:29","nodeType":"YulBlock","src":"3518:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3543:3:29","nodeType":"YulIdentifier","src":"3543:3:29"},{"name":"i","nativeSrc":"3548:1:29","nodeType":"YulIdentifier","src":"3548:1:29"}],"functionName":{"name":"add","nativeSrc":"3539:3:29","nodeType":"YulIdentifier","src":"3539:3:29"},"nativeSrc":"3539:11:29","nodeType":"YulFunctionCall","src":"3539:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3562:3:29","nodeType":"YulIdentifier","src":"3562:3:29"},{"name":"i","nativeSrc":"3567:1:29","nodeType":"YulIdentifier","src":"3567:1:29"}],"functionName":{"name":"add","nativeSrc":"3558:3:29","nodeType":"YulIdentifier","src":"3558:3:29"},"nativeSrc":"3558:11:29","nodeType":"YulFunctionCall","src":"3558:11:29"}],"functionName":{"name":"mload","nativeSrc":"3552:5:29","nodeType":"YulIdentifier","src":"3552:5:29"},"nativeSrc":"3552:18:29","nodeType":"YulFunctionCall","src":"3552:18:29"}],"functionName":{"name":"mstore","nativeSrc":"3532:6:29","nodeType":"YulIdentifier","src":"3532:6:29"},"nativeSrc":"3532:39:29","nodeType":"YulFunctionCall","src":"3532:39:29"},"nativeSrc":"3532:39:29","nodeType":"YulExpressionStatement","src":"3532:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3479:1:29","nodeType":"YulIdentifier","src":"3479:1:29"},{"name":"length","nativeSrc":"3482:6:29","nodeType":"YulIdentifier","src":"3482:6:29"}],"functionName":{"name":"lt","nativeSrc":"3476:2:29","nodeType":"YulIdentifier","src":"3476:2:29"},"nativeSrc":"3476:13:29","nodeType":"YulFunctionCall","src":"3476:13:29"},"nativeSrc":"3468:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"3490:19:29","nodeType":"YulBlock","src":"3490:19:29","statements":[{"nativeSrc":"3492:15:29","nodeType":"YulAssignment","src":"3492:15:29","value":{"arguments":[{"name":"i","nativeSrc":"3501:1:29","nodeType":"YulIdentifier","src":"3501:1:29"},{"kind":"number","nativeSrc":"3504:2:29","nodeType":"YulLiteral","src":"3504:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3497:3:29","nodeType":"YulIdentifier","src":"3497:3:29"},"nativeSrc":"3497:10:29","nodeType":"YulFunctionCall","src":"3497:10:29"},"variableNames":[{"name":"i","nativeSrc":"3492:1:29","nodeType":"YulIdentifier","src":"3492:1:29"}]}]},"pre":{"nativeSrc":"3472:3:29","nodeType":"YulBlock","src":"3472:3:29","statements":[]},"src":"3468:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3601:3:29","nodeType":"YulIdentifier","src":"3601:3:29"},{"name":"length","nativeSrc":"3606:6:29","nodeType":"YulIdentifier","src":"3606:6:29"}],"functionName":{"name":"add","nativeSrc":"3597:3:29","nodeType":"YulIdentifier","src":"3597:3:29"},"nativeSrc":"3597:16:29","nodeType":"YulFunctionCall","src":"3597:16:29"},{"kind":"number","nativeSrc":"3615:1:29","nodeType":"YulLiteral","src":"3615:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3590:6:29","nodeType":"YulIdentifier","src":"3590:6:29"},"nativeSrc":"3590:27:29","nodeType":"YulFunctionCall","src":"3590:27:29"},"nativeSrc":"3590:27:29","nodeType":"YulExpressionStatement","src":"3590:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3376:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3420:3:29","nodeType":"YulTypedName","src":"3420:3:29","type":""},{"name":"dst","nativeSrc":"3425:3:29","nodeType":"YulTypedName","src":"3425:3:29","type":""},{"name":"length","nativeSrc":"3430:6:29","nodeType":"YulTypedName","src":"3430:6:29","type":""}],"src":"3376:248:29"},{"body":{"nativeSrc":"3678:54:29","nodeType":"YulBlock","src":"3678:54:29","statements":[{"nativeSrc":"3688:38:29","nodeType":"YulAssignment","src":"3688:38:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3706:5:29","nodeType":"YulIdentifier","src":"3706:5:29"},{"kind":"number","nativeSrc":"3713:2:29","nodeType":"YulLiteral","src":"3713:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3702:3:29","nodeType":"YulIdentifier","src":"3702:3:29"},"nativeSrc":"3702:14:29","nodeType":"YulFunctionCall","src":"3702:14:29"},{"arguments":[{"kind":"number","nativeSrc":"3722:2:29","nodeType":"YulLiteral","src":"3722:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3718:3:29","nodeType":"YulIdentifier","src":"3718:3:29"},"nativeSrc":"3718:7:29","nodeType":"YulFunctionCall","src":"3718:7:29"}],"functionName":{"name":"and","nativeSrc":"3698:3:29","nodeType":"YulIdentifier","src":"3698:3:29"},"nativeSrc":"3698:28:29","nodeType":"YulFunctionCall","src":"3698:28:29"},"variableNames":[{"name":"result","nativeSrc":"3688:6:29","nodeType":"YulIdentifier","src":"3688:6:29"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3630:102:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3661:5:29","nodeType":"YulTypedName","src":"3661:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3671:6:29","nodeType":"YulTypedName","src":"3671:6:29","type":""}],"src":"3630:102:29"},{"body":{"nativeSrc":"3830:285:29","nodeType":"YulBlock","src":"3830:285:29","statements":[{"nativeSrc":"3840:53:29","nodeType":"YulVariableDeclaration","src":"3840:53:29","value":{"arguments":[{"name":"value","nativeSrc":"3887:5:29","nodeType":"YulIdentifier","src":"3887:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3854:32:29","nodeType":"YulIdentifier","src":"3854:32:29"},"nativeSrc":"3854:39:29","nodeType":"YulFunctionCall","src":"3854:39:29"},"variables":[{"name":"length","nativeSrc":"3844:6:29","nodeType":"YulTypedName","src":"3844:6:29","type":""}]},{"nativeSrc":"3902:78:29","nodeType":"YulAssignment","src":"3902:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"3968:3:29","nodeType":"YulIdentifier","src":"3968:3:29"},{"name":"length","nativeSrc":"3973:6:29","nodeType":"YulIdentifier","src":"3973:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3909:58:29","nodeType":"YulIdentifier","src":"3909:58:29"},"nativeSrc":"3909:71:29","nodeType":"YulFunctionCall","src":"3909:71:29"},"variableNames":[{"name":"pos","nativeSrc":"3902:3:29","nodeType":"YulIdentifier","src":"3902:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4028:5:29","nodeType":"YulIdentifier","src":"4028:5:29"},{"kind":"number","nativeSrc":"4035:4:29","nodeType":"YulLiteral","src":"4035:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4024:3:29","nodeType":"YulIdentifier","src":"4024:3:29"},"nativeSrc":"4024:16:29","nodeType":"YulFunctionCall","src":"4024:16:29"},{"name":"pos","nativeSrc":"4042:3:29","nodeType":"YulIdentifier","src":"4042:3:29"},{"name":"length","nativeSrc":"4047:6:29","nodeType":"YulIdentifier","src":"4047:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3989:34:29","nodeType":"YulIdentifier","src":"3989:34:29"},"nativeSrc":"3989:65:29","nodeType":"YulFunctionCall","src":"3989:65:29"},"nativeSrc":"3989:65:29","nodeType":"YulExpressionStatement","src":"3989:65:29"},{"nativeSrc":"4063:46:29","nodeType":"YulAssignment","src":"4063:46:29","value":{"arguments":[{"name":"pos","nativeSrc":"4074:3:29","nodeType":"YulIdentifier","src":"4074:3:29"},{"arguments":[{"name":"length","nativeSrc":"4101:6:29","nodeType":"YulIdentifier","src":"4101:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4079:21:29","nodeType":"YulIdentifier","src":"4079:21:29"},"nativeSrc":"4079:29:29","nodeType":"YulFunctionCall","src":"4079:29:29"}],"functionName":{"name":"add","nativeSrc":"4070:3:29","nodeType":"YulIdentifier","src":"4070:3:29"},"nativeSrc":"4070:39:29","nodeType":"YulFunctionCall","src":"4070:39:29"},"variableNames":[{"name":"end","nativeSrc":"4063:3:29","nodeType":"YulIdentifier","src":"4063:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"3738:377:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3811:5:29","nodeType":"YulTypedName","src":"3811:5:29","type":""},{"name":"pos","nativeSrc":"3818:3:29","nodeType":"YulTypedName","src":"3818:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3826:3:29","nodeType":"YulTypedName","src":"3826:3:29","type":""}],"src":"3738:377:29"},{"body":{"nativeSrc":"4163:48:29","nodeType":"YulBlock","src":"4163:48:29","statements":[{"nativeSrc":"4173:32:29","nodeType":"YulAssignment","src":"4173:32:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4198:5:29","nodeType":"YulIdentifier","src":"4198:5:29"}],"functionName":{"name":"iszero","nativeSrc":"4191:6:29","nodeType":"YulIdentifier","src":"4191:6:29"},"nativeSrc":"4191:13:29","nodeType":"YulFunctionCall","src":"4191:13:29"}],"functionName":{"name":"iszero","nativeSrc":"4184:6:29","nodeType":"YulIdentifier","src":"4184:6:29"},"nativeSrc":"4184:21:29","nodeType":"YulFunctionCall","src":"4184:21:29"},"variableNames":[{"name":"cleaned","nativeSrc":"4173:7:29","nodeType":"YulIdentifier","src":"4173:7:29"}]}]},"name":"cleanup_t_bool","nativeSrc":"4121:90:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4145:5:29","nodeType":"YulTypedName","src":"4145:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4155:7:29","nodeType":"YulTypedName","src":"4155:7:29","type":""}],"src":"4121:90:29"},{"body":{"nativeSrc":"4276:50:29","nodeType":"YulBlock","src":"4276:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4293:3:29","nodeType":"YulIdentifier","src":"4293:3:29"},{"arguments":[{"name":"value","nativeSrc":"4313:5:29","nodeType":"YulIdentifier","src":"4313:5:29"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4298:14:29","nodeType":"YulIdentifier","src":"4298:14:29"},"nativeSrc":"4298:21:29","nodeType":"YulFunctionCall","src":"4298:21:29"}],"functionName":{"name":"mstore","nativeSrc":"4286:6:29","nodeType":"YulIdentifier","src":"4286:6:29"},"nativeSrc":"4286:34:29","nodeType":"YulFunctionCall","src":"4286:34:29"},"nativeSrc":"4286:34:29","nodeType":"YulExpressionStatement","src":"4286:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4217:109:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4264:5:29","nodeType":"YulTypedName","src":"4264:5:29","type":""},{"name":"pos","nativeSrc":"4271:3:29","nodeType":"YulTypedName","src":"4271:3:29","type":""}],"src":"4217:109:29"},{"body":{"nativeSrc":"4397:53:29","nodeType":"YulBlock","src":"4397:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4414:3:29","nodeType":"YulIdentifier","src":"4414:3:29"},{"arguments":[{"name":"value","nativeSrc":"4437:5:29","nodeType":"YulIdentifier","src":"4437:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4419:17:29","nodeType":"YulIdentifier","src":"4419:17:29"},"nativeSrc":"4419:24:29","nodeType":"YulFunctionCall","src":"4419:24:29"}],"functionName":{"name":"mstore","nativeSrc":"4407:6:29","nodeType":"YulIdentifier","src":"4407:6:29"},"nativeSrc":"4407:37:29","nodeType":"YulFunctionCall","src":"4407:37:29"},"nativeSrc":"4407:37:29","nodeType":"YulExpressionStatement","src":"4407:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4332:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4385:5:29","nodeType":"YulTypedName","src":"4385:5:29","type":""},{"name":"pos","nativeSrc":"4392:3:29","nodeType":"YulTypedName","src":"4392:3:29","type":""}],"src":"4332:118:29"},{"body":{"nativeSrc":"4775:724:29","nodeType":"YulBlock","src":"4775:724:29","statements":[{"nativeSrc":"4785:27:29","nodeType":"YulAssignment","src":"4785:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4797:9:29","nodeType":"YulIdentifier","src":"4797:9:29"},{"kind":"number","nativeSrc":"4808:3:29","nodeType":"YulLiteral","src":"4808:3:29","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"4793:3:29","nodeType":"YulIdentifier","src":"4793:3:29"},"nativeSrc":"4793:19:29","nodeType":"YulFunctionCall","src":"4793:19:29"},"variableNames":[{"name":"tail","nativeSrc":"4785:4:29","nodeType":"YulIdentifier","src":"4785:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4866:6:29","nodeType":"YulIdentifier","src":"4866:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"4879:9:29","nodeType":"YulIdentifier","src":"4879:9:29"},{"kind":"number","nativeSrc":"4890:1:29","nodeType":"YulLiteral","src":"4890:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4875:3:29","nodeType":"YulIdentifier","src":"4875:3:29"},"nativeSrc":"4875:17:29","nodeType":"YulFunctionCall","src":"4875:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4822:43:29","nodeType":"YulIdentifier","src":"4822:43:29"},"nativeSrc":"4822:71:29","nodeType":"YulFunctionCall","src":"4822:71:29"},"nativeSrc":"4822:71:29","nodeType":"YulExpressionStatement","src":"4822:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4986:6:29","nodeType":"YulIdentifier","src":"4986:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"4999:9:29","nodeType":"YulIdentifier","src":"4999:9:29"},{"kind":"number","nativeSrc":"5010:2:29","nodeType":"YulLiteral","src":"5010:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4995:3:29","nodeType":"YulIdentifier","src":"4995:3:29"},"nativeSrc":"4995:18:29","nodeType":"YulFunctionCall","src":"4995:18:29"}],"functionName":{"name":"abi_encode_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address_fromStack","nativeSrc":"4903:82:29","nodeType":"YulIdentifier","src":"4903:82:29"},"nativeSrc":"4903:111:29","nodeType":"YulFunctionCall","src":"4903:111:29"},"nativeSrc":"4903:111:29","nodeType":"YulExpressionStatement","src":"4903:111:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5035:9:29","nodeType":"YulIdentifier","src":"5035:9:29"},{"kind":"number","nativeSrc":"5046:2:29","nodeType":"YulLiteral","src":"5046:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5031:3:29","nodeType":"YulIdentifier","src":"5031:3:29"},"nativeSrc":"5031:18:29","nodeType":"YulFunctionCall","src":"5031:18:29"},{"arguments":[{"name":"tail","nativeSrc":"5055:4:29","nodeType":"YulIdentifier","src":"5055:4:29"},{"name":"headStart","nativeSrc":"5061:9:29","nodeType":"YulIdentifier","src":"5061:9:29"}],"functionName":{"name":"sub","nativeSrc":"5051:3:29","nodeType":"YulIdentifier","src":"5051:3:29"},"nativeSrc":"5051:20:29","nodeType":"YulFunctionCall","src":"5051:20:29"}],"functionName":{"name":"mstore","nativeSrc":"5024:6:29","nodeType":"YulIdentifier","src":"5024:6:29"},"nativeSrc":"5024:48:29","nodeType":"YulFunctionCall","src":"5024:48:29"},"nativeSrc":"5024:48:29","nodeType":"YulExpressionStatement","src":"5024:48:29"},{"nativeSrc":"5081:86:29","nodeType":"YulAssignment","src":"5081:86:29","value":{"arguments":[{"name":"value2","nativeSrc":"5153:6:29","nodeType":"YulIdentifier","src":"5153:6:29"},{"name":"tail","nativeSrc":"5162:4:29","nodeType":"YulIdentifier","src":"5162:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5089:63:29","nodeType":"YulIdentifier","src":"5089:63:29"},"nativeSrc":"5089:78:29","nodeType":"YulFunctionCall","src":"5089:78:29"},"variableNames":[{"name":"tail","nativeSrc":"5081:4:29","nodeType":"YulIdentifier","src":"5081:4:29"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"5221:6:29","nodeType":"YulIdentifier","src":"5221:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5234:9:29","nodeType":"YulIdentifier","src":"5234:9:29"},{"kind":"number","nativeSrc":"5245:2:29","nodeType":"YulLiteral","src":"5245:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5230:3:29","nodeType":"YulIdentifier","src":"5230:3:29"},"nativeSrc":"5230:18:29","nodeType":"YulFunctionCall","src":"5230:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5177:43:29","nodeType":"YulIdentifier","src":"5177:43:29"},"nativeSrc":"5177:72:29","nodeType":"YulFunctionCall","src":"5177:72:29"},"nativeSrc":"5177:72:29","nodeType":"YulExpressionStatement","src":"5177:72:29"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"5303:6:29","nodeType":"YulIdentifier","src":"5303:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5316:9:29","nodeType":"YulIdentifier","src":"5316:9:29"},{"kind":"number","nativeSrc":"5327:3:29","nodeType":"YulLiteral","src":"5327:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5312:3:29","nodeType":"YulIdentifier","src":"5312:3:29"},"nativeSrc":"5312:19:29","nodeType":"YulFunctionCall","src":"5312:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5259:43:29","nodeType":"YulIdentifier","src":"5259:43:29"},"nativeSrc":"5259:73:29","nodeType":"YulFunctionCall","src":"5259:73:29"},"nativeSrc":"5259:73:29","nodeType":"YulExpressionStatement","src":"5259:73:29"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"5380:6:29","nodeType":"YulIdentifier","src":"5380:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5393:9:29","nodeType":"YulIdentifier","src":"5393:9:29"},{"kind":"number","nativeSrc":"5404:3:29","nodeType":"YulLiteral","src":"5404:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5389:3:29","nodeType":"YulIdentifier","src":"5389:3:29"},"nativeSrc":"5389:19:29","nodeType":"YulFunctionCall","src":"5389:19:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"5342:37:29","nodeType":"YulIdentifier","src":"5342:37:29"},"nativeSrc":"5342:67:29","nodeType":"YulFunctionCall","src":"5342:67:29"},"nativeSrc":"5342:67:29","nodeType":"YulExpressionStatement","src":"5342:67:29"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"5463:6:29","nodeType":"YulIdentifier","src":"5463:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5476:9:29","nodeType":"YulIdentifier","src":"5476:9:29"},{"kind":"number","nativeSrc":"5487:3:29","nodeType":"YulLiteral","src":"5487:3:29","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5472:3:29","nodeType":"YulIdentifier","src":"5472:3:29"},"nativeSrc":"5472:19:29","nodeType":"YulFunctionCall","src":"5472:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5419:43:29","nodeType":"YulIdentifier","src":"5419:43:29"},"nativeSrc":"5419:73:29","nodeType":"YulFunctionCall","src":"5419:73:29"},"nativeSrc":"5419:73:29","nodeType":"YulExpressionStatement","src":"5419:73:29"}]},"name":"abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$6960_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed","nativeSrc":"4456:1043:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:29","nodeType":"YulTypedName","src":"4699:9:29","type":""},{"name":"value6","nativeSrc":"4711:6:29","nodeType":"YulTypedName","src":"4711:6:29","type":""},{"name":"value5","nativeSrc":"4719:6:29","nodeType":"YulTypedName","src":"4719:6:29","type":""},{"name":"value4","nativeSrc":"4727:6:29","nodeType":"YulTypedName","src":"4727:6:29","type":""},{"name":"value3","nativeSrc":"4735:6:29","nodeType":"YulTypedName","src":"4735:6:29","type":""},{"name":"value2","nativeSrc":"4743:6:29","nodeType":"YulTypedName","src":"4743:6:29","type":""},{"name":"value1","nativeSrc":"4751:6:29","nodeType":"YulTypedName","src":"4751:6:29","type":""},{"name":"value0","nativeSrc":"4759:6:29","nodeType":"YulTypedName","src":"4759:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4770:4:29","nodeType":"YulTypedName","src":"4770:4:29","type":""}],"src":"4456:1043:29"},{"body":{"nativeSrc":"5594:28:29","nodeType":"YulBlock","src":"5594:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5611:1:29","nodeType":"YulLiteral","src":"5611:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5614:1:29","nodeType":"YulLiteral","src":"5614:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5604:6:29","nodeType":"YulIdentifier","src":"5604:6:29"},"nativeSrc":"5604:12:29","nodeType":"YulFunctionCall","src":"5604:12:29"},"nativeSrc":"5604:12:29","nodeType":"YulExpressionStatement","src":"5604:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5505:117:29","nodeType":"YulFunctionDefinition","src":"5505:117:29"},{"body":{"nativeSrc":"5717:28:29","nodeType":"YulBlock","src":"5717:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5734:1:29","nodeType":"YulLiteral","src":"5734:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5737:1:29","nodeType":"YulLiteral","src":"5737:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5727:6:29","nodeType":"YulIdentifier","src":"5727:6:29"},"nativeSrc":"5727:12:29","nodeType":"YulFunctionCall","src":"5727:12:29"},"nativeSrc":"5727:12:29","nodeType":"YulExpressionStatement","src":"5727:12:29"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5628:117:29","nodeType":"YulFunctionDefinition","src":"5628:117:29"},{"body":{"nativeSrc":"5840:28:29","nodeType":"YulBlock","src":"5840:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5857:1:29","nodeType":"YulLiteral","src":"5857:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5860:1:29","nodeType":"YulLiteral","src":"5860:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5850:6:29","nodeType":"YulIdentifier","src":"5850:6:29"},"nativeSrc":"5850:12:29","nodeType":"YulFunctionCall","src":"5850:12:29"},"nativeSrc":"5850:12:29","nodeType":"YulExpressionStatement","src":"5850:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5751:117:29","nodeType":"YulFunctionDefinition","src":"5751:117:29"},{"body":{"nativeSrc":"5963:478:29","nodeType":"YulBlock","src":"5963:478:29","statements":[{"body":{"nativeSrc":"6012:83:29","nodeType":"YulBlock","src":"6012:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6014:77:29","nodeType":"YulIdentifier","src":"6014:77:29"},"nativeSrc":"6014:79:29","nodeType":"YulFunctionCall","src":"6014:79:29"},"nativeSrc":"6014:79:29","nodeType":"YulExpressionStatement","src":"6014:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5991:6:29","nodeType":"YulIdentifier","src":"5991:6:29"},{"kind":"number","nativeSrc":"5999:4:29","nodeType":"YulLiteral","src":"5999:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5987:3:29","nodeType":"YulIdentifier","src":"5987:3:29"},"nativeSrc":"5987:17:29","nodeType":"YulFunctionCall","src":"5987:17:29"},{"name":"end","nativeSrc":"6006:3:29","nodeType":"YulIdentifier","src":"6006:3:29"}],"functionName":{"name":"slt","nativeSrc":"5983:3:29","nodeType":"YulIdentifier","src":"5983:3:29"},"nativeSrc":"5983:27:29","nodeType":"YulFunctionCall","src":"5983:27:29"}],"functionName":{"name":"iszero","nativeSrc":"5976:6:29","nodeType":"YulIdentifier","src":"5976:6:29"},"nativeSrc":"5976:35:29","nodeType":"YulFunctionCall","src":"5976:35:29"},"nativeSrc":"5973:122:29","nodeType":"YulIf","src":"5973:122:29"},{"nativeSrc":"6104:30:29","nodeType":"YulAssignment","src":"6104:30:29","value":{"arguments":[{"name":"offset","nativeSrc":"6127:6:29","nodeType":"YulIdentifier","src":"6127:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"6114:12:29","nodeType":"YulIdentifier","src":"6114:12:29"},"nativeSrc":"6114:20:29","nodeType":"YulFunctionCall","src":"6114:20:29"},"variableNames":[{"name":"length","nativeSrc":"6104:6:29","nodeType":"YulIdentifier","src":"6104:6:29"}]},{"body":{"nativeSrc":"6177:83:29","nodeType":"YulBlock","src":"6177:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6179:77:29","nodeType":"YulIdentifier","src":"6179:77:29"},"nativeSrc":"6179:79:29","nodeType":"YulFunctionCall","src":"6179:79:29"},"nativeSrc":"6179:79:29","nodeType":"YulExpressionStatement","src":"6179:79:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6149:6:29","nodeType":"YulIdentifier","src":"6149:6:29"},{"kind":"number","nativeSrc":"6157:18:29","nodeType":"YulLiteral","src":"6157:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6146:2:29","nodeType":"YulIdentifier","src":"6146:2:29"},"nativeSrc":"6146:30:29","nodeType":"YulFunctionCall","src":"6146:30:29"},"nativeSrc":"6143:117:29","nodeType":"YulIf","src":"6143:117:29"},{"nativeSrc":"6269:29:29","nodeType":"YulAssignment","src":"6269:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"6285:6:29","nodeType":"YulIdentifier","src":"6285:6:29"},{"kind":"number","nativeSrc":"6293:4:29","nodeType":"YulLiteral","src":"6293:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6281:3:29","nodeType":"YulIdentifier","src":"6281:3:29"},"nativeSrc":"6281:17:29","nodeType":"YulFunctionCall","src":"6281:17:29"},"variableNames":[{"name":"arrayPos","nativeSrc":"6269:8:29","nodeType":"YulIdentifier","src":"6269:8:29"}]},{"body":{"nativeSrc":"6352:83:29","nodeType":"YulBlock","src":"6352:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6354:77:29","nodeType":"YulIdentifier","src":"6354:77:29"},"nativeSrc":"6354:79:29","nodeType":"YulFunctionCall","src":"6354:79:29"},"nativeSrc":"6354:79:29","nodeType":"YulExpressionStatement","src":"6354:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"6317:8:29","nodeType":"YulIdentifier","src":"6317:8:29"},{"arguments":[{"name":"length","nativeSrc":"6331:6:29","nodeType":"YulIdentifier","src":"6331:6:29"},{"kind":"number","nativeSrc":"6339:4:29","nodeType":"YulLiteral","src":"6339:4:29","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"6327:3:29","nodeType":"YulIdentifier","src":"6327:3:29"},"nativeSrc":"6327:17:29","nodeType":"YulFunctionCall","src":"6327:17:29"}],"functionName":{"name":"add","nativeSrc":"6313:3:29","nodeType":"YulIdentifier","src":"6313:3:29"},"nativeSrc":"6313:32:29","nodeType":"YulFunctionCall","src":"6313:32:29"},{"name":"end","nativeSrc":"6347:3:29","nodeType":"YulIdentifier","src":"6347:3:29"}],"functionName":{"name":"gt","nativeSrc":"6310:2:29","nodeType":"YulIdentifier","src":"6310:2:29"},"nativeSrc":"6310:41:29","nodeType":"YulFunctionCall","src":"6310:41:29"},"nativeSrc":"6307:128:29","nodeType":"YulIf","src":"6307:128:29"}]},"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"5888:553:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5930:6:29","nodeType":"YulTypedName","src":"5930:6:29","type":""},{"name":"end","nativeSrc":"5938:3:29","nodeType":"YulTypedName","src":"5938:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5946:8:29","nodeType":"YulTypedName","src":"5946:8:29","type":""},{"name":"length","nativeSrc":"5956:6:29","nodeType":"YulTypedName","src":"5956:6:29","type":""}],"src":"5888:553:29"},{"body":{"nativeSrc":"6567:699:29","nodeType":"YulBlock","src":"6567:699:29","statements":[{"body":{"nativeSrc":"6613:83:29","nodeType":"YulBlock","src":"6613:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6615:77:29","nodeType":"YulIdentifier","src":"6615:77:29"},"nativeSrc":"6615:79:29","nodeType":"YulFunctionCall","src":"6615:79:29"},"nativeSrc":"6615:79:29","nodeType":"YulExpressionStatement","src":"6615:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6588:7:29","nodeType":"YulIdentifier","src":"6588:7:29"},{"name":"headStart","nativeSrc":"6597:9:29","nodeType":"YulIdentifier","src":"6597:9:29"}],"functionName":{"name":"sub","nativeSrc":"6584:3:29","nodeType":"YulIdentifier","src":"6584:3:29"},"nativeSrc":"6584:23:29","nodeType":"YulFunctionCall","src":"6584:23:29"},{"kind":"number","nativeSrc":"6609:2:29","nodeType":"YulLiteral","src":"6609:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6580:3:29","nodeType":"YulIdentifier","src":"6580:3:29"},"nativeSrc":"6580:32:29","nodeType":"YulFunctionCall","src":"6580:32:29"},"nativeSrc":"6577:119:29","nodeType":"YulIf","src":"6577:119:29"},{"nativeSrc":"6706:117:29","nodeType":"YulBlock","src":"6706:117:29","statements":[{"nativeSrc":"6721:15:29","nodeType":"YulVariableDeclaration","src":"6721:15:29","value":{"kind":"number","nativeSrc":"6735:1:29","nodeType":"YulLiteral","src":"6735:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6725:6:29","nodeType":"YulTypedName","src":"6725:6:29","type":""}]},{"nativeSrc":"6750:63:29","nodeType":"YulAssignment","src":"6750:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6785:9:29","nodeType":"YulIdentifier","src":"6785:9:29"},{"name":"offset","nativeSrc":"6796:6:29","nodeType":"YulIdentifier","src":"6796:6:29"}],"functionName":{"name":"add","nativeSrc":"6781:3:29","nodeType":"YulIdentifier","src":"6781:3:29"},"nativeSrc":"6781:22:29","nodeType":"YulFunctionCall","src":"6781:22:29"},{"name":"dataEnd","nativeSrc":"6805:7:29","nodeType":"YulIdentifier","src":"6805:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6760:20:29","nodeType":"YulIdentifier","src":"6760:20:29"},"nativeSrc":"6760:53:29","nodeType":"YulFunctionCall","src":"6760:53:29"},"variableNames":[{"name":"value0","nativeSrc":"6750:6:29","nodeType":"YulIdentifier","src":"6750:6:29"}]}]},{"nativeSrc":"6833:118:29","nodeType":"YulBlock","src":"6833:118:29","statements":[{"nativeSrc":"6848:16:29","nodeType":"YulVariableDeclaration","src":"6848:16:29","value":{"kind":"number","nativeSrc":"6862:2:29","nodeType":"YulLiteral","src":"6862:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6852:6:29","nodeType":"YulTypedName","src":"6852:6:29","type":""}]},{"nativeSrc":"6878:63:29","nodeType":"YulAssignment","src":"6878:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6913:9:29","nodeType":"YulIdentifier","src":"6913:9:29"},{"name":"offset","nativeSrc":"6924:6:29","nodeType":"YulIdentifier","src":"6924:6:29"}],"functionName":{"name":"add","nativeSrc":"6909:3:29","nodeType":"YulIdentifier","src":"6909:3:29"},"nativeSrc":"6909:22:29","nodeType":"YulFunctionCall","src":"6909:22:29"},{"name":"dataEnd","nativeSrc":"6933:7:29","nodeType":"YulIdentifier","src":"6933:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6888:20:29","nodeType":"YulIdentifier","src":"6888:20:29"},"nativeSrc":"6888:53:29","nodeType":"YulFunctionCall","src":"6888:53:29"},"variableNames":[{"name":"value1","nativeSrc":"6878:6:29","nodeType":"YulIdentifier","src":"6878:6:29"}]}]},{"nativeSrc":"6961:298:29","nodeType":"YulBlock","src":"6961:298:29","statements":[{"nativeSrc":"6976:46:29","nodeType":"YulVariableDeclaration","src":"6976:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7007:9:29","nodeType":"YulIdentifier","src":"7007:9:29"},{"kind":"number","nativeSrc":"7018:2:29","nodeType":"YulLiteral","src":"7018:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7003:3:29","nodeType":"YulIdentifier","src":"7003:3:29"},"nativeSrc":"7003:18:29","nodeType":"YulFunctionCall","src":"7003:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"6990:12:29","nodeType":"YulIdentifier","src":"6990:12:29"},"nativeSrc":"6990:32:29","nodeType":"YulFunctionCall","src":"6990:32:29"},"variables":[{"name":"offset","nativeSrc":"6980:6:29","nodeType":"YulTypedName","src":"6980:6:29","type":""}]},{"body":{"nativeSrc":"7069:83:29","nodeType":"YulBlock","src":"7069:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7071:77:29","nodeType":"YulIdentifier","src":"7071:77:29"},"nativeSrc":"7071:79:29","nodeType":"YulFunctionCall","src":"7071:79:29"},"nativeSrc":"7071:79:29","nodeType":"YulExpressionStatement","src":"7071:79:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7041:6:29","nodeType":"YulIdentifier","src":"7041:6:29"},{"kind":"number","nativeSrc":"7049:18:29","nodeType":"YulLiteral","src":"7049:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7038:2:29","nodeType":"YulIdentifier","src":"7038:2:29"},"nativeSrc":"7038:30:29","nodeType":"YulFunctionCall","src":"7038:30:29"},"nativeSrc":"7035:117:29","nodeType":"YulIf","src":"7035:117:29"},{"nativeSrc":"7166:83:29","nodeType":"YulAssignment","src":"7166:83:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7221:9:29","nodeType":"YulIdentifier","src":"7221:9:29"},{"name":"offset","nativeSrc":"7232:6:29","nodeType":"YulIdentifier","src":"7232:6:29"}],"functionName":{"name":"add","nativeSrc":"7217:3:29","nodeType":"YulIdentifier","src":"7217:3:29"},"nativeSrc":"7217:22:29","nodeType":"YulFunctionCall","src":"7217:22:29"},{"name":"dataEnd","nativeSrc":"7241:7:29","nodeType":"YulIdentifier","src":"7241:7:29"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"7184:32:29","nodeType":"YulIdentifier","src":"7184:32:29"},"nativeSrc":"7184:65:29","nodeType":"YulFunctionCall","src":"7184:65:29"},"variableNames":[{"name":"value2","nativeSrc":"7166:6:29","nodeType":"YulIdentifier","src":"7166:6:29"},{"name":"value3","nativeSrc":"7174:6:29","nodeType":"YulIdentifier","src":"7174:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr","nativeSrc":"6447:819:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6513:9:29","nodeType":"YulTypedName","src":"6513:9:29","type":""},{"name":"dataEnd","nativeSrc":"6524:7:29","nodeType":"YulTypedName","src":"6524:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6536:6:29","nodeType":"YulTypedName","src":"6536:6:29","type":""},{"name":"value1","nativeSrc":"6544:6:29","nodeType":"YulTypedName","src":"6544:6:29","type":""},{"name":"value2","nativeSrc":"6552:6:29","nodeType":"YulTypedName","src":"6552:6:29","type":""},{"name":"value3","nativeSrc":"6560:6:29","nodeType":"YulTypedName","src":"6560:6:29","type":""}],"src":"6447:819:29"},{"body":{"nativeSrc":"7375:571:29","nodeType":"YulBlock","src":"7375:571:29","statements":[{"body":{"nativeSrc":"7421:83:29","nodeType":"YulBlock","src":"7421:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7423:77:29","nodeType":"YulIdentifier","src":"7423:77:29"},"nativeSrc":"7423:79:29","nodeType":"YulFunctionCall","src":"7423:79:29"},"nativeSrc":"7423:79:29","nodeType":"YulExpressionStatement","src":"7423:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7396:7:29","nodeType":"YulIdentifier","src":"7396:7:29"},{"name":"headStart","nativeSrc":"7405:9:29","nodeType":"YulIdentifier","src":"7405:9:29"}],"functionName":{"name":"sub","nativeSrc":"7392:3:29","nodeType":"YulIdentifier","src":"7392:3:29"},"nativeSrc":"7392:23:29","nodeType":"YulFunctionCall","src":"7392:23:29"},{"kind":"number","nativeSrc":"7417:2:29","nodeType":"YulLiteral","src":"7417:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7388:3:29","nodeType":"YulIdentifier","src":"7388:3:29"},"nativeSrc":"7388:32:29","nodeType":"YulFunctionCall","src":"7388:32:29"},"nativeSrc":"7385:119:29","nodeType":"YulIf","src":"7385:119:29"},{"nativeSrc":"7514:297:29","nodeType":"YulBlock","src":"7514:297:29","statements":[{"nativeSrc":"7529:45:29","nodeType":"YulVariableDeclaration","src":"7529:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7560:9:29","nodeType":"YulIdentifier","src":"7560:9:29"},{"kind":"number","nativeSrc":"7571:1:29","nodeType":"YulLiteral","src":"7571:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7556:3:29","nodeType":"YulIdentifier","src":"7556:3:29"},"nativeSrc":"7556:17:29","nodeType":"YulFunctionCall","src":"7556:17:29"}],"functionName":{"name":"calldataload","nativeSrc":"7543:12:29","nodeType":"YulIdentifier","src":"7543:12:29"},"nativeSrc":"7543:31:29","nodeType":"YulFunctionCall","src":"7543:31:29"},"variables":[{"name":"offset","nativeSrc":"7533:6:29","nodeType":"YulTypedName","src":"7533:6:29","type":""}]},{"body":{"nativeSrc":"7621:83:29","nodeType":"YulBlock","src":"7621:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7623:77:29","nodeType":"YulIdentifier","src":"7623:77:29"},"nativeSrc":"7623:79:29","nodeType":"YulFunctionCall","src":"7623:79:29"},"nativeSrc":"7623:79:29","nodeType":"YulExpressionStatement","src":"7623:79:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7593:6:29","nodeType":"YulIdentifier","src":"7593:6:29"},{"kind":"number","nativeSrc":"7601:18:29","nodeType":"YulLiteral","src":"7601:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7590:2:29","nodeType":"YulIdentifier","src":"7590:2:29"},"nativeSrc":"7590:30:29","nodeType":"YulFunctionCall","src":"7590:30:29"},"nativeSrc":"7587:117:29","nodeType":"YulIf","src":"7587:117:29"},{"nativeSrc":"7718:83:29","nodeType":"YulAssignment","src":"7718:83:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7773:9:29","nodeType":"YulIdentifier","src":"7773:9:29"},{"name":"offset","nativeSrc":"7784:6:29","nodeType":"YulIdentifier","src":"7784:6:29"}],"functionName":{"name":"add","nativeSrc":"7769:3:29","nodeType":"YulIdentifier","src":"7769:3:29"},"nativeSrc":"7769:22:29","nodeType":"YulFunctionCall","src":"7769:22:29"},{"name":"dataEnd","nativeSrc":"7793:7:29","nodeType":"YulIdentifier","src":"7793:7:29"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"7736:32:29","nodeType":"YulIdentifier","src":"7736:32:29"},"nativeSrc":"7736:65:29","nodeType":"YulFunctionCall","src":"7736:65:29"},"variableNames":[{"name":"value0","nativeSrc":"7718:6:29","nodeType":"YulIdentifier","src":"7718:6:29"},{"name":"value1","nativeSrc":"7726:6:29","nodeType":"YulIdentifier","src":"7726:6:29"}]}]},{"nativeSrc":"7821:118:29","nodeType":"YulBlock","src":"7821:118:29","statements":[{"nativeSrc":"7836:16:29","nodeType":"YulVariableDeclaration","src":"7836:16:29","value":{"kind":"number","nativeSrc":"7850:2:29","nodeType":"YulLiteral","src":"7850:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7840:6:29","nodeType":"YulTypedName","src":"7840:6:29","type":""}]},{"nativeSrc":"7866:63:29","nodeType":"YulAssignment","src":"7866:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7901:9:29","nodeType":"YulIdentifier","src":"7901:9:29"},{"name":"offset","nativeSrc":"7912:6:29","nodeType":"YulIdentifier","src":"7912:6:29"}],"functionName":{"name":"add","nativeSrc":"7897:3:29","nodeType":"YulIdentifier","src":"7897:3:29"},"nativeSrc":"7897:22:29","nodeType":"YulFunctionCall","src":"7897:22:29"},{"name":"dataEnd","nativeSrc":"7921:7:29","nodeType":"YulIdentifier","src":"7921:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7876:20:29","nodeType":"YulIdentifier","src":"7876:20:29"},"nativeSrc":"7876:53:29","nodeType":"YulFunctionCall","src":"7876:53:29"},"variableNames":[{"name":"value2","nativeSrc":"7866:6:29","nodeType":"YulIdentifier","src":"7866:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_uint256","nativeSrc":"7272:674:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7329:9:29","nodeType":"YulTypedName","src":"7329:9:29","type":""},{"name":"dataEnd","nativeSrc":"7340:7:29","nodeType":"YulTypedName","src":"7340:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7352:6:29","nodeType":"YulTypedName","src":"7352:6:29","type":""},{"name":"value1","nativeSrc":"7360:6:29","nodeType":"YulTypedName","src":"7360:6:29","type":""},{"name":"value2","nativeSrc":"7368:6:29","nodeType":"YulTypedName","src":"7368:6:29","type":""}],"src":"7272:674:29"},{"body":{"nativeSrc":"8052:519:29","nodeType":"YulBlock","src":"8052:519:29","statements":[{"body":{"nativeSrc":"8098:83:29","nodeType":"YulBlock","src":"8098:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8100:77:29","nodeType":"YulIdentifier","src":"8100:77:29"},"nativeSrc":"8100:79:29","nodeType":"YulFunctionCall","src":"8100:79:29"},"nativeSrc":"8100:79:29","nodeType":"YulExpressionStatement","src":"8100:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8073:7:29","nodeType":"YulIdentifier","src":"8073:7:29"},{"name":"headStart","nativeSrc":"8082:9:29","nodeType":"YulIdentifier","src":"8082:9:29"}],"functionName":{"name":"sub","nativeSrc":"8069:3:29","nodeType":"YulIdentifier","src":"8069:3:29"},"nativeSrc":"8069:23:29","nodeType":"YulFunctionCall","src":"8069:23:29"},{"kind":"number","nativeSrc":"8094:2:29","nodeType":"YulLiteral","src":"8094:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8065:3:29","nodeType":"YulIdentifier","src":"8065:3:29"},"nativeSrc":"8065:32:29","nodeType":"YulFunctionCall","src":"8065:32:29"},"nativeSrc":"8062:119:29","nodeType":"YulIf","src":"8062:119:29"},{"nativeSrc":"8191:117:29","nodeType":"YulBlock","src":"8191:117:29","statements":[{"nativeSrc":"8206:15:29","nodeType":"YulVariableDeclaration","src":"8206:15:29","value":{"kind":"number","nativeSrc":"8220:1:29","nodeType":"YulLiteral","src":"8220:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8210:6:29","nodeType":"YulTypedName","src":"8210:6:29","type":""}]},{"nativeSrc":"8235:63:29","nodeType":"YulAssignment","src":"8235:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8270:9:29","nodeType":"YulIdentifier","src":"8270:9:29"},{"name":"offset","nativeSrc":"8281:6:29","nodeType":"YulIdentifier","src":"8281:6:29"}],"functionName":{"name":"add","nativeSrc":"8266:3:29","nodeType":"YulIdentifier","src":"8266:3:29"},"nativeSrc":"8266:22:29","nodeType":"YulFunctionCall","src":"8266:22:29"},{"name":"dataEnd","nativeSrc":"8290:7:29","nodeType":"YulIdentifier","src":"8290:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8245:20:29","nodeType":"YulIdentifier","src":"8245:20:29"},"nativeSrc":"8245:53:29","nodeType":"YulFunctionCall","src":"8245:53:29"},"variableNames":[{"name":"value0","nativeSrc":"8235:6:29","nodeType":"YulIdentifier","src":"8235:6:29"}]}]},{"nativeSrc":"8318:118:29","nodeType":"YulBlock","src":"8318:118:29","statements":[{"nativeSrc":"8333:16:29","nodeType":"YulVariableDeclaration","src":"8333:16:29","value":{"kind":"number","nativeSrc":"8347:2:29","nodeType":"YulLiteral","src":"8347:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8337:6:29","nodeType":"YulTypedName","src":"8337:6:29","type":""}]},{"nativeSrc":"8363:63:29","nodeType":"YulAssignment","src":"8363:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8398:9:29","nodeType":"YulIdentifier","src":"8398:9:29"},{"name":"offset","nativeSrc":"8409:6:29","nodeType":"YulIdentifier","src":"8409:6:29"}],"functionName":{"name":"add","nativeSrc":"8394:3:29","nodeType":"YulIdentifier","src":"8394:3:29"},"nativeSrc":"8394:22:29","nodeType":"YulFunctionCall","src":"8394:22:29"},{"name":"dataEnd","nativeSrc":"8418:7:29","nodeType":"YulIdentifier","src":"8418:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8373:20:29","nodeType":"YulIdentifier","src":"8373:20:29"},"nativeSrc":"8373:53:29","nodeType":"YulFunctionCall","src":"8373:53:29"},"variableNames":[{"name":"value1","nativeSrc":"8363:6:29","nodeType":"YulIdentifier","src":"8363:6:29"}]}]},{"nativeSrc":"8446:118:29","nodeType":"YulBlock","src":"8446:118:29","statements":[{"nativeSrc":"8461:16:29","nodeType":"YulVariableDeclaration","src":"8461:16:29","value":{"kind":"number","nativeSrc":"8475:2:29","nodeType":"YulLiteral","src":"8475:2:29","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8465:6:29","nodeType":"YulTypedName","src":"8465:6:29","type":""}]},{"nativeSrc":"8491:63:29","nodeType":"YulAssignment","src":"8491:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8526:9:29","nodeType":"YulIdentifier","src":"8526:9:29"},{"name":"offset","nativeSrc":"8537:6:29","nodeType":"YulIdentifier","src":"8537:6:29"}],"functionName":{"name":"add","nativeSrc":"8522:3:29","nodeType":"YulIdentifier","src":"8522:3:29"},"nativeSrc":"8522:22:29","nodeType":"YulFunctionCall","src":"8522:22:29"},{"name":"dataEnd","nativeSrc":"8546:7:29","nodeType":"YulIdentifier","src":"8546:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8501:20:29","nodeType":"YulIdentifier","src":"8501:20:29"},"nativeSrc":"8501:53:29","nodeType":"YulFunctionCall","src":"8501:53:29"},"variableNames":[{"name":"value2","nativeSrc":"8491:6:29","nodeType":"YulIdentifier","src":"8491:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256","nativeSrc":"7952:619:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8006:9:29","nodeType":"YulTypedName","src":"8006:9:29","type":""},{"name":"dataEnd","nativeSrc":"8017:7:29","nodeType":"YulTypedName","src":"8017:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8029:6:29","nodeType":"YulTypedName","src":"8029:6:29","type":""},{"name":"value1","nativeSrc":"8037:6:29","nodeType":"YulTypedName","src":"8037:6:29","type":""},{"name":"value2","nativeSrc":"8045:6:29","nodeType":"YulTypedName","src":"8045:6:29","type":""}],"src":"7952:619:29"},{"body":{"nativeSrc":"8650:66:29","nodeType":"YulBlock","src":"8650:66:29","statements":[{"nativeSrc":"8660:50:29","nodeType":"YulAssignment","src":"8660:50:29","value":{"arguments":[{"name":"value","nativeSrc":"8704:5:29","nodeType":"YulIdentifier","src":"8704:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"8673:30:29","nodeType":"YulIdentifier","src":"8673:30:29"},"nativeSrc":"8673:37:29","nodeType":"YulFunctionCall","src":"8673:37:29"},"variableNames":[{"name":"converted","nativeSrc":"8660:9:29","nodeType":"YulIdentifier","src":"8660:9:29"}]}]},"name":"convert_t_contract$_ERC20_$914_to_t_address","nativeSrc":"8577:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8630:5:29","nodeType":"YulTypedName","src":"8630:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8640:9:29","nodeType":"YulTypedName","src":"8640:9:29","type":""}],"src":"8577:139:29"},{"body":{"nativeSrc":"8800:79:29","nodeType":"YulBlock","src":"8800:79:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8817:3:29","nodeType":"YulIdentifier","src":"8817:3:29"},{"arguments":[{"name":"value","nativeSrc":"8866:5:29","nodeType":"YulIdentifier","src":"8866:5:29"}],"functionName":{"name":"convert_t_contract$_ERC20_$914_to_t_address","nativeSrc":"8822:43:29","nodeType":"YulIdentifier","src":"8822:43:29"},"nativeSrc":"8822:50:29","nodeType":"YulFunctionCall","src":"8822:50:29"}],"functionName":{"name":"mstore","nativeSrc":"8810:6:29","nodeType":"YulIdentifier","src":"8810:6:29"},"nativeSrc":"8810:63:29","nodeType":"YulFunctionCall","src":"8810:63:29"},"nativeSrc":"8810:63:29","nodeType":"YulExpressionStatement","src":"8810:63:29"}]},"name":"abi_encode_t_contract$_ERC20_$914_to_t_address_fromStack","nativeSrc":"8722:157:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8788:5:29","nodeType":"YulTypedName","src":"8788:5:29","type":""},{"name":"pos","nativeSrc":"8795:3:29","nodeType":"YulTypedName","src":"8795:3:29","type":""}],"src":"8722:157:29"},{"body":{"nativeSrc":"8996:137:29","nodeType":"YulBlock","src":"8996:137:29","statements":[{"nativeSrc":"9006:26:29","nodeType":"YulAssignment","src":"9006:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9018:9:29","nodeType":"YulIdentifier","src":"9018:9:29"},{"kind":"number","nativeSrc":"9029:2:29","nodeType":"YulLiteral","src":"9029:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9014:3:29","nodeType":"YulIdentifier","src":"9014:3:29"},"nativeSrc":"9014:18:29","nodeType":"YulFunctionCall","src":"9014:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9006:4:29","nodeType":"YulIdentifier","src":"9006:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9099:6:29","nodeType":"YulIdentifier","src":"9099:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9112:9:29","nodeType":"YulIdentifier","src":"9112:9:29"},{"kind":"number","nativeSrc":"9123:1:29","nodeType":"YulLiteral","src":"9123:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9108:3:29","nodeType":"YulIdentifier","src":"9108:3:29"},"nativeSrc":"9108:17:29","nodeType":"YulFunctionCall","src":"9108:17:29"}],"functionName":{"name":"abi_encode_t_contract$_ERC20_$914_to_t_address_fromStack","nativeSrc":"9042:56:29","nodeType":"YulIdentifier","src":"9042:56:29"},"nativeSrc":"9042:84:29","nodeType":"YulFunctionCall","src":"9042:84:29"},"nativeSrc":"9042:84:29","nodeType":"YulExpressionStatement","src":"9042:84:29"}]},"name":"abi_encode_tuple_t_contract$_ERC20_$914__to_t_address__fromStack_reversed","nativeSrc":"8885:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8968:9:29","nodeType":"YulTypedName","src":"8968:9:29","type":""},{"name":"value0","nativeSrc":"8980:6:29","nodeType":"YulTypedName","src":"8980:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8991:4:29","nodeType":"YulTypedName","src":"8991:4:29","type":""}],"src":"8885:248:29"},{"body":{"nativeSrc":"9242:571:29","nodeType":"YulBlock","src":"9242:571:29","statements":[{"body":{"nativeSrc":"9288:83:29","nodeType":"YulBlock","src":"9288:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9290:77:29","nodeType":"YulIdentifier","src":"9290:77:29"},"nativeSrc":"9290:79:29","nodeType":"YulFunctionCall","src":"9290:79:29"},"nativeSrc":"9290:79:29","nodeType":"YulExpressionStatement","src":"9290:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9263:7:29","nodeType":"YulIdentifier","src":"9263:7:29"},{"name":"headStart","nativeSrc":"9272:9:29","nodeType":"YulIdentifier","src":"9272:9:29"}],"functionName":{"name":"sub","nativeSrc":"9259:3:29","nodeType":"YulIdentifier","src":"9259:3:29"},"nativeSrc":"9259:23:29","nodeType":"YulFunctionCall","src":"9259:23:29"},{"kind":"number","nativeSrc":"9284:2:29","nodeType":"YulLiteral","src":"9284:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9255:3:29","nodeType":"YulIdentifier","src":"9255:3:29"},"nativeSrc":"9255:32:29","nodeType":"YulFunctionCall","src":"9255:32:29"},"nativeSrc":"9252:119:29","nodeType":"YulIf","src":"9252:119:29"},{"nativeSrc":"9381:117:29","nodeType":"YulBlock","src":"9381:117:29","statements":[{"nativeSrc":"9396:15:29","nodeType":"YulVariableDeclaration","src":"9396:15:29","value":{"kind":"number","nativeSrc":"9410:1:29","nodeType":"YulLiteral","src":"9410:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9400:6:29","nodeType":"YulTypedName","src":"9400:6:29","type":""}]},{"nativeSrc":"9425:63:29","nodeType":"YulAssignment","src":"9425:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9460:9:29","nodeType":"YulIdentifier","src":"9460:9:29"},{"name":"offset","nativeSrc":"9471:6:29","nodeType":"YulIdentifier","src":"9471:6:29"}],"functionName":{"name":"add","nativeSrc":"9456:3:29","nodeType":"YulIdentifier","src":"9456:3:29"},"nativeSrc":"9456:22:29","nodeType":"YulFunctionCall","src":"9456:22:29"},{"name":"dataEnd","nativeSrc":"9480:7:29","nodeType":"YulIdentifier","src":"9480:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9435:20:29","nodeType":"YulIdentifier","src":"9435:20:29"},"nativeSrc":"9435:53:29","nodeType":"YulFunctionCall","src":"9435:53:29"},"variableNames":[{"name":"value0","nativeSrc":"9425:6:29","nodeType":"YulIdentifier","src":"9425:6:29"}]}]},{"nativeSrc":"9508:298:29","nodeType":"YulBlock","src":"9508:298:29","statements":[{"nativeSrc":"9523:46:29","nodeType":"YulVariableDeclaration","src":"9523:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9554:9:29","nodeType":"YulIdentifier","src":"9554:9:29"},{"kind":"number","nativeSrc":"9565:2:29","nodeType":"YulLiteral","src":"9565:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9550:3:29","nodeType":"YulIdentifier","src":"9550:3:29"},"nativeSrc":"9550:18:29","nodeType":"YulFunctionCall","src":"9550:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"9537:12:29","nodeType":"YulIdentifier","src":"9537:12:29"},"nativeSrc":"9537:32:29","nodeType":"YulFunctionCall","src":"9537:32:29"},"variables":[{"name":"offset","nativeSrc":"9527:6:29","nodeType":"YulTypedName","src":"9527:6:29","type":""}]},{"body":{"nativeSrc":"9616:83:29","nodeType":"YulBlock","src":"9616:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9618:77:29","nodeType":"YulIdentifier","src":"9618:77:29"},"nativeSrc":"9618:79:29","nodeType":"YulFunctionCall","src":"9618:79:29"},"nativeSrc":"9618:79:29","nodeType":"YulExpressionStatement","src":"9618:79:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9588:6:29","nodeType":"YulIdentifier","src":"9588:6:29"},{"kind":"number","nativeSrc":"9596:18:29","nodeType":"YulLiteral","src":"9596:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9585:2:29","nodeType":"YulIdentifier","src":"9585:2:29"},"nativeSrc":"9585:30:29","nodeType":"YulFunctionCall","src":"9585:30:29"},"nativeSrc":"9582:117:29","nodeType":"YulIf","src":"9582:117:29"},{"nativeSrc":"9713:83:29","nodeType":"YulAssignment","src":"9713:83:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9768:9:29","nodeType":"YulIdentifier","src":"9768:9:29"},{"name":"offset","nativeSrc":"9779:6:29","nodeType":"YulIdentifier","src":"9779:6:29"}],"functionName":{"name":"add","nativeSrc":"9764:3:29","nodeType":"YulIdentifier","src":"9764:3:29"},"nativeSrc":"9764:22:29","nodeType":"YulFunctionCall","src":"9764:22:29"},{"name":"dataEnd","nativeSrc":"9788:7:29","nodeType":"YulIdentifier","src":"9788:7:29"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nativeSrc":"9731:32:29","nodeType":"YulIdentifier","src":"9731:32:29"},"nativeSrc":"9731:65:29","nodeType":"YulFunctionCall","src":"9731:65:29"},"variableNames":[{"name":"value1","nativeSrc":"9713:6:29","nodeType":"YulIdentifier","src":"9713:6:29"},{"name":"value2","nativeSrc":"9721:6:29","nodeType":"YulIdentifier","src":"9721:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptr","nativeSrc":"9139:674:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9196:9:29","nodeType":"YulTypedName","src":"9196:9:29","type":""},{"name":"dataEnd","nativeSrc":"9207:7:29","nodeType":"YulTypedName","src":"9207:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9219:6:29","nodeType":"YulTypedName","src":"9219:6:29","type":""},{"name":"value1","nativeSrc":"9227:6:29","nodeType":"YulTypedName","src":"9227:6:29","type":""},{"name":"value2","nativeSrc":"9235:6:29","nodeType":"YulTypedName","src":"9235:6:29","type":""}],"src":"9139:674:29"},{"body":{"nativeSrc":"9847:152:29","nodeType":"YulBlock","src":"9847:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9864:1:29","nodeType":"YulLiteral","src":"9864:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9867:77:29","nodeType":"YulLiteral","src":"9867:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9857:6:29","nodeType":"YulIdentifier","src":"9857:6:29"},"nativeSrc":"9857:88:29","nodeType":"YulFunctionCall","src":"9857:88:29"},"nativeSrc":"9857:88:29","nodeType":"YulExpressionStatement","src":"9857:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9961:1:29","nodeType":"YulLiteral","src":"9961:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"9964:4:29","nodeType":"YulLiteral","src":"9964:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9954:6:29","nodeType":"YulIdentifier","src":"9954:6:29"},"nativeSrc":"9954:15:29","nodeType":"YulFunctionCall","src":"9954:15:29"},"nativeSrc":"9954:15:29","nodeType":"YulExpressionStatement","src":"9954:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9985:1:29","nodeType":"YulLiteral","src":"9985:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9988:4:29","nodeType":"YulLiteral","src":"9988:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9978:6:29","nodeType":"YulIdentifier","src":"9978:6:29"},"nativeSrc":"9978:15:29","nodeType":"YulFunctionCall","src":"9978:15:29"},"nativeSrc":"9978:15:29","nodeType":"YulExpressionStatement","src":"9978:15:29"}]},"name":"panic_error_0x22","nativeSrc":"9819:180:29","nodeType":"YulFunctionDefinition","src":"9819:180:29"},{"body":{"nativeSrc":"10056:269:29","nodeType":"YulBlock","src":"10056:269:29","statements":[{"nativeSrc":"10066:22:29","nodeType":"YulAssignment","src":"10066:22:29","value":{"arguments":[{"name":"data","nativeSrc":"10080:4:29","nodeType":"YulIdentifier","src":"10080:4:29"},{"kind":"number","nativeSrc":"10086:1:29","nodeType":"YulLiteral","src":"10086:1:29","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"10076:3:29","nodeType":"YulIdentifier","src":"10076:3:29"},"nativeSrc":"10076:12:29","nodeType":"YulFunctionCall","src":"10076:12:29"},"variableNames":[{"name":"length","nativeSrc":"10066:6:29","nodeType":"YulIdentifier","src":"10066:6:29"}]},{"nativeSrc":"10097:38:29","nodeType":"YulVariableDeclaration","src":"10097:38:29","value":{"arguments":[{"name":"data","nativeSrc":"10127:4:29","nodeType":"YulIdentifier","src":"10127:4:29"},{"kind":"number","nativeSrc":"10133:1:29","nodeType":"YulLiteral","src":"10133:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"10123:3:29","nodeType":"YulIdentifier","src":"10123:3:29"},"nativeSrc":"10123:12:29","nodeType":"YulFunctionCall","src":"10123:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10101:18:29","nodeType":"YulTypedName","src":"10101:18:29","type":""}]},{"body":{"nativeSrc":"10174:51:29","nodeType":"YulBlock","src":"10174:51:29","statements":[{"nativeSrc":"10188:27:29","nodeType":"YulAssignment","src":"10188:27:29","value":{"arguments":[{"name":"length","nativeSrc":"10202:6:29","nodeType":"YulIdentifier","src":"10202:6:29"},{"kind":"number","nativeSrc":"10210:4:29","nodeType":"YulLiteral","src":"10210:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"10198:3:29","nodeType":"YulIdentifier","src":"10198:3:29"},"nativeSrc":"10198:17:29","nodeType":"YulFunctionCall","src":"10198:17:29"},"variableNames":[{"name":"length","nativeSrc":"10188:6:29","nodeType":"YulIdentifier","src":"10188:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10154:18:29","nodeType":"YulIdentifier","src":"10154:18:29"}],"functionName":{"name":"iszero","nativeSrc":"10147:6:29","nodeType":"YulIdentifier","src":"10147:6:29"},"nativeSrc":"10147:26:29","nodeType":"YulFunctionCall","src":"10147:26:29"},"nativeSrc":"10144:81:29","nodeType":"YulIf","src":"10144:81:29"},{"body":{"nativeSrc":"10277:42:29","nodeType":"YulBlock","src":"10277:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"10291:16:29","nodeType":"YulIdentifier","src":"10291:16:29"},"nativeSrc":"10291:18:29","nodeType":"YulFunctionCall","src":"10291:18:29"},"nativeSrc":"10291:18:29","nodeType":"YulExpressionStatement","src":"10291:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10241:18:29","nodeType":"YulIdentifier","src":"10241:18:29"},{"arguments":[{"name":"length","nativeSrc":"10264:6:29","nodeType":"YulIdentifier","src":"10264:6:29"},{"kind":"number","nativeSrc":"10272:2:29","nodeType":"YulLiteral","src":"10272:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10261:2:29","nodeType":"YulIdentifier","src":"10261:2:29"},"nativeSrc":"10261:14:29","nodeType":"YulFunctionCall","src":"10261:14:29"}],"functionName":{"name":"eq","nativeSrc":"10238:2:29","nodeType":"YulIdentifier","src":"10238:2:29"},"nativeSrc":"10238:38:29","nodeType":"YulFunctionCall","src":"10238:38:29"},"nativeSrc":"10235:84:29","nodeType":"YulIf","src":"10235:84:29"}]},"name":"extract_byte_array_length","nativeSrc":"10005:320:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10040:4:29","nodeType":"YulTypedName","src":"10040:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10049:6:29","nodeType":"YulTypedName","src":"10049:6:29","type":""}],"src":"10005:320:29"},{"body":{"nativeSrc":"10437:60:29","nodeType":"YulBlock","src":"10437:60:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10459:6:29","nodeType":"YulIdentifier","src":"10459:6:29"},{"kind":"number","nativeSrc":"10467:1:29","nodeType":"YulLiteral","src":"10467:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10455:3:29","nodeType":"YulIdentifier","src":"10455:3:29"},"nativeSrc":"10455:14:29","nodeType":"YulFunctionCall","src":"10455:14:29"},{"hexValue":"496e76616c6964206261746368204944","kind":"string","nativeSrc":"10471:18:29","nodeType":"YulLiteral","src":"10471:18:29","type":"","value":"Invalid batch ID"}],"functionName":{"name":"mstore","nativeSrc":"10448:6:29","nodeType":"YulIdentifier","src":"10448:6:29"},"nativeSrc":"10448:42:29","nodeType":"YulFunctionCall","src":"10448:42:29"},"nativeSrc":"10448:42:29","nodeType":"YulExpressionStatement","src":"10448:42:29"}]},"name":"store_literal_in_memory_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","nativeSrc":"10331:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10429:6:29","nodeType":"YulTypedName","src":"10429:6:29","type":""}],"src":"10331:166:29"},{"body":{"nativeSrc":"10649:220:29","nodeType":"YulBlock","src":"10649:220:29","statements":[{"nativeSrc":"10659:74:29","nodeType":"YulAssignment","src":"10659:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"10725:3:29","nodeType":"YulIdentifier","src":"10725:3:29"},{"kind":"number","nativeSrc":"10730:2:29","nodeType":"YulLiteral","src":"10730:2:29","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10666:58:29","nodeType":"YulIdentifier","src":"10666:58:29"},"nativeSrc":"10666:67:29","nodeType":"YulFunctionCall","src":"10666:67:29"},"variableNames":[{"name":"pos","nativeSrc":"10659:3:29","nodeType":"YulIdentifier","src":"10659:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10831:3:29","nodeType":"YulIdentifier","src":"10831:3:29"}],"functionName":{"name":"store_literal_in_memory_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","nativeSrc":"10742:88:29","nodeType":"YulIdentifier","src":"10742:88:29"},"nativeSrc":"10742:93:29","nodeType":"YulFunctionCall","src":"10742:93:29"},"nativeSrc":"10742:93:29","nodeType":"YulExpressionStatement","src":"10742:93:29"},{"nativeSrc":"10844:19:29","nodeType":"YulAssignment","src":"10844:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"10855:3:29","nodeType":"YulIdentifier","src":"10855:3:29"},{"kind":"number","nativeSrc":"10860:2:29","nodeType":"YulLiteral","src":"10860:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10851:3:29","nodeType":"YulIdentifier","src":"10851:3:29"},"nativeSrc":"10851:12:29","nodeType":"YulFunctionCall","src":"10851:12:29"},"variableNames":[{"name":"end","nativeSrc":"10844:3:29","nodeType":"YulIdentifier","src":"10844:3:29"}]}]},"name":"abi_encode_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b_to_t_string_memory_ptr_fromStack","nativeSrc":"10503:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10637:3:29","nodeType":"YulTypedName","src":"10637:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10645:3:29","nodeType":"YulTypedName","src":"10645:3:29","type":""}],"src":"10503:366:29"},{"body":{"nativeSrc":"11046:248:29","nodeType":"YulBlock","src":"11046:248:29","statements":[{"nativeSrc":"11056:26:29","nodeType":"YulAssignment","src":"11056:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"11068:9:29","nodeType":"YulIdentifier","src":"11068:9:29"},{"kind":"number","nativeSrc":"11079:2:29","nodeType":"YulLiteral","src":"11079:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11064:3:29","nodeType":"YulIdentifier","src":"11064:3:29"},"nativeSrc":"11064:18:29","nodeType":"YulFunctionCall","src":"11064:18:29"},"variableNames":[{"name":"tail","nativeSrc":"11056:4:29","nodeType":"YulIdentifier","src":"11056:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11103:9:29","nodeType":"YulIdentifier","src":"11103:9:29"},{"kind":"number","nativeSrc":"11114:1:29","nodeType":"YulLiteral","src":"11114:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11099:3:29","nodeType":"YulIdentifier","src":"11099:3:29"},"nativeSrc":"11099:17:29","nodeType":"YulFunctionCall","src":"11099:17:29"},{"arguments":[{"name":"tail","nativeSrc":"11122:4:29","nodeType":"YulIdentifier","src":"11122:4:29"},{"name":"headStart","nativeSrc":"11128:9:29","nodeType":"YulIdentifier","src":"11128:9:29"}],"functionName":{"name":"sub","nativeSrc":"11118:3:29","nodeType":"YulIdentifier","src":"11118:3:29"},"nativeSrc":"11118:20:29","nodeType":"YulFunctionCall","src":"11118:20:29"}],"functionName":{"name":"mstore","nativeSrc":"11092:6:29","nodeType":"YulIdentifier","src":"11092:6:29"},"nativeSrc":"11092:47:29","nodeType":"YulFunctionCall","src":"11092:47:29"},"nativeSrc":"11092:47:29","nodeType":"YulExpressionStatement","src":"11092:47:29"},{"nativeSrc":"11148:139:29","nodeType":"YulAssignment","src":"11148:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"11282:4:29","nodeType":"YulIdentifier","src":"11282:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b_to_t_string_memory_ptr_fromStack","nativeSrc":"11156:124:29","nodeType":"YulIdentifier","src":"11156:124:29"},"nativeSrc":"11156:131:29","nodeType":"YulFunctionCall","src":"11156:131:29"},"variableNames":[{"name":"tail","nativeSrc":"11148:4:29","nodeType":"YulIdentifier","src":"11148:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10875:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11026:9:29","nodeType":"YulTypedName","src":"11026:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11041:4:29","nodeType":"YulTypedName","src":"11041:4:29","type":""}],"src":"10875:419:29"},{"body":{"nativeSrc":"11406:114:29","nodeType":"YulBlock","src":"11406:114:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11428:6:29","nodeType":"YulIdentifier","src":"11428:6:29"},{"kind":"number","nativeSrc":"11436:1:29","nodeType":"YulLiteral","src":"11436:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11424:3:29","nodeType":"YulIdentifier","src":"11424:3:29"},"nativeSrc":"11424:14:29","nodeType":"YulFunctionCall","src":"11424:14:29"},{"hexValue":"42617463682068617320616c7265616479206265656e2066696e616c697a6564","kind":"string","nativeSrc":"11440:34:29","nodeType":"YulLiteral","src":"11440:34:29","type":"","value":"Batch has already been finalized"}],"functionName":{"name":"mstore","nativeSrc":"11417:6:29","nodeType":"YulIdentifier","src":"11417:6:29"},"nativeSrc":"11417:58:29","nodeType":"YulFunctionCall","src":"11417:58:29"},"nativeSrc":"11417:58:29","nodeType":"YulExpressionStatement","src":"11417:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11496:6:29","nodeType":"YulIdentifier","src":"11496:6:29"},{"kind":"number","nativeSrc":"11504:2:29","nodeType":"YulLiteral","src":"11504:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11492:3:29","nodeType":"YulIdentifier","src":"11492:3:29"},"nativeSrc":"11492:15:29","nodeType":"YulFunctionCall","src":"11492:15:29"},{"hexValue":"2e","kind":"string","nativeSrc":"11509:3:29","nodeType":"YulLiteral","src":"11509:3:29","type":"","value":"."}],"functionName":{"name":"mstore","nativeSrc":"11485:6:29","nodeType":"YulIdentifier","src":"11485:6:29"},"nativeSrc":"11485:28:29","nodeType":"YulFunctionCall","src":"11485:28:29"},"nativeSrc":"11485:28:29","nodeType":"YulExpressionStatement","src":"11485:28:29"}]},"name":"store_literal_in_memory_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","nativeSrc":"11300:220:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11398:6:29","nodeType":"YulTypedName","src":"11398:6:29","type":""}],"src":"11300:220:29"},{"body":{"nativeSrc":"11672:220:29","nodeType":"YulBlock","src":"11672:220:29","statements":[{"nativeSrc":"11682:74:29","nodeType":"YulAssignment","src":"11682:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"11748:3:29","nodeType":"YulIdentifier","src":"11748:3:29"},{"kind":"number","nativeSrc":"11753:2:29","nodeType":"YulLiteral","src":"11753:2:29","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11689:58:29","nodeType":"YulIdentifier","src":"11689:58:29"},"nativeSrc":"11689:67:29","nodeType":"YulFunctionCall","src":"11689:67:29"},"variableNames":[{"name":"pos","nativeSrc":"11682:3:29","nodeType":"YulIdentifier","src":"11682:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11854:3:29","nodeType":"YulIdentifier","src":"11854:3:29"}],"functionName":{"name":"store_literal_in_memory_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d","nativeSrc":"11765:88:29","nodeType":"YulIdentifier","src":"11765:88:29"},"nativeSrc":"11765:93:29","nodeType":"YulFunctionCall","src":"11765:93:29"},"nativeSrc":"11765:93:29","nodeType":"YulExpressionStatement","src":"11765:93:29"},{"nativeSrc":"11867:19:29","nodeType":"YulAssignment","src":"11867:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"11878:3:29","nodeType":"YulIdentifier","src":"11878:3:29"},{"kind":"number","nativeSrc":"11883:2:29","nodeType":"YulLiteral","src":"11883:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11874:3:29","nodeType":"YulIdentifier","src":"11874:3:29"},"nativeSrc":"11874:12:29","nodeType":"YulFunctionCall","src":"11874:12:29"},"variableNames":[{"name":"end","nativeSrc":"11867:3:29","nodeType":"YulIdentifier","src":"11867:3:29"}]}]},"name":"abi_encode_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d_to_t_string_memory_ptr_fromStack","nativeSrc":"11526:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11660:3:29","nodeType":"YulTypedName","src":"11660:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11668:3:29","nodeType":"YulTypedName","src":"11668:3:29","type":""}],"src":"11526:366:29"},{"body":{"nativeSrc":"12069:248:29","nodeType":"YulBlock","src":"12069:248:29","statements":[{"nativeSrc":"12079:26:29","nodeType":"YulAssignment","src":"12079:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12091:9:29","nodeType":"YulIdentifier","src":"12091:9:29"},{"kind":"number","nativeSrc":"12102:2:29","nodeType":"YulLiteral","src":"12102:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12087:3:29","nodeType":"YulIdentifier","src":"12087:3:29"},"nativeSrc":"12087:18:29","nodeType":"YulFunctionCall","src":"12087:18:29"},"variableNames":[{"name":"tail","nativeSrc":"12079:4:29","nodeType":"YulIdentifier","src":"12079:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12126:9:29","nodeType":"YulIdentifier","src":"12126:9:29"},{"kind":"number","nativeSrc":"12137:1:29","nodeType":"YulLiteral","src":"12137:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12122:3:29","nodeType":"YulIdentifier","src":"12122:3:29"},"nativeSrc":"12122:17:29","nodeType":"YulFunctionCall","src":"12122:17:29"},{"arguments":[{"name":"tail","nativeSrc":"12145:4:29","nodeType":"YulIdentifier","src":"12145:4:29"},{"name":"headStart","nativeSrc":"12151:9:29","nodeType":"YulIdentifier","src":"12151:9:29"}],"functionName":{"name":"sub","nativeSrc":"12141:3:29","nodeType":"YulIdentifier","src":"12141:3:29"},"nativeSrc":"12141:20:29","nodeType":"YulFunctionCall","src":"12141:20:29"}],"functionName":{"name":"mstore","nativeSrc":"12115:6:29","nodeType":"YulIdentifier","src":"12115:6:29"},"nativeSrc":"12115:47:29","nodeType":"YulFunctionCall","src":"12115:47:29"},"nativeSrc":"12115:47:29","nodeType":"YulExpressionStatement","src":"12115:47:29"},{"nativeSrc":"12171:139:29","nodeType":"YulAssignment","src":"12171:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"12305:4:29","nodeType":"YulIdentifier","src":"12305:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d_to_t_string_memory_ptr_fromStack","nativeSrc":"12179:124:29","nodeType":"YulIdentifier","src":"12179:124:29"},"nativeSrc":"12179:131:29","nodeType":"YulFunctionCall","src":"12179:131:29"},"variableNames":[{"name":"tail","nativeSrc":"12171:4:29","nodeType":"YulIdentifier","src":"12171:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11898:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12049:9:29","nodeType":"YulTypedName","src":"12049:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12064:4:29","nodeType":"YulTypedName","src":"12064:4:29","type":""}],"src":"11898:419:29"},{"body":{"nativeSrc":"12429:117:29","nodeType":"YulBlock","src":"12429:117:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12451:6:29","nodeType":"YulIdentifier","src":"12451:6:29"},{"kind":"number","nativeSrc":"12459:1:29","nodeType":"YulLiteral","src":"12459:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12447:3:29","nodeType":"YulIdentifier","src":"12447:3:29"},"nativeSrc":"12447:14:29","nodeType":"YulFunctionCall","src":"12447:14:29"},{"hexValue":"496e73756666696369656e742062616c616e636520666f722077697468647261","kind":"string","nativeSrc":"12463:34:29","nodeType":"YulLiteral","src":"12463:34:29","type":"","value":"Insufficient balance for withdra"}],"functionName":{"name":"mstore","nativeSrc":"12440:6:29","nodeType":"YulIdentifier","src":"12440:6:29"},"nativeSrc":"12440:58:29","nodeType":"YulFunctionCall","src":"12440:58:29"},"nativeSrc":"12440:58:29","nodeType":"YulExpressionStatement","src":"12440:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12519:6:29","nodeType":"YulIdentifier","src":"12519:6:29"},{"kind":"number","nativeSrc":"12527:2:29","nodeType":"YulLiteral","src":"12527:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12515:3:29","nodeType":"YulIdentifier","src":"12515:3:29"},"nativeSrc":"12515:15:29","nodeType":"YulFunctionCall","src":"12515:15:29"},{"hexValue":"77616c2e","kind":"string","nativeSrc":"12532:6:29","nodeType":"YulLiteral","src":"12532:6:29","type":"","value":"wal."}],"functionName":{"name":"mstore","nativeSrc":"12508:6:29","nodeType":"YulIdentifier","src":"12508:6:29"},"nativeSrc":"12508:31:29","nodeType":"YulFunctionCall","src":"12508:31:29"},"nativeSrc":"12508:31:29","nodeType":"YulExpressionStatement","src":"12508:31:29"}]},"name":"store_literal_in_memory_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","nativeSrc":"12323:223:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12421:6:29","nodeType":"YulTypedName","src":"12421:6:29","type":""}],"src":"12323:223:29"},{"body":{"nativeSrc":"12698:220:29","nodeType":"YulBlock","src":"12698:220:29","statements":[{"nativeSrc":"12708:74:29","nodeType":"YulAssignment","src":"12708:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"12774:3:29","nodeType":"YulIdentifier","src":"12774:3:29"},{"kind":"number","nativeSrc":"12779:2:29","nodeType":"YulLiteral","src":"12779:2:29","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12715:58:29","nodeType":"YulIdentifier","src":"12715:58:29"},"nativeSrc":"12715:67:29","nodeType":"YulFunctionCall","src":"12715:67:29"},"variableNames":[{"name":"pos","nativeSrc":"12708:3:29","nodeType":"YulIdentifier","src":"12708:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12880:3:29","nodeType":"YulIdentifier","src":"12880:3:29"}],"functionName":{"name":"store_literal_in_memory_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741","nativeSrc":"12791:88:29","nodeType":"YulIdentifier","src":"12791:88:29"},"nativeSrc":"12791:93:29","nodeType":"YulFunctionCall","src":"12791:93:29"},"nativeSrc":"12791:93:29","nodeType":"YulExpressionStatement","src":"12791:93:29"},{"nativeSrc":"12893:19:29","nodeType":"YulAssignment","src":"12893:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"12904:3:29","nodeType":"YulIdentifier","src":"12904:3:29"},{"kind":"number","nativeSrc":"12909:2:29","nodeType":"YulLiteral","src":"12909:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12900:3:29","nodeType":"YulIdentifier","src":"12900:3:29"},"nativeSrc":"12900:12:29","nodeType":"YulFunctionCall","src":"12900:12:29"},"variableNames":[{"name":"end","nativeSrc":"12893:3:29","nodeType":"YulIdentifier","src":"12893:3:29"}]}]},"name":"abi_encode_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741_to_t_string_memory_ptr_fromStack","nativeSrc":"12552:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12686:3:29","nodeType":"YulTypedName","src":"12686:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12694:3:29","nodeType":"YulTypedName","src":"12694:3:29","type":""}],"src":"12552:366:29"},{"body":{"nativeSrc":"13095:248:29","nodeType":"YulBlock","src":"13095:248:29","statements":[{"nativeSrc":"13105:26:29","nodeType":"YulAssignment","src":"13105:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13117:9:29","nodeType":"YulIdentifier","src":"13117:9:29"},{"kind":"number","nativeSrc":"13128:2:29","nodeType":"YulLiteral","src":"13128:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13113:3:29","nodeType":"YulIdentifier","src":"13113:3:29"},"nativeSrc":"13113:18:29","nodeType":"YulFunctionCall","src":"13113:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13105:4:29","nodeType":"YulIdentifier","src":"13105:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13152:9:29","nodeType":"YulIdentifier","src":"13152:9:29"},{"kind":"number","nativeSrc":"13163:1:29","nodeType":"YulLiteral","src":"13163:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13148:3:29","nodeType":"YulIdentifier","src":"13148:3:29"},"nativeSrc":"13148:17:29","nodeType":"YulFunctionCall","src":"13148:17:29"},{"arguments":[{"name":"tail","nativeSrc":"13171:4:29","nodeType":"YulIdentifier","src":"13171:4:29"},{"name":"headStart","nativeSrc":"13177:9:29","nodeType":"YulIdentifier","src":"13177:9:29"}],"functionName":{"name":"sub","nativeSrc":"13167:3:29","nodeType":"YulIdentifier","src":"13167:3:29"},"nativeSrc":"13167:20:29","nodeType":"YulFunctionCall","src":"13167:20:29"}],"functionName":{"name":"mstore","nativeSrc":"13141:6:29","nodeType":"YulIdentifier","src":"13141:6:29"},"nativeSrc":"13141:47:29","nodeType":"YulFunctionCall","src":"13141:47:29"},"nativeSrc":"13141:47:29","nodeType":"YulExpressionStatement","src":"13141:47:29"},{"nativeSrc":"13197:139:29","nodeType":"YulAssignment","src":"13197:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"13331:4:29","nodeType":"YulIdentifier","src":"13331:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741_to_t_string_memory_ptr_fromStack","nativeSrc":"13205:124:29","nodeType":"YulIdentifier","src":"13205:124:29"},"nativeSrc":"13205:131:29","nodeType":"YulFunctionCall","src":"13205:131:29"},"variableNames":[{"name":"tail","nativeSrc":"13197:4:29","nodeType":"YulIdentifier","src":"13197:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12924:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13075:9:29","nodeType":"YulTypedName","src":"13075:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13090:4:29","nodeType":"YulTypedName","src":"13090:4:29","type":""}],"src":"12924:419:29"},{"body":{"nativeSrc":"13377:152:29","nodeType":"YulBlock","src":"13377:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13394:1:29","nodeType":"YulLiteral","src":"13394:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13397:77:29","nodeType":"YulLiteral","src":"13397:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13387:6:29","nodeType":"YulIdentifier","src":"13387:6:29"},"nativeSrc":"13387:88:29","nodeType":"YulFunctionCall","src":"13387:88:29"},"nativeSrc":"13387:88:29","nodeType":"YulExpressionStatement","src":"13387:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13491:1:29","nodeType":"YulLiteral","src":"13491:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"13494:4:29","nodeType":"YulLiteral","src":"13494:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13484:6:29","nodeType":"YulIdentifier","src":"13484:6:29"},"nativeSrc":"13484:15:29","nodeType":"YulFunctionCall","src":"13484:15:29"},"nativeSrc":"13484:15:29","nodeType":"YulExpressionStatement","src":"13484:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13515:1:29","nodeType":"YulLiteral","src":"13515:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13518:4:29","nodeType":"YulLiteral","src":"13518:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13508:6:29","nodeType":"YulIdentifier","src":"13508:6:29"},"nativeSrc":"13508:15:29","nodeType":"YulFunctionCall","src":"13508:15:29"},"nativeSrc":"13508:15:29","nodeType":"YulExpressionStatement","src":"13508:15:29"}]},"name":"panic_error_0x11","nativeSrc":"13349:180:29","nodeType":"YulFunctionDefinition","src":"13349:180:29"},{"body":{"nativeSrc":"13580:149:29","nodeType":"YulBlock","src":"13580:149:29","statements":[{"nativeSrc":"13590:25:29","nodeType":"YulAssignment","src":"13590:25:29","value":{"arguments":[{"name":"x","nativeSrc":"13613:1:29","nodeType":"YulIdentifier","src":"13613:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13595:17:29","nodeType":"YulIdentifier","src":"13595:17:29"},"nativeSrc":"13595:20:29","nodeType":"YulFunctionCall","src":"13595:20:29"},"variableNames":[{"name":"x","nativeSrc":"13590:1:29","nodeType":"YulIdentifier","src":"13590:1:29"}]},{"nativeSrc":"13624:25:29","nodeType":"YulAssignment","src":"13624:25:29","value":{"arguments":[{"name":"y","nativeSrc":"13647:1:29","nodeType":"YulIdentifier","src":"13647:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13629:17:29","nodeType":"YulIdentifier","src":"13629:17:29"},"nativeSrc":"13629:20:29","nodeType":"YulFunctionCall","src":"13629:20:29"},"variableNames":[{"name":"y","nativeSrc":"13624:1:29","nodeType":"YulIdentifier","src":"13624:1:29"}]},{"nativeSrc":"13658:17:29","nodeType":"YulAssignment","src":"13658:17:29","value":{"arguments":[{"name":"x","nativeSrc":"13670:1:29","nodeType":"YulIdentifier","src":"13670:1:29"},{"name":"y","nativeSrc":"13673:1:29","nodeType":"YulIdentifier","src":"13673:1:29"}],"functionName":{"name":"sub","nativeSrc":"13666:3:29","nodeType":"YulIdentifier","src":"13666:3:29"},"nativeSrc":"13666:9:29","nodeType":"YulFunctionCall","src":"13666:9:29"},"variableNames":[{"name":"diff","nativeSrc":"13658:4:29","nodeType":"YulIdentifier","src":"13658:4:29"}]},{"body":{"nativeSrc":"13700:22:29","nodeType":"YulBlock","src":"13700:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13702:16:29","nodeType":"YulIdentifier","src":"13702:16:29"},"nativeSrc":"13702:18:29","nodeType":"YulFunctionCall","src":"13702:18:29"},"nativeSrc":"13702:18:29","nodeType":"YulExpressionStatement","src":"13702:18:29"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"13691:4:29","nodeType":"YulIdentifier","src":"13691:4:29"},{"name":"x","nativeSrc":"13697:1:29","nodeType":"YulIdentifier","src":"13697:1:29"}],"functionName":{"name":"gt","nativeSrc":"13688:2:29","nodeType":"YulIdentifier","src":"13688:2:29"},"nativeSrc":"13688:11:29","nodeType":"YulFunctionCall","src":"13688:11:29"},"nativeSrc":"13685:37:29","nodeType":"YulIf","src":"13685:37:29"}]},"name":"checked_sub_t_uint256","nativeSrc":"13535:194:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13566:1:29","nodeType":"YulTypedName","src":"13566:1:29","type":""},{"name":"y","nativeSrc":"13569:1:29","nodeType":"YulTypedName","src":"13569:1:29","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"13575:4:29","nodeType":"YulTypedName","src":"13575:4:29","type":""}],"src":"13535:194:29"},{"body":{"nativeSrc":"13861:206:29","nodeType":"YulBlock","src":"13861:206:29","statements":[{"nativeSrc":"13871:26:29","nodeType":"YulAssignment","src":"13871:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13883:9:29","nodeType":"YulIdentifier","src":"13883:9:29"},{"kind":"number","nativeSrc":"13894:2:29","nodeType":"YulLiteral","src":"13894:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13879:3:29","nodeType":"YulIdentifier","src":"13879:3:29"},"nativeSrc":"13879:18:29","nodeType":"YulFunctionCall","src":"13879:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13871:4:29","nodeType":"YulIdentifier","src":"13871:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13951:6:29","nodeType":"YulIdentifier","src":"13951:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13964:9:29","nodeType":"YulIdentifier","src":"13964:9:29"},{"kind":"number","nativeSrc":"13975:1:29","nodeType":"YulLiteral","src":"13975:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13960:3:29","nodeType":"YulIdentifier","src":"13960:3:29"},"nativeSrc":"13960:17:29","nodeType":"YulFunctionCall","src":"13960:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13907:43:29","nodeType":"YulIdentifier","src":"13907:43:29"},"nativeSrc":"13907:71:29","nodeType":"YulFunctionCall","src":"13907:71:29"},"nativeSrc":"13907:71:29","nodeType":"YulExpressionStatement","src":"13907:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14032:6:29","nodeType":"YulIdentifier","src":"14032:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14045:9:29","nodeType":"YulIdentifier","src":"14045:9:29"},{"kind":"number","nativeSrc":"14056:2:29","nodeType":"YulLiteral","src":"14056:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14041:3:29","nodeType":"YulIdentifier","src":"14041:3:29"},"nativeSrc":"14041:18:29","nodeType":"YulFunctionCall","src":"14041:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13988:43:29","nodeType":"YulIdentifier","src":"13988:43:29"},"nativeSrc":"13988:72:29","nodeType":"YulFunctionCall","src":"13988:72:29"},"nativeSrc":"13988:72:29","nodeType":"YulExpressionStatement","src":"13988:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"13735:332:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13825:9:29","nodeType":"YulTypedName","src":"13825:9:29","type":""},{"name":"value1","nativeSrc":"13837:6:29","nodeType":"YulTypedName","src":"13837:6:29","type":""},{"name":"value0","nativeSrc":"13845:6:29","nodeType":"YulTypedName","src":"13845:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13856:4:29","nodeType":"YulTypedName","src":"13856:4:29","type":""}],"src":"13735:332:29"},{"body":{"nativeSrc":"14113:76:29","nodeType":"YulBlock","src":"14113:76:29","statements":[{"body":{"nativeSrc":"14167:16:29","nodeType":"YulBlock","src":"14167:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14176:1:29","nodeType":"YulLiteral","src":"14176:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"14179:1:29","nodeType":"YulLiteral","src":"14179:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14169:6:29","nodeType":"YulIdentifier","src":"14169:6:29"},"nativeSrc":"14169:12:29","nodeType":"YulFunctionCall","src":"14169:12:29"},"nativeSrc":"14169:12:29","nodeType":"YulExpressionStatement","src":"14169:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14136:5:29","nodeType":"YulIdentifier","src":"14136:5:29"},{"arguments":[{"name":"value","nativeSrc":"14158:5:29","nodeType":"YulIdentifier","src":"14158:5:29"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"14143:14:29","nodeType":"YulIdentifier","src":"14143:14:29"},"nativeSrc":"14143:21:29","nodeType":"YulFunctionCall","src":"14143:21:29"}],"functionName":{"name":"eq","nativeSrc":"14133:2:29","nodeType":"YulIdentifier","src":"14133:2:29"},"nativeSrc":"14133:32:29","nodeType":"YulFunctionCall","src":"14133:32:29"}],"functionName":{"name":"iszero","nativeSrc":"14126:6:29","nodeType":"YulIdentifier","src":"14126:6:29"},"nativeSrc":"14126:40:29","nodeType":"YulFunctionCall","src":"14126:40:29"},"nativeSrc":"14123:60:29","nodeType":"YulIf","src":"14123:60:29"}]},"name":"validator_revert_t_bool","nativeSrc":"14073:116:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14106:5:29","nodeType":"YulTypedName","src":"14106:5:29","type":""}],"src":"14073:116:29"},{"body":{"nativeSrc":"14255:77:29","nodeType":"YulBlock","src":"14255:77:29","statements":[{"nativeSrc":"14265:22:29","nodeType":"YulAssignment","src":"14265:22:29","value":{"arguments":[{"name":"offset","nativeSrc":"14280:6:29","nodeType":"YulIdentifier","src":"14280:6:29"}],"functionName":{"name":"mload","nativeSrc":"14274:5:29","nodeType":"YulIdentifier","src":"14274:5:29"},"nativeSrc":"14274:13:29","nodeType":"YulFunctionCall","src":"14274:13:29"},"variableNames":[{"name":"value","nativeSrc":"14265:5:29","nodeType":"YulIdentifier","src":"14265:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14320:5:29","nodeType":"YulIdentifier","src":"14320:5:29"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"14296:23:29","nodeType":"YulIdentifier","src":"14296:23:29"},"nativeSrc":"14296:30:29","nodeType":"YulFunctionCall","src":"14296:30:29"},"nativeSrc":"14296:30:29","nodeType":"YulExpressionStatement","src":"14296:30:29"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"14195:137:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14233:6:29","nodeType":"YulTypedName","src":"14233:6:29","type":""},{"name":"end","nativeSrc":"14241:3:29","nodeType":"YulTypedName","src":"14241:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14249:5:29","nodeType":"YulTypedName","src":"14249:5:29","type":""}],"src":"14195:137:29"},{"body":{"nativeSrc":"14412:271:29","nodeType":"YulBlock","src":"14412:271:29","statements":[{"body":{"nativeSrc":"14458:83:29","nodeType":"YulBlock","src":"14458:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14460:77:29","nodeType":"YulIdentifier","src":"14460:77:29"},"nativeSrc":"14460:79:29","nodeType":"YulFunctionCall","src":"14460:79:29"},"nativeSrc":"14460:79:29","nodeType":"YulExpressionStatement","src":"14460:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14433:7:29","nodeType":"YulIdentifier","src":"14433:7:29"},{"name":"headStart","nativeSrc":"14442:9:29","nodeType":"YulIdentifier","src":"14442:9:29"}],"functionName":{"name":"sub","nativeSrc":"14429:3:29","nodeType":"YulIdentifier","src":"14429:3:29"},"nativeSrc":"14429:23:29","nodeType":"YulFunctionCall","src":"14429:23:29"},{"kind":"number","nativeSrc":"14454:2:29","nodeType":"YulLiteral","src":"14454:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14425:3:29","nodeType":"YulIdentifier","src":"14425:3:29"},"nativeSrc":"14425:32:29","nodeType":"YulFunctionCall","src":"14425:32:29"},"nativeSrc":"14422:119:29","nodeType":"YulIf","src":"14422:119:29"},{"nativeSrc":"14551:125:29","nodeType":"YulBlock","src":"14551:125:29","statements":[{"nativeSrc":"14566:15:29","nodeType":"YulVariableDeclaration","src":"14566:15:29","value":{"kind":"number","nativeSrc":"14580:1:29","nodeType":"YulLiteral","src":"14580:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14570:6:29","nodeType":"YulTypedName","src":"14570:6:29","type":""}]},{"nativeSrc":"14595:71:29","nodeType":"YulAssignment","src":"14595:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14638:9:29","nodeType":"YulIdentifier","src":"14638:9:29"},{"name":"offset","nativeSrc":"14649:6:29","nodeType":"YulIdentifier","src":"14649:6:29"}],"functionName":{"name":"add","nativeSrc":"14634:3:29","nodeType":"YulIdentifier","src":"14634:3:29"},"nativeSrc":"14634:22:29","nodeType":"YulFunctionCall","src":"14634:22:29"},{"name":"dataEnd","nativeSrc":"14658:7:29","nodeType":"YulIdentifier","src":"14658:7:29"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"14605:28:29","nodeType":"YulIdentifier","src":"14605:28:29"},"nativeSrc":"14605:61:29","nodeType":"YulFunctionCall","src":"14605:61:29"},"variableNames":[{"name":"value0","nativeSrc":"14595:6:29","nodeType":"YulIdentifier","src":"14595:6:29"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"14338:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14382:9:29","nodeType":"YulTypedName","src":"14382:9:29","type":""},{"name":"dataEnd","nativeSrc":"14393:7:29","nodeType":"YulTypedName","src":"14393:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14405:6:29","nodeType":"YulTypedName","src":"14405:6:29","type":""}],"src":"14338:345:29"},{"body":{"nativeSrc":"14743:87:29","nodeType":"YulBlock","src":"14743:87:29","statements":[{"nativeSrc":"14753:11:29","nodeType":"YulAssignment","src":"14753:11:29","value":{"name":"ptr","nativeSrc":"14761:3:29","nodeType":"YulIdentifier","src":"14761:3:29"},"variableNames":[{"name":"data","nativeSrc":"14753:4:29","nodeType":"YulIdentifier","src":"14753:4:29"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14781:1:29","nodeType":"YulLiteral","src":"14781:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"14784:3:29","nodeType":"YulIdentifier","src":"14784:3:29"}],"functionName":{"name":"mstore","nativeSrc":"14774:6:29","nodeType":"YulIdentifier","src":"14774:6:29"},"nativeSrc":"14774:14:29","nodeType":"YulFunctionCall","src":"14774:14:29"},"nativeSrc":"14774:14:29","nodeType":"YulExpressionStatement","src":"14774:14:29"},{"nativeSrc":"14797:26:29","nodeType":"YulAssignment","src":"14797:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"14815:1:29","nodeType":"YulLiteral","src":"14815:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"14818:4:29","nodeType":"YulLiteral","src":"14818:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14805:9:29","nodeType":"YulIdentifier","src":"14805:9:29"},"nativeSrc":"14805:18:29","nodeType":"YulFunctionCall","src":"14805:18:29"},"variableNames":[{"name":"data","nativeSrc":"14797:4:29","nodeType":"YulIdentifier","src":"14797:4:29"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"14689:141:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14730:3:29","nodeType":"YulTypedName","src":"14730:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14738:4:29","nodeType":"YulTypedName","src":"14738:4:29","type":""}],"src":"14689:141:29"},{"body":{"nativeSrc":"14949:742:29","nodeType":"YulBlock","src":"14949:742:29","statements":[{"nativeSrc":"14959:29:29","nodeType":"YulVariableDeclaration","src":"14959:29:29","value":{"arguments":[{"name":"value","nativeSrc":"14982:5:29","nodeType":"YulIdentifier","src":"14982:5:29"}],"functionName":{"name":"sload","nativeSrc":"14976:5:29","nodeType":"YulIdentifier","src":"14976:5:29"},"nativeSrc":"14976:12:29","nodeType":"YulFunctionCall","src":"14976:12:29"},"variables":[{"name":"slotValue","nativeSrc":"14963:9:29","nodeType":"YulTypedName","src":"14963:9:29","type":""}]},{"nativeSrc":"14997:50:29","nodeType":"YulVariableDeclaration","src":"14997:50:29","value":{"arguments":[{"name":"slotValue","nativeSrc":"15037:9:29","nodeType":"YulIdentifier","src":"15037:9:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"15011:25:29","nodeType":"YulIdentifier","src":"15011:25:29"},"nativeSrc":"15011:36:29","nodeType":"YulFunctionCall","src":"15011:36:29"},"variables":[{"name":"length","nativeSrc":"15001:6:29","nodeType":"YulTypedName","src":"15001:6:29","type":""}]},{"nativeSrc":"15056:78:29","nodeType":"YulAssignment","src":"15056:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"15122:3:29","nodeType":"YulIdentifier","src":"15122:3:29"},{"name":"length","nativeSrc":"15127:6:29","nodeType":"YulIdentifier","src":"15127:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15063:58:29","nodeType":"YulIdentifier","src":"15063:58:29"},"nativeSrc":"15063:71:29","nodeType":"YulFunctionCall","src":"15063:71:29"},"variableNames":[{"name":"pos","nativeSrc":"15056:3:29","nodeType":"YulIdentifier","src":"15056:3:29"}]},{"cases":[{"body":{"nativeSrc":"15183:157:29","nodeType":"YulBlock","src":"15183:157:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15236:3:29","nodeType":"YulIdentifier","src":"15236:3:29"},{"arguments":[{"name":"slotValue","nativeSrc":"15245:9:29","nodeType":"YulIdentifier","src":"15245:9:29"},{"arguments":[{"kind":"number","nativeSrc":"15260:4:29","nodeType":"YulLiteral","src":"15260:4:29","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"15256:3:29","nodeType":"YulIdentifier","src":"15256:3:29"},"nativeSrc":"15256:9:29","nodeType":"YulFunctionCall","src":"15256:9:29"}],"functionName":{"name":"and","nativeSrc":"15241:3:29","nodeType":"YulIdentifier","src":"15241:3:29"},"nativeSrc":"15241:25:29","nodeType":"YulFunctionCall","src":"15241:25:29"}],"functionName":{"name":"mstore","nativeSrc":"15229:6:29","nodeType":"YulIdentifier","src":"15229:6:29"},"nativeSrc":"15229:38:29","nodeType":"YulFunctionCall","src":"15229:38:29"},"nativeSrc":"15229:38:29","nodeType":"YulExpressionStatement","src":"15229:38:29"},{"nativeSrc":"15280:50:29","nodeType":"YulAssignment","src":"15280:50:29","value":{"arguments":[{"name":"pos","nativeSrc":"15291:3:29","nodeType":"YulIdentifier","src":"15291:3:29"},{"arguments":[{"kind":"number","nativeSrc":"15300:4:29","nodeType":"YulLiteral","src":"15300:4:29","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"15320:6:29","nodeType":"YulIdentifier","src":"15320:6:29"}],"functionName":{"name":"iszero","nativeSrc":"15313:6:29","nodeType":"YulIdentifier","src":"15313:6:29"},"nativeSrc":"15313:14:29","nodeType":"YulFunctionCall","src":"15313:14:29"}],"functionName":{"name":"iszero","nativeSrc":"15306:6:29","nodeType":"YulIdentifier","src":"15306:6:29"},"nativeSrc":"15306:22:29","nodeType":"YulFunctionCall","src":"15306:22:29"}],"functionName":{"name":"mul","nativeSrc":"15296:3:29","nodeType":"YulIdentifier","src":"15296:3:29"},"nativeSrc":"15296:33:29","nodeType":"YulFunctionCall","src":"15296:33:29"}],"functionName":{"name":"add","nativeSrc":"15287:3:29","nodeType":"YulIdentifier","src":"15287:3:29"},"nativeSrc":"15287:43:29","nodeType":"YulFunctionCall","src":"15287:43:29"},"variableNames":[{"name":"ret","nativeSrc":"15280:3:29","nodeType":"YulIdentifier","src":"15280:3:29"}]}]},"nativeSrc":"15176:164:29","nodeType":"YulCase","src":"15176:164:29","value":{"kind":"number","nativeSrc":"15181:1:29","nodeType":"YulLiteral","src":"15181:1:29","type":"","value":"0"}},{"body":{"nativeSrc":"15356:329:29","nodeType":"YulBlock","src":"15356:329:29","statements":[{"nativeSrc":"15401:53:29","nodeType":"YulVariableDeclaration","src":"15401:53:29","value":{"arguments":[{"name":"value","nativeSrc":"15448:5:29","nodeType":"YulIdentifier","src":"15448:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"15416:31:29","nodeType":"YulIdentifier","src":"15416:31:29"},"nativeSrc":"15416:38:29","nodeType":"YulFunctionCall","src":"15416:38:29"},"variables":[{"name":"dataPos","nativeSrc":"15405:7:29","nodeType":"YulTypedName","src":"15405:7:29","type":""}]},{"nativeSrc":"15467:10:29","nodeType":"YulVariableDeclaration","src":"15467:10:29","value":{"kind":"number","nativeSrc":"15476:1:29","nodeType":"YulLiteral","src":"15476:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"15471:1:29","nodeType":"YulTypedName","src":"15471:1:29","type":""}]},{"body":{"nativeSrc":"15534:110:29","nodeType":"YulBlock","src":"15534:110:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"15563:3:29","nodeType":"YulIdentifier","src":"15563:3:29"},{"name":"i","nativeSrc":"15568:1:29","nodeType":"YulIdentifier","src":"15568:1:29"}],"functionName":{"name":"add","nativeSrc":"15559:3:29","nodeType":"YulIdentifier","src":"15559:3:29"},"nativeSrc":"15559:11:29","nodeType":"YulFunctionCall","src":"15559:11:29"},{"arguments":[{"name":"dataPos","nativeSrc":"15578:7:29","nodeType":"YulIdentifier","src":"15578:7:29"}],"functionName":{"name":"sload","nativeSrc":"15572:5:29","nodeType":"YulIdentifier","src":"15572:5:29"},"nativeSrc":"15572:14:29","nodeType":"YulFunctionCall","src":"15572:14:29"}],"functionName":{"name":"mstore","nativeSrc":"15552:6:29","nodeType":"YulIdentifier","src":"15552:6:29"},"nativeSrc":"15552:35:29","nodeType":"YulFunctionCall","src":"15552:35:29"},"nativeSrc":"15552:35:29","nodeType":"YulExpressionStatement","src":"15552:35:29"},{"nativeSrc":"15604:26:29","nodeType":"YulAssignment","src":"15604:26:29","value":{"arguments":[{"name":"dataPos","nativeSrc":"15619:7:29","nodeType":"YulIdentifier","src":"15619:7:29"},{"kind":"number","nativeSrc":"15628:1:29","nodeType":"YulLiteral","src":"15628:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15615:3:29","nodeType":"YulIdentifier","src":"15615:3:29"},"nativeSrc":"15615:15:29","nodeType":"YulFunctionCall","src":"15615:15:29"},"variableNames":[{"name":"dataPos","nativeSrc":"15604:7:29","nodeType":"YulIdentifier","src":"15604:7:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"15501:1:29","nodeType":"YulIdentifier","src":"15501:1:29"},{"name":"length","nativeSrc":"15504:6:29","nodeType":"YulIdentifier","src":"15504:6:29"}],"functionName":{"name":"lt","nativeSrc":"15498:2:29","nodeType":"YulIdentifier","src":"15498:2:29"},"nativeSrc":"15498:13:29","nodeType":"YulFunctionCall","src":"15498:13:29"},"nativeSrc":"15490:154:29","nodeType":"YulForLoop","post":{"nativeSrc":"15512:21:29","nodeType":"YulBlock","src":"15512:21:29","statements":[{"nativeSrc":"15514:17:29","nodeType":"YulAssignment","src":"15514:17:29","value":{"arguments":[{"name":"i","nativeSrc":"15523:1:29","nodeType":"YulIdentifier","src":"15523:1:29"},{"kind":"number","nativeSrc":"15526:4:29","nodeType":"YulLiteral","src":"15526:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15519:3:29","nodeType":"YulIdentifier","src":"15519:3:29"},"nativeSrc":"15519:12:29","nodeType":"YulFunctionCall","src":"15519:12:29"},"variableNames":[{"name":"i","nativeSrc":"15514:1:29","nodeType":"YulIdentifier","src":"15514:1:29"}]}]},"pre":{"nativeSrc":"15494:3:29","nodeType":"YulBlock","src":"15494:3:29","statements":[]},"src":"15490:154:29"},{"nativeSrc":"15657:18:29","nodeType":"YulAssignment","src":"15657:18:29","value":{"arguments":[{"name":"pos","nativeSrc":"15668:3:29","nodeType":"YulIdentifier","src":"15668:3:29"},{"name":"i","nativeSrc":"15673:1:29","nodeType":"YulIdentifier","src":"15673:1:29"}],"functionName":{"name":"add","nativeSrc":"15664:3:29","nodeType":"YulIdentifier","src":"15664:3:29"},"nativeSrc":"15664:11:29","nodeType":"YulFunctionCall","src":"15664:11:29"},"variableNames":[{"name":"ret","nativeSrc":"15657:3:29","nodeType":"YulIdentifier","src":"15657:3:29"}]}]},"nativeSrc":"15349:336:29","nodeType":"YulCase","src":"15349:336:29","value":{"kind":"number","nativeSrc":"15354:1:29","nodeType":"YulLiteral","src":"15354:1:29","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nativeSrc":"15154:9:29","nodeType":"YulIdentifier","src":"15154:9:29"},{"kind":"number","nativeSrc":"15165:1:29","nodeType":"YulLiteral","src":"15165:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"15150:3:29","nodeType":"YulIdentifier","src":"15150:3:29"},"nativeSrc":"15150:17:29","nodeType":"YulFunctionCall","src":"15150:17:29"},"nativeSrc":"15143:542:29","nodeType":"YulSwitch","src":"15143:542:29"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"14860:831:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14930:5:29","nodeType":"YulTypedName","src":"14930:5:29","type":""},{"name":"pos","nativeSrc":"14937:3:29","nodeType":"YulTypedName","src":"14937:3:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"14945:3:29","nodeType":"YulTypedName","src":"14945:3:29","type":""}],"src":"14860:831:29"},{"body":{"nativeSrc":"15761:84:29","nodeType":"YulBlock","src":"15761:84:29","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"15785:3:29","nodeType":"YulIdentifier","src":"15785:3:29"},{"name":"src","nativeSrc":"15790:3:29","nodeType":"YulIdentifier","src":"15790:3:29"},{"name":"length","nativeSrc":"15795:6:29","nodeType":"YulIdentifier","src":"15795:6:29"}],"functionName":{"name":"calldatacopy","nativeSrc":"15772:12:29","nodeType":"YulIdentifier","src":"15772:12:29"},"nativeSrc":"15772:30:29","nodeType":"YulFunctionCall","src":"15772:30:29"},"nativeSrc":"15772:30:29","nodeType":"YulExpressionStatement","src":"15772:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"15822:3:29","nodeType":"YulIdentifier","src":"15822:3:29"},{"name":"length","nativeSrc":"15827:6:29","nodeType":"YulIdentifier","src":"15827:6:29"}],"functionName":{"name":"add","nativeSrc":"15818:3:29","nodeType":"YulIdentifier","src":"15818:3:29"},"nativeSrc":"15818:16:29","nodeType":"YulFunctionCall","src":"15818:16:29"},{"kind":"number","nativeSrc":"15836:1:29","nodeType":"YulLiteral","src":"15836:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"15811:6:29","nodeType":"YulIdentifier","src":"15811:6:29"},"nativeSrc":"15811:27:29","nodeType":"YulFunctionCall","src":"15811:27:29"},"nativeSrc":"15811:27:29","nodeType":"YulExpressionStatement","src":"15811:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"15697:148:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"15743:3:29","nodeType":"YulTypedName","src":"15743:3:29","type":""},{"name":"dst","nativeSrc":"15748:3:29","nodeType":"YulTypedName","src":"15748:3:29","type":""},{"name":"length","nativeSrc":"15753:6:29","nodeType":"YulTypedName","src":"15753:6:29","type":""}],"src":"15697:148:29"},{"body":{"nativeSrc":"15977:215:29","nodeType":"YulBlock","src":"15977:215:29","statements":[{"nativeSrc":"15987:78:29","nodeType":"YulAssignment","src":"15987:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"16053:3:29","nodeType":"YulIdentifier","src":"16053:3:29"},{"name":"length","nativeSrc":"16058:6:29","nodeType":"YulIdentifier","src":"16058:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15994:58:29","nodeType":"YulIdentifier","src":"15994:58:29"},"nativeSrc":"15994:71:29","nodeType":"YulFunctionCall","src":"15994:71:29"},"variableNames":[{"name":"pos","nativeSrc":"15987:3:29","nodeType":"YulIdentifier","src":"15987:3:29"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"16112:5:29","nodeType":"YulIdentifier","src":"16112:5:29"},{"name":"pos","nativeSrc":"16119:3:29","nodeType":"YulIdentifier","src":"16119:3:29"},{"name":"length","nativeSrc":"16124:6:29","nodeType":"YulIdentifier","src":"16124:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"16075:36:29","nodeType":"YulIdentifier","src":"16075:36:29"},"nativeSrc":"16075:56:29","nodeType":"YulFunctionCall","src":"16075:56:29"},"nativeSrc":"16075:56:29","nodeType":"YulExpressionStatement","src":"16075:56:29"},{"nativeSrc":"16140:46:29","nodeType":"YulAssignment","src":"16140:46:29","value":{"arguments":[{"name":"pos","nativeSrc":"16151:3:29","nodeType":"YulIdentifier","src":"16151:3:29"},{"arguments":[{"name":"length","nativeSrc":"16178:6:29","nodeType":"YulIdentifier","src":"16178:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16156:21:29","nodeType":"YulIdentifier","src":"16156:21:29"},"nativeSrc":"16156:29:29","nodeType":"YulFunctionCall","src":"16156:29:29"}],"functionName":{"name":"add","nativeSrc":"16147:3:29","nodeType":"YulIdentifier","src":"16147:3:29"},"nativeSrc":"16147:39:29","nodeType":"YulFunctionCall","src":"16147:39:29"},"variableNames":[{"name":"end","nativeSrc":"16140:3:29","nodeType":"YulIdentifier","src":"16140:3:29"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"15875:317:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"15950:5:29","nodeType":"YulTypedName","src":"15950:5:29","type":""},{"name":"length","nativeSrc":"15957:6:29","nodeType":"YulTypedName","src":"15957:6:29","type":""},{"name":"pos","nativeSrc":"15965:3:29","nodeType":"YulTypedName","src":"15965:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15973:3:29","nodeType":"YulTypedName","src":"15973:3:29","type":""}],"src":"15875:317:29"},{"body":{"nativeSrc":"16427:520:29","nodeType":"YulBlock","src":"16427:520:29","statements":[{"nativeSrc":"16437:27:29","nodeType":"YulAssignment","src":"16437:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"16449:9:29","nodeType":"YulIdentifier","src":"16449:9:29"},{"kind":"number","nativeSrc":"16460:3:29","nodeType":"YulLiteral","src":"16460:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16445:3:29","nodeType":"YulIdentifier","src":"16445:3:29"},"nativeSrc":"16445:19:29","nodeType":"YulFunctionCall","src":"16445:19:29"},"variableNames":[{"name":"tail","nativeSrc":"16437:4:29","nodeType":"YulIdentifier","src":"16437:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16518:6:29","nodeType":"YulIdentifier","src":"16518:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"16531:9:29","nodeType":"YulIdentifier","src":"16531:9:29"},{"kind":"number","nativeSrc":"16542:1:29","nodeType":"YulLiteral","src":"16542:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16527:3:29","nodeType":"YulIdentifier","src":"16527:3:29"},"nativeSrc":"16527:17:29","nodeType":"YulFunctionCall","src":"16527:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16474:43:29","nodeType":"YulIdentifier","src":"16474:43:29"},"nativeSrc":"16474:71:29","nodeType":"YulFunctionCall","src":"16474:71:29"},"nativeSrc":"16474:71:29","nodeType":"YulExpressionStatement","src":"16474:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16599:6:29","nodeType":"YulIdentifier","src":"16599:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"16612:9:29","nodeType":"YulIdentifier","src":"16612:9:29"},{"kind":"number","nativeSrc":"16623:2:29","nodeType":"YulLiteral","src":"16623:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16608:3:29","nodeType":"YulIdentifier","src":"16608:3:29"},"nativeSrc":"16608:18:29","nodeType":"YulFunctionCall","src":"16608:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16555:43:29","nodeType":"YulIdentifier","src":"16555:43:29"},"nativeSrc":"16555:72:29","nodeType":"YulFunctionCall","src":"16555:72:29"},"nativeSrc":"16555:72:29","nodeType":"YulExpressionStatement","src":"16555:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16648:9:29","nodeType":"YulIdentifier","src":"16648:9:29"},{"kind":"number","nativeSrc":"16659:2:29","nodeType":"YulLiteral","src":"16659:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16644:3:29","nodeType":"YulIdentifier","src":"16644:3:29"},"nativeSrc":"16644:18:29","nodeType":"YulFunctionCall","src":"16644:18:29"},{"arguments":[{"name":"tail","nativeSrc":"16668:4:29","nodeType":"YulIdentifier","src":"16668:4:29"},{"name":"headStart","nativeSrc":"16674:9:29","nodeType":"YulIdentifier","src":"16674:9:29"}],"functionName":{"name":"sub","nativeSrc":"16664:3:29","nodeType":"YulIdentifier","src":"16664:3:29"},"nativeSrc":"16664:20:29","nodeType":"YulFunctionCall","src":"16664:20:29"}],"functionName":{"name":"mstore","nativeSrc":"16637:6:29","nodeType":"YulIdentifier","src":"16637:6:29"},"nativeSrc":"16637:48:29","nodeType":"YulFunctionCall","src":"16637:48:29"},"nativeSrc":"16637:48:29","nodeType":"YulExpressionStatement","src":"16637:48:29"},{"nativeSrc":"16694:83:29","nodeType":"YulAssignment","src":"16694:83:29","value":{"arguments":[{"name":"value2","nativeSrc":"16763:6:29","nodeType":"YulIdentifier","src":"16763:6:29"},{"name":"tail","nativeSrc":"16772:4:29","nodeType":"YulIdentifier","src":"16772:4:29"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nativeSrc":"16702:60:29","nodeType":"YulIdentifier","src":"16702:60:29"},"nativeSrc":"16702:75:29","nodeType":"YulFunctionCall","src":"16702:75:29"},"variableNames":[{"name":"tail","nativeSrc":"16694:4:29","nodeType":"YulIdentifier","src":"16694:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16798:9:29","nodeType":"YulIdentifier","src":"16798:9:29"},{"kind":"number","nativeSrc":"16809:2:29","nodeType":"YulLiteral","src":"16809:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16794:3:29","nodeType":"YulIdentifier","src":"16794:3:29"},"nativeSrc":"16794:18:29","nodeType":"YulFunctionCall","src":"16794:18:29"},{"arguments":[{"name":"tail","nativeSrc":"16818:4:29","nodeType":"YulIdentifier","src":"16818:4:29"},{"name":"headStart","nativeSrc":"16824:9:29","nodeType":"YulIdentifier","src":"16824:9:29"}],"functionName":{"name":"sub","nativeSrc":"16814:3:29","nodeType":"YulIdentifier","src":"16814:3:29"},"nativeSrc":"16814:20:29","nodeType":"YulFunctionCall","src":"16814:20:29"}],"functionName":{"name":"mstore","nativeSrc":"16787:6:29","nodeType":"YulIdentifier","src":"16787:6:29"},"nativeSrc":"16787:48:29","nodeType":"YulFunctionCall","src":"16787:48:29"},"nativeSrc":"16787:48:29","nodeType":"YulExpressionStatement","src":"16787:48:29"},{"nativeSrc":"16844:96:29","nodeType":"YulAssignment","src":"16844:96:29","value":{"arguments":[{"name":"value3","nativeSrc":"16918:6:29","nodeType":"YulIdentifier","src":"16918:6:29"},{"name":"value4","nativeSrc":"16926:6:29","nodeType":"YulIdentifier","src":"16926:6:29"},{"name":"tail","nativeSrc":"16935:4:29","nodeType":"YulIdentifier","src":"16935:4:29"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"16852:65:29","nodeType":"YulIdentifier","src":"16852:65:29"},"nativeSrc":"16852:88:29","nodeType":"YulFunctionCall","src":"16852:88:29"},"variableNames":[{"name":"tail","nativeSrc":"16844:4:29","nodeType":"YulIdentifier","src":"16844:4:29"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16198:749:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16367:9:29","nodeType":"YulTypedName","src":"16367:9:29","type":""},{"name":"value4","nativeSrc":"16379:6:29","nodeType":"YulTypedName","src":"16379:6:29","type":""},{"name":"value3","nativeSrc":"16387:6:29","nodeType":"YulTypedName","src":"16387:6:29","type":""},{"name":"value2","nativeSrc":"16395:6:29","nodeType":"YulTypedName","src":"16395:6:29","type":""},{"name":"value1","nativeSrc":"16403:6:29","nodeType":"YulTypedName","src":"16403:6:29","type":""},{"name":"value0","nativeSrc":"16411:6:29","nodeType":"YulTypedName","src":"16411:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16422:4:29","nodeType":"YulTypedName","src":"16422:4:29","type":""}],"src":"16198:749:29"},{"body":{"nativeSrc":"17059:118:29","nodeType":"YulBlock","src":"17059:118:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17081:6:29","nodeType":"YulIdentifier","src":"17081:6:29"},{"kind":"number","nativeSrc":"17089:1:29","nodeType":"YulLiteral","src":"17089:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17077:3:29","nodeType":"YulIdentifier","src":"17077:3:29"},"nativeSrc":"17077:14:29","nodeType":"YulFunctionCall","src":"17077:14:29"},{"hexValue":"4465706f73697420616d6f756e74206d75737420626520677265617465722074","kind":"string","nativeSrc":"17093:34:29","nodeType":"YulLiteral","src":"17093:34:29","type":"","value":"Deposit amount must be greater t"}],"functionName":{"name":"mstore","nativeSrc":"17070:6:29","nodeType":"YulIdentifier","src":"17070:6:29"},"nativeSrc":"17070:58:29","nodeType":"YulFunctionCall","src":"17070:58:29"},"nativeSrc":"17070:58:29","nodeType":"YulExpressionStatement","src":"17070:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17149:6:29","nodeType":"YulIdentifier","src":"17149:6:29"},{"kind":"number","nativeSrc":"17157:2:29","nodeType":"YulLiteral","src":"17157:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17145:3:29","nodeType":"YulIdentifier","src":"17145:3:29"},"nativeSrc":"17145:15:29","nodeType":"YulFunctionCall","src":"17145:15:29"},{"hexValue":"68616e2030","kind":"string","nativeSrc":"17162:7:29","nodeType":"YulLiteral","src":"17162:7:29","type":"","value":"han 0"}],"functionName":{"name":"mstore","nativeSrc":"17138:6:29","nodeType":"YulIdentifier","src":"17138:6:29"},"nativeSrc":"17138:32:29","nodeType":"YulFunctionCall","src":"17138:32:29"},"nativeSrc":"17138:32:29","nodeType":"YulExpressionStatement","src":"17138:32:29"}]},"name":"store_literal_in_memory_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6","nativeSrc":"16953:224:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17051:6:29","nodeType":"YulTypedName","src":"17051:6:29","type":""}],"src":"16953:224:29"},{"body":{"nativeSrc":"17329:220:29","nodeType":"YulBlock","src":"17329:220:29","statements":[{"nativeSrc":"17339:74:29","nodeType":"YulAssignment","src":"17339:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"17405:3:29","nodeType":"YulIdentifier","src":"17405:3:29"},{"kind":"number","nativeSrc":"17410:2:29","nodeType":"YulLiteral","src":"17410:2:29","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17346:58:29","nodeType":"YulIdentifier","src":"17346:58:29"},"nativeSrc":"17346:67:29","nodeType":"YulFunctionCall","src":"17346:67:29"},"variableNames":[{"name":"pos","nativeSrc":"17339:3:29","nodeType":"YulIdentifier","src":"17339:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17511:3:29","nodeType":"YulIdentifier","src":"17511:3:29"}],"functionName":{"name":"store_literal_in_memory_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6","nativeSrc":"17422:88:29","nodeType":"YulIdentifier","src":"17422:88:29"},"nativeSrc":"17422:93:29","nodeType":"YulFunctionCall","src":"17422:93:29"},"nativeSrc":"17422:93:29","nodeType":"YulExpressionStatement","src":"17422:93:29"},{"nativeSrc":"17524:19:29","nodeType":"YulAssignment","src":"17524:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"17535:3:29","nodeType":"YulIdentifier","src":"17535:3:29"},{"kind":"number","nativeSrc":"17540:2:29","nodeType":"YulLiteral","src":"17540:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17531:3:29","nodeType":"YulIdentifier","src":"17531:3:29"},"nativeSrc":"17531:12:29","nodeType":"YulFunctionCall","src":"17531:12:29"},"variableNames":[{"name":"end","nativeSrc":"17524:3:29","nodeType":"YulIdentifier","src":"17524:3:29"}]}]},"name":"abi_encode_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6_to_t_string_memory_ptr_fromStack","nativeSrc":"17183:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17317:3:29","nodeType":"YulTypedName","src":"17317:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17325:3:29","nodeType":"YulTypedName","src":"17325:3:29","type":""}],"src":"17183:366:29"},{"body":{"nativeSrc":"17726:248:29","nodeType":"YulBlock","src":"17726:248:29","statements":[{"nativeSrc":"17736:26:29","nodeType":"YulAssignment","src":"17736:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"17748:9:29","nodeType":"YulIdentifier","src":"17748:9:29"},{"kind":"number","nativeSrc":"17759:2:29","nodeType":"YulLiteral","src":"17759:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17744:3:29","nodeType":"YulIdentifier","src":"17744:3:29"},"nativeSrc":"17744:18:29","nodeType":"YulFunctionCall","src":"17744:18:29"},"variableNames":[{"name":"tail","nativeSrc":"17736:4:29","nodeType":"YulIdentifier","src":"17736:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17783:9:29","nodeType":"YulIdentifier","src":"17783:9:29"},{"kind":"number","nativeSrc":"17794:1:29","nodeType":"YulLiteral","src":"17794:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17779:3:29","nodeType":"YulIdentifier","src":"17779:3:29"},"nativeSrc":"17779:17:29","nodeType":"YulFunctionCall","src":"17779:17:29"},{"arguments":[{"name":"tail","nativeSrc":"17802:4:29","nodeType":"YulIdentifier","src":"17802:4:29"},{"name":"headStart","nativeSrc":"17808:9:29","nodeType":"YulIdentifier","src":"17808:9:29"}],"functionName":{"name":"sub","nativeSrc":"17798:3:29","nodeType":"YulIdentifier","src":"17798:3:29"},"nativeSrc":"17798:20:29","nodeType":"YulFunctionCall","src":"17798:20:29"}],"functionName":{"name":"mstore","nativeSrc":"17772:6:29","nodeType":"YulIdentifier","src":"17772:6:29"},"nativeSrc":"17772:47:29","nodeType":"YulFunctionCall","src":"17772:47:29"},"nativeSrc":"17772:47:29","nodeType":"YulExpressionStatement","src":"17772:47:29"},{"nativeSrc":"17828:139:29","nodeType":"YulAssignment","src":"17828:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"17962:4:29","nodeType":"YulIdentifier","src":"17962:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6_to_t_string_memory_ptr_fromStack","nativeSrc":"17836:124:29","nodeType":"YulIdentifier","src":"17836:124:29"},"nativeSrc":"17836:131:29","nodeType":"YulFunctionCall","src":"17836:131:29"},"variableNames":[{"name":"tail","nativeSrc":"17828:4:29","nodeType":"YulIdentifier","src":"17828:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17555:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17706:9:29","nodeType":"YulTypedName","src":"17706:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17721:4:29","nodeType":"YulTypedName","src":"17721:4:29","type":""}],"src":"17555:419:29"},{"body":{"nativeSrc":"18024:147:29","nodeType":"YulBlock","src":"18024:147:29","statements":[{"nativeSrc":"18034:25:29","nodeType":"YulAssignment","src":"18034:25:29","value":{"arguments":[{"name":"x","nativeSrc":"18057:1:29","nodeType":"YulIdentifier","src":"18057:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18039:17:29","nodeType":"YulIdentifier","src":"18039:17:29"},"nativeSrc":"18039:20:29","nodeType":"YulFunctionCall","src":"18039:20:29"},"variableNames":[{"name":"x","nativeSrc":"18034:1:29","nodeType":"YulIdentifier","src":"18034:1:29"}]},{"nativeSrc":"18068:25:29","nodeType":"YulAssignment","src":"18068:25:29","value":{"arguments":[{"name":"y","nativeSrc":"18091:1:29","nodeType":"YulIdentifier","src":"18091:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18073:17:29","nodeType":"YulIdentifier","src":"18073:17:29"},"nativeSrc":"18073:20:29","nodeType":"YulFunctionCall","src":"18073:20:29"},"variableNames":[{"name":"y","nativeSrc":"18068:1:29","nodeType":"YulIdentifier","src":"18068:1:29"}]},{"nativeSrc":"18102:16:29","nodeType":"YulAssignment","src":"18102:16:29","value":{"arguments":[{"name":"x","nativeSrc":"18113:1:29","nodeType":"YulIdentifier","src":"18113:1:29"},{"name":"y","nativeSrc":"18116:1:29","nodeType":"YulIdentifier","src":"18116:1:29"}],"functionName":{"name":"add","nativeSrc":"18109:3:29","nodeType":"YulIdentifier","src":"18109:3:29"},"nativeSrc":"18109:9:29","nodeType":"YulFunctionCall","src":"18109:9:29"},"variableNames":[{"name":"sum","nativeSrc":"18102:3:29","nodeType":"YulIdentifier","src":"18102:3:29"}]},{"body":{"nativeSrc":"18142:22:29","nodeType":"YulBlock","src":"18142:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18144:16:29","nodeType":"YulIdentifier","src":"18144:16:29"},"nativeSrc":"18144:18:29","nodeType":"YulFunctionCall","src":"18144:18:29"},"nativeSrc":"18144:18:29","nodeType":"YulExpressionStatement","src":"18144:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"18134:1:29","nodeType":"YulIdentifier","src":"18134:1:29"},{"name":"sum","nativeSrc":"18137:3:29","nodeType":"YulIdentifier","src":"18137:3:29"}],"functionName":{"name":"gt","nativeSrc":"18131:2:29","nodeType":"YulIdentifier","src":"18131:2:29"},"nativeSrc":"18131:10:29","nodeType":"YulFunctionCall","src":"18131:10:29"},"nativeSrc":"18128:36:29","nodeType":"YulIf","src":"18128:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"17980:191:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18011:1:29","nodeType":"YulTypedName","src":"18011:1:29","type":""},{"name":"y","nativeSrc":"18014:1:29","nodeType":"YulTypedName","src":"18014:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18020:3:29","nodeType":"YulTypedName","src":"18020:3:29","type":""}],"src":"17980:191:29"},{"body":{"nativeSrc":"18253:66:29","nodeType":"YulBlock","src":"18253:66:29","statements":[{"nativeSrc":"18263:50:29","nodeType":"YulAssignment","src":"18263:50:29","value":{"arguments":[{"name":"value","nativeSrc":"18307:5:29","nodeType":"YulIdentifier","src":"18307:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"18276:30:29","nodeType":"YulIdentifier","src":"18276:30:29"},"nativeSrc":"18276:37:29","nodeType":"YulFunctionCall","src":"18276:37:29"},"variableNames":[{"name":"converted","nativeSrc":"18263:9:29","nodeType":"YulIdentifier","src":"18263:9:29"}]}]},"name":"convert_t_contract$_PikaPay_$7473_to_t_address","nativeSrc":"18177:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18233:5:29","nodeType":"YulTypedName","src":"18233:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"18243:9:29","nodeType":"YulTypedName","src":"18243:9:29","type":""}],"src":"18177:142:29"},{"body":{"nativeSrc":"18406:82:29","nodeType":"YulBlock","src":"18406:82:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18423:3:29","nodeType":"YulIdentifier","src":"18423:3:29"},{"arguments":[{"name":"value","nativeSrc":"18475:5:29","nodeType":"YulIdentifier","src":"18475:5:29"}],"functionName":{"name":"convert_t_contract$_PikaPay_$7473_to_t_address","nativeSrc":"18428:46:29","nodeType":"YulIdentifier","src":"18428:46:29"},"nativeSrc":"18428:53:29","nodeType":"YulFunctionCall","src":"18428:53:29"}],"functionName":{"name":"mstore","nativeSrc":"18416:6:29","nodeType":"YulIdentifier","src":"18416:6:29"},"nativeSrc":"18416:66:29","nodeType":"YulFunctionCall","src":"18416:66:29"},"nativeSrc":"18416:66:29","nodeType":"YulExpressionStatement","src":"18416:66:29"}]},"name":"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack","nativeSrc":"18325:163:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18394:5:29","nodeType":"YulTypedName","src":"18394:5:29","type":""},{"name":"pos","nativeSrc":"18401:3:29","nodeType":"YulTypedName","src":"18401:3:29","type":""}],"src":"18325:163:29"},{"body":{"nativeSrc":"18664:304:29","nodeType":"YulBlock","src":"18664:304:29","statements":[{"nativeSrc":"18674:26:29","nodeType":"YulAssignment","src":"18674:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"18686:9:29","nodeType":"YulIdentifier","src":"18686:9:29"},{"kind":"number","nativeSrc":"18697:2:29","nodeType":"YulLiteral","src":"18697:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18682:3:29","nodeType":"YulIdentifier","src":"18682:3:29"},"nativeSrc":"18682:18:29","nodeType":"YulFunctionCall","src":"18682:18:29"},"variableNames":[{"name":"tail","nativeSrc":"18674:4:29","nodeType":"YulIdentifier","src":"18674:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18770:6:29","nodeType":"YulIdentifier","src":"18770:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"18783:9:29","nodeType":"YulIdentifier","src":"18783:9:29"},{"kind":"number","nativeSrc":"18794:1:29","nodeType":"YulLiteral","src":"18794:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18779:3:29","nodeType":"YulIdentifier","src":"18779:3:29"},"nativeSrc":"18779:17:29","nodeType":"YulFunctionCall","src":"18779:17:29"}],"functionName":{"name":"abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack","nativeSrc":"18710:59:29","nodeType":"YulIdentifier","src":"18710:59:29"},"nativeSrc":"18710:87:29","nodeType":"YulFunctionCall","src":"18710:87:29"},"nativeSrc":"18710:87:29","nodeType":"YulExpressionStatement","src":"18710:87:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18851:6:29","nodeType":"YulIdentifier","src":"18851:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"18864:9:29","nodeType":"YulIdentifier","src":"18864:9:29"},{"kind":"number","nativeSrc":"18875:2:29","nodeType":"YulLiteral","src":"18875:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18860:3:29","nodeType":"YulIdentifier","src":"18860:3:29"},"nativeSrc":"18860:18:29","nodeType":"YulFunctionCall","src":"18860:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18807:43:29","nodeType":"YulIdentifier","src":"18807:43:29"},"nativeSrc":"18807:72:29","nodeType":"YulFunctionCall","src":"18807:72:29"},"nativeSrc":"18807:72:29","nodeType":"YulExpressionStatement","src":"18807:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18933:6:29","nodeType":"YulIdentifier","src":"18933:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"18946:9:29","nodeType":"YulIdentifier","src":"18946:9:29"},{"kind":"number","nativeSrc":"18957:2:29","nodeType":"YulLiteral","src":"18957:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18942:3:29","nodeType":"YulIdentifier","src":"18942:3:29"},"nativeSrc":"18942:18:29","nodeType":"YulFunctionCall","src":"18942:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18889:43:29","nodeType":"YulIdentifier","src":"18889:43:29"},"nativeSrc":"18889:72:29","nodeType":"YulFunctionCall","src":"18889:72:29"},"nativeSrc":"18889:72:29","nodeType":"YulExpressionStatement","src":"18889:72:29"}]},"name":"abi_encode_tuple_t_contract$_PikaPay_$7473_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18494:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18620:9:29","nodeType":"YulTypedName","src":"18620:9:29","type":""},{"name":"value2","nativeSrc":"18632:6:29","nodeType":"YulTypedName","src":"18632:6:29","type":""},{"name":"value1","nativeSrc":"18640:6:29","nodeType":"YulTypedName","src":"18640:6:29","type":""},{"name":"value0","nativeSrc":"18648:6:29","nodeType":"YulTypedName","src":"18648:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18659:4:29","nodeType":"YulTypedName","src":"18659:4:29","type":""}],"src":"18494:474:29"},{"body":{"nativeSrc":"19002:152:29","nodeType":"YulBlock","src":"19002:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19019:1:29","nodeType":"YulLiteral","src":"19019:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"19022:77:29","nodeType":"YulLiteral","src":"19022:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19012:6:29","nodeType":"YulIdentifier","src":"19012:6:29"},"nativeSrc":"19012:88:29","nodeType":"YulFunctionCall","src":"19012:88:29"},"nativeSrc":"19012:88:29","nodeType":"YulExpressionStatement","src":"19012:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19116:1:29","nodeType":"YulLiteral","src":"19116:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"19119:4:29","nodeType":"YulLiteral","src":"19119:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"19109:6:29","nodeType":"YulIdentifier","src":"19109:6:29"},"nativeSrc":"19109:15:29","nodeType":"YulFunctionCall","src":"19109:15:29"},"nativeSrc":"19109:15:29","nodeType":"YulExpressionStatement","src":"19109:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19140:1:29","nodeType":"YulLiteral","src":"19140:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"19143:4:29","nodeType":"YulLiteral","src":"19143:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19133:6:29","nodeType":"YulIdentifier","src":"19133:6:29"},"nativeSrc":"19133:15:29","nodeType":"YulFunctionCall","src":"19133:15:29"},"nativeSrc":"19133:15:29","nodeType":"YulExpressionStatement","src":"19133:15:29"}]},"name":"panic_error_0x41","nativeSrc":"18974:180:29","nodeType":"YulFunctionDefinition","src":"18974:180:29"},{"body":{"nativeSrc":"19204:49:29","nodeType":"YulBlock","src":"19204:49:29","statements":[{"nativeSrc":"19214:33:29","nodeType":"YulAssignment","src":"19214:33:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19232:5:29","nodeType":"YulIdentifier","src":"19232:5:29"},{"kind":"number","nativeSrc":"19239:2:29","nodeType":"YulLiteral","src":"19239:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"19228:3:29","nodeType":"YulIdentifier","src":"19228:3:29"},"nativeSrc":"19228:14:29","nodeType":"YulFunctionCall","src":"19228:14:29"},{"kind":"number","nativeSrc":"19244:2:29","nodeType":"YulLiteral","src":"19244:2:29","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"19224:3:29","nodeType":"YulIdentifier","src":"19224:3:29"},"nativeSrc":"19224:23:29","nodeType":"YulFunctionCall","src":"19224:23:29"},"variableNames":[{"name":"result","nativeSrc":"19214:6:29","nodeType":"YulIdentifier","src":"19214:6:29"}]}]},"name":"divide_by_32_ceil","nativeSrc":"19160:93:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19187:5:29","nodeType":"YulTypedName","src":"19187:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"19197:6:29","nodeType":"YulTypedName","src":"19197:6:29","type":""}],"src":"19160:93:29"},{"body":{"nativeSrc":"19312:54:29","nodeType":"YulBlock","src":"19312:54:29","statements":[{"nativeSrc":"19322:37:29","nodeType":"YulAssignment","src":"19322:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"19347:4:29","nodeType":"YulIdentifier","src":"19347:4:29"},{"name":"value","nativeSrc":"19353:5:29","nodeType":"YulIdentifier","src":"19353:5:29"}],"functionName":{"name":"shl","nativeSrc":"19343:3:29","nodeType":"YulIdentifier","src":"19343:3:29"},"nativeSrc":"19343:16:29","nodeType":"YulFunctionCall","src":"19343:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"19322:8:29","nodeType":"YulIdentifier","src":"19322:8:29"}]}]},"name":"shift_left_dynamic","nativeSrc":"19259:107:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"19287:4:29","nodeType":"YulTypedName","src":"19287:4:29","type":""},{"name":"value","nativeSrc":"19293:5:29","nodeType":"YulTypedName","src":"19293:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"19303:8:29","nodeType":"YulTypedName","src":"19303:8:29","type":""}],"src":"19259:107:29"},{"body":{"nativeSrc":"19448:317:29","nodeType":"YulBlock","src":"19448:317:29","statements":[{"nativeSrc":"19458:35:29","nodeType":"YulVariableDeclaration","src":"19458:35:29","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"19479:10:29","nodeType":"YulIdentifier","src":"19479:10:29"},{"kind":"number","nativeSrc":"19491:1:29","nodeType":"YulLiteral","src":"19491:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"19475:3:29","nodeType":"YulIdentifier","src":"19475:3:29"},"nativeSrc":"19475:18:29","nodeType":"YulFunctionCall","src":"19475:18:29"},"variables":[{"name":"shiftBits","nativeSrc":"19462:9:29","nodeType":"YulTypedName","src":"19462:9:29","type":""}]},{"nativeSrc":"19502:109:29","nodeType":"YulVariableDeclaration","src":"19502:109:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"19533:9:29","nodeType":"YulIdentifier","src":"19533:9:29"},{"kind":"number","nativeSrc":"19544:66:29","nodeType":"YulLiteral","src":"19544:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"19514:18:29","nodeType":"YulIdentifier","src":"19514:18:29"},"nativeSrc":"19514:97:29","nodeType":"YulFunctionCall","src":"19514:97:29"},"variables":[{"name":"mask","nativeSrc":"19506:4:29","nodeType":"YulTypedName","src":"19506:4:29","type":""}]},{"nativeSrc":"19620:51:29","nodeType":"YulAssignment","src":"19620:51:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"19651:9:29","nodeType":"YulIdentifier","src":"19651:9:29"},{"name":"toInsert","nativeSrc":"19662:8:29","nodeType":"YulIdentifier","src":"19662:8:29"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"19632:18:29","nodeType":"YulIdentifier","src":"19632:18:29"},"nativeSrc":"19632:39:29","nodeType":"YulFunctionCall","src":"19632:39:29"},"variableNames":[{"name":"toInsert","nativeSrc":"19620:8:29","nodeType":"YulIdentifier","src":"19620:8:29"}]},{"nativeSrc":"19680:30:29","nodeType":"YulAssignment","src":"19680:30:29","value":{"arguments":[{"name":"value","nativeSrc":"19693:5:29","nodeType":"YulIdentifier","src":"19693:5:29"},{"arguments":[{"name":"mask","nativeSrc":"19704:4:29","nodeType":"YulIdentifier","src":"19704:4:29"}],"functionName":{"name":"not","nativeSrc":"19700:3:29","nodeType":"YulIdentifier","src":"19700:3:29"},"nativeSrc":"19700:9:29","nodeType":"YulFunctionCall","src":"19700:9:29"}],"functionName":{"name":"and","nativeSrc":"19689:3:29","nodeType":"YulIdentifier","src":"19689:3:29"},"nativeSrc":"19689:21:29","nodeType":"YulFunctionCall","src":"19689:21:29"},"variableNames":[{"name":"value","nativeSrc":"19680:5:29","nodeType":"YulIdentifier","src":"19680:5:29"}]},{"nativeSrc":"19719:40:29","nodeType":"YulAssignment","src":"19719:40:29","value":{"arguments":[{"name":"value","nativeSrc":"19732:5:29","nodeType":"YulIdentifier","src":"19732:5:29"},{"arguments":[{"name":"toInsert","nativeSrc":"19743:8:29","nodeType":"YulIdentifier","src":"19743:8:29"},{"name":"mask","nativeSrc":"19753:4:29","nodeType":"YulIdentifier","src":"19753:4:29"}],"functionName":{"name":"and","nativeSrc":"19739:3:29","nodeType":"YulIdentifier","src":"19739:3:29"},"nativeSrc":"19739:19:29","nodeType":"YulFunctionCall","src":"19739:19:29"}],"functionName":{"name":"or","nativeSrc":"19729:2:29","nodeType":"YulIdentifier","src":"19729:2:29"},"nativeSrc":"19729:30:29","nodeType":"YulFunctionCall","src":"19729:30:29"},"variableNames":[{"name":"result","nativeSrc":"19719:6:29","nodeType":"YulIdentifier","src":"19719:6:29"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"19372:393:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19409:5:29","nodeType":"YulTypedName","src":"19409:5:29","type":""},{"name":"shiftBytes","nativeSrc":"19416:10:29","nodeType":"YulTypedName","src":"19416:10:29","type":""},{"name":"toInsert","nativeSrc":"19428:8:29","nodeType":"YulTypedName","src":"19428:8:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"19441:6:29","nodeType":"YulTypedName","src":"19441:6:29","type":""}],"src":"19372:393:29"},{"body":{"nativeSrc":"19831:82:29","nodeType":"YulBlock","src":"19831:82:29","statements":[{"nativeSrc":"19841:66:29","nodeType":"YulAssignment","src":"19841:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19899:5:29","nodeType":"YulIdentifier","src":"19899:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19881:17:29","nodeType":"YulIdentifier","src":"19881:17:29"},"nativeSrc":"19881:24:29","nodeType":"YulFunctionCall","src":"19881:24:29"}],"functionName":{"name":"identity","nativeSrc":"19872:8:29","nodeType":"YulIdentifier","src":"19872:8:29"},"nativeSrc":"19872:34:29","nodeType":"YulFunctionCall","src":"19872:34:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19854:17:29","nodeType":"YulIdentifier","src":"19854:17:29"},"nativeSrc":"19854:53:29","nodeType":"YulFunctionCall","src":"19854:53:29"},"variableNames":[{"name":"converted","nativeSrc":"19841:9:29","nodeType":"YulIdentifier","src":"19841:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"19771:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19811:5:29","nodeType":"YulTypedName","src":"19811:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"19821:9:29","nodeType":"YulTypedName","src":"19821:9:29","type":""}],"src":"19771:142:29"},{"body":{"nativeSrc":"19966:28:29","nodeType":"YulBlock","src":"19966:28:29","statements":[{"nativeSrc":"19976:12:29","nodeType":"YulAssignment","src":"19976:12:29","value":{"name":"value","nativeSrc":"19983:5:29","nodeType":"YulIdentifier","src":"19983:5:29"},"variableNames":[{"name":"ret","nativeSrc":"19976:3:29","nodeType":"YulIdentifier","src":"19976:3:29"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"19919:75:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19952:5:29","nodeType":"YulTypedName","src":"19952:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19962:3:29","nodeType":"YulTypedName","src":"19962:3:29","type":""}],"src":"19919:75:29"},{"body":{"nativeSrc":"20076:193:29","nodeType":"YulBlock","src":"20076:193:29","statements":[{"nativeSrc":"20086:63:29","nodeType":"YulVariableDeclaration","src":"20086:63:29","value":{"arguments":[{"name":"value_0","nativeSrc":"20141:7:29","nodeType":"YulIdentifier","src":"20141:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"20110:30:29","nodeType":"YulIdentifier","src":"20110:30:29"},"nativeSrc":"20110:39:29","nodeType":"YulFunctionCall","src":"20110:39:29"},"variables":[{"name":"convertedValue_0","nativeSrc":"20090:16:29","nodeType":"YulTypedName","src":"20090:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20165:4:29","nodeType":"YulIdentifier","src":"20165:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"20205:4:29","nodeType":"YulIdentifier","src":"20205:4:29"}],"functionName":{"name":"sload","nativeSrc":"20199:5:29","nodeType":"YulIdentifier","src":"20199:5:29"},"nativeSrc":"20199:11:29","nodeType":"YulFunctionCall","src":"20199:11:29"},{"name":"offset","nativeSrc":"20212:6:29","nodeType":"YulIdentifier","src":"20212:6:29"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"20244:16:29","nodeType":"YulIdentifier","src":"20244:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"20220:23:29","nodeType":"YulIdentifier","src":"20220:23:29"},"nativeSrc":"20220:41:29","nodeType":"YulFunctionCall","src":"20220:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"20171:27:29","nodeType":"YulIdentifier","src":"20171:27:29"},"nativeSrc":"20171:91:29","nodeType":"YulFunctionCall","src":"20171:91:29"}],"functionName":{"name":"sstore","nativeSrc":"20158:6:29","nodeType":"YulIdentifier","src":"20158:6:29"},"nativeSrc":"20158:105:29","nodeType":"YulFunctionCall","src":"20158:105:29"},"nativeSrc":"20158:105:29","nodeType":"YulExpressionStatement","src":"20158:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"20000:269:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"20053:4:29","nodeType":"YulTypedName","src":"20053:4:29","type":""},{"name":"offset","nativeSrc":"20059:6:29","nodeType":"YulTypedName","src":"20059:6:29","type":""},{"name":"value_0","nativeSrc":"20067:7:29","nodeType":"YulTypedName","src":"20067:7:29","type":""}],"src":"20000:269:29"},{"body":{"nativeSrc":"20324:24:29","nodeType":"YulBlock","src":"20324:24:29","statements":[{"nativeSrc":"20334:8:29","nodeType":"YulAssignment","src":"20334:8:29","value":{"kind":"number","nativeSrc":"20341:1:29","nodeType":"YulLiteral","src":"20341:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"20334:3:29","nodeType":"YulIdentifier","src":"20334:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"20275:73:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"20320:3:29","nodeType":"YulTypedName","src":"20320:3:29","type":""}],"src":"20275:73:29"},{"body":{"nativeSrc":"20407:136:29","nodeType":"YulBlock","src":"20407:136:29","statements":[{"nativeSrc":"20417:46:29","nodeType":"YulVariableDeclaration","src":"20417:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"20431:30:29","nodeType":"YulIdentifier","src":"20431:30:29"},"nativeSrc":"20431:32:29","nodeType":"YulFunctionCall","src":"20431:32:29"},"variables":[{"name":"zero_0","nativeSrc":"20421:6:29","nodeType":"YulTypedName","src":"20421:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20516:4:29","nodeType":"YulIdentifier","src":"20516:4:29"},{"name":"offset","nativeSrc":"20522:6:29","nodeType":"YulIdentifier","src":"20522:6:29"},{"name":"zero_0","nativeSrc":"20530:6:29","nodeType":"YulIdentifier","src":"20530:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"20472:43:29","nodeType":"YulIdentifier","src":"20472:43:29"},"nativeSrc":"20472:65:29","nodeType":"YulFunctionCall","src":"20472:65:29"},"nativeSrc":"20472:65:29","nodeType":"YulExpressionStatement","src":"20472:65:29"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"20354:189:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"20393:4:29","nodeType":"YulTypedName","src":"20393:4:29","type":""},{"name":"offset","nativeSrc":"20399:6:29","nodeType":"YulTypedName","src":"20399:6:29","type":""}],"src":"20354:189:29"},{"body":{"nativeSrc":"20599:136:29","nodeType":"YulBlock","src":"20599:136:29","statements":[{"body":{"nativeSrc":"20666:63:29","nodeType":"YulBlock","src":"20666:63:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"20710:5:29","nodeType":"YulIdentifier","src":"20710:5:29"},{"kind":"number","nativeSrc":"20717:1:29","nodeType":"YulLiteral","src":"20717:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"20680:29:29","nodeType":"YulIdentifier","src":"20680:29:29"},"nativeSrc":"20680:39:29","nodeType":"YulFunctionCall","src":"20680:39:29"},"nativeSrc":"20680:39:29","nodeType":"YulExpressionStatement","src":"20680:39:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"20619:5:29","nodeType":"YulIdentifier","src":"20619:5:29"},{"name":"end","nativeSrc":"20626:3:29","nodeType":"YulIdentifier","src":"20626:3:29"}],"functionName":{"name":"lt","nativeSrc":"20616:2:29","nodeType":"YulIdentifier","src":"20616:2:29"},"nativeSrc":"20616:14:29","nodeType":"YulFunctionCall","src":"20616:14:29"},"nativeSrc":"20609:120:29","nodeType":"YulForLoop","post":{"nativeSrc":"20631:26:29","nodeType":"YulBlock","src":"20631:26:29","statements":[{"nativeSrc":"20633:22:29","nodeType":"YulAssignment","src":"20633:22:29","value":{"arguments":[{"name":"start","nativeSrc":"20646:5:29","nodeType":"YulIdentifier","src":"20646:5:29"},{"kind":"number","nativeSrc":"20653:1:29","nodeType":"YulLiteral","src":"20653:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20642:3:29","nodeType":"YulIdentifier","src":"20642:3:29"},"nativeSrc":"20642:13:29","nodeType":"YulFunctionCall","src":"20642:13:29"},"variableNames":[{"name":"start","nativeSrc":"20633:5:29","nodeType":"YulIdentifier","src":"20633:5:29"}]}]},"pre":{"nativeSrc":"20613:2:29","nodeType":"YulBlock","src":"20613:2:29","statements":[]},"src":"20609:120:29"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"20549:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"20587:5:29","nodeType":"YulTypedName","src":"20587:5:29","type":""},{"name":"end","nativeSrc":"20594:3:29","nodeType":"YulTypedName","src":"20594:3:29","type":""}],"src":"20549:186:29"},{"body":{"nativeSrc":"20820:464:29","nodeType":"YulBlock","src":"20820:464:29","statements":[{"body":{"nativeSrc":"20846:431:29","nodeType":"YulBlock","src":"20846:431:29","statements":[{"nativeSrc":"20860:54:29","nodeType":"YulVariableDeclaration","src":"20860:54:29","value":{"arguments":[{"name":"array","nativeSrc":"20908:5:29","nodeType":"YulIdentifier","src":"20908:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20876:31:29","nodeType":"YulIdentifier","src":"20876:31:29"},"nativeSrc":"20876:38:29","nodeType":"YulFunctionCall","src":"20876:38:29"},"variables":[{"name":"dataArea","nativeSrc":"20864:8:29","nodeType":"YulTypedName","src":"20864:8:29","type":""}]},{"nativeSrc":"20927:63:29","nodeType":"YulVariableDeclaration","src":"20927:63:29","value":{"arguments":[{"name":"dataArea","nativeSrc":"20950:8:29","nodeType":"YulIdentifier","src":"20950:8:29"},{"arguments":[{"name":"startIndex","nativeSrc":"20978:10:29","nodeType":"YulIdentifier","src":"20978:10:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"20960:17:29","nodeType":"YulIdentifier","src":"20960:17:29"},"nativeSrc":"20960:29:29","nodeType":"YulFunctionCall","src":"20960:29:29"}],"functionName":{"name":"add","nativeSrc":"20946:3:29","nodeType":"YulIdentifier","src":"20946:3:29"},"nativeSrc":"20946:44:29","nodeType":"YulFunctionCall","src":"20946:44:29"},"variables":[{"name":"deleteStart","nativeSrc":"20931:11:29","nodeType":"YulTypedName","src":"20931:11:29","type":""}]},{"body":{"nativeSrc":"21147:27:29","nodeType":"YulBlock","src":"21147:27:29","statements":[{"nativeSrc":"21149:23:29","nodeType":"YulAssignment","src":"21149:23:29","value":{"name":"dataArea","nativeSrc":"21164:8:29","nodeType":"YulIdentifier","src":"21164:8:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"21149:11:29","nodeType":"YulIdentifier","src":"21149:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"21131:10:29","nodeType":"YulIdentifier","src":"21131:10:29"},{"kind":"number","nativeSrc":"21143:2:29","nodeType":"YulLiteral","src":"21143:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"21128:2:29","nodeType":"YulIdentifier","src":"21128:2:29"},"nativeSrc":"21128:18:29","nodeType":"YulFunctionCall","src":"21128:18:29"},"nativeSrc":"21125:49:29","nodeType":"YulIf","src":"21125:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"21216:11:29","nodeType":"YulIdentifier","src":"21216:11:29"},{"arguments":[{"name":"dataArea","nativeSrc":"21233:8:29","nodeType":"YulIdentifier","src":"21233:8:29"},{"arguments":[{"name":"len","nativeSrc":"21261:3:29","nodeType":"YulIdentifier","src":"21261:3:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"21243:17:29","nodeType":"YulIdentifier","src":"21243:17:29"},"nativeSrc":"21243:22:29","nodeType":"YulFunctionCall","src":"21243:22:29"}],"functionName":{"name":"add","nativeSrc":"21229:3:29","nodeType":"YulIdentifier","src":"21229:3:29"},"nativeSrc":"21229:37:29","nodeType":"YulFunctionCall","src":"21229:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"21187:28:29","nodeType":"YulIdentifier","src":"21187:28:29"},"nativeSrc":"21187:80:29","nodeType":"YulFunctionCall","src":"21187:80:29"},"nativeSrc":"21187:80:29","nodeType":"YulExpressionStatement","src":"21187:80:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"20837:3:29","nodeType":"YulIdentifier","src":"20837:3:29"},{"kind":"number","nativeSrc":"20842:2:29","nodeType":"YulLiteral","src":"20842:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"20834:2:29","nodeType":"YulIdentifier","src":"20834:2:29"},"nativeSrc":"20834:11:29","nodeType":"YulFunctionCall","src":"20834:11:29"},"nativeSrc":"20831:446:29","nodeType":"YulIf","src":"20831:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"20741:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"20796:5:29","nodeType":"YulTypedName","src":"20796:5:29","type":""},{"name":"len","nativeSrc":"20803:3:29","nodeType":"YulTypedName","src":"20803:3:29","type":""},{"name":"startIndex","nativeSrc":"20808:10:29","nodeType":"YulTypedName","src":"20808:10:29","type":""}],"src":"20741:543:29"},{"body":{"nativeSrc":"21353:54:29","nodeType":"YulBlock","src":"21353:54:29","statements":[{"nativeSrc":"21363:37:29","nodeType":"YulAssignment","src":"21363:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"21388:4:29","nodeType":"YulIdentifier","src":"21388:4:29"},{"name":"value","nativeSrc":"21394:5:29","nodeType":"YulIdentifier","src":"21394:5:29"}],"functionName":{"name":"shr","nativeSrc":"21384:3:29","nodeType":"YulIdentifier","src":"21384:3:29"},"nativeSrc":"21384:16:29","nodeType":"YulFunctionCall","src":"21384:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"21363:8:29","nodeType":"YulIdentifier","src":"21363:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"21290:117:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"21328:4:29","nodeType":"YulTypedName","src":"21328:4:29","type":""},{"name":"value","nativeSrc":"21334:5:29","nodeType":"YulTypedName","src":"21334:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"21344:8:29","nodeType":"YulTypedName","src":"21344:8:29","type":""}],"src":"21290:117:29"},{"body":{"nativeSrc":"21464:118:29","nodeType":"YulBlock","src":"21464:118:29","statements":[{"nativeSrc":"21474:68:29","nodeType":"YulVariableDeclaration","src":"21474:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21523:1:29","nodeType":"YulLiteral","src":"21523:1:29","type":"","value":"8"},{"name":"bytes","nativeSrc":"21526:5:29","nodeType":"YulIdentifier","src":"21526:5:29"}],"functionName":{"name":"mul","nativeSrc":"21519:3:29","nodeType":"YulIdentifier","src":"21519:3:29"},"nativeSrc":"21519:13:29","nodeType":"YulFunctionCall","src":"21519:13:29"},{"arguments":[{"kind":"number","nativeSrc":"21538:1:29","nodeType":"YulLiteral","src":"21538:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"21534:3:29","nodeType":"YulIdentifier","src":"21534:3:29"},"nativeSrc":"21534:6:29","nodeType":"YulFunctionCall","src":"21534:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"21490:28:29","nodeType":"YulIdentifier","src":"21490:28:29"},"nativeSrc":"21490:51:29","nodeType":"YulFunctionCall","src":"21490:51:29"}],"functionName":{"name":"not","nativeSrc":"21486:3:29","nodeType":"YulIdentifier","src":"21486:3:29"},"nativeSrc":"21486:56:29","nodeType":"YulFunctionCall","src":"21486:56:29"},"variables":[{"name":"mask","nativeSrc":"21478:4:29","nodeType":"YulTypedName","src":"21478:4:29","type":""}]},{"nativeSrc":"21551:25:29","nodeType":"YulAssignment","src":"21551:25:29","value":{"arguments":[{"name":"data","nativeSrc":"21565:4:29","nodeType":"YulIdentifier","src":"21565:4:29"},{"name":"mask","nativeSrc":"21571:4:29","nodeType":"YulIdentifier","src":"21571:4:29"}],"functionName":{"name":"and","nativeSrc":"21561:3:29","nodeType":"YulIdentifier","src":"21561:3:29"},"nativeSrc":"21561:15:29","nodeType":"YulFunctionCall","src":"21561:15:29"},"variableNames":[{"name":"result","nativeSrc":"21551:6:29","nodeType":"YulIdentifier","src":"21551:6:29"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"21413:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"21441:4:29","nodeType":"YulTypedName","src":"21441:4:29","type":""},{"name":"bytes","nativeSrc":"21447:5:29","nodeType":"YulTypedName","src":"21447:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"21457:6:29","nodeType":"YulTypedName","src":"21457:6:29","type":""}],"src":"21413:169:29"},{"body":{"nativeSrc":"21668:214:29","nodeType":"YulBlock","src":"21668:214:29","statements":[{"nativeSrc":"21801:37:29","nodeType":"YulAssignment","src":"21801:37:29","value":{"arguments":[{"name":"data","nativeSrc":"21828:4:29","nodeType":"YulIdentifier","src":"21828:4:29"},{"name":"len","nativeSrc":"21834:3:29","nodeType":"YulIdentifier","src":"21834:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"21809:18:29","nodeType":"YulIdentifier","src":"21809:18:29"},"nativeSrc":"21809:29:29","nodeType":"YulFunctionCall","src":"21809:29:29"},"variableNames":[{"name":"data","nativeSrc":"21801:4:29","nodeType":"YulIdentifier","src":"21801:4:29"}]},{"nativeSrc":"21847:29:29","nodeType":"YulAssignment","src":"21847:29:29","value":{"arguments":[{"name":"data","nativeSrc":"21858:4:29","nodeType":"YulIdentifier","src":"21858:4:29"},{"arguments":[{"kind":"number","nativeSrc":"21868:1:29","nodeType":"YulLiteral","src":"21868:1:29","type":"","value":"2"},{"name":"len","nativeSrc":"21871:3:29","nodeType":"YulIdentifier","src":"21871:3:29"}],"functionName":{"name":"mul","nativeSrc":"21864:3:29","nodeType":"YulIdentifier","src":"21864:3:29"},"nativeSrc":"21864:11:29","nodeType":"YulFunctionCall","src":"21864:11:29"}],"functionName":{"name":"or","nativeSrc":"21855:2:29","nodeType":"YulIdentifier","src":"21855:2:29"},"nativeSrc":"21855:21:29","nodeType":"YulFunctionCall","src":"21855:21:29"},"variableNames":[{"name":"used","nativeSrc":"21847:4:29","nodeType":"YulIdentifier","src":"21847:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"21587:295:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"21649:4:29","nodeType":"YulTypedName","src":"21649:4:29","type":""},{"name":"len","nativeSrc":"21655:3:29","nodeType":"YulTypedName","src":"21655:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"21663:4:29","nodeType":"YulTypedName","src":"21663:4:29","type":""}],"src":"21587:295:29"},{"body":{"nativeSrc":"21979:1303:29","nodeType":"YulBlock","src":"21979:1303:29","statements":[{"nativeSrc":"21990:51:29","nodeType":"YulVariableDeclaration","src":"21990:51:29","value":{"arguments":[{"name":"src","nativeSrc":"22037:3:29","nodeType":"YulIdentifier","src":"22037:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"22004:32:29","nodeType":"YulIdentifier","src":"22004:32:29"},"nativeSrc":"22004:37:29","nodeType":"YulFunctionCall","src":"22004:37:29"},"variables":[{"name":"newLen","nativeSrc":"21994:6:29","nodeType":"YulTypedName","src":"21994:6:29","type":""}]},{"body":{"nativeSrc":"22126:22:29","nodeType":"YulBlock","src":"22126:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"22128:16:29","nodeType":"YulIdentifier","src":"22128:16:29"},"nativeSrc":"22128:18:29","nodeType":"YulFunctionCall","src":"22128:18:29"},"nativeSrc":"22128:18:29","nodeType":"YulExpressionStatement","src":"22128:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"22098:6:29","nodeType":"YulIdentifier","src":"22098:6:29"},{"kind":"number","nativeSrc":"22106:18:29","nodeType":"YulLiteral","src":"22106:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22095:2:29","nodeType":"YulIdentifier","src":"22095:2:29"},"nativeSrc":"22095:30:29","nodeType":"YulFunctionCall","src":"22095:30:29"},"nativeSrc":"22092:56:29","nodeType":"YulIf","src":"22092:56:29"},{"nativeSrc":"22158:52:29","nodeType":"YulVariableDeclaration","src":"22158:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"22204:4:29","nodeType":"YulIdentifier","src":"22204:4:29"}],"functionName":{"name":"sload","nativeSrc":"22198:5:29","nodeType":"YulIdentifier","src":"22198:5:29"},"nativeSrc":"22198:11:29","nodeType":"YulFunctionCall","src":"22198:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"22172:25:29","nodeType":"YulIdentifier","src":"22172:25:29"},"nativeSrc":"22172:38:29","nodeType":"YulFunctionCall","src":"22172:38:29"},"variables":[{"name":"oldLen","nativeSrc":"22162:6:29","nodeType":"YulTypedName","src":"22162:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22303:4:29","nodeType":"YulIdentifier","src":"22303:4:29"},{"name":"oldLen","nativeSrc":"22309:6:29","nodeType":"YulIdentifier","src":"22309:6:29"},{"name":"newLen","nativeSrc":"22317:6:29","nodeType":"YulIdentifier","src":"22317:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"22257:45:29","nodeType":"YulIdentifier","src":"22257:45:29"},"nativeSrc":"22257:67:29","nodeType":"YulFunctionCall","src":"22257:67:29"},"nativeSrc":"22257:67:29","nodeType":"YulExpressionStatement","src":"22257:67:29"},{"nativeSrc":"22334:18:29","nodeType":"YulVariableDeclaration","src":"22334:18:29","value":{"kind":"number","nativeSrc":"22351:1:29","nodeType":"YulLiteral","src":"22351:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"22338:9:29","nodeType":"YulTypedName","src":"22338:9:29","type":""}]},{"nativeSrc":"22362:17:29","nodeType":"YulAssignment","src":"22362:17:29","value":{"kind":"number","nativeSrc":"22375:4:29","nodeType":"YulLiteral","src":"22375:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"22362:9:29","nodeType":"YulIdentifier","src":"22362:9:29"}]},{"cases":[{"body":{"nativeSrc":"22426:611:29","nodeType":"YulBlock","src":"22426:611:29","statements":[{"nativeSrc":"22440:37:29","nodeType":"YulVariableDeclaration","src":"22440:37:29","value":{"arguments":[{"name":"newLen","nativeSrc":"22459:6:29","nodeType":"YulIdentifier","src":"22459:6:29"},{"arguments":[{"kind":"number","nativeSrc":"22471:4:29","nodeType":"YulLiteral","src":"22471:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"22467:3:29","nodeType":"YulIdentifier","src":"22467:3:29"},"nativeSrc":"22467:9:29","nodeType":"YulFunctionCall","src":"22467:9:29"}],"functionName":{"name":"and","nativeSrc":"22455:3:29","nodeType":"YulIdentifier","src":"22455:3:29"},"nativeSrc":"22455:22:29","nodeType":"YulFunctionCall","src":"22455:22:29"},"variables":[{"name":"loopEnd","nativeSrc":"22444:7:29","nodeType":"YulTypedName","src":"22444:7:29","type":""}]},{"nativeSrc":"22491:51:29","nodeType":"YulVariableDeclaration","src":"22491:51:29","value":{"arguments":[{"name":"slot","nativeSrc":"22537:4:29","nodeType":"YulIdentifier","src":"22537:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"22505:31:29","nodeType":"YulIdentifier","src":"22505:31:29"},"nativeSrc":"22505:37:29","nodeType":"YulFunctionCall","src":"22505:37:29"},"variables":[{"name":"dstPtr","nativeSrc":"22495:6:29","nodeType":"YulTypedName","src":"22495:6:29","type":""}]},{"nativeSrc":"22555:10:29","nodeType":"YulVariableDeclaration","src":"22555:10:29","value":{"kind":"number","nativeSrc":"22564:1:29","nodeType":"YulLiteral","src":"22564:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"22559:1:29","nodeType":"YulTypedName","src":"22559:1:29","type":""}]},{"body":{"nativeSrc":"22623:163:29","nodeType":"YulBlock","src":"22623:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"22648:6:29","nodeType":"YulIdentifier","src":"22648:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22666:3:29","nodeType":"YulIdentifier","src":"22666:3:29"},{"name":"srcOffset","nativeSrc":"22671:9:29","nodeType":"YulIdentifier","src":"22671:9:29"}],"functionName":{"name":"add","nativeSrc":"22662:3:29","nodeType":"YulIdentifier","src":"22662:3:29"},"nativeSrc":"22662:19:29","nodeType":"YulFunctionCall","src":"22662:19:29"}],"functionName":{"name":"mload","nativeSrc":"22656:5:29","nodeType":"YulIdentifier","src":"22656:5:29"},"nativeSrc":"22656:26:29","nodeType":"YulFunctionCall","src":"22656:26:29"}],"functionName":{"name":"sstore","nativeSrc":"22641:6:29","nodeType":"YulIdentifier","src":"22641:6:29"},"nativeSrc":"22641:42:29","nodeType":"YulFunctionCall","src":"22641:42:29"},"nativeSrc":"22641:42:29","nodeType":"YulExpressionStatement","src":"22641:42:29"},{"nativeSrc":"22700:24:29","nodeType":"YulAssignment","src":"22700:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"22714:6:29","nodeType":"YulIdentifier","src":"22714:6:29"},{"kind":"number","nativeSrc":"22722:1:29","nodeType":"YulLiteral","src":"22722:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"22710:3:29","nodeType":"YulIdentifier","src":"22710:3:29"},"nativeSrc":"22710:14:29","nodeType":"YulFunctionCall","src":"22710:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"22700:6:29","nodeType":"YulIdentifier","src":"22700:6:29"}]},{"nativeSrc":"22741:31:29","nodeType":"YulAssignment","src":"22741:31:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"22758:9:29","nodeType":"YulIdentifier","src":"22758:9:29"},{"kind":"number","nativeSrc":"22769:2:29","nodeType":"YulLiteral","src":"22769:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22754:3:29","nodeType":"YulIdentifier","src":"22754:3:29"},"nativeSrc":"22754:18:29","nodeType":"YulFunctionCall","src":"22754:18:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"22741:9:29","nodeType":"YulIdentifier","src":"22741:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"22589:1:29","nodeType":"YulIdentifier","src":"22589:1:29"},{"name":"loopEnd","nativeSrc":"22592:7:29","nodeType":"YulIdentifier","src":"22592:7:29"}],"functionName":{"name":"lt","nativeSrc":"22586:2:29","nodeType":"YulIdentifier","src":"22586:2:29"},"nativeSrc":"22586:14:29","nodeType":"YulFunctionCall","src":"22586:14:29"},"nativeSrc":"22578:208:29","nodeType":"YulForLoop","post":{"nativeSrc":"22601:21:29","nodeType":"YulBlock","src":"22601:21:29","statements":[{"nativeSrc":"22603:17:29","nodeType":"YulAssignment","src":"22603:17:29","value":{"arguments":[{"name":"i","nativeSrc":"22612:1:29","nodeType":"YulIdentifier","src":"22612:1:29"},{"kind":"number","nativeSrc":"22615:4:29","nodeType":"YulLiteral","src":"22615:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22608:3:29","nodeType":"YulIdentifier","src":"22608:3:29"},"nativeSrc":"22608:12:29","nodeType":"YulFunctionCall","src":"22608:12:29"},"variableNames":[{"name":"i","nativeSrc":"22603:1:29","nodeType":"YulIdentifier","src":"22603:1:29"}]}]},"pre":{"nativeSrc":"22582:3:29","nodeType":"YulBlock","src":"22582:3:29","statements":[]},"src":"22578:208:29"},{"body":{"nativeSrc":"22822:156:29","nodeType":"YulBlock","src":"22822:156:29","statements":[{"nativeSrc":"22840:43:29","nodeType":"YulVariableDeclaration","src":"22840:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"22867:3:29","nodeType":"YulIdentifier","src":"22867:3:29"},{"name":"srcOffset","nativeSrc":"22872:9:29","nodeType":"YulIdentifier","src":"22872:9:29"}],"functionName":{"name":"add","nativeSrc":"22863:3:29","nodeType":"YulIdentifier","src":"22863:3:29"},"nativeSrc":"22863:19:29","nodeType":"YulFunctionCall","src":"22863:19:29"}],"functionName":{"name":"mload","nativeSrc":"22857:5:29","nodeType":"YulIdentifier","src":"22857:5:29"},"nativeSrc":"22857:26:29","nodeType":"YulFunctionCall","src":"22857:26:29"},"variables":[{"name":"lastValue","nativeSrc":"22844:9:29","nodeType":"YulTypedName","src":"22844:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"22907:6:29","nodeType":"YulIdentifier","src":"22907:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"22934:9:29","nodeType":"YulIdentifier","src":"22934:9:29"},{"arguments":[{"name":"newLen","nativeSrc":"22949:6:29","nodeType":"YulIdentifier","src":"22949:6:29"},{"kind":"number","nativeSrc":"22957:4:29","nodeType":"YulLiteral","src":"22957:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"22945:3:29","nodeType":"YulIdentifier","src":"22945:3:29"},"nativeSrc":"22945:17:29","nodeType":"YulFunctionCall","src":"22945:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"22915:18:29","nodeType":"YulIdentifier","src":"22915:18:29"},"nativeSrc":"22915:48:29","nodeType":"YulFunctionCall","src":"22915:48:29"}],"functionName":{"name":"sstore","nativeSrc":"22900:6:29","nodeType":"YulIdentifier","src":"22900:6:29"},"nativeSrc":"22900:64:29","nodeType":"YulFunctionCall","src":"22900:64:29"},"nativeSrc":"22900:64:29","nodeType":"YulExpressionStatement","src":"22900:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"22805:7:29","nodeType":"YulIdentifier","src":"22805:7:29"},{"name":"newLen","nativeSrc":"22814:6:29","nodeType":"YulIdentifier","src":"22814:6:29"}],"functionName":{"name":"lt","nativeSrc":"22802:2:29","nodeType":"YulIdentifier","src":"22802:2:29"},"nativeSrc":"22802:19:29","nodeType":"YulFunctionCall","src":"22802:19:29"},"nativeSrc":"22799:179:29","nodeType":"YulIf","src":"22799:179:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"22998:4:29","nodeType":"YulIdentifier","src":"22998:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"23012:6:29","nodeType":"YulIdentifier","src":"23012:6:29"},{"kind":"number","nativeSrc":"23020:1:29","nodeType":"YulLiteral","src":"23020:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"23008:3:29","nodeType":"YulIdentifier","src":"23008:3:29"},"nativeSrc":"23008:14:29","nodeType":"YulFunctionCall","src":"23008:14:29"},{"kind":"number","nativeSrc":"23024:1:29","nodeType":"YulLiteral","src":"23024:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"23004:3:29","nodeType":"YulIdentifier","src":"23004:3:29"},"nativeSrc":"23004:22:29","nodeType":"YulFunctionCall","src":"23004:22:29"}],"functionName":{"name":"sstore","nativeSrc":"22991:6:29","nodeType":"YulIdentifier","src":"22991:6:29"},"nativeSrc":"22991:36:29","nodeType":"YulFunctionCall","src":"22991:36:29"},"nativeSrc":"22991:36:29","nodeType":"YulExpressionStatement","src":"22991:36:29"}]},"nativeSrc":"22419:618:29","nodeType":"YulCase","src":"22419:618:29","value":{"kind":"number","nativeSrc":"22424:1:29","nodeType":"YulLiteral","src":"22424:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"23054:222:29","nodeType":"YulBlock","src":"23054:222:29","statements":[{"nativeSrc":"23068:14:29","nodeType":"YulVariableDeclaration","src":"23068:14:29","value":{"kind":"number","nativeSrc":"23081:1:29","nodeType":"YulLiteral","src":"23081:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"23072:5:29","nodeType":"YulTypedName","src":"23072:5:29","type":""}]},{"body":{"nativeSrc":"23105:67:29","nodeType":"YulBlock","src":"23105:67:29","statements":[{"nativeSrc":"23123:35:29","nodeType":"YulAssignment","src":"23123:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23142:3:29","nodeType":"YulIdentifier","src":"23142:3:29"},{"name":"srcOffset","nativeSrc":"23147:9:29","nodeType":"YulIdentifier","src":"23147:9:29"}],"functionName":{"name":"add","nativeSrc":"23138:3:29","nodeType":"YulIdentifier","src":"23138:3:29"},"nativeSrc":"23138:19:29","nodeType":"YulFunctionCall","src":"23138:19:29"}],"functionName":{"name":"mload","nativeSrc":"23132:5:29","nodeType":"YulIdentifier","src":"23132:5:29"},"nativeSrc":"23132:26:29","nodeType":"YulFunctionCall","src":"23132:26:29"},"variableNames":[{"name":"value","nativeSrc":"23123:5:29","nodeType":"YulIdentifier","src":"23123:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"23098:6:29","nodeType":"YulIdentifier","src":"23098:6:29"},"nativeSrc":"23095:77:29","nodeType":"YulIf","src":"23095:77:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"23192:4:29","nodeType":"YulIdentifier","src":"23192:4:29"},{"arguments":[{"name":"value","nativeSrc":"23251:5:29","nodeType":"YulIdentifier","src":"23251:5:29"},{"name":"newLen","nativeSrc":"23258:6:29","nodeType":"YulIdentifier","src":"23258:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"23198:52:29","nodeType":"YulIdentifier","src":"23198:52:29"},"nativeSrc":"23198:67:29","nodeType":"YulFunctionCall","src":"23198:67:29"}],"functionName":{"name":"sstore","nativeSrc":"23185:6:29","nodeType":"YulIdentifier","src":"23185:6:29"},"nativeSrc":"23185:81:29","nodeType":"YulFunctionCall","src":"23185:81:29"},"nativeSrc":"23185:81:29","nodeType":"YulExpressionStatement","src":"23185:81:29"}]},"nativeSrc":"23046:230:29","nodeType":"YulCase","src":"23046:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"22399:6:29","nodeType":"YulIdentifier","src":"22399:6:29"},{"kind":"number","nativeSrc":"22407:2:29","nodeType":"YulLiteral","src":"22407:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"22396:2:29","nodeType":"YulIdentifier","src":"22396:2:29"},"nativeSrc":"22396:14:29","nodeType":"YulFunctionCall","src":"22396:14:29"},"nativeSrc":"22389:887:29","nodeType":"YulSwitch","src":"22389:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"21887:1395:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"21968:4:29","nodeType":"YulTypedName","src":"21968:4:29","type":""},{"name":"src","nativeSrc":"21974:3:29","nodeType":"YulTypedName","src":"21974:3:29","type":""}],"src":"21887:1395:29"},{"body":{"nativeSrc":"23472:369:29","nodeType":"YulBlock","src":"23472:369:29","statements":[{"nativeSrc":"23482:26:29","nodeType":"YulAssignment","src":"23482:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"23494:9:29","nodeType":"YulIdentifier","src":"23494:9:29"},{"kind":"number","nativeSrc":"23505:2:29","nodeType":"YulLiteral","src":"23505:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23490:3:29","nodeType":"YulIdentifier","src":"23490:3:29"},"nativeSrc":"23490:18:29","nodeType":"YulFunctionCall","src":"23490:18:29"},"variableNames":[{"name":"tail","nativeSrc":"23482:4:29","nodeType":"YulIdentifier","src":"23482:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23562:6:29","nodeType":"YulIdentifier","src":"23562:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"23575:9:29","nodeType":"YulIdentifier","src":"23575:9:29"},{"kind":"number","nativeSrc":"23586:1:29","nodeType":"YulLiteral","src":"23586:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23571:3:29","nodeType":"YulIdentifier","src":"23571:3:29"},"nativeSrc":"23571:17:29","nodeType":"YulFunctionCall","src":"23571:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23518:43:29","nodeType":"YulIdentifier","src":"23518:43:29"},"nativeSrc":"23518:71:29","nodeType":"YulFunctionCall","src":"23518:71:29"},"nativeSrc":"23518:71:29","nodeType":"YulExpressionStatement","src":"23518:71:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23610:9:29","nodeType":"YulIdentifier","src":"23610:9:29"},{"kind":"number","nativeSrc":"23621:2:29","nodeType":"YulLiteral","src":"23621:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23606:3:29","nodeType":"YulIdentifier","src":"23606:3:29"},"nativeSrc":"23606:18:29","nodeType":"YulFunctionCall","src":"23606:18:29"},{"arguments":[{"name":"tail","nativeSrc":"23630:4:29","nodeType":"YulIdentifier","src":"23630:4:29"},{"name":"headStart","nativeSrc":"23636:9:29","nodeType":"YulIdentifier","src":"23636:9:29"}],"functionName":{"name":"sub","nativeSrc":"23626:3:29","nodeType":"YulIdentifier","src":"23626:3:29"},"nativeSrc":"23626:20:29","nodeType":"YulFunctionCall","src":"23626:20:29"}],"functionName":{"name":"mstore","nativeSrc":"23599:6:29","nodeType":"YulIdentifier","src":"23599:6:29"},"nativeSrc":"23599:48:29","nodeType":"YulFunctionCall","src":"23599:48:29"},"nativeSrc":"23599:48:29","nodeType":"YulExpressionStatement","src":"23599:48:29"},{"nativeSrc":"23656:96:29","nodeType":"YulAssignment","src":"23656:96:29","value":{"arguments":[{"name":"value1","nativeSrc":"23730:6:29","nodeType":"YulIdentifier","src":"23730:6:29"},{"name":"value2","nativeSrc":"23738:6:29","nodeType":"YulIdentifier","src":"23738:6:29"},{"name":"tail","nativeSrc":"23747:4:29","nodeType":"YulIdentifier","src":"23747:4:29"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"23664:65:29","nodeType":"YulIdentifier","src":"23664:65:29"},"nativeSrc":"23664:88:29","nodeType":"YulFunctionCall","src":"23664:88:29"},"variableNames":[{"name":"tail","nativeSrc":"23656:4:29","nodeType":"YulIdentifier","src":"23656:4:29"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"23806:6:29","nodeType":"YulIdentifier","src":"23806:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"23819:9:29","nodeType":"YulIdentifier","src":"23819:9:29"},{"kind":"number","nativeSrc":"23830:2:29","nodeType":"YulLiteral","src":"23830:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23815:3:29","nodeType":"YulIdentifier","src":"23815:3:29"},"nativeSrc":"23815:18:29","nodeType":"YulFunctionCall","src":"23815:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23762:43:29","nodeType":"YulIdentifier","src":"23762:43:29"},"nativeSrc":"23762:72:29","nodeType":"YulFunctionCall","src":"23762:72:29"},"nativeSrc":"23762:72:29","nodeType":"YulExpressionStatement","src":"23762:72:29"}]},"name":"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"23288:553:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23420:9:29","nodeType":"YulTypedName","src":"23420:9:29","type":""},{"name":"value3","nativeSrc":"23432:6:29","nodeType":"YulTypedName","src":"23432:6:29","type":""},{"name":"value2","nativeSrc":"23440:6:29","nodeType":"YulTypedName","src":"23440:6:29","type":""},{"name":"value1","nativeSrc":"23448:6:29","nodeType":"YulTypedName","src":"23448:6:29","type":""},{"name":"value0","nativeSrc":"23456:6:29","nodeType":"YulTypedName","src":"23456:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23467:4:29","nodeType":"YulTypedName","src":"23467:4:29","type":""}],"src":"23288:553:29"},{"body":{"nativeSrc":"23953:73:29","nodeType":"YulBlock","src":"23953:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23975:6:29","nodeType":"YulIdentifier","src":"23975:6:29"},{"kind":"number","nativeSrc":"23983:1:29","nodeType":"YulLiteral","src":"23983:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23971:3:29","nodeType":"YulIdentifier","src":"23971:3:29"},"nativeSrc":"23971:14:29","nodeType":"YulFunctionCall","src":"23971:14:29"},{"hexValue":"43616c6c6572206973206e6f7420746865206261746368206f776e6572","kind":"string","nativeSrc":"23987:31:29","nodeType":"YulLiteral","src":"23987:31:29","type":"","value":"Caller is not the batch owner"}],"functionName":{"name":"mstore","nativeSrc":"23964:6:29","nodeType":"YulIdentifier","src":"23964:6:29"},"nativeSrc":"23964:55:29","nodeType":"YulFunctionCall","src":"23964:55:29"},"nativeSrc":"23964:55:29","nodeType":"YulExpressionStatement","src":"23964:55:29"}]},"name":"store_literal_in_memory_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9","nativeSrc":"23847:179:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23945:6:29","nodeType":"YulTypedName","src":"23945:6:29","type":""}],"src":"23847:179:29"},{"body":{"nativeSrc":"24178:220:29","nodeType":"YulBlock","src":"24178:220:29","statements":[{"nativeSrc":"24188:74:29","nodeType":"YulAssignment","src":"24188:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"24254:3:29","nodeType":"YulIdentifier","src":"24254:3:29"},{"kind":"number","nativeSrc":"24259:2:29","nodeType":"YulLiteral","src":"24259:2:29","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24195:58:29","nodeType":"YulIdentifier","src":"24195:58:29"},"nativeSrc":"24195:67:29","nodeType":"YulFunctionCall","src":"24195:67:29"},"variableNames":[{"name":"pos","nativeSrc":"24188:3:29","nodeType":"YulIdentifier","src":"24188:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24360:3:29","nodeType":"YulIdentifier","src":"24360:3:29"}],"functionName":{"name":"store_literal_in_memory_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9","nativeSrc":"24271:88:29","nodeType":"YulIdentifier","src":"24271:88:29"},"nativeSrc":"24271:93:29","nodeType":"YulFunctionCall","src":"24271:93:29"},"nativeSrc":"24271:93:29","nodeType":"YulExpressionStatement","src":"24271:93:29"},{"nativeSrc":"24373:19:29","nodeType":"YulAssignment","src":"24373:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"24384:3:29","nodeType":"YulIdentifier","src":"24384:3:29"},{"kind":"number","nativeSrc":"24389:2:29","nodeType":"YulLiteral","src":"24389:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24380:3:29","nodeType":"YulIdentifier","src":"24380:3:29"},"nativeSrc":"24380:12:29","nodeType":"YulFunctionCall","src":"24380:12:29"},"variableNames":[{"name":"end","nativeSrc":"24373:3:29","nodeType":"YulIdentifier","src":"24373:3:29"}]}]},"name":"abi_encode_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9_to_t_string_memory_ptr_fromStack","nativeSrc":"24032:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24166:3:29","nodeType":"YulTypedName","src":"24166:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24174:3:29","nodeType":"YulTypedName","src":"24174:3:29","type":""}],"src":"24032:366:29"},{"body":{"nativeSrc":"24575:248:29","nodeType":"YulBlock","src":"24575:248:29","statements":[{"nativeSrc":"24585:26:29","nodeType":"YulAssignment","src":"24585:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"24597:9:29","nodeType":"YulIdentifier","src":"24597:9:29"},{"kind":"number","nativeSrc":"24608:2:29","nodeType":"YulLiteral","src":"24608:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24593:3:29","nodeType":"YulIdentifier","src":"24593:3:29"},"nativeSrc":"24593:18:29","nodeType":"YulFunctionCall","src":"24593:18:29"},"variableNames":[{"name":"tail","nativeSrc":"24585:4:29","nodeType":"YulIdentifier","src":"24585:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24632:9:29","nodeType":"YulIdentifier","src":"24632:9:29"},{"kind":"number","nativeSrc":"24643:1:29","nodeType":"YulLiteral","src":"24643:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24628:3:29","nodeType":"YulIdentifier","src":"24628:3:29"},"nativeSrc":"24628:17:29","nodeType":"YulFunctionCall","src":"24628:17:29"},{"arguments":[{"name":"tail","nativeSrc":"24651:4:29","nodeType":"YulIdentifier","src":"24651:4:29"},{"name":"headStart","nativeSrc":"24657:9:29","nodeType":"YulIdentifier","src":"24657:9:29"}],"functionName":{"name":"sub","nativeSrc":"24647:3:29","nodeType":"YulIdentifier","src":"24647:3:29"},"nativeSrc":"24647:20:29","nodeType":"YulFunctionCall","src":"24647:20:29"}],"functionName":{"name":"mstore","nativeSrc":"24621:6:29","nodeType":"YulIdentifier","src":"24621:6:29"},"nativeSrc":"24621:47:29","nodeType":"YulFunctionCall","src":"24621:47:29"},"nativeSrc":"24621:47:29","nodeType":"YulExpressionStatement","src":"24621:47:29"},{"nativeSrc":"24677:139:29","nodeType":"YulAssignment","src":"24677:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"24811:4:29","nodeType":"YulIdentifier","src":"24811:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9_to_t_string_memory_ptr_fromStack","nativeSrc":"24685:124:29","nodeType":"YulIdentifier","src":"24685:124:29"},"nativeSrc":"24685:131:29","nodeType":"YulFunctionCall","src":"24685:131:29"},"variableNames":[{"name":"tail","nativeSrc":"24677:4:29","nodeType":"YulIdentifier","src":"24677:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24404:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24555:9:29","nodeType":"YulTypedName","src":"24555:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24570:4:29","nodeType":"YulTypedName","src":"24570:4:29","type":""}],"src":"24404:419:29"},{"body":{"nativeSrc":"24935:69:29","nodeType":"YulBlock","src":"24935:69:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24957:6:29","nodeType":"YulIdentifier","src":"24957:6:29"},{"kind":"number","nativeSrc":"24965:1:29","nodeType":"YulLiteral","src":"24965:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24953:3:29","nodeType":"YulIdentifier","src":"24953:3:29"},"nativeSrc":"24953:14:29","nodeType":"YulFunctionCall","src":"24953:14:29"},{"hexValue":"496e76616c6964206e6577206f776e65722061646472657373","kind":"string","nativeSrc":"24969:27:29","nodeType":"YulLiteral","src":"24969:27:29","type":"","value":"Invalid new owner address"}],"functionName":{"name":"mstore","nativeSrc":"24946:6:29","nodeType":"YulIdentifier","src":"24946:6:29"},"nativeSrc":"24946:51:29","nodeType":"YulFunctionCall","src":"24946:51:29"},"nativeSrc":"24946:51:29","nodeType":"YulExpressionStatement","src":"24946:51:29"}]},"name":"store_literal_in_memory_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","nativeSrc":"24829:175:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24927:6:29","nodeType":"YulTypedName","src":"24927:6:29","type":""}],"src":"24829:175:29"},{"body":{"nativeSrc":"25156:220:29","nodeType":"YulBlock","src":"25156:220:29","statements":[{"nativeSrc":"25166:74:29","nodeType":"YulAssignment","src":"25166:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"25232:3:29","nodeType":"YulIdentifier","src":"25232:3:29"},{"kind":"number","nativeSrc":"25237:2:29","nodeType":"YulLiteral","src":"25237:2:29","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25173:58:29","nodeType":"YulIdentifier","src":"25173:58:29"},"nativeSrc":"25173:67:29","nodeType":"YulFunctionCall","src":"25173:67:29"},"variableNames":[{"name":"pos","nativeSrc":"25166:3:29","nodeType":"YulIdentifier","src":"25166:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25338:3:29","nodeType":"YulIdentifier","src":"25338:3:29"}],"functionName":{"name":"store_literal_in_memory_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","nativeSrc":"25249:88:29","nodeType":"YulIdentifier","src":"25249:88:29"},"nativeSrc":"25249:93:29","nodeType":"YulFunctionCall","src":"25249:93:29"},"nativeSrc":"25249:93:29","nodeType":"YulExpressionStatement","src":"25249:93:29"},{"nativeSrc":"25351:19:29","nodeType":"YulAssignment","src":"25351:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"25362:3:29","nodeType":"YulIdentifier","src":"25362:3:29"},{"kind":"number","nativeSrc":"25367:2:29","nodeType":"YulLiteral","src":"25367:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25358:3:29","nodeType":"YulIdentifier","src":"25358:3:29"},"nativeSrc":"25358:12:29","nodeType":"YulFunctionCall","src":"25358:12:29"},"variableNames":[{"name":"end","nativeSrc":"25351:3:29","nodeType":"YulIdentifier","src":"25351:3:29"}]}]},"name":"abi_encode_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222_to_t_string_memory_ptr_fromStack","nativeSrc":"25010:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25144:3:29","nodeType":"YulTypedName","src":"25144:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25152:3:29","nodeType":"YulTypedName","src":"25152:3:29","type":""}],"src":"25010:366:29"},{"body":{"nativeSrc":"25553:248:29","nodeType":"YulBlock","src":"25553:248:29","statements":[{"nativeSrc":"25563:26:29","nodeType":"YulAssignment","src":"25563:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"25575:9:29","nodeType":"YulIdentifier","src":"25575:9:29"},{"kind":"number","nativeSrc":"25586:2:29","nodeType":"YulLiteral","src":"25586:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25571:3:29","nodeType":"YulIdentifier","src":"25571:3:29"},"nativeSrc":"25571:18:29","nodeType":"YulFunctionCall","src":"25571:18:29"},"variableNames":[{"name":"tail","nativeSrc":"25563:4:29","nodeType":"YulIdentifier","src":"25563:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25610:9:29","nodeType":"YulIdentifier","src":"25610:9:29"},{"kind":"number","nativeSrc":"25621:1:29","nodeType":"YulLiteral","src":"25621:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25606:3:29","nodeType":"YulIdentifier","src":"25606:3:29"},"nativeSrc":"25606:17:29","nodeType":"YulFunctionCall","src":"25606:17:29"},{"arguments":[{"name":"tail","nativeSrc":"25629:4:29","nodeType":"YulIdentifier","src":"25629:4:29"},{"name":"headStart","nativeSrc":"25635:9:29","nodeType":"YulIdentifier","src":"25635:9:29"}],"functionName":{"name":"sub","nativeSrc":"25625:3:29","nodeType":"YulIdentifier","src":"25625:3:29"},"nativeSrc":"25625:20:29","nodeType":"YulFunctionCall","src":"25625:20:29"}],"functionName":{"name":"mstore","nativeSrc":"25599:6:29","nodeType":"YulIdentifier","src":"25599:6:29"},"nativeSrc":"25599:47:29","nodeType":"YulFunctionCall","src":"25599:47:29"},"nativeSrc":"25599:47:29","nodeType":"YulExpressionStatement","src":"25599:47:29"},{"nativeSrc":"25655:139:29","nodeType":"YulAssignment","src":"25655:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"25789:4:29","nodeType":"YulIdentifier","src":"25789:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222_to_t_string_memory_ptr_fromStack","nativeSrc":"25663:124:29","nodeType":"YulIdentifier","src":"25663:124:29"},"nativeSrc":"25663:131:29","nodeType":"YulFunctionCall","src":"25663:131:29"},"variableNames":[{"name":"tail","nativeSrc":"25655:4:29","nodeType":"YulIdentifier","src":"25655:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25382:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25533:9:29","nodeType":"YulTypedName","src":"25533:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25548:4:29","nodeType":"YulTypedName","src":"25548:4:29","type":""}],"src":"25382:419:29"},{"body":{"nativeSrc":"25913:115:29","nodeType":"YulBlock","src":"25913:115:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25935:6:29","nodeType":"YulIdentifier","src":"25935:6:29"},{"kind":"number","nativeSrc":"25943:1:29","nodeType":"YulLiteral","src":"25943:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25931:3:29","nodeType":"YulIdentifier","src":"25931:3:29"},"nativeSrc":"25931:14:29","nodeType":"YulFunctionCall","src":"25931:14:29"},{"hexValue":"496e73756666696369656e742062616c616e636520666f72207472616e736665","kind":"string","nativeSrc":"25947:34:29","nodeType":"YulLiteral","src":"25947:34:29","type":"","value":"Insufficient balance for transfe"}],"functionName":{"name":"mstore","nativeSrc":"25924:6:29","nodeType":"YulIdentifier","src":"25924:6:29"},"nativeSrc":"25924:58:29","nodeType":"YulFunctionCall","src":"25924:58:29"},"nativeSrc":"25924:58:29","nodeType":"YulExpressionStatement","src":"25924:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26003:6:29","nodeType":"YulIdentifier","src":"26003:6:29"},{"kind":"number","nativeSrc":"26011:2:29","nodeType":"YulLiteral","src":"26011:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25999:3:29","nodeType":"YulIdentifier","src":"25999:3:29"},"nativeSrc":"25999:15:29","nodeType":"YulFunctionCall","src":"25999:15:29"},{"hexValue":"722e","kind":"string","nativeSrc":"26016:4:29","nodeType":"YulLiteral","src":"26016:4:29","type":"","value":"r."}],"functionName":{"name":"mstore","nativeSrc":"25992:6:29","nodeType":"YulIdentifier","src":"25992:6:29"},"nativeSrc":"25992:29:29","nodeType":"YulFunctionCall","src":"25992:29:29"},"nativeSrc":"25992:29:29","nodeType":"YulExpressionStatement","src":"25992:29:29"}]},"name":"store_literal_in_memory_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764","nativeSrc":"25807:221:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25905:6:29","nodeType":"YulTypedName","src":"25905:6:29","type":""}],"src":"25807:221:29"},{"body":{"nativeSrc":"26180:220:29","nodeType":"YulBlock","src":"26180:220:29","statements":[{"nativeSrc":"26190:74:29","nodeType":"YulAssignment","src":"26190:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"26256:3:29","nodeType":"YulIdentifier","src":"26256:3:29"},{"kind":"number","nativeSrc":"26261:2:29","nodeType":"YulLiteral","src":"26261:2:29","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26197:58:29","nodeType":"YulIdentifier","src":"26197:58:29"},"nativeSrc":"26197:67:29","nodeType":"YulFunctionCall","src":"26197:67:29"},"variableNames":[{"name":"pos","nativeSrc":"26190:3:29","nodeType":"YulIdentifier","src":"26190:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26362:3:29","nodeType":"YulIdentifier","src":"26362:3:29"}],"functionName":{"name":"store_literal_in_memory_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764","nativeSrc":"26273:88:29","nodeType":"YulIdentifier","src":"26273:88:29"},"nativeSrc":"26273:93:29","nodeType":"YulFunctionCall","src":"26273:93:29"},"nativeSrc":"26273:93:29","nodeType":"YulExpressionStatement","src":"26273:93:29"},{"nativeSrc":"26375:19:29","nodeType":"YulAssignment","src":"26375:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"26386:3:29","nodeType":"YulIdentifier","src":"26386:3:29"},{"kind":"number","nativeSrc":"26391:2:29","nodeType":"YulLiteral","src":"26391:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26382:3:29","nodeType":"YulIdentifier","src":"26382:3:29"},"nativeSrc":"26382:12:29","nodeType":"YulFunctionCall","src":"26382:12:29"},"variableNames":[{"name":"end","nativeSrc":"26375:3:29","nodeType":"YulIdentifier","src":"26375:3:29"}]}]},"name":"abi_encode_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764_to_t_string_memory_ptr_fromStack","nativeSrc":"26034:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26168:3:29","nodeType":"YulTypedName","src":"26168:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26176:3:29","nodeType":"YulTypedName","src":"26176:3:29","type":""}],"src":"26034:366:29"},{"body":{"nativeSrc":"26577:248:29","nodeType":"YulBlock","src":"26577:248:29","statements":[{"nativeSrc":"26587:26:29","nodeType":"YulAssignment","src":"26587:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"26599:9:29","nodeType":"YulIdentifier","src":"26599:9:29"},{"kind":"number","nativeSrc":"26610:2:29","nodeType":"YulLiteral","src":"26610:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26595:3:29","nodeType":"YulIdentifier","src":"26595:3:29"},"nativeSrc":"26595:18:29","nodeType":"YulFunctionCall","src":"26595:18:29"},"variableNames":[{"name":"tail","nativeSrc":"26587:4:29","nodeType":"YulIdentifier","src":"26587:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26634:9:29","nodeType":"YulIdentifier","src":"26634:9:29"},{"kind":"number","nativeSrc":"26645:1:29","nodeType":"YulLiteral","src":"26645:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26630:3:29","nodeType":"YulIdentifier","src":"26630:3:29"},"nativeSrc":"26630:17:29","nodeType":"YulFunctionCall","src":"26630:17:29"},{"arguments":[{"name":"tail","nativeSrc":"26653:4:29","nodeType":"YulIdentifier","src":"26653:4:29"},{"name":"headStart","nativeSrc":"26659:9:29","nodeType":"YulIdentifier","src":"26659:9:29"}],"functionName":{"name":"sub","nativeSrc":"26649:3:29","nodeType":"YulIdentifier","src":"26649:3:29"},"nativeSrc":"26649:20:29","nodeType":"YulFunctionCall","src":"26649:20:29"}],"functionName":{"name":"mstore","nativeSrc":"26623:6:29","nodeType":"YulIdentifier","src":"26623:6:29"},"nativeSrc":"26623:47:29","nodeType":"YulFunctionCall","src":"26623:47:29"},"nativeSrc":"26623:47:29","nodeType":"YulExpressionStatement","src":"26623:47:29"},{"nativeSrc":"26679:139:29","nodeType":"YulAssignment","src":"26679:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"26813:4:29","nodeType":"YulIdentifier","src":"26813:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764_to_t_string_memory_ptr_fromStack","nativeSrc":"26687:124:29","nodeType":"YulIdentifier","src":"26687:124:29"},"nativeSrc":"26687:131:29","nodeType":"YulFunctionCall","src":"26687:131:29"},"variableNames":[{"name":"tail","nativeSrc":"26679:4:29","nodeType":"YulIdentifier","src":"26679:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26406:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26557:9:29","nodeType":"YulTypedName","src":"26557:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26572:4:29","nodeType":"YulTypedName","src":"26572:4:29","type":""}],"src":"26406:419:29"},{"body":{"nativeSrc":"26957:206:29","nodeType":"YulBlock","src":"26957:206:29","statements":[{"nativeSrc":"26967:26:29","nodeType":"YulAssignment","src":"26967:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"26979:9:29","nodeType":"YulIdentifier","src":"26979:9:29"},{"kind":"number","nativeSrc":"26990:2:29","nodeType":"YulLiteral","src":"26990:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26975:3:29","nodeType":"YulIdentifier","src":"26975:3:29"},"nativeSrc":"26975:18:29","nodeType":"YulFunctionCall","src":"26975:18:29"},"variableNames":[{"name":"tail","nativeSrc":"26967:4:29","nodeType":"YulIdentifier","src":"26967:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27047:6:29","nodeType":"YulIdentifier","src":"27047:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"27060:9:29","nodeType":"YulIdentifier","src":"27060:9:29"},{"kind":"number","nativeSrc":"27071:1:29","nodeType":"YulLiteral","src":"27071:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27056:3:29","nodeType":"YulIdentifier","src":"27056:3:29"},"nativeSrc":"27056:17:29","nodeType":"YulFunctionCall","src":"27056:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27003:43:29","nodeType":"YulIdentifier","src":"27003:43:29"},"nativeSrc":"27003:71:29","nodeType":"YulFunctionCall","src":"27003:71:29"},"nativeSrc":"27003:71:29","nodeType":"YulExpressionStatement","src":"27003:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27128:6:29","nodeType":"YulIdentifier","src":"27128:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"27141:9:29","nodeType":"YulIdentifier","src":"27141:9:29"},{"kind":"number","nativeSrc":"27152:2:29","nodeType":"YulLiteral","src":"27152:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27137:3:29","nodeType":"YulIdentifier","src":"27137:3:29"},"nativeSrc":"27137:18:29","nodeType":"YulFunctionCall","src":"27137:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27084:43:29","nodeType":"YulIdentifier","src":"27084:43:29"},"nativeSrc":"27084:72:29","nodeType":"YulFunctionCall","src":"27084:72:29"},"nativeSrc":"27084:72:29","nodeType":"YulExpressionStatement","src":"27084:72:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"26831:332:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26921:9:29","nodeType":"YulTypedName","src":"26921:9:29","type":""},{"name":"value1","nativeSrc":"26933:6:29","nodeType":"YulTypedName","src":"26933:6:29","type":""},{"name":"value0","nativeSrc":"26941:6:29","nodeType":"YulTypedName","src":"26941:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26952:4:29","nodeType":"YulTypedName","src":"26952:4:29","type":""}],"src":"26831:332:29"},{"body":{"nativeSrc":"27353:369:29","nodeType":"YulBlock","src":"27353:369:29","statements":[{"nativeSrc":"27363:26:29","nodeType":"YulAssignment","src":"27363:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"27375:9:29","nodeType":"YulIdentifier","src":"27375:9:29"},{"kind":"number","nativeSrc":"27386:2:29","nodeType":"YulLiteral","src":"27386:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27371:3:29","nodeType":"YulIdentifier","src":"27371:3:29"},"nativeSrc":"27371:18:29","nodeType":"YulFunctionCall","src":"27371:18:29"},"variableNames":[{"name":"tail","nativeSrc":"27363:4:29","nodeType":"YulIdentifier","src":"27363:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27443:6:29","nodeType":"YulIdentifier","src":"27443:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"27456:9:29","nodeType":"YulIdentifier","src":"27456:9:29"},{"kind":"number","nativeSrc":"27467:1:29","nodeType":"YulLiteral","src":"27467:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27452:3:29","nodeType":"YulIdentifier","src":"27452:3:29"},"nativeSrc":"27452:17:29","nodeType":"YulFunctionCall","src":"27452:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27399:43:29","nodeType":"YulIdentifier","src":"27399:43:29"},"nativeSrc":"27399:71:29","nodeType":"YulFunctionCall","src":"27399:71:29"},"nativeSrc":"27399:71:29","nodeType":"YulExpressionStatement","src":"27399:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27524:6:29","nodeType":"YulIdentifier","src":"27524:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"27537:9:29","nodeType":"YulIdentifier","src":"27537:9:29"},{"kind":"number","nativeSrc":"27548:2:29","nodeType":"YulLiteral","src":"27548:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27533:3:29","nodeType":"YulIdentifier","src":"27533:3:29"},"nativeSrc":"27533:18:29","nodeType":"YulFunctionCall","src":"27533:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27480:43:29","nodeType":"YulIdentifier","src":"27480:43:29"},"nativeSrc":"27480:72:29","nodeType":"YulFunctionCall","src":"27480:72:29"},"nativeSrc":"27480:72:29","nodeType":"YulExpressionStatement","src":"27480:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27573:9:29","nodeType":"YulIdentifier","src":"27573:9:29"},{"kind":"number","nativeSrc":"27584:2:29","nodeType":"YulLiteral","src":"27584:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27569:3:29","nodeType":"YulIdentifier","src":"27569:3:29"},"nativeSrc":"27569:18:29","nodeType":"YulFunctionCall","src":"27569:18:29"},{"arguments":[{"name":"tail","nativeSrc":"27593:4:29","nodeType":"YulIdentifier","src":"27593:4:29"},{"name":"headStart","nativeSrc":"27599:9:29","nodeType":"YulIdentifier","src":"27599:9:29"}],"functionName":{"name":"sub","nativeSrc":"27589:3:29","nodeType":"YulIdentifier","src":"27589:3:29"},"nativeSrc":"27589:20:29","nodeType":"YulFunctionCall","src":"27589:20:29"}],"functionName":{"name":"mstore","nativeSrc":"27562:6:29","nodeType":"YulIdentifier","src":"27562:6:29"},"nativeSrc":"27562:48:29","nodeType":"YulFunctionCall","src":"27562:48:29"},"nativeSrc":"27562:48:29","nodeType":"YulExpressionStatement","src":"27562:48:29"},{"nativeSrc":"27619:96:29","nodeType":"YulAssignment","src":"27619:96:29","value":{"arguments":[{"name":"value2","nativeSrc":"27693:6:29","nodeType":"YulIdentifier","src":"27693:6:29"},{"name":"value3","nativeSrc":"27701:6:29","nodeType":"YulIdentifier","src":"27701:6:29"},{"name":"tail","nativeSrc":"27710:4:29","nodeType":"YulIdentifier","src":"27710:4:29"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"27627:65:29","nodeType":"YulIdentifier","src":"27627:65:29"},"nativeSrc":"27627:88:29","nodeType":"YulFunctionCall","src":"27627:88:29"},"variableNames":[{"name":"tail","nativeSrc":"27619:4:29","nodeType":"YulIdentifier","src":"27619:4:29"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27169:553:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27301:9:29","nodeType":"YulTypedName","src":"27301:9:29","type":""},{"name":"value3","nativeSrc":"27313:6:29","nodeType":"YulTypedName","src":"27313:6:29","type":""},{"name":"value2","nativeSrc":"27321:6:29","nodeType":"YulTypedName","src":"27321:6:29","type":""},{"name":"value1","nativeSrc":"27329:6:29","nodeType":"YulTypedName","src":"27329:6:29","type":""},{"name":"value0","nativeSrc":"27337:6:29","nodeType":"YulTypedName","src":"27337:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27348:4:29","nodeType":"YulTypedName","src":"27348:4:29","type":""}],"src":"27169:553:29"},{"body":{"nativeSrc":"27834:129:29","nodeType":"YulBlock","src":"27834:129:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27856:6:29","nodeType":"YulIdentifier","src":"27856:6:29"},{"kind":"number","nativeSrc":"27864:1:29","nodeType":"YulLiteral","src":"27864:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27852:3:29","nodeType":"YulIdentifier","src":"27852:3:29"},"nativeSrc":"27852:14:29","nodeType":"YulFunctionCall","src":"27852:14:29"},{"hexValue":"43616e6e6f7420757064617465206174746573746174696f6e20666f72206120","kind":"string","nativeSrc":"27868:34:29","nodeType":"YulLiteral","src":"27868:34:29","type":"","value":"Cannot update attestation for a "}],"functionName":{"name":"mstore","nativeSrc":"27845:6:29","nodeType":"YulIdentifier","src":"27845:6:29"},"nativeSrc":"27845:58:29","nodeType":"YulFunctionCall","src":"27845:58:29"},"nativeSrc":"27845:58:29","nodeType":"YulExpressionStatement","src":"27845:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27924:6:29","nodeType":"YulIdentifier","src":"27924:6:29"},{"kind":"number","nativeSrc":"27932:2:29","nodeType":"YulLiteral","src":"27932:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27920:3:29","nodeType":"YulIdentifier","src":"27920:3:29"},"nativeSrc":"27920:15:29","nodeType":"YulFunctionCall","src":"27920:15:29"},{"hexValue":"66696e616c697a65642062617463682e","kind":"string","nativeSrc":"27937:18:29","nodeType":"YulLiteral","src":"27937:18:29","type":"","value":"finalized batch."}],"functionName":{"name":"mstore","nativeSrc":"27913:6:29","nodeType":"YulIdentifier","src":"27913:6:29"},"nativeSrc":"27913:43:29","nodeType":"YulFunctionCall","src":"27913:43:29"},"nativeSrc":"27913:43:29","nodeType":"YulExpressionStatement","src":"27913:43:29"}]},"name":"store_literal_in_memory_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae","nativeSrc":"27728:235:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27826:6:29","nodeType":"YulTypedName","src":"27826:6:29","type":""}],"src":"27728:235:29"},{"body":{"nativeSrc":"28115:220:29","nodeType":"YulBlock","src":"28115:220:29","statements":[{"nativeSrc":"28125:74:29","nodeType":"YulAssignment","src":"28125:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"28191:3:29","nodeType":"YulIdentifier","src":"28191:3:29"},{"kind":"number","nativeSrc":"28196:2:29","nodeType":"YulLiteral","src":"28196:2:29","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28132:58:29","nodeType":"YulIdentifier","src":"28132:58:29"},"nativeSrc":"28132:67:29","nodeType":"YulFunctionCall","src":"28132:67:29"},"variableNames":[{"name":"pos","nativeSrc":"28125:3:29","nodeType":"YulIdentifier","src":"28125:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28297:3:29","nodeType":"YulIdentifier","src":"28297:3:29"}],"functionName":{"name":"store_literal_in_memory_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae","nativeSrc":"28208:88:29","nodeType":"YulIdentifier","src":"28208:88:29"},"nativeSrc":"28208:93:29","nodeType":"YulFunctionCall","src":"28208:93:29"},"nativeSrc":"28208:93:29","nodeType":"YulExpressionStatement","src":"28208:93:29"},{"nativeSrc":"28310:19:29","nodeType":"YulAssignment","src":"28310:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"28321:3:29","nodeType":"YulIdentifier","src":"28321:3:29"},{"kind":"number","nativeSrc":"28326:2:29","nodeType":"YulLiteral","src":"28326:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28317:3:29","nodeType":"YulIdentifier","src":"28317:3:29"},"nativeSrc":"28317:12:29","nodeType":"YulFunctionCall","src":"28317:12:29"},"variableNames":[{"name":"end","nativeSrc":"28310:3:29","nodeType":"YulIdentifier","src":"28310:3:29"}]}]},"name":"abi_encode_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae_to_t_string_memory_ptr_fromStack","nativeSrc":"27969:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28103:3:29","nodeType":"YulTypedName","src":"28103:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28111:3:29","nodeType":"YulTypedName","src":"28111:3:29","type":""}],"src":"27969:366:29"},{"body":{"nativeSrc":"28512:248:29","nodeType":"YulBlock","src":"28512:248:29","statements":[{"nativeSrc":"28522:26:29","nodeType":"YulAssignment","src":"28522:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"28534:9:29","nodeType":"YulIdentifier","src":"28534:9:29"},{"kind":"number","nativeSrc":"28545:2:29","nodeType":"YulLiteral","src":"28545:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28530:3:29","nodeType":"YulIdentifier","src":"28530:3:29"},"nativeSrc":"28530:18:29","nodeType":"YulFunctionCall","src":"28530:18:29"},"variableNames":[{"name":"tail","nativeSrc":"28522:4:29","nodeType":"YulIdentifier","src":"28522:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28569:9:29","nodeType":"YulIdentifier","src":"28569:9:29"},{"kind":"number","nativeSrc":"28580:1:29","nodeType":"YulLiteral","src":"28580:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28565:3:29","nodeType":"YulIdentifier","src":"28565:3:29"},"nativeSrc":"28565:17:29","nodeType":"YulFunctionCall","src":"28565:17:29"},{"arguments":[{"name":"tail","nativeSrc":"28588:4:29","nodeType":"YulIdentifier","src":"28588:4:29"},{"name":"headStart","nativeSrc":"28594:9:29","nodeType":"YulIdentifier","src":"28594:9:29"}],"functionName":{"name":"sub","nativeSrc":"28584:3:29","nodeType":"YulIdentifier","src":"28584:3:29"},"nativeSrc":"28584:20:29","nodeType":"YulFunctionCall","src":"28584:20:29"}],"functionName":{"name":"mstore","nativeSrc":"28558:6:29","nodeType":"YulIdentifier","src":"28558:6:29"},"nativeSrc":"28558:47:29","nodeType":"YulFunctionCall","src":"28558:47:29"},"nativeSrc":"28558:47:29","nodeType":"YulExpressionStatement","src":"28558:47:29"},{"nativeSrc":"28614:139:29","nodeType":"YulAssignment","src":"28614:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"28748:4:29","nodeType":"YulIdentifier","src":"28748:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae_to_t_string_memory_ptr_fromStack","nativeSrc":"28622:124:29","nodeType":"YulIdentifier","src":"28622:124:29"},"nativeSrc":"28622:131:29","nodeType":"YulFunctionCall","src":"28622:131:29"},"variableNames":[{"name":"tail","nativeSrc":"28614:4:29","nodeType":"YulIdentifier","src":"28614:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28341:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28492:9:29","nodeType":"YulTypedName","src":"28492:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28507:4:29","nodeType":"YulTypedName","src":"28507:4:29","type":""}],"src":"28341:419:29"},{"body":{"nativeSrc":"28832:31:29","nodeType":"YulBlock","src":"28832:31:29","statements":[{"nativeSrc":"28843:13:29","nodeType":"YulAssignment","src":"28843:13:29","value":{"name":"len","nativeSrc":"28853:3:29","nodeType":"YulIdentifier","src":"28853:3:29"},"variableNames":[{"name":"length","nativeSrc":"28843:6:29","nodeType":"YulIdentifier","src":"28843:6:29"}]}]},"name":"array_length_t_string_calldata_ptr","nativeSrc":"28766:97:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"28810:5:29","nodeType":"YulTypedName","src":"28810:5:29","type":""},{"name":"len","nativeSrc":"28817:3:29","nodeType":"YulTypedName","src":"28817:3:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"28825:6:29","nodeType":"YulTypedName","src":"28825:6:29","type":""}],"src":"28766:97:29"},{"body":{"nativeSrc":"28968:1304:29","nodeType":"YulBlock","src":"28968:1304:29","statements":[{"nativeSrc":"28979:58:29","nodeType":"YulVariableDeclaration","src":"28979:58:29","value":{"arguments":[{"name":"src","nativeSrc":"29028:3:29","nodeType":"YulIdentifier","src":"29028:3:29"},{"name":"len","nativeSrc":"29033:3:29","nodeType":"YulIdentifier","src":"29033:3:29"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nativeSrc":"28993:34:29","nodeType":"YulIdentifier","src":"28993:34:29"},"nativeSrc":"28993:44:29","nodeType":"YulFunctionCall","src":"28993:44:29"},"variables":[{"name":"newLen","nativeSrc":"28983:6:29","nodeType":"YulTypedName","src":"28983:6:29","type":""}]},{"body":{"nativeSrc":"29122:22:29","nodeType":"YulBlock","src":"29122:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"29124:16:29","nodeType":"YulIdentifier","src":"29124:16:29"},"nativeSrc":"29124:18:29","nodeType":"YulFunctionCall","src":"29124:18:29"},"nativeSrc":"29124:18:29","nodeType":"YulExpressionStatement","src":"29124:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"29094:6:29","nodeType":"YulIdentifier","src":"29094:6:29"},{"kind":"number","nativeSrc":"29102:18:29","nodeType":"YulLiteral","src":"29102:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"29091:2:29","nodeType":"YulIdentifier","src":"29091:2:29"},"nativeSrc":"29091:30:29","nodeType":"YulFunctionCall","src":"29091:30:29"},"nativeSrc":"29088:56:29","nodeType":"YulIf","src":"29088:56:29"},{"nativeSrc":"29154:52:29","nodeType":"YulVariableDeclaration","src":"29154:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"29200:4:29","nodeType":"YulIdentifier","src":"29200:4:29"}],"functionName":{"name":"sload","nativeSrc":"29194:5:29","nodeType":"YulIdentifier","src":"29194:5:29"},"nativeSrc":"29194:11:29","nodeType":"YulFunctionCall","src":"29194:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"29168:25:29","nodeType":"YulIdentifier","src":"29168:25:29"},"nativeSrc":"29168:38:29","nodeType":"YulFunctionCall","src":"29168:38:29"},"variables":[{"name":"oldLen","nativeSrc":"29158:6:29","nodeType":"YulTypedName","src":"29158:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29299:4:29","nodeType":"YulIdentifier","src":"29299:4:29"},{"name":"oldLen","nativeSrc":"29305:6:29","nodeType":"YulIdentifier","src":"29305:6:29"},{"name":"newLen","nativeSrc":"29313:6:29","nodeType":"YulIdentifier","src":"29313:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"29253:45:29","nodeType":"YulIdentifier","src":"29253:45:29"},"nativeSrc":"29253:67:29","nodeType":"YulFunctionCall","src":"29253:67:29"},"nativeSrc":"29253:67:29","nodeType":"YulExpressionStatement","src":"29253:67:29"},{"nativeSrc":"29330:18:29","nodeType":"YulVariableDeclaration","src":"29330:18:29","value":{"kind":"number","nativeSrc":"29347:1:29","nodeType":"YulLiteral","src":"29347:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"29334:9:29","nodeType":"YulTypedName","src":"29334:9:29","type":""}]},{"cases":[{"body":{"nativeSrc":"29395:625:29","nodeType":"YulBlock","src":"29395:625:29","statements":[{"nativeSrc":"29409:37:29","nodeType":"YulVariableDeclaration","src":"29409:37:29","value":{"arguments":[{"name":"newLen","nativeSrc":"29428:6:29","nodeType":"YulIdentifier","src":"29428:6:29"},{"arguments":[{"kind":"number","nativeSrc":"29440:4:29","nodeType":"YulLiteral","src":"29440:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"29436:3:29","nodeType":"YulIdentifier","src":"29436:3:29"},"nativeSrc":"29436:9:29","nodeType":"YulFunctionCall","src":"29436:9:29"}],"functionName":{"name":"and","nativeSrc":"29424:3:29","nodeType":"YulIdentifier","src":"29424:3:29"},"nativeSrc":"29424:22:29","nodeType":"YulFunctionCall","src":"29424:22:29"},"variables":[{"name":"loopEnd","nativeSrc":"29413:7:29","nodeType":"YulTypedName","src":"29413:7:29","type":""}]},{"nativeSrc":"29460:51:29","nodeType":"YulVariableDeclaration","src":"29460:51:29","value":{"arguments":[{"name":"slot","nativeSrc":"29506:4:29","nodeType":"YulIdentifier","src":"29506:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"29474:31:29","nodeType":"YulIdentifier","src":"29474:31:29"},"nativeSrc":"29474:37:29","nodeType":"YulFunctionCall","src":"29474:37:29"},"variables":[{"name":"dstPtr","nativeSrc":"29464:6:29","nodeType":"YulTypedName","src":"29464:6:29","type":""}]},{"nativeSrc":"29524:10:29","nodeType":"YulVariableDeclaration","src":"29524:10:29","value":{"kind":"number","nativeSrc":"29533:1:29","nodeType":"YulLiteral","src":"29533:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"29528:1:29","nodeType":"YulTypedName","src":"29528:1:29","type":""}]},{"body":{"nativeSrc":"29592:170:29","nodeType":"YulBlock","src":"29592:170:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"29617:6:29","nodeType":"YulIdentifier","src":"29617:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"29642:3:29","nodeType":"YulIdentifier","src":"29642:3:29"},{"name":"srcOffset","nativeSrc":"29647:9:29","nodeType":"YulIdentifier","src":"29647:9:29"}],"functionName":{"name":"add","nativeSrc":"29638:3:29","nodeType":"YulIdentifier","src":"29638:3:29"},"nativeSrc":"29638:19:29","nodeType":"YulFunctionCall","src":"29638:19:29"}],"functionName":{"name":"calldataload","nativeSrc":"29625:12:29","nodeType":"YulIdentifier","src":"29625:12:29"},"nativeSrc":"29625:33:29","nodeType":"YulFunctionCall","src":"29625:33:29"}],"functionName":{"name":"sstore","nativeSrc":"29610:6:29","nodeType":"YulIdentifier","src":"29610:6:29"},"nativeSrc":"29610:49:29","nodeType":"YulFunctionCall","src":"29610:49:29"},"nativeSrc":"29610:49:29","nodeType":"YulExpressionStatement","src":"29610:49:29"},{"nativeSrc":"29676:24:29","nodeType":"YulAssignment","src":"29676:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"29690:6:29","nodeType":"YulIdentifier","src":"29690:6:29"},{"kind":"number","nativeSrc":"29698:1:29","nodeType":"YulLiteral","src":"29698:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29686:3:29","nodeType":"YulIdentifier","src":"29686:3:29"},"nativeSrc":"29686:14:29","nodeType":"YulFunctionCall","src":"29686:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"29676:6:29","nodeType":"YulIdentifier","src":"29676:6:29"}]},{"nativeSrc":"29717:31:29","nodeType":"YulAssignment","src":"29717:31:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"29734:9:29","nodeType":"YulIdentifier","src":"29734:9:29"},{"kind":"number","nativeSrc":"29745:2:29","nodeType":"YulLiteral","src":"29745:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29730:3:29","nodeType":"YulIdentifier","src":"29730:3:29"},"nativeSrc":"29730:18:29","nodeType":"YulFunctionCall","src":"29730:18:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"29717:9:29","nodeType":"YulIdentifier","src":"29717:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"29558:1:29","nodeType":"YulIdentifier","src":"29558:1:29"},{"name":"loopEnd","nativeSrc":"29561:7:29","nodeType":"YulIdentifier","src":"29561:7:29"}],"functionName":{"name":"lt","nativeSrc":"29555:2:29","nodeType":"YulIdentifier","src":"29555:2:29"},"nativeSrc":"29555:14:29","nodeType":"YulFunctionCall","src":"29555:14:29"},"nativeSrc":"29547:215:29","nodeType":"YulForLoop","post":{"nativeSrc":"29570:21:29","nodeType":"YulBlock","src":"29570:21:29","statements":[{"nativeSrc":"29572:17:29","nodeType":"YulAssignment","src":"29572:17:29","value":{"arguments":[{"name":"i","nativeSrc":"29581:1:29","nodeType":"YulIdentifier","src":"29581:1:29"},{"kind":"number","nativeSrc":"29584:4:29","nodeType":"YulLiteral","src":"29584:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"29577:3:29","nodeType":"YulIdentifier","src":"29577:3:29"},"nativeSrc":"29577:12:29","nodeType":"YulFunctionCall","src":"29577:12:29"},"variableNames":[{"name":"i","nativeSrc":"29572:1:29","nodeType":"YulIdentifier","src":"29572:1:29"}]}]},"pre":{"nativeSrc":"29551:3:29","nodeType":"YulBlock","src":"29551:3:29","statements":[]},"src":"29547:215:29"},{"body":{"nativeSrc":"29798:163:29","nodeType":"YulBlock","src":"29798:163:29","statements":[{"nativeSrc":"29816:50:29","nodeType":"YulVariableDeclaration","src":"29816:50:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"29850:3:29","nodeType":"YulIdentifier","src":"29850:3:29"},{"name":"srcOffset","nativeSrc":"29855:9:29","nodeType":"YulIdentifier","src":"29855:9:29"}],"functionName":{"name":"add","nativeSrc":"29846:3:29","nodeType":"YulIdentifier","src":"29846:3:29"},"nativeSrc":"29846:19:29","nodeType":"YulFunctionCall","src":"29846:19:29"}],"functionName":{"name":"calldataload","nativeSrc":"29833:12:29","nodeType":"YulIdentifier","src":"29833:12:29"},"nativeSrc":"29833:33:29","nodeType":"YulFunctionCall","src":"29833:33:29"},"variables":[{"name":"lastValue","nativeSrc":"29820:9:29","nodeType":"YulTypedName","src":"29820:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"29890:6:29","nodeType":"YulIdentifier","src":"29890:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"29917:9:29","nodeType":"YulIdentifier","src":"29917:9:29"},{"arguments":[{"name":"newLen","nativeSrc":"29932:6:29","nodeType":"YulIdentifier","src":"29932:6:29"},{"kind":"number","nativeSrc":"29940:4:29","nodeType":"YulLiteral","src":"29940:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"29928:3:29","nodeType":"YulIdentifier","src":"29928:3:29"},"nativeSrc":"29928:17:29","nodeType":"YulFunctionCall","src":"29928:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"29898:18:29","nodeType":"YulIdentifier","src":"29898:18:29"},"nativeSrc":"29898:48:29","nodeType":"YulFunctionCall","src":"29898:48:29"}],"functionName":{"name":"sstore","nativeSrc":"29883:6:29","nodeType":"YulIdentifier","src":"29883:6:29"},"nativeSrc":"29883:64:29","nodeType":"YulFunctionCall","src":"29883:64:29"},"nativeSrc":"29883:64:29","nodeType":"YulExpressionStatement","src":"29883:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"29781:7:29","nodeType":"YulIdentifier","src":"29781:7:29"},{"name":"newLen","nativeSrc":"29790:6:29","nodeType":"YulIdentifier","src":"29790:6:29"}],"functionName":{"name":"lt","nativeSrc":"29778:2:29","nodeType":"YulIdentifier","src":"29778:2:29"},"nativeSrc":"29778:19:29","nodeType":"YulFunctionCall","src":"29778:19:29"},"nativeSrc":"29775:186:29","nodeType":"YulIf","src":"29775:186:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29981:4:29","nodeType":"YulIdentifier","src":"29981:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"29995:6:29","nodeType":"YulIdentifier","src":"29995:6:29"},{"kind":"number","nativeSrc":"30003:1:29","nodeType":"YulLiteral","src":"30003:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"29991:3:29","nodeType":"YulIdentifier","src":"29991:3:29"},"nativeSrc":"29991:14:29","nodeType":"YulFunctionCall","src":"29991:14:29"},{"kind":"number","nativeSrc":"30007:1:29","nodeType":"YulLiteral","src":"30007:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29987:3:29","nodeType":"YulIdentifier","src":"29987:3:29"},"nativeSrc":"29987:22:29","nodeType":"YulFunctionCall","src":"29987:22:29"}],"functionName":{"name":"sstore","nativeSrc":"29974:6:29","nodeType":"YulIdentifier","src":"29974:6:29"},"nativeSrc":"29974:36:29","nodeType":"YulFunctionCall","src":"29974:36:29"},"nativeSrc":"29974:36:29","nodeType":"YulExpressionStatement","src":"29974:36:29"}]},"nativeSrc":"29388:632:29","nodeType":"YulCase","src":"29388:632:29","value":{"kind":"number","nativeSrc":"29393:1:29","nodeType":"YulLiteral","src":"29393:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"30037:229:29","nodeType":"YulBlock","src":"30037:229:29","statements":[{"nativeSrc":"30051:14:29","nodeType":"YulVariableDeclaration","src":"30051:14:29","value":{"kind":"number","nativeSrc":"30064:1:29","nodeType":"YulLiteral","src":"30064:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"30055:5:29","nodeType":"YulTypedName","src":"30055:5:29","type":""}]},{"body":{"nativeSrc":"30088:74:29","nodeType":"YulBlock","src":"30088:74:29","statements":[{"nativeSrc":"30106:42:29","nodeType":"YulAssignment","src":"30106:42:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"30132:3:29","nodeType":"YulIdentifier","src":"30132:3:29"},{"name":"srcOffset","nativeSrc":"30137:9:29","nodeType":"YulIdentifier","src":"30137:9:29"}],"functionName":{"name":"add","nativeSrc":"30128:3:29","nodeType":"YulIdentifier","src":"30128:3:29"},"nativeSrc":"30128:19:29","nodeType":"YulFunctionCall","src":"30128:19:29"}],"functionName":{"name":"calldataload","nativeSrc":"30115:12:29","nodeType":"YulIdentifier","src":"30115:12:29"},"nativeSrc":"30115:33:29","nodeType":"YulFunctionCall","src":"30115:33:29"},"variableNames":[{"name":"value","nativeSrc":"30106:5:29","nodeType":"YulIdentifier","src":"30106:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"30081:6:29","nodeType":"YulIdentifier","src":"30081:6:29"},"nativeSrc":"30078:84:29","nodeType":"YulIf","src":"30078:84:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30182:4:29","nodeType":"YulIdentifier","src":"30182:4:29"},{"arguments":[{"name":"value","nativeSrc":"30241:5:29","nodeType":"YulIdentifier","src":"30241:5:29"},{"name":"newLen","nativeSrc":"30248:6:29","nodeType":"YulIdentifier","src":"30248:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"30188:52:29","nodeType":"YulIdentifier","src":"30188:52:29"},"nativeSrc":"30188:67:29","nodeType":"YulFunctionCall","src":"30188:67:29"}],"functionName":{"name":"sstore","nativeSrc":"30175:6:29","nodeType":"YulIdentifier","src":"30175:6:29"},"nativeSrc":"30175:81:29","nodeType":"YulFunctionCall","src":"30175:81:29"},"nativeSrc":"30175:81:29","nodeType":"YulExpressionStatement","src":"30175:81:29"}]},"nativeSrc":"30029:237:29","nodeType":"YulCase","src":"30029:237:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"29368:6:29","nodeType":"YulIdentifier","src":"29368:6:29"},{"kind":"number","nativeSrc":"29376:2:29","nodeType":"YulLiteral","src":"29376:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"29365:2:29","nodeType":"YulIdentifier","src":"29365:2:29"},"nativeSrc":"29365:14:29","nodeType":"YulFunctionCall","src":"29365:14:29"},"nativeSrc":"29358:908:29","nodeType":"YulSwitch","src":"29358:908:29"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nativeSrc":"28869:1403:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"28952:4:29","nodeType":"YulTypedName","src":"28952:4:29","type":""},{"name":"src","nativeSrc":"28958:3:29","nodeType":"YulTypedName","src":"28958:3:29","type":""},{"name":"len","nativeSrc":"28963:3:29","nodeType":"YulTypedName","src":"28963:3:29","type":""}],"src":"28869:1403:29"},{"body":{"nativeSrc":"30434:287:29","nodeType":"YulBlock","src":"30434:287:29","statements":[{"nativeSrc":"30444:26:29","nodeType":"YulAssignment","src":"30444:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"30456:9:29","nodeType":"YulIdentifier","src":"30456:9:29"},{"kind":"number","nativeSrc":"30467:2:29","nodeType":"YulLiteral","src":"30467:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30452:3:29","nodeType":"YulIdentifier","src":"30452:3:29"},"nativeSrc":"30452:18:29","nodeType":"YulFunctionCall","src":"30452:18:29"},"variableNames":[{"name":"tail","nativeSrc":"30444:4:29","nodeType":"YulIdentifier","src":"30444:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"30524:6:29","nodeType":"YulIdentifier","src":"30524:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"30537:9:29","nodeType":"YulIdentifier","src":"30537:9:29"},{"kind":"number","nativeSrc":"30548:1:29","nodeType":"YulLiteral","src":"30548:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30533:3:29","nodeType":"YulIdentifier","src":"30533:3:29"},"nativeSrc":"30533:17:29","nodeType":"YulFunctionCall","src":"30533:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"30480:43:29","nodeType":"YulIdentifier","src":"30480:43:29"},"nativeSrc":"30480:71:29","nodeType":"YulFunctionCall","src":"30480:71:29"},"nativeSrc":"30480:71:29","nodeType":"YulExpressionStatement","src":"30480:71:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30572:9:29","nodeType":"YulIdentifier","src":"30572:9:29"},{"kind":"number","nativeSrc":"30583:2:29","nodeType":"YulLiteral","src":"30583:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30568:3:29","nodeType":"YulIdentifier","src":"30568:3:29"},"nativeSrc":"30568:18:29","nodeType":"YulFunctionCall","src":"30568:18:29"},{"arguments":[{"name":"tail","nativeSrc":"30592:4:29","nodeType":"YulIdentifier","src":"30592:4:29"},{"name":"headStart","nativeSrc":"30598:9:29","nodeType":"YulIdentifier","src":"30598:9:29"}],"functionName":{"name":"sub","nativeSrc":"30588:3:29","nodeType":"YulIdentifier","src":"30588:3:29"},"nativeSrc":"30588:20:29","nodeType":"YulFunctionCall","src":"30588:20:29"}],"functionName":{"name":"mstore","nativeSrc":"30561:6:29","nodeType":"YulIdentifier","src":"30561:6:29"},"nativeSrc":"30561:48:29","nodeType":"YulFunctionCall","src":"30561:48:29"},"nativeSrc":"30561:48:29","nodeType":"YulExpressionStatement","src":"30561:48:29"},{"nativeSrc":"30618:96:29","nodeType":"YulAssignment","src":"30618:96:29","value":{"arguments":[{"name":"value1","nativeSrc":"30692:6:29","nodeType":"YulIdentifier","src":"30692:6:29"},{"name":"value2","nativeSrc":"30700:6:29","nodeType":"YulIdentifier","src":"30700:6:29"},{"name":"tail","nativeSrc":"30709:4:29","nodeType":"YulIdentifier","src":"30709:4:29"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"30626:65:29","nodeType":"YulIdentifier","src":"30626:65:29"},"nativeSrc":"30626:88:29","nodeType":"YulFunctionCall","src":"30626:88:29"},"variableNames":[{"name":"tail","nativeSrc":"30618:4:29","nodeType":"YulIdentifier","src":"30618:4:29"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30278:443:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30390:9:29","nodeType":"YulTypedName","src":"30390:9:29","type":""},{"name":"value2","nativeSrc":"30402:6:29","nodeType":"YulTypedName","src":"30402:6:29","type":""},{"name":"value1","nativeSrc":"30410:6:29","nodeType":"YulTypedName","src":"30410:6:29","type":""},{"name":"value0","nativeSrc":"30418:6:29","nodeType":"YulTypedName","src":"30418:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30429:4:29","nodeType":"YulTypedName","src":"30429:4:29","type":""}],"src":"30278:443:29"},{"body":{"nativeSrc":"30833:71:29","nodeType":"YulBlock","src":"30833:71:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30855:6:29","nodeType":"YulIdentifier","src":"30855:6:29"},{"kind":"number","nativeSrc":"30863:1:29","nodeType":"YulLiteral","src":"30863:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30851:3:29","nodeType":"YulIdentifier","src":"30851:3:29"},"nativeSrc":"30851:14:29","nodeType":"YulFunctionCall","src":"30851:14:29"},{"hexValue":"426174636820697320616c72656164792066696e616c697a65642e","kind":"string","nativeSrc":"30867:29:29","nodeType":"YulLiteral","src":"30867:29:29","type":"","value":"Batch is already finalized."}],"functionName":{"name":"mstore","nativeSrc":"30844:6:29","nodeType":"YulIdentifier","src":"30844:6:29"},"nativeSrc":"30844:53:29","nodeType":"YulFunctionCall","src":"30844:53:29"},"nativeSrc":"30844:53:29","nodeType":"YulExpressionStatement","src":"30844:53:29"}]},"name":"store_literal_in_memory_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16","nativeSrc":"30727:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30825:6:29","nodeType":"YulTypedName","src":"30825:6:29","type":""}],"src":"30727:177:29"},{"body":{"nativeSrc":"31056:220:29","nodeType":"YulBlock","src":"31056:220:29","statements":[{"nativeSrc":"31066:74:29","nodeType":"YulAssignment","src":"31066:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"31132:3:29","nodeType":"YulIdentifier","src":"31132:3:29"},{"kind":"number","nativeSrc":"31137:2:29","nodeType":"YulLiteral","src":"31137:2:29","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31073:58:29","nodeType":"YulIdentifier","src":"31073:58:29"},"nativeSrc":"31073:67:29","nodeType":"YulFunctionCall","src":"31073:67:29"},"variableNames":[{"name":"pos","nativeSrc":"31066:3:29","nodeType":"YulIdentifier","src":"31066:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31238:3:29","nodeType":"YulIdentifier","src":"31238:3:29"}],"functionName":{"name":"store_literal_in_memory_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16","nativeSrc":"31149:88:29","nodeType":"YulIdentifier","src":"31149:88:29"},"nativeSrc":"31149:93:29","nodeType":"YulFunctionCall","src":"31149:93:29"},"nativeSrc":"31149:93:29","nodeType":"YulExpressionStatement","src":"31149:93:29"},{"nativeSrc":"31251:19:29","nodeType":"YulAssignment","src":"31251:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"31262:3:29","nodeType":"YulIdentifier","src":"31262:3:29"},{"kind":"number","nativeSrc":"31267:2:29","nodeType":"YulLiteral","src":"31267:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31258:3:29","nodeType":"YulIdentifier","src":"31258:3:29"},"nativeSrc":"31258:12:29","nodeType":"YulFunctionCall","src":"31258:12:29"},"variableNames":[{"name":"end","nativeSrc":"31251:3:29","nodeType":"YulIdentifier","src":"31251:3:29"}]}]},"name":"abi_encode_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16_to_t_string_memory_ptr_fromStack","nativeSrc":"30910:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31044:3:29","nodeType":"YulTypedName","src":"31044:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31052:3:29","nodeType":"YulTypedName","src":"31052:3:29","type":""}],"src":"30910:366:29"},{"body":{"nativeSrc":"31453:248:29","nodeType":"YulBlock","src":"31453:248:29","statements":[{"nativeSrc":"31463:26:29","nodeType":"YulAssignment","src":"31463:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"31475:9:29","nodeType":"YulIdentifier","src":"31475:9:29"},{"kind":"number","nativeSrc":"31486:2:29","nodeType":"YulLiteral","src":"31486:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31471:3:29","nodeType":"YulIdentifier","src":"31471:3:29"},"nativeSrc":"31471:18:29","nodeType":"YulFunctionCall","src":"31471:18:29"},"variableNames":[{"name":"tail","nativeSrc":"31463:4:29","nodeType":"YulIdentifier","src":"31463:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31510:9:29","nodeType":"YulIdentifier","src":"31510:9:29"},{"kind":"number","nativeSrc":"31521:1:29","nodeType":"YulLiteral","src":"31521:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31506:3:29","nodeType":"YulIdentifier","src":"31506:3:29"},"nativeSrc":"31506:17:29","nodeType":"YulFunctionCall","src":"31506:17:29"},{"arguments":[{"name":"tail","nativeSrc":"31529:4:29","nodeType":"YulIdentifier","src":"31529:4:29"},{"name":"headStart","nativeSrc":"31535:9:29","nodeType":"YulIdentifier","src":"31535:9:29"}],"functionName":{"name":"sub","nativeSrc":"31525:3:29","nodeType":"YulIdentifier","src":"31525:3:29"},"nativeSrc":"31525:20:29","nodeType":"YulFunctionCall","src":"31525:20:29"}],"functionName":{"name":"mstore","nativeSrc":"31499:6:29","nodeType":"YulIdentifier","src":"31499:6:29"},"nativeSrc":"31499:47:29","nodeType":"YulFunctionCall","src":"31499:47:29"},"nativeSrc":"31499:47:29","nodeType":"YulExpressionStatement","src":"31499:47:29"},{"nativeSrc":"31555:139:29","nodeType":"YulAssignment","src":"31555:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"31689:4:29","nodeType":"YulIdentifier","src":"31689:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16_to_t_string_memory_ptr_fromStack","nativeSrc":"31563:124:29","nodeType":"YulIdentifier","src":"31563:124:29"},"nativeSrc":"31563:131:29","nodeType":"YulFunctionCall","src":"31563:131:29"},"variableNames":[{"name":"tail","nativeSrc":"31555:4:29","nodeType":"YulIdentifier","src":"31555:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31282:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31433:9:29","nodeType":"YulTypedName","src":"31433:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31448:4:29","nodeType":"YulTypedName","src":"31448:4:29","type":""}],"src":"31282:419:29"},{"body":{"nativeSrc":"31813:116:29","nodeType":"YulBlock","src":"31813:116:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31835:6:29","nodeType":"YulIdentifier","src":"31835:6:29"},{"kind":"number","nativeSrc":"31843:1:29","nodeType":"YulLiteral","src":"31843:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31831:3:29","nodeType":"YulIdentifier","src":"31831:3:29"},"nativeSrc":"31831:14:29","nodeType":"YulFunctionCall","src":"31831:14:29"},{"hexValue":"546865726520617265207374696c6c20756e77697468647261776e20746f6b65","kind":"string","nativeSrc":"31847:34:29","nodeType":"YulLiteral","src":"31847:34:29","type":"","value":"There are still unwithdrawn toke"}],"functionName":{"name":"mstore","nativeSrc":"31824:6:29","nodeType":"YulIdentifier","src":"31824:6:29"},"nativeSrc":"31824:58:29","nodeType":"YulFunctionCall","src":"31824:58:29"},"nativeSrc":"31824:58:29","nodeType":"YulExpressionStatement","src":"31824:58:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31903:6:29","nodeType":"YulIdentifier","src":"31903:6:29"},{"kind":"number","nativeSrc":"31911:2:29","nodeType":"YulLiteral","src":"31911:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31899:3:29","nodeType":"YulIdentifier","src":"31899:3:29"},"nativeSrc":"31899:15:29","nodeType":"YulFunctionCall","src":"31899:15:29"},{"hexValue":"6e732e","kind":"string","nativeSrc":"31916:5:29","nodeType":"YulLiteral","src":"31916:5:29","type":"","value":"ns."}],"functionName":{"name":"mstore","nativeSrc":"31892:6:29","nodeType":"YulIdentifier","src":"31892:6:29"},"nativeSrc":"31892:30:29","nodeType":"YulFunctionCall","src":"31892:30:29"},"nativeSrc":"31892:30:29","nodeType":"YulExpressionStatement","src":"31892:30:29"}]},"name":"store_literal_in_memory_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0","nativeSrc":"31707:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31805:6:29","nodeType":"YulTypedName","src":"31805:6:29","type":""}],"src":"31707:222:29"},{"body":{"nativeSrc":"32081:220:29","nodeType":"YulBlock","src":"32081:220:29","statements":[{"nativeSrc":"32091:74:29","nodeType":"YulAssignment","src":"32091:74:29","value":{"arguments":[{"name":"pos","nativeSrc":"32157:3:29","nodeType":"YulIdentifier","src":"32157:3:29"},{"kind":"number","nativeSrc":"32162:2:29","nodeType":"YulLiteral","src":"32162:2:29","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32098:58:29","nodeType":"YulIdentifier","src":"32098:58:29"},"nativeSrc":"32098:67:29","nodeType":"YulFunctionCall","src":"32098:67:29"},"variableNames":[{"name":"pos","nativeSrc":"32091:3:29","nodeType":"YulIdentifier","src":"32091:3:29"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32263:3:29","nodeType":"YulIdentifier","src":"32263:3:29"}],"functionName":{"name":"store_literal_in_memory_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0","nativeSrc":"32174:88:29","nodeType":"YulIdentifier","src":"32174:88:29"},"nativeSrc":"32174:93:29","nodeType":"YulFunctionCall","src":"32174:93:29"},"nativeSrc":"32174:93:29","nodeType":"YulExpressionStatement","src":"32174:93:29"},{"nativeSrc":"32276:19:29","nodeType":"YulAssignment","src":"32276:19:29","value":{"arguments":[{"name":"pos","nativeSrc":"32287:3:29","nodeType":"YulIdentifier","src":"32287:3:29"},{"kind":"number","nativeSrc":"32292:2:29","nodeType":"YulLiteral","src":"32292:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"32283:3:29","nodeType":"YulIdentifier","src":"32283:3:29"},"nativeSrc":"32283:12:29","nodeType":"YulFunctionCall","src":"32283:12:29"},"variableNames":[{"name":"end","nativeSrc":"32276:3:29","nodeType":"YulIdentifier","src":"32276:3:29"}]}]},"name":"abi_encode_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0_to_t_string_memory_ptr_fromStack","nativeSrc":"31935:366:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32069:3:29","nodeType":"YulTypedName","src":"32069:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32077:3:29","nodeType":"YulTypedName","src":"32077:3:29","type":""}],"src":"31935:366:29"},{"body":{"nativeSrc":"32478:248:29","nodeType":"YulBlock","src":"32478:248:29","statements":[{"nativeSrc":"32488:26:29","nodeType":"YulAssignment","src":"32488:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"32500:9:29","nodeType":"YulIdentifier","src":"32500:9:29"},{"kind":"number","nativeSrc":"32511:2:29","nodeType":"YulLiteral","src":"32511:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32496:3:29","nodeType":"YulIdentifier","src":"32496:3:29"},"nativeSrc":"32496:18:29","nodeType":"YulFunctionCall","src":"32496:18:29"},"variableNames":[{"name":"tail","nativeSrc":"32488:4:29","nodeType":"YulIdentifier","src":"32488:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32535:9:29","nodeType":"YulIdentifier","src":"32535:9:29"},{"kind":"number","nativeSrc":"32546:1:29","nodeType":"YulLiteral","src":"32546:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32531:3:29","nodeType":"YulIdentifier","src":"32531:3:29"},"nativeSrc":"32531:17:29","nodeType":"YulFunctionCall","src":"32531:17:29"},{"arguments":[{"name":"tail","nativeSrc":"32554:4:29","nodeType":"YulIdentifier","src":"32554:4:29"},{"name":"headStart","nativeSrc":"32560:9:29","nodeType":"YulIdentifier","src":"32560:9:29"}],"functionName":{"name":"sub","nativeSrc":"32550:3:29","nodeType":"YulIdentifier","src":"32550:3:29"},"nativeSrc":"32550:20:29","nodeType":"YulFunctionCall","src":"32550:20:29"}],"functionName":{"name":"mstore","nativeSrc":"32524:6:29","nodeType":"YulIdentifier","src":"32524:6:29"},"nativeSrc":"32524:47:29","nodeType":"YulFunctionCall","src":"32524:47:29"},"nativeSrc":"32524:47:29","nodeType":"YulExpressionStatement","src":"32524:47:29"},{"nativeSrc":"32580:139:29","nodeType":"YulAssignment","src":"32580:139:29","value":{"arguments":[{"name":"tail","nativeSrc":"32714:4:29","nodeType":"YulIdentifier","src":"32714:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0_to_t_string_memory_ptr_fromStack","nativeSrc":"32588:124:29","nodeType":"YulIdentifier","src":"32588:124:29"},"nativeSrc":"32588:131:29","nodeType":"YulFunctionCall","src":"32588:131:29"},"variableNames":[{"name":"tail","nativeSrc":"32580:4:29","nodeType":"YulIdentifier","src":"32580:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32307:419:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32458:9:29","nodeType":"YulTypedName","src":"32458:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32473:4:29","nodeType":"YulTypedName","src":"32473:4:29","type":""}],"src":"32307:419:29"},{"body":{"nativeSrc":"32886:288:29","nodeType":"YulBlock","src":"32886:288:29","statements":[{"nativeSrc":"32896:26:29","nodeType":"YulAssignment","src":"32896:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"32908:9:29","nodeType":"YulIdentifier","src":"32908:9:29"},{"kind":"number","nativeSrc":"32919:2:29","nodeType":"YulLiteral","src":"32919:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"32904:3:29","nodeType":"YulIdentifier","src":"32904:3:29"},"nativeSrc":"32904:18:29","nodeType":"YulFunctionCall","src":"32904:18:29"},"variableNames":[{"name":"tail","nativeSrc":"32896:4:29","nodeType":"YulIdentifier","src":"32896:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32976:6:29","nodeType":"YulIdentifier","src":"32976:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"32989:9:29","nodeType":"YulIdentifier","src":"32989:9:29"},{"kind":"number","nativeSrc":"33000:1:29","nodeType":"YulLiteral","src":"33000:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32985:3:29","nodeType":"YulIdentifier","src":"32985:3:29"},"nativeSrc":"32985:17:29","nodeType":"YulFunctionCall","src":"32985:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32932:43:29","nodeType":"YulIdentifier","src":"32932:43:29"},"nativeSrc":"32932:71:29","nodeType":"YulFunctionCall","src":"32932:71:29"},"nativeSrc":"32932:71:29","nodeType":"YulExpressionStatement","src":"32932:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"33057:6:29","nodeType":"YulIdentifier","src":"33057:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"33070:9:29","nodeType":"YulIdentifier","src":"33070:9:29"},{"kind":"number","nativeSrc":"33081:2:29","nodeType":"YulLiteral","src":"33081:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33066:3:29","nodeType":"YulIdentifier","src":"33066:3:29"},"nativeSrc":"33066:18:29","nodeType":"YulFunctionCall","src":"33066:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"33013:43:29","nodeType":"YulIdentifier","src":"33013:43:29"},"nativeSrc":"33013:72:29","nodeType":"YulFunctionCall","src":"33013:72:29"},"nativeSrc":"33013:72:29","nodeType":"YulExpressionStatement","src":"33013:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"33139:6:29","nodeType":"YulIdentifier","src":"33139:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"33152:9:29","nodeType":"YulIdentifier","src":"33152:9:29"},{"kind":"number","nativeSrc":"33163:2:29","nodeType":"YulLiteral","src":"33163:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"33148:3:29","nodeType":"YulIdentifier","src":"33148:3:29"},"nativeSrc":"33148:18:29","nodeType":"YulFunctionCall","src":"33148:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"33095:43:29","nodeType":"YulIdentifier","src":"33095:43:29"},"nativeSrc":"33095:72:29","nodeType":"YulFunctionCall","src":"33095:72:29"},"nativeSrc":"33095:72:29","nodeType":"YulExpressionStatement","src":"33095:72:29"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"32732:442:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32842:9:29","nodeType":"YulTypedName","src":"32842:9:29","type":""},{"name":"value2","nativeSrc":"32854:6:29","nodeType":"YulTypedName","src":"32854:6:29","type":""},{"name":"value1","nativeSrc":"32862:6:29","nodeType":"YulTypedName","src":"32862:6:29","type":""},{"name":"value0","nativeSrc":"32870:6:29","nodeType":"YulTypedName","src":"32870:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32881:4:29","nodeType":"YulTypedName","src":"32881:4:29","type":""}],"src":"32732:442:29"},{"body":{"nativeSrc":"33278:124:29","nodeType":"YulBlock","src":"33278:124:29","statements":[{"nativeSrc":"33288:26:29","nodeType":"YulAssignment","src":"33288:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"33300:9:29","nodeType":"YulIdentifier","src":"33300:9:29"},{"kind":"number","nativeSrc":"33311:2:29","nodeType":"YulLiteral","src":"33311:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33296:3:29","nodeType":"YulIdentifier","src":"33296:3:29"},"nativeSrc":"33296:18:29","nodeType":"YulFunctionCall","src":"33296:18:29"},"variableNames":[{"name":"tail","nativeSrc":"33288:4:29","nodeType":"YulIdentifier","src":"33288:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33368:6:29","nodeType":"YulIdentifier","src":"33368:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"33381:9:29","nodeType":"YulIdentifier","src":"33381:9:29"},{"kind":"number","nativeSrc":"33392:1:29","nodeType":"YulLiteral","src":"33392:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33377:3:29","nodeType":"YulIdentifier","src":"33377:3:29"},"nativeSrc":"33377:17:29","nodeType":"YulFunctionCall","src":"33377:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"33324:43:29","nodeType":"YulIdentifier","src":"33324:43:29"},"nativeSrc":"33324:71:29","nodeType":"YulFunctionCall","src":"33324:71:29"},"nativeSrc":"33324:71:29","nodeType":"YulExpressionStatement","src":"33324:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"33180:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33250:9:29","nodeType":"YulTypedName","src":"33250:9:29","type":""},{"name":"value0","nativeSrc":"33262:6:29","nodeType":"YulTypedName","src":"33262:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33273:4:29","nodeType":"YulTypedName","src":"33273:4:29","type":""}],"src":"33180:222:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_PikaFractionalAttestationToken_$6960_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_PikaFractionalAttestationToken_$6960_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_ERC20_$914_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$914_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$914_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$914__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$914_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid batch ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Batch has already been finalized\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44d229e87aab6d56f36dc25788f855f87b25081becba14400c8cafb16b976e4d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance for withdra\")\n\n        mstore(add(memPtr, 32), \"wal.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a243a2208d7b73c21a5d2d7b3487acfe2e9969ba3a7cbe77e8825eb034ced741_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_storage_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n    function store_literal_in_memory_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function convert_t_contract$_PikaPay_$7473_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PikaPay_$7473_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PikaPay_$7473_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_PikaPay_$7473_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the batch owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6d8f6b2267beb3175fb0bd10d0697faee7eea6c4158b153947255b50bd14ad9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid new owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance for transfe\")\n\n        mstore(add(memPtr, 32), \"r.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5dbda53634de35dfde96034e9cba8c33509937009c184de662fc0de9fb597764_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_calldata_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot update attestation for a \")\n\n        mstore(add(memPtr, 32), \"finalized batch.\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc2c03fc22af17b467c60b665b24ee5cb87b70eb60557aa3e06d61813b1b84ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function store_literal_in_memory_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Batch is already finalized.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b287b762897d1786b3a33ef0803a5698df91587fe9964d996453af43953e2c16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0(memPtr) {\n\n        mstore(add(memPtr, 0), \"There are still unwithdrawn toke\")\n\n        mstore(add(memPtr, 32), \"ns.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5390fd2726ef4b4d89ba9f99cb308bca9655598abcae53c498cdbddc84fdfba0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063a913d7b911610066578063a913d7b914610138578063bdecd21b14610154578063c54e44eb14610170578063c69ac7d31461018e578063f4122807146101aa57610093565b80633d2d07e2146100985780634f4ed78f146100c857806350ba8364146100fe57806369ff6abb1461011a575b600080fd5b6100b260048036038101906100ad919061143a565b6101c6565b6040516100bf9190611489565b60405180910390f35b6100e260048036038101906100dd91906114a4565b6101eb565b6040516100f597969594939291906115ea565b60405180910390f35b610118600480360381019061011391906116c5565b610302565b005b61012261062b565b60405161012f9190611489565b60405180910390f35b610152600480360381019061014d9190611739565b610631565b005b61016e60048036038101906101699190611799565b61095f565b005b610178610c94565b604051610185919061180d565b60405180910390f35b6101a860048036038101906101a391906116c5565b610cac565b005b6101c460048036038101906101bf9190611828565b610f2d565b005b6002602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461023a906118b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610266906118b7565b80156102b35780601f10610288576101008083540402835291602001916102b3565b820191906000526020600020905b81548152906001019060200180831161029657829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b8360008111801561031557506000548111155b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b90611934565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff16156103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b4906119c6565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790611a58565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104b09190611aa7565b92505081905550848160040160008282546104cb9190611aa7565b9250508190555061051133867348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff166110e49092919063ffffffff16565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610570929190611adb565b6020604051808303816000875af115801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190611b30565b503373ffffffffffffffffffffffffffffffffffffffff167f8eb386ea7cbdb4a91109cea5fed53b6b02f667c149086a609ad4347fb0a5d7888787846002018888604051610605959493929190611c32565b60405180910390a260008160040154036106235761062286611163565b5b505050505050565b60005481565b60008111610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611cf9565b60405180910390fd5b60016000808282546106869190611d19565b925050819055506106ce3330837348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff1661126b909392919063ffffffff16565b600030600054836040516106e19061138f565b6106ed93929190611d6e565b604051809103906000f080158015610709573d6000803e3d6000fd5b5090506040518060e0016040528060005481526020018273ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018381526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908161082e9190611f61565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600260008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f24d4dd2cd73442ce7ba8d012afd0ab2601a6b3c593b368a0a91b1bac5d5d27f26000548686866040516109519493929190612033565b60405180910390a250505050565b8260008111801561097257506000548111155b6109b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a890611934565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d906120bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc9061212b565b60405180910390fd5b826002600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f906121bd565b60405180910390fd5b826002600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb89190611aa7565b92505081905550826002600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1f9190611d19565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f06f354ec7b9d2ca4e029f73ccb9119943a48c3295704dd66ca8beda0c7bae33f8786604051610c859291906121dd565b60405180910390a35050505050565b7348db5c1155836de945fb82b6a9cf82d91ac21f1681565b83600081118015610cbf57506000548111155b610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf590611934565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff1615610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e906119c6565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df190611a58565b60405180910390fd5b846002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e5a9190611aa7565b9250508190555084816004016000828254610e759190611aa7565b92505081905550610ebb33867348db5c1155836de945fb82b6a9cf82d91ac21f1673ffffffffffffffffffffffffffffffffffffffff166110e49092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f0b27b8aed46d863aa21f1c0dd0ca6804e332ce068329761de4584f4f59740c6187878787604051610f079493929190612206565b60405180910390a26000816004015403610f2557610f2486611163565b5b505050505050565b82600081118015610f4057506000548111155b610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690611934565b60405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b906120bf565b60405180910390fd5b60006001600087815260200190815260200160002090508060050160009054906101000a900460ff161561108d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611084906122b8565b60405180910390fd5b84848260020191826110a09291906122e3565b507fcc1163b9f5b7a48feb09e3106d97fe333e2b9b8d72544e2f9d4470f483e5214e8686866040516110d4939291906123b3565b60405180910390a1505050505050565b61115e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611117929190611adb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ed565b505050565b60006001600083815260200190815260200160002090508060050160009054906101000a900460ff16156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390612431565b60405180910390fd5b6000816004015414611213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120a906124c3565b60405180910390fd5b60018160050160006101000a81548160ff0219169083151502179055507f5cff112f1cb588779b4e6aae6baf0d738747fcf132f0ff202adcec605f9cabdf8260405161125f9190611489565b60405180910390a15050565b6112e7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016112a0939291906124e3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ed565b50505050565b600080602060008451602086016000885af180611310576040513d6000823e3d81fd5b3d92506000519150506000821461132b576001811415611347565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561138957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611380919061251a565b60405180910390fd5b50505050565b611c138061253683390190565b600080fd5b600080fd5b6000819050919050565b6113b9816113a6565b81146113c457600080fd5b50565b6000813590506113d6816113b0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611407826113dc565b9050919050565b611417816113fc565b811461142257600080fd5b50565b6000813590506114348161140e565b92915050565b600080604083850312156114515761145061139c565b5b600061145f858286016113c7565b925050602061147085828601611425565b9150509250929050565b611483816113a6565b82525050565b600060208201905061149e600083018461147a565b92915050565b6000602082840312156114ba576114b961139c565b5b60006114c8848285016113c7565b91505092915050565b6000819050919050565b60006114f66114f16114ec846113dc565b6114d1565b6113dc565b9050919050565b6000611508826114db565b9050919050565b600061151a826114fd565b9050919050565b61152a8161150f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156a57808201518184015260208101905061154f565b60008484015250505050565b6000601f19601f8301169050919050565b600061159282611530565b61159c818561153b565b93506115ac81856020860161154c565b6115b581611576565b840191505092915050565b60008115159050919050565b6115d5816115c0565b82525050565b6115e4816113fc565b82525050565b600060e0820190506115ff600083018a61147a565b61160c6020830189611521565b818103604083015261161e8188611587565b905061162d606083018761147a565b61163a608083018661147a565b61164760a08301856115cc565b61165460c08301846115db565b98975050505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261168557611684611660565b5b8235905067ffffffffffffffff8111156116a2576116a1611665565b5b6020830191508360018202830111156116be576116bd61166a565b5b9250929050565b600080600080606085870312156116df576116de61139c565b5b60006116ed878288016113c7565b94505060206116fe878288016113c7565b935050604085013567ffffffffffffffff81111561171f5761171e6113a1565b5b61172b8782880161166f565b925092505092959194509250565b6000806000604084860312156117525761175161139c565b5b600084013567ffffffffffffffff8111156117705761176f6113a1565b5b61177c8682870161166f565b9350935050602061178f868287016113c7565b9150509250925092565b6000806000606084860312156117b2576117b161139c565b5b60006117c0868287016113c7565b93505060206117d186828701611425565b92505060406117e2868287016113c7565b9150509250925092565b60006117f7826114fd565b9050919050565b611807816117ec565b82525050565b600060208201905061182260008301846117fe565b92915050565b6000806000604084860312156118415761184061139c565b5b600061184f868287016113c7565b935050602084013567ffffffffffffffff8111156118705761186f6113a1565b5b61187c8682870161166f565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118cf57607f821691505b6020821081036118e2576118e1611888565b5b50919050565b7f496e76616c696420626174636820494400000000000000000000000000000000600082015250565b600061191e60108361153b565b9150611929826118e8565b602082019050919050565b6000602082019050818103600083015261194d81611911565b9050919050565b7f42617463682068617320616c7265616479206265656e2066696e616c697a656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006119b060218361153b565b91506119bb82611954565b604082019050919050565b600060208201905081810360008301526119df816119a3565b9050919050565b7f496e73756666696369656e742062616c616e636520666f72207769746864726160008201527f77616c2e00000000000000000000000000000000000000000000000000000000602082015250565b6000611a4260248361153b565b9150611a4d826119e6565b604082019050919050565b60006020820190508181036000830152611a7181611a35565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ab2826113a6565b9150611abd836113a6565b9250828203905081811115611ad557611ad4611a78565b5b92915050565b6000604082019050611af060008301856115db565b611afd602083018461147a565b9392505050565b611b0d816115c0565b8114611b1857600080fd5b50565b600081519050611b2a81611b04565b92915050565b600060208284031215611b4657611b4561139c565b5b6000611b5484828501611b1b565b91505092915050565b60008190508160005260206000209050919050565b60008154611b7f816118b7565b611b89818661153b565b94506001821660008114611ba45760018114611bba57611bed565b60ff198316865281151560200286019350611bed565b611bc385611b5d565b60005b83811015611be557815481890152600182019150602081019050611bc6565b808801955050505b50505092915050565b82818337600083830152505050565b6000611c11838561153b565b9350611c1e838584611bf6565b611c2783611576565b840190509392505050565b6000608082019050611c47600083018861147a565b611c54602083018761147a565b8181036040830152611c668186611b72565b90508181036060830152611c7b818486611c05565b90509695505050505050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000611ce360258361153b565b9150611cee82611c87565b604082019050919050565b60006020820190508181036000830152611d1281611cd6565b9050919050565b6000611d24826113a6565b9150611d2f836113a6565b9250828201905080821115611d4757611d46611a78565b5b92915050565b6000611d58826114fd565b9050919050565b611d6881611d4d565b82525050565b6000606082019050611d836000830186611d5f565b611d90602083018561147a565b611d9d604083018461147a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611de4565b611e2b8683611de4565b95508019841693508086168417925050509392505050565b6000611e5e611e59611e54846113a6565b6114d1565b6113a6565b9050919050565b6000819050919050565b611e7883611e43565b611e8c611e8482611e65565b848454611df1565b825550505050565b600090565b611ea1611e94565b611eac818484611e6f565b505050565b5b81811015611ed057611ec5600082611e99565b600181019050611eb2565b5050565b601f821115611f1557611ee681611b5d565b611eef84611dd4565b81016020851015611efe578190505b611f12611f0a85611dd4565b830182611eb1565b50505b505050565b600082821c905092915050565b6000611f3860001984600802611f1a565b1980831691505092915050565b6000611f518383611f27565b9150826002028217905092915050565b611f6a82611530565b67ffffffffffffffff811115611f8357611f82611da5565b5b611f8d82546118b7565b611f98828285611ed4565b600060209050601f831160018114611fcb5760008415611fb9578287015190505b611fc38582611f45565b86555061202b565b601f198416611fd986611b5d565b60005b8281101561200157848901518255600182019150602085019450602081019050611fdc565b8683101561201e578489015161201a601f891682611f27565b8355505b6001600288020188555050505b505050505050565b6000606082019050612048600083018761147a565b818103602083015261205b818587611c05565b905061206a604083018461147a565b95945050505050565b7f43616c6c6572206973206e6f7420746865206261746368206f776e6572000000600082015250565b60006120a9601d8361153b565b91506120b482612073565b602082019050919050565b600060208201905081810360008301526120d88161209c565b9050919050565b7f496e76616c6964206e6577206f776e6572206164647265737300000000000000600082015250565b600061211560198361153b565b9150612120826120df565b602082019050919050565b6000602082019050818103600083015261214481612108565b9050919050565b7f496e73756666696369656e742062616c616e636520666f72207472616e73666560008201527f722e000000000000000000000000000000000000000000000000000000000000602082015250565b60006121a760228361153b565b91506121b28261214b565b604082019050919050565b600060208201905081810360008301526121d68161219a565b9050919050565b60006040820190506121f2600083018561147a565b6121ff602083018461147a565b9392505050565b600060608201905061221b600083018761147a565b612228602083018661147a565b818103604083015261223b818486611c05565b905095945050505050565b7f43616e6e6f7420757064617465206174746573746174696f6e20666f7220612060008201527f66696e616c697a65642062617463682e00000000000000000000000000000000602082015250565b60006122a260308361153b565b91506122ad82612246565b604082019050919050565b600060208201905081810360008301526122d181612295565b9050919050565b600082905092915050565b6122ed83836122d8565b67ffffffffffffffff81111561230657612305611da5565b5b61231082546118b7565b61231b828285611ed4565b6000601f83116001811461234a5760008415612338578287013590505b6123428582611f45565b8655506123aa565b601f19841661235886611b5d565b60005b828110156123805784890135825560018201915060208501945060208101905061235b565b8683101561239d5784890135612399601f891682611f27565b8355505b6001600288020188555050505b50505050505050565b60006040820190506123c8600083018661147a565b81810360208301526123db818486611c05565b9050949350505050565b7f426174636820697320616c72656164792066696e616c697a65642e0000000000600082015250565b600061241b601b8361153b565b9150612426826123e5565b602082019050919050565b6000602082019050818103600083015261244a8161240e565b9050919050565b7f546865726520617265207374696c6c20756e77697468647261776e20746f6b6560008201527f6e732e0000000000000000000000000000000000000000000000000000000000602082015250565b60006124ad60238361153b565b91506124b882612451565b604082019050919050565b600060208201905081810360008301526124dc816124a0565b9050919050565b60006060820190506124f860008301866115db565b61250560208301856115db565b612512604083018461147a565b949350505050565b600060208201905061252f60008301846115db565b9291505056fe608060405234801561001057600080fd5b50604051611c13380380611c13833981810160405281019061003291906106da565b6100418261015b60201b60201c565b60405160200161005191906107c4565b6040516020818303038152906040526040518060400160405280600481526020017f504641540000000000000000000000000000000000000000000000000000000081525081600390816100a59190610a25565b5080600490816100b59190610a25565b505050600081116100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f290610b7a565b60405180910390fd5b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600681905550610153338261022f60201b60201c565b505050610cb7565b606060006001610170846102b760201b60201c565b01905060008167ffffffffffffffff81111561018f5761018e6107ea565b5b6040519080825280601f01601f1916602001820160405280156101c15781602001600182028036833780820191505090505b509050600082602001820190505b600115610224578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161021857610217610b9a565b5b049450600085036101cf575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102989190610bd8565b60405180910390fd5b6102b36000838361040a60201b60201c565b5050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610315577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161030b5761030a610b9a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610352576d04ee2d6d415b85acef8100000000838161034857610347610b9a565b5b0492506020810190505b662386f26fc10000831061038157662386f26fc10000838161037757610376610b9a565b5b0492506010810190505b6305f5e10083106103aa576305f5e10083816103a05761039f610b9a565b5b0492506008810190505b61271083106103cf5761271083816103c5576103c4610b9a565b5b0492506004810190505b606483106103f257606483816103e8576103e7610b9a565b5b0492506002810190505b600a8310610401576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361045c5780600260008282546104509190610c22565b9250508190555061052f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156104e8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104df93929190610c65565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361057857806002600082825403925050819055506105c5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106229190610c9c565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065f82610634565b9050919050565b600061067182610654565b9050919050565b61068181610666565b811461068c57600080fd5b50565b60008151905061069e81610678565b92915050565b6000819050919050565b6106b7816106a4565b81146106c257600080fd5b50565b6000815190506106d4816106ae565b92915050565b6000806000606084860312156106f3576106f261062f565b5b60006107018682870161068f565b9350506020610712868287016106c5565b9250506040610723868287016106c5565b9150509250925092565b7f50696b61506179204672616374696f6e616c2042617463682023000000000000815250565b600081519050919050565b600081905092915050565b60005b8381101561078757808201518184015260208101905061076c565b60008484015250505050565b600061079e82610753565b6107a8818561075e565b93506107b8818560208601610769565b80840191505092915050565b60006107cf8261072d565b601a820191506107df8284610793565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086057607f821691505b60208210810361087357610872610819565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261089e565b6108e5868361089e565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092261091d610918846106a4565b6108fd565b6106a4565b9050919050565b6000819050919050565b61093c83610907565b61095061094882610929565b8484546108ab565b825550505050565b600090565b610965610958565b610970818484610933565b505050565b5b818110156109945761098960008261095d565b600181019050610976565b5050565b601f8211156109d9576109aa81610879565b6109b38461088e565b810160208510156109c2578190505b6109d66109ce8561088e565b830182610975565b50505b505050565b600082821c905092915050565b60006109fc600019846008026109de565b1980831691505092915050565b6000610a1583836109eb565b9150826002028217905092915050565b610a2e82610753565b67ffffffffffffffff811115610a4757610a466107ea565b5b610a518254610848565b610a5c828285610998565b600060209050601f831160018114610a8f5760008415610a7d578287015190505b610a878582610a09565b865550610aef565b601f198416610a9d86610879565b60005b82811015610ac557848901518255600182019150602085019450602081019050610aa0565b86831015610ae25784890151610ade601f8916826109eb565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f496e697469616c20737570706c79206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610b64602583610af7565b9150610b6f82610b08565b604082019050919050565b60006020820190508181036000830152610b9381610b57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610bd281610654565b82525050565b6000602082019050610bed6000830184610bc9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2d826106a4565b9150610c38836106a4565b9250828201905080821115610c5057610c4f610bf3565b5b92915050565b610c5f816106a4565b82525050565b6000606082019050610c7a6000830186610bc9565b610c876020830185610c56565b610c946040830184610c56565b949350505050565b6000602082019050610cb16000830184610c56565b92915050565b610f4d80610cc66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633804eea0116100715780633804eea0146101685780634972134a1461018657806370a08231146101a457806395d89b41146101d4578063a9059cbb146101f2578063dd62ed3e14610222576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610252565b6040516100c39190610b27565b60405180910390f35b6100e660048036038101906100e19190610be2565b6102e4565b6040516100f39190610c3d565b60405180910390f35b610104610307565b6040516101119190610c67565b60405180910390f35b610134600480360381019061012f9190610c82565b610311565b6040516101419190610c3d565b60405180910390f35b610152610340565b60405161015f9190610cf1565b60405180910390f35b610170610349565b60405161017d9190610d6b565b60405180910390f35b61018e61036f565b60405161019b9190610c67565b60405180910390f35b6101be60048036038101906101b99190610d86565b610375565b6040516101cb9190610c67565b60405180910390f35b6101dc6103bd565b6040516101e99190610b27565b60405180910390f35b61020c60048036038101906102079190610be2565b61044f565b6040516102199190610c3d565b60405180910390f35b61023c60048036038101906102379190610db3565b610472565b6040516102499190610c67565b60405180910390f35b60606003805461026190610e22565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e22565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000806102ef6104f9565b90506102fc818585610501565b600191505092915050565b6000600254905090565b60008061031c6104f9565b9050610329858285610513565b6103348585856105a7565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cc90610e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610e22565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b60008061045a6104f9565b90506104678185856105a7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61050e838383600161069b565b505050565b600061051f8484610472565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105a15781811015610591578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161058893929190610e62565b60405180910390fd5b6105a08484848403600061069b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106195760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106109190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106829190610e99565b60405180910390fd5b610696838383610872565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361070d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107049190610e99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107769190610e99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561086c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108639190610c67565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c45780600260008282546108b89190610ee3565b92505081905550610997565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610950578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161094793929190610e62565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e05780600260008282540392505081905550610a2d565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8a9190610c67565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af982610a97565b610b038185610aa2565b9350610b13818560208601610ab3565b610b1c81610add565b840191505092915050565b60006020820190508181036000830152610b418184610aee565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7982610b4e565b9050919050565b610b8981610b6e565b8114610b9457600080fd5b50565b600081359050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081359050610bdc81610bb6565b92915050565b60008060408385031215610bf957610bf8610b49565b5b6000610c0785828601610b97565b9250506020610c1885828601610bcd565b9150509250929050565b60008115159050919050565b610c3781610c22565b82525050565b6000602082019050610c526000830184610c2e565b92915050565b610c6181610bac565b82525050565b6000602082019050610c7c6000830184610c58565b92915050565b600080600060608486031215610c9b57610c9a610b49565b5b6000610ca986828701610b97565b9350506020610cba86828701610b97565b9250506040610ccb86828701610bcd565b9150509250925092565b600060ff82169050919050565b610ceb81610cd5565b82525050565b6000602082019050610d066000830184610ce2565b92915050565b6000819050919050565b6000610d31610d2c610d2784610b4e565b610d0c565b610b4e565b9050919050565b6000610d4382610d16565b9050919050565b6000610d5582610d38565b9050919050565b610d6581610d4a565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b600060208284031215610d9c57610d9b610b49565b5b6000610daa84828501610b97565b91505092915050565b60008060408385031215610dca57610dc9610b49565b5b6000610dd885828601610b97565b9250506020610de985828601610b97565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e3a57607f821691505b602082108103610e4d57610e4c610df3565b5b50919050565b610e5c81610b6e565b82525050565b6000606082019050610e776000830186610e53565b610e846020830185610c58565b610e916040830184610c58565b949350505050565b6000602082019050610eae6000830184610e53565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eee82610bac565b9150610ef983610bac565b9250828201905080821115610f1157610f10610eb4565b5b9291505056fea2646970667358221220b4e71c62684899feb18d46be648c751d428f2e8a2edec2027a66ba146e42d9a164736f6c634300081b0033a264697066735822122028d9d2aa3b890aaf97add8e4eb0fbfbe2063d2d266e9c215eccfbc8fbcb7108b64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA913D7B9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA913D7B9 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xBDECD21B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xC69AC7D3 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF4122807 EQ PUSH2 0x1AA JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3D2D07E2 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x4F4ED78F EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x50BA8364 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x69FF6ABB EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x143A JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x23A SWAP1 PUSH2 0x18B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x288 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x296 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP8 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x315 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B4 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x511 CALLER DUP7 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EB386EA7CBDB4A91109CEA5FED53B6B02F667C149086A609AD4347FB0A5D788 DUP8 DUP8 DUP5 PUSH1 0x2 ADD DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x605 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0x623 JUMPI PUSH2 0x622 DUP7 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6CE CALLER ADDRESS DUP4 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x0 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x6E1 SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH2 0x6ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24D4DD2CD73442CE7BA8D012AFD0AB2601A6B3C593B368A0A91B1BAC5D5D27F2 PUSH1 0x0 SLOAD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x951 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x972 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x9B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4F SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F354EC7B9D2CA4E029F73CCB9119943A48C3295704DD66CA8BEDA0C7BAE33F DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC85 SWAP3 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 DUP2 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xCBF JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE5A SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEBB CALLER DUP7 PUSH20 0x48DB5C1155836DE945FB82B6A9CF82D91AC21F16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB27B8AED46D863AA21F1C0DD0CA6804E332CE068329761DE4584F4F59740C61 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF07 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD SUB PUSH2 0xF25 JUMPI PUSH2 0xF24 DUP7 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xF40 JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x20BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST POP PUSH32 0xCC1163B9F5B7A48FEB09E3106D97FE333E2B9B8D72544E2F9D4470F483E5214E DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x115E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1117 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD EQ PUSH2 0x1213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP1 PUSH2 0x24C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5CFF112F1CB588779B4E6AAE6BAF0D738747FCF132F0FF202ADCEC605F9CABDF DUP3 PUSH1 0x40 MLOAD PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x132B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1389 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x251A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C13 DUP1 PUSH2 0x2536 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x13A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D6 DUP2 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP2 EQ PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1434 DUP2 PUSH2 0x140E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1451 JUMPI PUSH2 0x1450 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x145F DUP6 DUP3 DUP7 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1470 DUP6 DUP3 DUP7 ADD PUSH2 0x1425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1483 DUP2 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C8 DUP5 DUP3 DUP6 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F6 PUSH2 0x14F1 PUSH2 0x14EC DUP5 PUSH2 0x13DC JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1508 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151A DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x150F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1592 DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x159C DUP2 DUP6 PUSH2 0x153B JUMP JUMPDEST SWAP4 POP PUSH2 0x15AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154C JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D5 DUP2 PUSH2 0x15C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15E4 DUP2 PUSH2 0x13FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1521 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x161E DUP2 DUP9 PUSH2 0x1587 JUMP JUMPDEST SWAP1 POP PUSH2 0x162D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x163A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1647 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15CC JUMP JUMPDEST PUSH2 0x1654 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x15DB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x1665 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16FE DUP8 DUP3 DUP9 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x172B DUP8 DUP3 DUP9 ADD PUSH2 0x166F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH2 0x1751 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x177C DUP7 DUP3 DUP8 ADD PUSH2 0x166F JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x178F DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C0 DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17D1 DUP7 DUP3 DUP8 ADD PUSH2 0x1425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17E2 DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F7 DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x17EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1822 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP7 DUP3 DUP8 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x13A1 JUMP JUMPDEST JUMPDEST PUSH2 0x187C DUP7 DUP3 DUP8 ADD PUSH2 0x166F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1888 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420626174636820494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191E PUSH1 0x10 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1929 DUP3 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194D DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463682068617320616C7265616479206265656E2066696E616C697A6564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x21 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x1954 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19DF DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722077697468647261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616C2E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH1 0x24 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4D DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB2 DUP3 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABD DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x1AFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0D DUP2 PUSH2 0x15C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B2A DUP2 PUSH2 0x1B04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B54 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1B7F DUP2 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1B89 DUP2 DUP7 PUSH2 0x153B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1BA4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1BBA JUMPI PUSH2 0x1BED JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1BC3 DUP6 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BE5 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC6 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C11 DUP4 DUP6 PUSH2 0x153B JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1E DUP4 DUP6 DUP5 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1C27 DUP4 PUSH2 0x1576 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C47 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1C54 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 DUP7 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C7B DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE3 PUSH1 0x25 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP3 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D12 DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D24 DUP3 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1A78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x14FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D83 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1D90 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x1D9D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1E21 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1DE4 JUMP JUMPDEST PUSH2 0x1E2B DUP7 DUP4 PUSH2 0x1DE4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5E PUSH2 0x1E59 PUSH2 0x1E54 DUP5 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E78 DUP4 PUSH2 0x1E43 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x1E84 DUP3 PUSH2 0x1E65 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1DF1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1EAC DUP2 DUP5 DUP5 PUSH2 0x1E6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1EC5 PUSH1 0x0 DUP3 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1EE6 DUP2 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x1EEF DUP5 PUSH2 0x1DD4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1EFE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1F12 PUSH2 0x1F0A DUP6 PUSH2 0x1DD4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1EB1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1F1A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 DUP4 DUP4 PUSH2 0x1F27 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F6A DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F83 JUMPI PUSH2 0x1F82 PUSH2 0x1DA5 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8D DUP3 SLOAD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1F98 DUP3 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1FB9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1FC3 DUP6 DUP3 PUSH2 0x1F45 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x202B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1FD9 DUP7 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2001 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FDC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x201E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x201A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F27 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x205B DUP2 DUP6 DUP8 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP PUSH2 0x206A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206261746368206F776E6572000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A9 PUSH1 0x1D DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x20B4 DUP3 PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D8 DUP2 PUSH2 0x209C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2115 PUSH1 0x19 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x2120 DUP3 PUSH2 0x20DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2144 DUP2 PUSH2 0x2108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F72207472616E736665 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A7 PUSH1 0x22 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x21B2 DUP3 PUSH2 0x214B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D6 DUP2 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x21FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x221B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x147A JUMP JUMPDEST PUSH2 0x2228 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x223B DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420757064617465206174746573746174696F6E20666F72206120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x66696E616C697A65642062617463682E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A2 PUSH1 0x30 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x22AD DUP3 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D1 DUP2 PUSH2 0x2295 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22ED DUP4 DUP4 PUSH2 0x22D8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2306 JUMPI PUSH2 0x2305 PUSH2 0x1DA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2310 DUP3 SLOAD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x231B DUP3 DUP3 DUP6 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2338 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x2342 DUP6 DUP3 PUSH2 0x1F45 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2358 DUP7 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2380 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x235B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x239D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x2399 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F27 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23C8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x147A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x23DB DUP2 DUP5 DUP7 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426174636820697320616C72656164792066696E616C697A65642E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241B PUSH1 0x1B DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x2426 DUP3 PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x244A DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865726520617265207374696C6C20756E77697468647261776E20746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E732E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD PUSH1 0x23 DUP4 PUSH2 0x153B JUMP JUMPDEST SWAP2 POP PUSH2 0x24B8 DUP3 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24DC DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x2505 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0x2512 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x147A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x252F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C13 CODESIZE SUB DUP1 PUSH2 0x1C13 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x41 DUP3 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5046415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x153 CALLER DUP3 PUSH2 0x22F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x170 DUP5 PUSH2 0x2B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F JUMPI PUSH2 0x18E PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x224 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x218 JUMPI PUSH2 0x217 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1CF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x40A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x315 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x352 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x381 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3AA JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3CF JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3C5 JUMPI PUSH2 0x3C4 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3F2 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x401 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x52F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4E8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x578 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5C5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65F DUP3 PUSH2 0x634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 DUP3 PUSH2 0x654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH2 0x666 JUMP JUMPDEST DUP2 EQ PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x69E DUP2 PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6D4 DUP2 PUSH2 0x6AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6F2 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x701 DUP7 DUP3 DUP8 ADD PUSH2 0x68F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x712 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x723 DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x50696B61506179204672616374696F6E616C2042617463682023000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x7A8 DUP2 DUP6 PUSH2 0x75E JUMP JUMPDEST SWAP4 POP PUSH2 0x7B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x769 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF DUP3 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1A DUP3 ADD SWAP2 POP PUSH2 0x7DF DUP3 DUP5 PUSH2 0x793 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x860 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x819 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x8DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8E5 DUP7 DUP4 PUSH2 0x89E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 PUSH2 0x91D PUSH2 0x918 DUP5 PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93C DUP4 PUSH2 0x907 JUMP JUMPDEST PUSH2 0x950 PUSH2 0x948 DUP3 PUSH2 0x929 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8AB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x965 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x970 DUP2 DUP5 DUP5 PUSH2 0x933 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x994 JUMPI PUSH2 0x989 PUSH1 0x0 DUP3 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x976 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D9 JUMPI PUSH2 0x9AA DUP2 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x9B3 DUP5 PUSH2 0x88E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9C2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9D6 PUSH2 0x9CE DUP6 PUSH2 0x88E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x975 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FC PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9DE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA15 DUP4 DUP4 PUSH2 0x9EB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2E DUP3 PUSH2 0x753 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA46 PUSH2 0x7EA JUMP JUMPDEST JUMPDEST PUSH2 0xA51 DUP3 SLOAD PUSH2 0x848 JUMP JUMPDEST PUSH2 0xA5C DUP3 DUP3 DUP6 PUSH2 0x998 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA8F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA7D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA87 DUP6 DUP3 PUSH2 0xA09 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA9D DUP7 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAA0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAE2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xADE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9EB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C79206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E2030000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 PUSH1 0x25 DUP4 PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP3 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB93 DUP2 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x654 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC2D DUP3 PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC38 DUP4 PUSH2 0x6A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC4F PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0x6A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC7A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xC87 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0xC94 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4D DUP1 PUSH2 0xCC6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3804EEA0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x3804EEA0 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x4972134A EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x222 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28D SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EF PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FC DUP2 DUP6 DUP6 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x31C PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x329 DUP6 DUP3 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x334 DUP6 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CC SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F8 SWAP1 PUSH2 0xE22 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45A PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x467 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x69B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP5 DUP5 PUSH2 0x472 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x5A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x591 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x69B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x619 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x696 DUP4 DUP4 DUP4 PUSH2 0x872 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x86C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x947 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF9 DUP3 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0xB03 DUP2 DUP6 PUSH2 0xAA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0xADD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 DUP5 PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB89 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA6 DUP2 PUSH2 0xB80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBDC DUP2 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBF8 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC18 DUP6 DUP3 DUP7 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 DUP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD2C PUSH2 0xD27 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP3 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD55 DUP3 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAA DUP5 DUP3 DUP6 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xB49 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD8 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE9 DUP6 DUP3 DUP7 ADD PUSH2 0xB97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE4D JUMPI PUSH2 0xE4C PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5C DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE77 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0xE91 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xBAC JUMP JUMPDEST SWAP2 POP PUSH2 0xEF9 DUP4 PUSH2 0xBAC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF10 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE7 SHR PUSH3 0x684899 INVALID 0xB1 DUP14 CHAINID 0xBE PUSH5 0x8C751D428F 0x2E DUP11 0x2E 0xDE 0xC2 MUL PUSH27 0x66BA146E42D9A164736F6C634300081B0033A26469706673582212 KECCAK256 0x28 0xD9 0xD2 0xAA EXTCODESIZE DUP10 EXP 0xAF SWAP8 0xAD 0xD8 0xE4 0xEB 0xF 0xBF 0xBE KECCAK256 PUSH4 0xD2D266E9 0xC2 ISZERO 0xEC 0xCF 0xBC DUP16 0xBC 0xB7 LT DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1392:7756:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2184:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2088:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;5963:1082;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2016:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3792:1300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5186:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3130:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7133:989;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8671:475;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:74;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2088:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5963:1082::-;6124:8;3614:1;3603:8;:12;:40;;;;;3631:12;;3619:8;:24;;3603:40;3595:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6144:19:::1;6166:13;:23;6180:8;6166:23;;;;;;;;;;;6144:45;;6208:5;:17;;;;;;;;;;;;6207:18;6199:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6339:15;6294:19;:29;6314:8;6294:29;;;;;;;;;;;:41;6324:10;6294:41;;;;;;;;;;;;;;;;:60;;6273:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;6523:15;6478:19;:29;6498:8;6478:29;;;;;;;;;;;:41;6508:10;6478:41;;;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;;;;;6573:15;6548:5;:21;;;:40;;;;;;;:::i;:::-;;;;;;;;6599:46;6617:10;6629:15;3173:42;6599:17;;;;:46;;;;;:::i;:::-;6655:5;:11;;;;;;;;;;;;:20;;;6676:10;6688:15;6655:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6774:10;6720:164;;;6752:8;6798:15;6827:5;:24;;6865:9;;6720:164;;;;;;;;;;:::i;:::-;;;;;;;;6988:1;6963:5;:21;;;:26:::0;6959:80:::1;;7005:23;7019:8;7005:13;:23::i;:::-;6959:80;6134:911;5963:1082:::0;;;;;:::o;2016:31::-;;;;:::o;3792:1300::-;4093:1;4076:14;:18;4068:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4163:1;4147:12;;:17;;;;;;;:::i;:::-;;;;;;;;4174:64;4196:10;4216:4;4223:14;3173:42;4174:21;;;;:64;;;;;;:::i;:::-;4330:36;4421:4;4443:12;;4473:14;4369:132;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4330:171;;4542:280;;;;;;;;4571:12;;4542:280;;;;4604:5;4542:280;;;;;;4643:19;;4542:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4689:14;4542:280;;;;4734:14;4542:280;;;;4775:5;4542:280;;;;;;4801:10;4542:280;;;;;4512:13;:27;4526:12;;4512:27;;;;;;;;;;;:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4881:14;4833:19;:33;4853:12;;4833:33;;;;;;;;;;;:45;4867:10;4833:45;;;;;;;;;;;;;;;:62;;;;5004:10;4952:133;;;4978:12;;5028:19;;5061:14;4952:133;;;;;;;;;:::i;:::-;;;;;;;;3924:1168;3792:1300;;;:::o;5186:695::-;5333:8;3614:1;3603:8;:12;:40;;;;;3631:12;;3619:8;:24;;3603:40;3595:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5358:8:::1;3412:10;3379:43;;:13;:23;3393:8;3379:23;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3358:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;5407:1:::2;5386:23;;:9;:23;;::::0;5378:61:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;5515:15;5470:19;:29;5490:8;5470:29;;;;;;;;;;;:41;5500:10;5470:41;;;;;;;;;;;;;;;;:60;;5449:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;5646:15;5601:19;:29;5621:8;5601:29;;;;;;;;;;;:41;5631:10;5601:41;;;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;;;;;5715:15;5671:19;:29;5691:8;5671:29;;;;;;;;;;;:40;5701:9;5671:40;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;5826:9;5746:128;;5802:10;5746:128;;;5780:8;5849:15;5746:128;;;;;;;:::i;:::-;;;;;;;;3674:1:::1;5186:695:::0;;;;:::o;3130:86::-;3173:42;3130:86;:::o;7133:989::-;7292:8;3614:1;3603:8;:12;:40;;;;;3631:12;;3619:8;:24;;3603:40;3595:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7312:19:::1;7334:13;:23;7348:8;7334:23;;;;;;;;;;;7312:45;;7376:5;:17;;;;;;;;;;;;7375:18;7367:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7507:15;7462:19;:29;7482:8;7462:29;;;;;;;;;;;:41;7492:10;7462:41;;;;;;;;;;;;;;;;:60;;7441:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;7699:15;7654:19;:29;7674:8;7654:29;;;;;;;;;;;:41;7684:10;7654:41;;;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;;;;;7749:15;7724:5;:21;;;:40;;;;;;;:::i;:::-;;;;;;;;7775:46;7793:10;7805:15;3173:42;7775:17;;;;:46;;;;;:::i;:::-;7889:10;7836:125;;;7867:8;7913:15;7942:9;;7836:125;;;;;;;;;:::i;:::-;;;;;;;;8065:1;8040:5;:21;;;:26:::0;8036:80:::1;;8082:23;8096:8;8082:13;:23::i;:::-;8036:80;7302:820;7133:989:::0;;;;;:::o;8671:475::-;8805:8;3614:1;3603:8;:12;:40;;;;;3631:12;;3619:8;:24;;3603:40;3595:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;8830:8:::1;3412:10;3379:43;;:13;:23;3393:8;3379:23;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3358:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;8850:19:::2;8872:13;:23;8886:8;8872:23;;;;;;;;;;;8850:45;;8927:5;:17;;;;;;;;;;;;8926:18;8905:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;9056:22;;9029:5;:24;;:49;;;;;;;:::i;:::-;;9093:46;9106:8;9116:22;;9093:46;;;;;;;;:::i;:::-;;;;;;;;8840:306;3674:1:::1;8671:475:::0;;;;:::o;1271:160:11:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;8215:372:27:-;8275:19;8297:13;:23;8311:8;8297:23;;;;;;;;;;;8275:45;;8339:5;:17;;;;;;;;;;;;8338:18;8330:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;8444:1;8419:5;:21;;;:26;8398:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;8537:4;8517:5;:17;;;:24;;;;;;;;;;;;;;;;;;8556;8571:8;8556:24;;;;;;:::i;:::-;;;;;;;;8265:322;8215:372;:::o;1670:188:11:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:29:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:60::-;2392:3;2413:5;2406:12;;2364:60;;;:::o;2430:142::-;2480:9;2513:53;2531:34;2540:24;2558:5;2540:24;:::i;:::-;2531:34;:::i;:::-;2513:53;:::i;:::-;2500:66;;2430:142;;;:::o;2578:126::-;2628:9;2661:37;2692:5;2661:37;:::i;:::-;2648:50;;2578:126;;;:::o;2710:165::-;2799:9;2832:37;2863:5;2832:37;:::i;:::-;2819:50;;2710:165;;;:::o;2881:209::-;3007:76;3077:5;3007:76;:::i;:::-;3002:3;2995:89;2881:209;;:::o;3096:99::-;3148:6;3182:5;3176:12;3166:22;;3096:99;;;:::o;3201:169::-;3285:11;3319:6;3314:3;3307:19;3359:4;3354:3;3350:14;3335:29;;3201:169;;;;:::o;3376:248::-;3458:1;3468:113;3482:6;3479:1;3476:13;3468:113;;;3567:1;3562:3;3558:11;3552:18;3548:1;3543:3;3539:11;3532:39;3504:2;3501:1;3497:10;3492:15;;3468:113;;;3615:1;3606:6;3601:3;3597:16;3590:27;3438:186;3376:248;;;:::o;3630:102::-;3671:6;3722:2;3718:7;3713:2;3706:5;3702:14;3698:28;3688:38;;3630:102;;;:::o;3738:377::-;3826:3;3854:39;3887:5;3854:39;:::i;:::-;3909:71;3973:6;3968:3;3909:71;:::i;:::-;3902:78;;3989:65;4047:6;4042:3;4035:4;4028:5;4024:16;3989:65;:::i;:::-;4079:29;4101:6;4079:29;:::i;:::-;4074:3;4070:39;4063:46;;3830:285;3738:377;;;;:::o;4121:90::-;4155:7;4198:5;4191:13;4184:21;4173:32;;4121:90;;;:::o;4217:109::-;4298:21;4313:5;4298:21;:::i;:::-;4293:3;4286:34;4217:109;;:::o;4332:118::-;4419:24;4437:5;4419:24;:::i;:::-;4414:3;4407:37;4332:118;;:::o;4456:1043::-;4770:4;4808:3;4797:9;4793:19;4785:27;;4822:71;4890:1;4879:9;4875:17;4866:6;4822:71;:::i;:::-;4903:111;5010:2;4999:9;4995:18;4986:6;4903:111;:::i;:::-;5061:9;5055:4;5051:20;5046:2;5035:9;5031:18;5024:48;5089:78;5162:4;5153:6;5089:78;:::i;:::-;5081:86;;5177:72;5245:2;5234:9;5230:18;5221:6;5177:72;:::i;:::-;5259:73;5327:3;5316:9;5312:19;5303:6;5259:73;:::i;:::-;5342:67;5404:3;5393:9;5389:19;5380:6;5342:67;:::i;:::-;5419:73;5487:3;5476:9;5472:19;5463:6;5419:73;:::i;:::-;4456:1043;;;;;;;;;;:::o;5505:117::-;5614:1;5611;5604:12;5628:117;5737:1;5734;5727:12;5751:117;5860:1;5857;5850:12;5888:553;5946:8;5956:6;6006:3;5999:4;5991:6;5987:17;5983:27;5973:122;;6014:79;;:::i;:::-;5973:122;6127:6;6114:20;6104:30;;6157:18;6149:6;6146:30;6143:117;;;6179:79;;:::i;:::-;6143:117;6293:4;6285:6;6281:17;6269:29;;6347:3;6339:4;6331:6;6327:17;6317:8;6313:32;6310:41;6307:128;;;6354:79;;:::i;:::-;6307:128;5888:553;;;;;:::o;6447:819::-;6536:6;6544;6552;6560;6609:2;6597:9;6588:7;6584:23;6580:32;6577:119;;;6615:79;;:::i;:::-;6577:119;6735:1;6760:53;6805:7;6796:6;6785:9;6781:22;6760:53;:::i;:::-;6750:63;;6706:117;6862:2;6888:53;6933:7;6924:6;6913:9;6909:22;6888:53;:::i;:::-;6878:63;;6833:118;7018:2;7007:9;7003:18;6990:32;7049:18;7041:6;7038:30;7035:117;;;7071:79;;:::i;:::-;7035:117;7184:65;7241:7;7232:6;7221:9;7217:22;7184:65;:::i;:::-;7166:83;;;;6961:298;6447:819;;;;;;;:::o;7272:674::-;7352:6;7360;7368;7417:2;7405:9;7396:7;7392:23;7388:32;7385:119;;;7423:79;;:::i;:::-;7385:119;7571:1;7560:9;7556:17;7543:31;7601:18;7593:6;7590:30;7587:117;;;7623:79;;:::i;:::-;7587:117;7736:65;7793:7;7784:6;7773:9;7769:22;7736:65;:::i;:::-;7718:83;;;;7514:297;7850:2;7876:53;7921:7;7912:6;7901:9;7897:22;7876:53;:::i;:::-;7866:63;;7821:118;7272:674;;;;;:::o;7952:619::-;8029:6;8037;8045;8094:2;8082:9;8073:7;8069:23;8065:32;8062:119;;;8100:79;;:::i;:::-;8062:119;8220:1;8245:53;8290:7;8281:6;8270:9;8266:22;8245:53;:::i;:::-;8235:63;;8191:117;8347:2;8373:53;8418:7;8409:6;8398:9;8394:22;8373:53;:::i;:::-;8363:63;;8318:118;8475:2;8501:53;8546:7;8537:6;8526:9;8522:22;8501:53;:::i;:::-;8491:63;;8446:118;7952:619;;;;;:::o;8577:139::-;8640:9;8673:37;8704:5;8673:37;:::i;:::-;8660:50;;8577:139;;;:::o;8722:157::-;8822:50;8866:5;8822:50;:::i;:::-;8817:3;8810:63;8722:157;;:::o;8885:248::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9042:84;9123:1;9112:9;9108:17;9099:6;9042:84;:::i;:::-;8885:248;;;;:::o;9139:674::-;9219:6;9227;9235;9284:2;9272:9;9263:7;9259:23;9255:32;9252:119;;;9290:79;;:::i;:::-;9252:119;9410:1;9435:53;9480:7;9471:6;9460:9;9456:22;9435:53;:::i;:::-;9425:63;;9381:117;9565:2;9554:9;9550:18;9537:32;9596:18;9588:6;9585:30;9582:117;;;9618:79;;:::i;:::-;9582:117;9731:65;9788:7;9779:6;9768:9;9764:22;9731:65;:::i;:::-;9713:83;;;;9508:298;9139:674;;;;;:::o;9819:180::-;9867:77;9864:1;9857:88;9964:4;9961:1;9954:15;9988:4;9985:1;9978:15;10005:320;10049:6;10086:1;10080:4;10076:12;10066:22;;10133:1;10127:4;10123:12;10154:18;10144:81;;10210:4;10202:6;10198:17;10188:27;;10144:81;10272:2;10264:6;10261:14;10241:18;10238:38;10235:84;;10291:18;;:::i;:::-;10235:84;10056:269;10005:320;;;:::o;10331:166::-;10471:18;10467:1;10459:6;10455:14;10448:42;10331:166;:::o;10503:366::-;10645:3;10666:67;10730:2;10725:3;10666:67;:::i;:::-;10659:74;;10742:93;10831:3;10742:93;:::i;:::-;10860:2;10855:3;10851:12;10844:19;;10503:366;;;:::o;10875:419::-;11041:4;11079:2;11068:9;11064:18;11056:26;;11128:9;11122:4;11118:20;11114:1;11103:9;11099:17;11092:47;11156:131;11282:4;11156:131;:::i;:::-;11148:139;;10875:419;;;:::o;11300:220::-;11440:34;11436:1;11428:6;11424:14;11417:58;11509:3;11504:2;11496:6;11492:15;11485:28;11300:220;:::o;11526:366::-;11668:3;11689:67;11753:2;11748:3;11689:67;:::i;:::-;11682:74;;11765:93;11854:3;11765:93;:::i;:::-;11883:2;11878:3;11874:12;11867:19;;11526:366;;;:::o;11898:419::-;12064:4;12102:2;12091:9;12087:18;12079:26;;12151:9;12145:4;12141:20;12137:1;12126:9;12122:17;12115:47;12179:131;12305:4;12179:131;:::i;:::-;12171:139;;11898:419;;;:::o;12323:223::-;12463:34;12459:1;12451:6;12447:14;12440:58;12532:6;12527:2;12519:6;12515:15;12508:31;12323:223;:::o;12552:366::-;12694:3;12715:67;12779:2;12774:3;12715:67;:::i;:::-;12708:74;;12791:93;12880:3;12791:93;:::i;:::-;12909:2;12904:3;12900:12;12893:19;;12552:366;;;:::o;12924:419::-;13090:4;13128:2;13117:9;13113:18;13105:26;;13177:9;13171:4;13167:20;13163:1;13152:9;13148:17;13141:47;13205:131;13331:4;13205:131;:::i;:::-;13197:139;;12924:419;;;:::o;13349:180::-;13397:77;13394:1;13387:88;13494:4;13491:1;13484:15;13518:4;13515:1;13508:15;13535:194;13575:4;13595:20;13613:1;13595:20;:::i;:::-;13590:25;;13629:20;13647:1;13629:20;:::i;:::-;13624:25;;13673:1;13670;13666:9;13658:17;;13697:1;13691:4;13688:11;13685:37;;;13702:18;;:::i;:::-;13685:37;13535:194;;;;:::o;13735:332::-;13856:4;13894:2;13883:9;13879:18;13871:26;;13907:71;13975:1;13964:9;13960:17;13951:6;13907:71;:::i;:::-;13988:72;14056:2;14045:9;14041:18;14032:6;13988:72;:::i;:::-;13735:332;;;;;:::o;14073:116::-;14143:21;14158:5;14143:21;:::i;:::-;14136:5;14133:32;14123:60;;14179:1;14176;14169:12;14123:60;14073:116;:::o;14195:137::-;14249:5;14280:6;14274:13;14265:22;;14296:30;14320:5;14296:30;:::i;:::-;14195:137;;;;:::o;14338:345::-;14405:6;14454:2;14442:9;14433:7;14429:23;14425:32;14422:119;;;14460:79;;:::i;:::-;14422:119;14580:1;14605:61;14658:7;14649:6;14638:9;14634:22;14605:61;:::i;:::-;14595:71;;14551:125;14338:345;;;;:::o;14689:141::-;14738:4;14761:3;14753:11;;14784:3;14781:1;14774:14;14818:4;14815:1;14805:18;14797:26;;14689:141;;;:::o;14860:831::-;14945:3;14982:5;14976:12;15011:36;15037:9;15011:36;:::i;:::-;15063:71;15127:6;15122:3;15063:71;:::i;:::-;15056:78;;15165:1;15154:9;15150:17;15181:1;15176:164;;;;15354:1;15349:336;;;;15143:542;;15176:164;15260:4;15256:9;15245;15241:25;15236:3;15229:38;15320:6;15313:14;15306:22;15300:4;15296:33;15291:3;15287:43;15280:50;;15176:164;;15349:336;15416:38;15448:5;15416:38;:::i;:::-;15476:1;15490:154;15504:6;15501:1;15498:13;15490:154;;;15578:7;15572:14;15568:1;15563:3;15559:11;15552:35;15628:1;15619:7;15615:15;15604:26;;15526:4;15523:1;15519:12;15514:17;;15490:154;;;15673:1;15668:3;15664:11;15657:18;;15356:329;;15143:542;;14949:742;;14860:831;;;;:::o;15697:148::-;15795:6;15790:3;15785;15772:30;15836:1;15827:6;15822:3;15818:16;15811:27;15697:148;;;:::o;15875:317::-;15973:3;15994:71;16058:6;16053:3;15994:71;:::i;:::-;15987:78;;16075:56;16124:6;16119:3;16112:5;16075:56;:::i;:::-;16156:29;16178:6;16156:29;:::i;:::-;16151:3;16147:39;16140:46;;15875:317;;;;;:::o;16198:749::-;16422:4;16460:3;16449:9;16445:19;16437:27;;16474:71;16542:1;16531:9;16527:17;16518:6;16474:71;:::i;:::-;16555:72;16623:2;16612:9;16608:18;16599:6;16555:72;:::i;:::-;16674:9;16668:4;16664:20;16659:2;16648:9;16644:18;16637:48;16702:75;16772:4;16763:6;16702:75;:::i;:::-;16694:83;;16824:9;16818:4;16814:20;16809:2;16798:9;16794:18;16787:48;16852:88;16935:4;16926:6;16918;16852:88;:::i;:::-;16844:96;;16198:749;;;;;;;;:::o;16953:224::-;17093:34;17089:1;17081:6;17077:14;17070:58;17162:7;17157:2;17149:6;17145:15;17138:32;16953:224;:::o;17183:366::-;17325:3;17346:67;17410:2;17405:3;17346:67;:::i;:::-;17339:74;;17422:93;17511:3;17422:93;:::i;:::-;17540:2;17535:3;17531:12;17524:19;;17183:366;;;:::o;17555:419::-;17721:4;17759:2;17748:9;17744:18;17736:26;;17808:9;17802:4;17798:20;17794:1;17783:9;17779:17;17772:47;17836:131;17962:4;17836:131;:::i;:::-;17828:139;;17555:419;;;:::o;17980:191::-;18020:3;18039:20;18057:1;18039:20;:::i;:::-;18034:25;;18073:20;18091:1;18073:20;:::i;:::-;18068:25;;18116:1;18113;18109:9;18102:16;;18137:3;18134:1;18131:10;18128:36;;;18144:18;;:::i;:::-;18128:36;17980:191;;;;:::o;18177:142::-;18243:9;18276:37;18307:5;18276:37;:::i;:::-;18263:50;;18177:142;;;:::o;18325:163::-;18428:53;18475:5;18428:53;:::i;:::-;18423:3;18416:66;18325:163;;:::o;18494:474::-;18659:4;18697:2;18686:9;18682:18;18674:26;;18710:87;18794:1;18783:9;18779:17;18770:6;18710:87;:::i;:::-;18807:72;18875:2;18864:9;18860:18;18851:6;18807:72;:::i;:::-;18889;18957:2;18946:9;18942:18;18933:6;18889:72;:::i;:::-;18494:474;;;;;;:::o;18974:180::-;19022:77;19019:1;19012:88;19119:4;19116:1;19109:15;19143:4;19140:1;19133:15;19160:93;19197:6;19244:2;19239;19232:5;19228:14;19224:23;19214:33;;19160:93;;;:::o;19259:107::-;19303:8;19353:5;19347:4;19343:16;19322:37;;19259:107;;;;:::o;19372:393::-;19441:6;19491:1;19479:10;19475:18;19514:97;19544:66;19533:9;19514:97;:::i;:::-;19632:39;19662:8;19651:9;19632:39;:::i;:::-;19620:51;;19704:4;19700:9;19693:5;19689:21;19680:30;;19753:4;19743:8;19739:19;19732:5;19729:30;19719:40;;19448:317;;19372:393;;;;;:::o;19771:142::-;19821:9;19854:53;19872:34;19881:24;19899:5;19881:24;:::i;:::-;19872:34;:::i;:::-;19854:53;:::i;:::-;19841:66;;19771:142;;;:::o;19919:75::-;19962:3;19983:5;19976:12;;19919:75;;;:::o;20000:269::-;20110:39;20141:7;20110:39;:::i;:::-;20171:91;20220:41;20244:16;20220:41;:::i;:::-;20212:6;20205:4;20199:11;20171:91;:::i;:::-;20165:4;20158:105;20076:193;20000:269;;;:::o;20275:73::-;20320:3;20275:73;:::o;20354:189::-;20431:32;;:::i;:::-;20472:65;20530:6;20522;20516:4;20472:65;:::i;:::-;20407:136;20354:189;;:::o;20549:186::-;20609:120;20626:3;20619:5;20616:14;20609:120;;;20680:39;20717:1;20710:5;20680:39;:::i;:::-;20653:1;20646:5;20642:13;20633:22;;20609:120;;;20549:186;;:::o;20741:543::-;20842:2;20837:3;20834:11;20831:446;;;20876:38;20908:5;20876:38;:::i;:::-;20960:29;20978:10;20960:29;:::i;:::-;20950:8;20946:44;21143:2;21131:10;21128:18;21125:49;;;21164:8;21149:23;;21125:49;21187:80;21243:22;21261:3;21243:22;:::i;:::-;21233:8;21229:37;21216:11;21187:80;:::i;:::-;20846:431;;20831:446;20741:543;;;:::o;21290:117::-;21344:8;21394:5;21388:4;21384:16;21363:37;;21290:117;;;;:::o;21413:169::-;21457:6;21490:51;21538:1;21534:6;21526:5;21523:1;21519:13;21490:51;:::i;:::-;21486:56;21571:4;21565;21561:15;21551:25;;21464:118;21413:169;;;;:::o;21587:295::-;21663:4;21809:29;21834:3;21828:4;21809:29;:::i;:::-;21801:37;;21871:3;21868:1;21864:11;21858:4;21855:21;21847:29;;21587:295;;;;:::o;21887:1395::-;22004:37;22037:3;22004:37;:::i;:::-;22106:18;22098:6;22095:30;22092:56;;;22128:18;;:::i;:::-;22092:56;22172:38;22204:4;22198:11;22172:38;:::i;:::-;22257:67;22317:6;22309;22303:4;22257:67;:::i;:::-;22351:1;22375:4;22362:17;;22407:2;22399:6;22396:14;22424:1;22419:618;;;;23081:1;23098:6;23095:77;;;23147:9;23142:3;23138:19;23132:26;23123:35;;23095:77;23198:67;23258:6;23251:5;23198:67;:::i;:::-;23192:4;23185:81;23054:222;22389:887;;22419:618;22471:4;22467:9;22459:6;22455:22;22505:37;22537:4;22505:37;:::i;:::-;22564:1;22578:208;22592:7;22589:1;22586:14;22578:208;;;22671:9;22666:3;22662:19;22656:26;22648:6;22641:42;22722:1;22714:6;22710:14;22700:24;;22769:2;22758:9;22754:18;22741:31;;22615:4;22612:1;22608:12;22603:17;;22578:208;;;22814:6;22805:7;22802:19;22799:179;;;22872:9;22867:3;22863:19;22857:26;22915:48;22957:4;22949:6;22945:17;22934:9;22915:48;:::i;:::-;22907:6;22900:64;22822:156;22799:179;23024:1;23020;23012:6;23008:14;23004:22;22998:4;22991:36;22426:611;;;22389:887;;21979:1303;;;21887:1395;;:::o;23288:553::-;23467:4;23505:2;23494:9;23490:18;23482:26;;23518:71;23586:1;23575:9;23571:17;23562:6;23518:71;:::i;:::-;23636:9;23630:4;23626:20;23621:2;23610:9;23606:18;23599:48;23664:88;23747:4;23738:6;23730;23664:88;:::i;:::-;23656:96;;23762:72;23830:2;23819:9;23815:18;23806:6;23762:72;:::i;:::-;23288:553;;;;;;;:::o;23847:179::-;23987:31;23983:1;23975:6;23971:14;23964:55;23847:179;:::o;24032:366::-;24174:3;24195:67;24259:2;24254:3;24195:67;:::i;:::-;24188:74;;24271:93;24360:3;24271:93;:::i;:::-;24389:2;24384:3;24380:12;24373:19;;24032:366;;;:::o;24404:419::-;24570:4;24608:2;24597:9;24593:18;24585:26;;24657:9;24651:4;24647:20;24643:1;24632:9;24628:17;24621:47;24685:131;24811:4;24685:131;:::i;:::-;24677:139;;24404:419;;;:::o;24829:175::-;24969:27;24965:1;24957:6;24953:14;24946:51;24829:175;:::o;25010:366::-;25152:3;25173:67;25237:2;25232:3;25173:67;:::i;:::-;25166:74;;25249:93;25338:3;25249:93;:::i;:::-;25367:2;25362:3;25358:12;25351:19;;25010:366;;;:::o;25382:419::-;25548:4;25586:2;25575:9;25571:18;25563:26;;25635:9;25629:4;25625:20;25621:1;25610:9;25606:17;25599:47;25663:131;25789:4;25663:131;:::i;:::-;25655:139;;25382:419;;;:::o;25807:221::-;25947:34;25943:1;25935:6;25931:14;25924:58;26016:4;26011:2;26003:6;25999:15;25992:29;25807:221;:::o;26034:366::-;26176:3;26197:67;26261:2;26256:3;26197:67;:::i;:::-;26190:74;;26273:93;26362:3;26273:93;:::i;:::-;26391:2;26386:3;26382:12;26375:19;;26034:366;;;:::o;26406:419::-;26572:4;26610:2;26599:9;26595:18;26587:26;;26659:9;26653:4;26649:20;26645:1;26634:9;26630:17;26623:47;26687:131;26813:4;26687:131;:::i;:::-;26679:139;;26406:419;;;:::o;26831:332::-;26952:4;26990:2;26979:9;26975:18;26967:26;;27003:71;27071:1;27060:9;27056:17;27047:6;27003:71;:::i;:::-;27084:72;27152:2;27141:9;27137:18;27128:6;27084:72;:::i;:::-;26831:332;;;;;:::o;27169:553::-;27348:4;27386:2;27375:9;27371:18;27363:26;;27399:71;27467:1;27456:9;27452:17;27443:6;27399:71;:::i;:::-;27480:72;27548:2;27537:9;27533:18;27524:6;27480:72;:::i;:::-;27599:9;27593:4;27589:20;27584:2;27573:9;27569:18;27562:48;27627:88;27710:4;27701:6;27693;27627:88;:::i;:::-;27619:96;;27169:553;;;;;;;:::o;27728:235::-;27868:34;27864:1;27856:6;27852:14;27845:58;27937:18;27932:2;27924:6;27920:15;27913:43;27728:235;:::o;27969:366::-;28111:3;28132:67;28196:2;28191:3;28132:67;:::i;:::-;28125:74;;28208:93;28297:3;28208:93;:::i;:::-;28326:2;28321:3;28317:12;28310:19;;27969:366;;;:::o;28341:419::-;28507:4;28545:2;28534:9;28530:18;28522:26;;28594:9;28588:4;28584:20;28580:1;28569:9;28565:17;28558:47;28622:131;28748:4;28622:131;:::i;:::-;28614:139;;28341:419;;;:::o;28766:97::-;28825:6;28853:3;28843:13;;28766:97;;;;:::o;28869:1403::-;28993:44;29033:3;29028;28993:44;:::i;:::-;29102:18;29094:6;29091:30;29088:56;;;29124:18;;:::i;:::-;29088:56;29168:38;29200:4;29194:11;29168:38;:::i;:::-;29253:67;29313:6;29305;29299:4;29253:67;:::i;:::-;29347:1;29376:2;29368:6;29365:14;29393:1;29388:632;;;;30064:1;30081:6;30078:84;;;30137:9;30132:3;30128:19;30115:33;30106:42;;30078:84;30188:67;30248:6;30241:5;30188:67;:::i;:::-;30182:4;30175:81;30037:229;29358:908;;29388:632;29440:4;29436:9;29428:6;29424:22;29474:37;29506:4;29474:37;:::i;:::-;29533:1;29547:215;29561:7;29558:1;29555:14;29547:215;;;29647:9;29642:3;29638:19;29625:33;29617:6;29610:49;29698:1;29690:6;29686:14;29676:24;;29745:2;29734:9;29730:18;29717:31;;29584:4;29581:1;29577:12;29572:17;;29547:215;;;29790:6;29781:7;29778:19;29775:186;;;29855:9;29850:3;29846:19;29833:33;29898:48;29940:4;29932:6;29928:17;29917:9;29898:48;:::i;:::-;29890:6;29883:64;29798:163;29775:186;30007:1;30003;29995:6;29991:14;29987:22;29981:4;29974:36;29395:625;;;29358:908;;28968:1304;;;28869:1403;;;:::o;30278:443::-;30429:4;30467:2;30456:9;30452:18;30444:26;;30480:71;30548:1;30537:9;30533:17;30524:6;30480:71;:::i;:::-;30598:9;30592:4;30588:20;30583:2;30572:9;30568:18;30561:48;30626:88;30709:4;30700:6;30692;30626:88;:::i;:::-;30618:96;;30278:443;;;;;;:::o;30727:177::-;30867:29;30863:1;30855:6;30851:14;30844:53;30727:177;:::o;30910:366::-;31052:3;31073:67;31137:2;31132:3;31073:67;:::i;:::-;31066:74;;31149:93;31238:3;31149:93;:::i;:::-;31267:2;31262:3;31258:12;31251:19;;30910:366;;;:::o;31282:419::-;31448:4;31486:2;31475:9;31471:18;31463:26;;31535:9;31529:4;31525:20;31521:1;31510:9;31506:17;31499:47;31563:131;31689:4;31563:131;:::i;:::-;31555:139;;31282:419;;;:::o;31707:222::-;31847:34;31843:1;31835:6;31831:14;31824:58;31916:5;31911:2;31903:6;31899:15;31892:30;31707:222;:::o;31935:366::-;32077:3;32098:67;32162:2;32157:3;32098:67;:::i;:::-;32091:74;;32174:93;32263:3;32174:93;:::i;:::-;32292:2;32287:3;32283:12;32276:19;;31935:366;;;:::o;32307:419::-;32473:4;32511:2;32500:9;32496:18;32488:26;;32560:9;32554:4;32550:20;32546:1;32535:9;32531:17;32524:47;32588:131;32714:4;32588:131;:::i;:::-;32580:139;;32307:419;;;:::o;32732:442::-;32881:4;32919:2;32908:9;32904:18;32896:26;;32932:71;33000:1;32989:9;32985:17;32976:6;32932:71;:::i;:::-;33013:72;33081:2;33070:9;33066:18;33057:6;33013:72;:::i;:::-;33095;33163:2;33152:9;33148:18;33139:6;33095:72;:::i;:::-;32732:442;;;;;;:::o;33180:222::-;33273:4;33311:2;33300:9;33296:18;33288:26;;33324:71;33392:1;33381:9;33377:17;33368:6;33324:71;:::i;:::-;33180:222;;;;:::o"},"methodIdentifiers":{"USDT()":"c54e44eb","batchRegistry(uint256)":"4f4ed78f","beneficiaryBalances(uint256,address)":"3d2d07e2","createNewBatchWithAttestation(string,uint256)":"a913d7b9","modifyBatchAttestation(uint256,string)":"f4122807","totalBatches()":"69ff6abb","transferBatchOwnership(uint256,address,uint256)":"bdecd21b","withdrawWithAttestationProof(uint256,uint256,string)":"50ba8364","withdrawWithoutAttestation(uint256,uint256,string)":"c69ac7d3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestation\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"AttestedWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"attestationDetails\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"BatchCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"BatchFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"updatedAttestationDetails\",\"type\":\"string\"}],\"name\":\"BatchUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"PrivateWithdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batchRegistry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"contract PikaFractionalAttestationToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"attestationDetails\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaryBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_attestationDetails\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"createNewBatchWithAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newAttestationDetails\",\"type\":\"string\"}],\"name\":\"modifyBatchAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_transferAmount\",\"type\":\"uint256\"}],\"name\":\"transferBatchOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"}],\"name\":\"withdrawWithAttestationProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"}],\"name\":\"withdrawWithoutAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PikaPay.sol\":\"PikaPay\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/PikaPay.sol\":{\"keccak256\":\"0x558b0db66c0f9f7da7f18439e3c41a4e5eeb217515ce09a8354b804b9437a378\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11a2484be0e8650a7584b82c30dc3ed3bfee7cf70234e120935b258414ea533a\",\"dweb:/ipfs/QmZJ3rsFTQ6XtMftAz2oBWuUAkdaE2Fq4w1L7bxLoiErgJ\"]}},\"version\":1}"}},"contracts/USDT.sol":{"USDT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1041":{"entryPoint":null,"id":1041,"parameterSlots":1,"returnSlots":0},"@_3156":{"entryPoint":null,"id":3156,"parameterSlots":2,"returnSlots":0},"@_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7510":{"entryPoint":null,"id":7510,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3203":{"entryPoint":908,"id":3203,"parameterSlots":0,"returnSlots":1},"@_mint_754":{"entryPoint":1008,"id":754,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":630,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_721":{"entryPoint":1258,"id":721,"parameterSlots":3,"returnSlots":0},"@decimals_478":{"entryPoint":999,"id":478,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2368":{"entryPoint":1248,"id":2368,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2208":{"entryPoint":828,"id":2208,"parameterSlots":2,"returnSlots":1},"@toShortString_2110":{"entryPoint":1144,"id":2110,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2659,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3219,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3234,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3702,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3249,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3510,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1961,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3499,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1807,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3332,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3650,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2761,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":3068,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2844,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3143,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2258,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2641,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3209,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2609,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2093,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3055,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2223,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3547,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2113,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2399,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3349,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1982,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1912,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2371,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2103,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2341,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2701,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1865,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1818,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2147,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3526,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":3391,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1998,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2748,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2328,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2199,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2011,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2157,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2194,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12938:29","nodeType":"YulBlock","src":"0:12938:29","statements":[{"body":{"nativeSrc":"66:40:29","nodeType":"YulBlock","src":"66:40:29","statements":[{"nativeSrc":"77:22:29","nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nativeSrc":"93:5:29","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nativeSrc":"87:5:29","nodeType":"YulIdentifier","src":"87:5:29"},"nativeSrc":"87:12:29","nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nativeSrc":"77:6:29","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:29","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:29","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nativeSrc":"140:152:29","nodeType":"YulBlock","src":"140:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:29","nodeType":"YulLiteral","src":"157:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:29","nodeType":"YulLiteral","src":"160:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:29","nodeType":"YulIdentifier","src":"150:6:29"},"nativeSrc":"150:88:29","nodeType":"YulFunctionCall","src":"150:88:29"},"nativeSrc":"150:88:29","nodeType":"YulExpressionStatement","src":"150:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:29","nodeType":"YulLiteral","src":"254:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:29","nodeType":"YulLiteral","src":"257:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:29","nodeType":"YulIdentifier","src":"247:6:29"},"nativeSrc":"247:15:29","nodeType":"YulFunctionCall","src":"247:15:29"},"nativeSrc":"247:15:29","nodeType":"YulExpressionStatement","src":"247:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:29","nodeType":"YulLiteral","src":"278:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:29","nodeType":"YulLiteral","src":"281:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:29","nodeType":"YulIdentifier","src":"271:6:29"},"nativeSrc":"271:15:29","nodeType":"YulFunctionCall","src":"271:15:29"},"nativeSrc":"271:15:29","nodeType":"YulExpressionStatement","src":"271:15:29"}]},"name":"panic_error_0x41","nativeSrc":"112:180:29","nodeType":"YulFunctionDefinition","src":"112:180:29"},{"body":{"nativeSrc":"326:152:29","nodeType":"YulBlock","src":"326:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:29","nodeType":"YulLiteral","src":"343:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:29","nodeType":"YulLiteral","src":"346:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:29","nodeType":"YulIdentifier","src":"336:6:29"},"nativeSrc":"336:88:29","nodeType":"YulFunctionCall","src":"336:88:29"},"nativeSrc":"336:88:29","nodeType":"YulExpressionStatement","src":"336:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:29","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:29","nodeType":"YulLiteral","src":"443:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:29","nodeType":"YulIdentifier","src":"433:6:29"},"nativeSrc":"433:15:29","nodeType":"YulFunctionCall","src":"433:15:29"},"nativeSrc":"433:15:29","nodeType":"YulExpressionStatement","src":"433:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:29","nodeType":"YulLiteral","src":"464:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:29","nodeType":"YulLiteral","src":"467:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:29","nodeType":"YulIdentifier","src":"457:6:29"},"nativeSrc":"457:15:29","nodeType":"YulFunctionCall","src":"457:15:29"},"nativeSrc":"457:15:29","nodeType":"YulExpressionStatement","src":"457:15:29"}]},"name":"panic_error_0x22","nativeSrc":"298:180:29","nodeType":"YulFunctionDefinition","src":"298:180:29"},{"body":{"nativeSrc":"535:269:29","nodeType":"YulBlock","src":"535:269:29","statements":[{"nativeSrc":"545:22:29","nodeType":"YulAssignment","src":"545:22:29","value":{"arguments":[{"name":"data","nativeSrc":"559:4:29","nodeType":"YulIdentifier","src":"559:4:29"},{"kind":"number","nativeSrc":"565:1:29","nodeType":"YulLiteral","src":"565:1:29","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:29","nodeType":"YulIdentifier","src":"555:3:29"},"nativeSrc":"555:12:29","nodeType":"YulFunctionCall","src":"555:12:29"},"variableNames":[{"name":"length","nativeSrc":"545:6:29","nodeType":"YulIdentifier","src":"545:6:29"}]},{"nativeSrc":"576:38:29","nodeType":"YulVariableDeclaration","src":"576:38:29","value":{"arguments":[{"name":"data","nativeSrc":"606:4:29","nodeType":"YulIdentifier","src":"606:4:29"},{"kind":"number","nativeSrc":"612:1:29","nodeType":"YulLiteral","src":"612:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:29","nodeType":"YulIdentifier","src":"602:3:29"},"nativeSrc":"602:12:29","nodeType":"YulFunctionCall","src":"602:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:29","nodeType":"YulTypedName","src":"580:18:29","type":""}]},{"body":{"nativeSrc":"653:51:29","nodeType":"YulBlock","src":"653:51:29","statements":[{"nativeSrc":"667:27:29","nodeType":"YulAssignment","src":"667:27:29","value":{"arguments":[{"name":"length","nativeSrc":"681:6:29","nodeType":"YulIdentifier","src":"681:6:29"},{"kind":"number","nativeSrc":"689:4:29","nodeType":"YulLiteral","src":"689:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:29","nodeType":"YulIdentifier","src":"677:3:29"},"nativeSrc":"677:17:29","nodeType":"YulFunctionCall","src":"677:17:29"},"variableNames":[{"name":"length","nativeSrc":"667:6:29","nodeType":"YulIdentifier","src":"667:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:29","nodeType":"YulIdentifier","src":"633:18:29"}],"functionName":{"name":"iszero","nativeSrc":"626:6:29","nodeType":"YulIdentifier","src":"626:6:29"},"nativeSrc":"626:26:29","nodeType":"YulFunctionCall","src":"626:26:29"},"nativeSrc":"623:81:29","nodeType":"YulIf","src":"623:81:29"},{"body":{"nativeSrc":"756:42:29","nodeType":"YulBlock","src":"756:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:29","nodeType":"YulIdentifier","src":"770:16:29"},"nativeSrc":"770:18:29","nodeType":"YulFunctionCall","src":"770:18:29"},"nativeSrc":"770:18:29","nodeType":"YulExpressionStatement","src":"770:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:29","nodeType":"YulIdentifier","src":"720:18:29"},{"arguments":[{"name":"length","nativeSrc":"743:6:29","nodeType":"YulIdentifier","src":"743:6:29"},{"kind":"number","nativeSrc":"751:2:29","nodeType":"YulLiteral","src":"751:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:29","nodeType":"YulIdentifier","src":"740:2:29"},"nativeSrc":"740:14:29","nodeType":"YulFunctionCall","src":"740:14:29"}],"functionName":{"name":"eq","nativeSrc":"717:2:29","nodeType":"YulIdentifier","src":"717:2:29"},"nativeSrc":"717:38:29","nodeType":"YulFunctionCall","src":"717:38:29"},"nativeSrc":"714:84:29","nodeType":"YulIf","src":"714:84:29"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:29","nodeType":"YulTypedName","src":"519:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:29","nodeType":"YulTypedName","src":"528:6:29","type":""}],"src":"484:320:29"},{"body":{"nativeSrc":"864:87:29","nodeType":"YulBlock","src":"864:87:29","statements":[{"nativeSrc":"874:11:29","nodeType":"YulAssignment","src":"874:11:29","value":{"name":"ptr","nativeSrc":"882:3:29","nodeType":"YulIdentifier","src":"882:3:29"},"variableNames":[{"name":"data","nativeSrc":"874:4:29","nodeType":"YulIdentifier","src":"874:4:29"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:29","nodeType":"YulLiteral","src":"902:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:29","nodeType":"YulIdentifier","src":"905:3:29"}],"functionName":{"name":"mstore","nativeSrc":"895:6:29","nodeType":"YulIdentifier","src":"895:6:29"},"nativeSrc":"895:14:29","nodeType":"YulFunctionCall","src":"895:14:29"},"nativeSrc":"895:14:29","nodeType":"YulExpressionStatement","src":"895:14:29"},{"nativeSrc":"918:26:29","nodeType":"YulAssignment","src":"918:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:29","nodeType":"YulLiteral","src":"936:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:29","nodeType":"YulLiteral","src":"939:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:29","nodeType":"YulIdentifier","src":"926:9:29"},"nativeSrc":"926:18:29","nodeType":"YulFunctionCall","src":"926:18:29"},"variableNames":[{"name":"data","nativeSrc":"918:4:29","nodeType":"YulIdentifier","src":"918:4:29"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:29","nodeType":"YulTypedName","src":"851:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:29","nodeType":"YulTypedName","src":"859:4:29","type":""}],"src":"810:141:29"},{"body":{"nativeSrc":"1001:49:29","nodeType":"YulBlock","src":"1001:49:29","statements":[{"nativeSrc":"1011:33:29","nodeType":"YulAssignment","src":"1011:33:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:29","nodeType":"YulIdentifier","src":"1029:5:29"},{"kind":"number","nativeSrc":"1036:2:29","nodeType":"YulLiteral","src":"1036:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:29","nodeType":"YulIdentifier","src":"1025:3:29"},"nativeSrc":"1025:14:29","nodeType":"YulFunctionCall","src":"1025:14:29"},{"kind":"number","nativeSrc":"1041:2:29","nodeType":"YulLiteral","src":"1041:2:29","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:29","nodeType":"YulIdentifier","src":"1021:3:29"},"nativeSrc":"1021:23:29","nodeType":"YulFunctionCall","src":"1021:23:29"},"variableNames":[{"name":"result","nativeSrc":"1011:6:29","nodeType":"YulIdentifier","src":"1011:6:29"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:29","nodeType":"YulTypedName","src":"984:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:29","nodeType":"YulTypedName","src":"994:6:29","type":""}],"src":"957:93:29"},{"body":{"nativeSrc":"1109:54:29","nodeType":"YulBlock","src":"1109:54:29","statements":[{"nativeSrc":"1119:37:29","nodeType":"YulAssignment","src":"1119:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:29","nodeType":"YulIdentifier","src":"1144:4:29"},{"name":"value","nativeSrc":"1150:5:29","nodeType":"YulIdentifier","src":"1150:5:29"}],"functionName":{"name":"shl","nativeSrc":"1140:3:29","nodeType":"YulIdentifier","src":"1140:3:29"},"nativeSrc":"1140:16:29","nodeType":"YulFunctionCall","src":"1140:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:29","nodeType":"YulIdentifier","src":"1119:8:29"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:29","nodeType":"YulTypedName","src":"1084:4:29","type":""},{"name":"value","nativeSrc":"1090:5:29","nodeType":"YulTypedName","src":"1090:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:29","nodeType":"YulTypedName","src":"1100:8:29","type":""}],"src":"1056:107:29"},{"body":{"nativeSrc":"1245:317:29","nodeType":"YulBlock","src":"1245:317:29","statements":[{"nativeSrc":"1255:35:29","nodeType":"YulVariableDeclaration","src":"1255:35:29","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:29","nodeType":"YulIdentifier","src":"1276:10:29"},{"kind":"number","nativeSrc":"1288:1:29","nodeType":"YulLiteral","src":"1288:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:29","nodeType":"YulIdentifier","src":"1272:3:29"},"nativeSrc":"1272:18:29","nodeType":"YulFunctionCall","src":"1272:18:29"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:29","nodeType":"YulTypedName","src":"1259:9:29","type":""}]},{"nativeSrc":"1299:109:29","nodeType":"YulVariableDeclaration","src":"1299:109:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:29","nodeType":"YulIdentifier","src":"1330:9:29"},{"kind":"number","nativeSrc":"1341:66:29","nodeType":"YulLiteral","src":"1341:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:29","nodeType":"YulIdentifier","src":"1311:18:29"},"nativeSrc":"1311:97:29","nodeType":"YulFunctionCall","src":"1311:97:29"},"variables":[{"name":"mask","nativeSrc":"1303:4:29","nodeType":"YulTypedName","src":"1303:4:29","type":""}]},{"nativeSrc":"1417:51:29","nodeType":"YulAssignment","src":"1417:51:29","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:29","nodeType":"YulIdentifier","src":"1448:9:29"},{"name":"toInsert","nativeSrc":"1459:8:29","nodeType":"YulIdentifier","src":"1459:8:29"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:29","nodeType":"YulIdentifier","src":"1429:18:29"},"nativeSrc":"1429:39:29","nodeType":"YulFunctionCall","src":"1429:39:29"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:29","nodeType":"YulIdentifier","src":"1417:8:29"}]},{"nativeSrc":"1477:30:29","nodeType":"YulAssignment","src":"1477:30:29","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:29","nodeType":"YulIdentifier","src":"1490:5:29"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:29","nodeType":"YulIdentifier","src":"1501:4:29"}],"functionName":{"name":"not","nativeSrc":"1497:3:29","nodeType":"YulIdentifier","src":"1497:3:29"},"nativeSrc":"1497:9:29","nodeType":"YulFunctionCall","src":"1497:9:29"}],"functionName":{"name":"and","nativeSrc":"1486:3:29","nodeType":"YulIdentifier","src":"1486:3:29"},"nativeSrc":"1486:21:29","nodeType":"YulFunctionCall","src":"1486:21:29"},"variableNames":[{"name":"value","nativeSrc":"1477:5:29","nodeType":"YulIdentifier","src":"1477:5:29"}]},{"nativeSrc":"1516:40:29","nodeType":"YulAssignment","src":"1516:40:29","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:29","nodeType":"YulIdentifier","src":"1529:5:29"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:29","nodeType":"YulIdentifier","src":"1540:8:29"},{"name":"mask","nativeSrc":"1550:4:29","nodeType":"YulIdentifier","src":"1550:4:29"}],"functionName":{"name":"and","nativeSrc":"1536:3:29","nodeType":"YulIdentifier","src":"1536:3:29"},"nativeSrc":"1536:19:29","nodeType":"YulFunctionCall","src":"1536:19:29"}],"functionName":{"name":"or","nativeSrc":"1526:2:29","nodeType":"YulIdentifier","src":"1526:2:29"},"nativeSrc":"1526:30:29","nodeType":"YulFunctionCall","src":"1526:30:29"},"variableNames":[{"name":"result","nativeSrc":"1516:6:29","nodeType":"YulIdentifier","src":"1516:6:29"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:29","nodeType":"YulTypedName","src":"1206:5:29","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:29","nodeType":"YulTypedName","src":"1213:10:29","type":""},{"name":"toInsert","nativeSrc":"1225:8:29","nodeType":"YulTypedName","src":"1225:8:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:29","nodeType":"YulTypedName","src":"1238:6:29","type":""}],"src":"1169:393:29"},{"body":{"nativeSrc":"1613:32:29","nodeType":"YulBlock","src":"1613:32:29","statements":[{"nativeSrc":"1623:16:29","nodeType":"YulAssignment","src":"1623:16:29","value":{"name":"value","nativeSrc":"1634:5:29","nodeType":"YulIdentifier","src":"1634:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:29","nodeType":"YulIdentifier","src":"1623:7:29"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:29","nodeType":"YulTypedName","src":"1595:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:29","nodeType":"YulTypedName","src":"1605:7:29","type":""}],"src":"1568:77:29"},{"body":{"nativeSrc":"1683:28:29","nodeType":"YulBlock","src":"1683:28:29","statements":[{"nativeSrc":"1693:12:29","nodeType":"YulAssignment","src":"1693:12:29","value":{"name":"value","nativeSrc":"1700:5:29","nodeType":"YulIdentifier","src":"1700:5:29"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:29","nodeType":"YulIdentifier","src":"1693:3:29"}]}]},"name":"identity","nativeSrc":"1651:60:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:29","nodeType":"YulTypedName","src":"1669:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:29","nodeType":"YulTypedName","src":"1679:3:29","type":""}],"src":"1651:60:29"},{"body":{"nativeSrc":"1777:82:29","nodeType":"YulBlock","src":"1777:82:29","statements":[{"nativeSrc":"1787:66:29","nodeType":"YulAssignment","src":"1787:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:29","nodeType":"YulIdentifier","src":"1845:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:29","nodeType":"YulIdentifier","src":"1827:17:29"},"nativeSrc":"1827:24:29","nodeType":"YulFunctionCall","src":"1827:24:29"}],"functionName":{"name":"identity","nativeSrc":"1818:8:29","nodeType":"YulIdentifier","src":"1818:8:29"},"nativeSrc":"1818:34:29","nodeType":"YulFunctionCall","src":"1818:34:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:29","nodeType":"YulIdentifier","src":"1800:17:29"},"nativeSrc":"1800:53:29","nodeType":"YulFunctionCall","src":"1800:53:29"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:29","nodeType":"YulIdentifier","src":"1787:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:29","nodeType":"YulTypedName","src":"1757:5:29","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:29","nodeType":"YulTypedName","src":"1767:9:29","type":""}],"src":"1717:142:29"},{"body":{"nativeSrc":"1912:28:29","nodeType":"YulBlock","src":"1912:28:29","statements":[{"nativeSrc":"1922:12:29","nodeType":"YulAssignment","src":"1922:12:29","value":{"name":"value","nativeSrc":"1929:5:29","nodeType":"YulIdentifier","src":"1929:5:29"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:29","nodeType":"YulIdentifier","src":"1922:3:29"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:29","nodeType":"YulTypedName","src":"1898:5:29","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:29","nodeType":"YulTypedName","src":"1908:3:29","type":""}],"src":"1865:75:29"},{"body":{"nativeSrc":"2022:193:29","nodeType":"YulBlock","src":"2022:193:29","statements":[{"nativeSrc":"2032:63:29","nodeType":"YulVariableDeclaration","src":"2032:63:29","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:29","nodeType":"YulIdentifier","src":"2087:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:29","nodeType":"YulIdentifier","src":"2056:30:29"},"nativeSrc":"2056:39:29","nodeType":"YulFunctionCall","src":"2056:39:29"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:29","nodeType":"YulTypedName","src":"2036:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:29","nodeType":"YulIdentifier","src":"2111:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:29","nodeType":"YulIdentifier","src":"2151:4:29"}],"functionName":{"name":"sload","nativeSrc":"2145:5:29","nodeType":"YulIdentifier","src":"2145:5:29"},"nativeSrc":"2145:11:29","nodeType":"YulFunctionCall","src":"2145:11:29"},{"name":"offset","nativeSrc":"2158:6:29","nodeType":"YulIdentifier","src":"2158:6:29"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:29","nodeType":"YulIdentifier","src":"2190:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:29","nodeType":"YulIdentifier","src":"2166:23:29"},"nativeSrc":"2166:41:29","nodeType":"YulFunctionCall","src":"2166:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:29","nodeType":"YulIdentifier","src":"2117:27:29"},"nativeSrc":"2117:91:29","nodeType":"YulFunctionCall","src":"2117:91:29"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:29","nodeType":"YulIdentifier","src":"2104:6:29"},"nativeSrc":"2104:105:29","nodeType":"YulFunctionCall","src":"2104:105:29"},"nativeSrc":"2104:105:29","nodeType":"YulExpressionStatement","src":"2104:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:29","nodeType":"YulTypedName","src":"1999:4:29","type":""},{"name":"offset","nativeSrc":"2005:6:29","nodeType":"YulTypedName","src":"2005:6:29","type":""},{"name":"value_0","nativeSrc":"2013:7:29","nodeType":"YulTypedName","src":"2013:7:29","type":""}],"src":"1946:269:29"},{"body":{"nativeSrc":"2270:24:29","nodeType":"YulBlock","src":"2270:24:29","statements":[{"nativeSrc":"2280:8:29","nodeType":"YulAssignment","src":"2280:8:29","value":{"kind":"number","nativeSrc":"2287:1:29","nodeType":"YulLiteral","src":"2287:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:29","nodeType":"YulIdentifier","src":"2280:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:29","nodeType":"YulTypedName","src":"2266:3:29","type":""}],"src":"2221:73:29"},{"body":{"nativeSrc":"2353:136:29","nodeType":"YulBlock","src":"2353:136:29","statements":[{"nativeSrc":"2363:46:29","nodeType":"YulVariableDeclaration","src":"2363:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:29","nodeType":"YulIdentifier","src":"2377:30:29"},"nativeSrc":"2377:32:29","nodeType":"YulFunctionCall","src":"2377:32:29"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:29","nodeType":"YulTypedName","src":"2367:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:29","nodeType":"YulIdentifier","src":"2462:4:29"},{"name":"offset","nativeSrc":"2468:6:29","nodeType":"YulIdentifier","src":"2468:6:29"},{"name":"zero_0","nativeSrc":"2476:6:29","nodeType":"YulIdentifier","src":"2476:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:29","nodeType":"YulIdentifier","src":"2418:43:29"},"nativeSrc":"2418:65:29","nodeType":"YulFunctionCall","src":"2418:65:29"},"nativeSrc":"2418:65:29","nodeType":"YulExpressionStatement","src":"2418:65:29"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:29","nodeType":"YulTypedName","src":"2339:4:29","type":""},{"name":"offset","nativeSrc":"2345:6:29","nodeType":"YulTypedName","src":"2345:6:29","type":""}],"src":"2300:189:29"},{"body":{"nativeSrc":"2545:136:29","nodeType":"YulBlock","src":"2545:136:29","statements":[{"body":{"nativeSrc":"2612:63:29","nodeType":"YulBlock","src":"2612:63:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:29","nodeType":"YulIdentifier","src":"2656:5:29"},{"kind":"number","nativeSrc":"2663:1:29","nodeType":"YulLiteral","src":"2663:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:29","nodeType":"YulIdentifier","src":"2626:29:29"},"nativeSrc":"2626:39:29","nodeType":"YulFunctionCall","src":"2626:39:29"},"nativeSrc":"2626:39:29","nodeType":"YulExpressionStatement","src":"2626:39:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:29","nodeType":"YulIdentifier","src":"2565:5:29"},{"name":"end","nativeSrc":"2572:3:29","nodeType":"YulIdentifier","src":"2572:3:29"}],"functionName":{"name":"lt","nativeSrc":"2562:2:29","nodeType":"YulIdentifier","src":"2562:2:29"},"nativeSrc":"2562:14:29","nodeType":"YulFunctionCall","src":"2562:14:29"},"nativeSrc":"2555:120:29","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:29","nodeType":"YulBlock","src":"2577:26:29","statements":[{"nativeSrc":"2579:22:29","nodeType":"YulAssignment","src":"2579:22:29","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:29","nodeType":"YulIdentifier","src":"2592:5:29"},{"kind":"number","nativeSrc":"2599:1:29","nodeType":"YulLiteral","src":"2599:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:29","nodeType":"YulIdentifier","src":"2588:3:29"},"nativeSrc":"2588:13:29","nodeType":"YulFunctionCall","src":"2588:13:29"},"variableNames":[{"name":"start","nativeSrc":"2579:5:29","nodeType":"YulIdentifier","src":"2579:5:29"}]}]},"pre":{"nativeSrc":"2559:2:29","nodeType":"YulBlock","src":"2559:2:29","statements":[]},"src":"2555:120:29"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:29","nodeType":"YulTypedName","src":"2533:5:29","type":""},{"name":"end","nativeSrc":"2540:3:29","nodeType":"YulTypedName","src":"2540:3:29","type":""}],"src":"2495:186:29"},{"body":{"nativeSrc":"2766:464:29","nodeType":"YulBlock","src":"2766:464:29","statements":[{"body":{"nativeSrc":"2792:431:29","nodeType":"YulBlock","src":"2792:431:29","statements":[{"nativeSrc":"2806:54:29","nodeType":"YulVariableDeclaration","src":"2806:54:29","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:29","nodeType":"YulIdentifier","src":"2854:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:29","nodeType":"YulIdentifier","src":"2822:31:29"},"nativeSrc":"2822:38:29","nodeType":"YulFunctionCall","src":"2822:38:29"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:29","nodeType":"YulTypedName","src":"2810:8:29","type":""}]},{"nativeSrc":"2873:63:29","nodeType":"YulVariableDeclaration","src":"2873:63:29","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:29","nodeType":"YulIdentifier","src":"2896:8:29"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:29","nodeType":"YulIdentifier","src":"2924:10:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:29","nodeType":"YulIdentifier","src":"2906:17:29"},"nativeSrc":"2906:29:29","nodeType":"YulFunctionCall","src":"2906:29:29"}],"functionName":{"name":"add","nativeSrc":"2892:3:29","nodeType":"YulIdentifier","src":"2892:3:29"},"nativeSrc":"2892:44:29","nodeType":"YulFunctionCall","src":"2892:44:29"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:29","nodeType":"YulTypedName","src":"2877:11:29","type":""}]},{"body":{"nativeSrc":"3093:27:29","nodeType":"YulBlock","src":"3093:27:29","statements":[{"nativeSrc":"3095:23:29","nodeType":"YulAssignment","src":"3095:23:29","value":{"name":"dataArea","nativeSrc":"3110:8:29","nodeType":"YulIdentifier","src":"3110:8:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:29","nodeType":"YulIdentifier","src":"3095:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:29","nodeType":"YulIdentifier","src":"3077:10:29"},{"kind":"number","nativeSrc":"3089:2:29","nodeType":"YulLiteral","src":"3089:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:29","nodeType":"YulIdentifier","src":"3074:2:29"},"nativeSrc":"3074:18:29","nodeType":"YulFunctionCall","src":"3074:18:29"},"nativeSrc":"3071:49:29","nodeType":"YulIf","src":"3071:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:29","nodeType":"YulIdentifier","src":"3162:11:29"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:29","nodeType":"YulIdentifier","src":"3179:8:29"},{"arguments":[{"name":"len","nativeSrc":"3207:3:29","nodeType":"YulIdentifier","src":"3207:3:29"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:29","nodeType":"YulIdentifier","src":"3189:17:29"},"nativeSrc":"3189:22:29","nodeType":"YulFunctionCall","src":"3189:22:29"}],"functionName":{"name":"add","nativeSrc":"3175:3:29","nodeType":"YulIdentifier","src":"3175:3:29"},"nativeSrc":"3175:37:29","nodeType":"YulFunctionCall","src":"3175:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:29","nodeType":"YulIdentifier","src":"3133:28:29"},"nativeSrc":"3133:80:29","nodeType":"YulFunctionCall","src":"3133:80:29"},"nativeSrc":"3133:80:29","nodeType":"YulExpressionStatement","src":"3133:80:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:29","nodeType":"YulIdentifier","src":"2783:3:29"},{"kind":"number","nativeSrc":"2788:2:29","nodeType":"YulLiteral","src":"2788:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:29","nodeType":"YulIdentifier","src":"2780:2:29"},"nativeSrc":"2780:11:29","nodeType":"YulFunctionCall","src":"2780:11:29"},"nativeSrc":"2777:446:29","nodeType":"YulIf","src":"2777:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:29","nodeType":"YulTypedName","src":"2742:5:29","type":""},{"name":"len","nativeSrc":"2749:3:29","nodeType":"YulTypedName","src":"2749:3:29","type":""},{"name":"startIndex","nativeSrc":"2754:10:29","nodeType":"YulTypedName","src":"2754:10:29","type":""}],"src":"2687:543:29"},{"body":{"nativeSrc":"3299:54:29","nodeType":"YulBlock","src":"3299:54:29","statements":[{"nativeSrc":"3309:37:29","nodeType":"YulAssignment","src":"3309:37:29","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:29","nodeType":"YulIdentifier","src":"3334:4:29"},{"name":"value","nativeSrc":"3340:5:29","nodeType":"YulIdentifier","src":"3340:5:29"}],"functionName":{"name":"shr","nativeSrc":"3330:3:29","nodeType":"YulIdentifier","src":"3330:3:29"},"nativeSrc":"3330:16:29","nodeType":"YulFunctionCall","src":"3330:16:29"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:29","nodeType":"YulIdentifier","src":"3309:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:29","nodeType":"YulTypedName","src":"3274:4:29","type":""},{"name":"value","nativeSrc":"3280:5:29","nodeType":"YulTypedName","src":"3280:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:29","nodeType":"YulTypedName","src":"3290:8:29","type":""}],"src":"3236:117:29"},{"body":{"nativeSrc":"3410:118:29","nodeType":"YulBlock","src":"3410:118:29","statements":[{"nativeSrc":"3420:68:29","nodeType":"YulVariableDeclaration","src":"3420:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:29","nodeType":"YulLiteral","src":"3469:1:29","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:29","nodeType":"YulIdentifier","src":"3472:5:29"}],"functionName":{"name":"mul","nativeSrc":"3465:3:29","nodeType":"YulIdentifier","src":"3465:3:29"},"nativeSrc":"3465:13:29","nodeType":"YulFunctionCall","src":"3465:13:29"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:29","nodeType":"YulLiteral","src":"3484:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:29","nodeType":"YulIdentifier","src":"3480:3:29"},"nativeSrc":"3480:6:29","nodeType":"YulFunctionCall","src":"3480:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:29","nodeType":"YulIdentifier","src":"3436:28:29"},"nativeSrc":"3436:51:29","nodeType":"YulFunctionCall","src":"3436:51:29"}],"functionName":{"name":"not","nativeSrc":"3432:3:29","nodeType":"YulIdentifier","src":"3432:3:29"},"nativeSrc":"3432:56:29","nodeType":"YulFunctionCall","src":"3432:56:29"},"variables":[{"name":"mask","nativeSrc":"3424:4:29","nodeType":"YulTypedName","src":"3424:4:29","type":""}]},{"nativeSrc":"3497:25:29","nodeType":"YulAssignment","src":"3497:25:29","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:29","nodeType":"YulIdentifier","src":"3511:4:29"},{"name":"mask","nativeSrc":"3517:4:29","nodeType":"YulIdentifier","src":"3517:4:29"}],"functionName":{"name":"and","nativeSrc":"3507:3:29","nodeType":"YulIdentifier","src":"3507:3:29"},"nativeSrc":"3507:15:29","nodeType":"YulFunctionCall","src":"3507:15:29"},"variableNames":[{"name":"result","nativeSrc":"3497:6:29","nodeType":"YulIdentifier","src":"3497:6:29"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:29","nodeType":"YulTypedName","src":"3387:4:29","type":""},{"name":"bytes","nativeSrc":"3393:5:29","nodeType":"YulTypedName","src":"3393:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:29","nodeType":"YulTypedName","src":"3403:6:29","type":""}],"src":"3359:169:29"},{"body":{"nativeSrc":"3614:214:29","nodeType":"YulBlock","src":"3614:214:29","statements":[{"nativeSrc":"3747:37:29","nodeType":"YulAssignment","src":"3747:37:29","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:29","nodeType":"YulIdentifier","src":"3774:4:29"},{"name":"len","nativeSrc":"3780:3:29","nodeType":"YulIdentifier","src":"3780:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:29","nodeType":"YulIdentifier","src":"3755:18:29"},"nativeSrc":"3755:29:29","nodeType":"YulFunctionCall","src":"3755:29:29"},"variableNames":[{"name":"data","nativeSrc":"3747:4:29","nodeType":"YulIdentifier","src":"3747:4:29"}]},{"nativeSrc":"3793:29:29","nodeType":"YulAssignment","src":"3793:29:29","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:29","nodeType":"YulIdentifier","src":"3804:4:29"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:29","nodeType":"YulLiteral","src":"3814:1:29","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:29","nodeType":"YulIdentifier","src":"3817:3:29"}],"functionName":{"name":"mul","nativeSrc":"3810:3:29","nodeType":"YulIdentifier","src":"3810:3:29"},"nativeSrc":"3810:11:29","nodeType":"YulFunctionCall","src":"3810:11:29"}],"functionName":{"name":"or","nativeSrc":"3801:2:29","nodeType":"YulIdentifier","src":"3801:2:29"},"nativeSrc":"3801:21:29","nodeType":"YulFunctionCall","src":"3801:21:29"},"variableNames":[{"name":"used","nativeSrc":"3793:4:29","nodeType":"YulIdentifier","src":"3793:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:29","nodeType":"YulTypedName","src":"3595:4:29","type":""},{"name":"len","nativeSrc":"3601:3:29","nodeType":"YulTypedName","src":"3601:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:29","nodeType":"YulTypedName","src":"3609:4:29","type":""}],"src":"3533:295:29"},{"body":{"nativeSrc":"3925:1303:29","nodeType":"YulBlock","src":"3925:1303:29","statements":[{"nativeSrc":"3936:51:29","nodeType":"YulVariableDeclaration","src":"3936:51:29","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:29","nodeType":"YulIdentifier","src":"3983:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:29","nodeType":"YulIdentifier","src":"3950:32:29"},"nativeSrc":"3950:37:29","nodeType":"YulFunctionCall","src":"3950:37:29"},"variables":[{"name":"newLen","nativeSrc":"3940:6:29","nodeType":"YulTypedName","src":"3940:6:29","type":""}]},{"body":{"nativeSrc":"4072:22:29","nodeType":"YulBlock","src":"4072:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:29","nodeType":"YulIdentifier","src":"4074:16:29"},"nativeSrc":"4074:18:29","nodeType":"YulFunctionCall","src":"4074:18:29"},"nativeSrc":"4074:18:29","nodeType":"YulExpressionStatement","src":"4074:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:29","nodeType":"YulIdentifier","src":"4044:6:29"},{"kind":"number","nativeSrc":"4052:18:29","nodeType":"YulLiteral","src":"4052:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:29","nodeType":"YulIdentifier","src":"4041:2:29"},"nativeSrc":"4041:30:29","nodeType":"YulFunctionCall","src":"4041:30:29"},"nativeSrc":"4038:56:29","nodeType":"YulIf","src":"4038:56:29"},{"nativeSrc":"4104:52:29","nodeType":"YulVariableDeclaration","src":"4104:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:29","nodeType":"YulIdentifier","src":"4150:4:29"}],"functionName":{"name":"sload","nativeSrc":"4144:5:29","nodeType":"YulIdentifier","src":"4144:5:29"},"nativeSrc":"4144:11:29","nodeType":"YulFunctionCall","src":"4144:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:29","nodeType":"YulIdentifier","src":"4118:25:29"},"nativeSrc":"4118:38:29","nodeType":"YulFunctionCall","src":"4118:38:29"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:29","nodeType":"YulTypedName","src":"4108:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:29","nodeType":"YulIdentifier","src":"4249:4:29"},{"name":"oldLen","nativeSrc":"4255:6:29","nodeType":"YulIdentifier","src":"4255:6:29"},{"name":"newLen","nativeSrc":"4263:6:29","nodeType":"YulIdentifier","src":"4263:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:29","nodeType":"YulIdentifier","src":"4203:45:29"},"nativeSrc":"4203:67:29","nodeType":"YulFunctionCall","src":"4203:67:29"},"nativeSrc":"4203:67:29","nodeType":"YulExpressionStatement","src":"4203:67:29"},{"nativeSrc":"4280:18:29","nodeType":"YulVariableDeclaration","src":"4280:18:29","value":{"kind":"number","nativeSrc":"4297:1:29","nodeType":"YulLiteral","src":"4297:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:29","nodeType":"YulTypedName","src":"4284:9:29","type":""}]},{"nativeSrc":"4308:17:29","nodeType":"YulAssignment","src":"4308:17:29","value":{"kind":"number","nativeSrc":"4321:4:29","nodeType":"YulLiteral","src":"4321:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:29","nodeType":"YulIdentifier","src":"4308:9:29"}]},{"cases":[{"body":{"nativeSrc":"4372:611:29","nodeType":"YulBlock","src":"4372:611:29","statements":[{"nativeSrc":"4386:37:29","nodeType":"YulVariableDeclaration","src":"4386:37:29","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:29","nodeType":"YulIdentifier","src":"4405:6:29"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:29","nodeType":"YulLiteral","src":"4417:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:29","nodeType":"YulIdentifier","src":"4413:3:29"},"nativeSrc":"4413:9:29","nodeType":"YulFunctionCall","src":"4413:9:29"}],"functionName":{"name":"and","nativeSrc":"4401:3:29","nodeType":"YulIdentifier","src":"4401:3:29"},"nativeSrc":"4401:22:29","nodeType":"YulFunctionCall","src":"4401:22:29"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:29","nodeType":"YulTypedName","src":"4390:7:29","type":""}]},{"nativeSrc":"4437:51:29","nodeType":"YulVariableDeclaration","src":"4437:51:29","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:29","nodeType":"YulIdentifier","src":"4483:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:29","nodeType":"YulIdentifier","src":"4451:31:29"},"nativeSrc":"4451:37:29","nodeType":"YulFunctionCall","src":"4451:37:29"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:29","nodeType":"YulTypedName","src":"4441:6:29","type":""}]},{"nativeSrc":"4501:10:29","nodeType":"YulVariableDeclaration","src":"4501:10:29","value":{"kind":"number","nativeSrc":"4510:1:29","nodeType":"YulLiteral","src":"4510:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:29","nodeType":"YulTypedName","src":"4505:1:29","type":""}]},{"body":{"nativeSrc":"4569:163:29","nodeType":"YulBlock","src":"4569:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:29","nodeType":"YulIdentifier","src":"4594:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:29","nodeType":"YulIdentifier","src":"4612:3:29"},{"name":"srcOffset","nativeSrc":"4617:9:29","nodeType":"YulIdentifier","src":"4617:9:29"}],"functionName":{"name":"add","nativeSrc":"4608:3:29","nodeType":"YulIdentifier","src":"4608:3:29"},"nativeSrc":"4608:19:29","nodeType":"YulFunctionCall","src":"4608:19:29"}],"functionName":{"name":"mload","nativeSrc":"4602:5:29","nodeType":"YulIdentifier","src":"4602:5:29"},"nativeSrc":"4602:26:29","nodeType":"YulFunctionCall","src":"4602:26:29"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:29","nodeType":"YulIdentifier","src":"4587:6:29"},"nativeSrc":"4587:42:29","nodeType":"YulFunctionCall","src":"4587:42:29"},"nativeSrc":"4587:42:29","nodeType":"YulExpressionStatement","src":"4587:42:29"},{"nativeSrc":"4646:24:29","nodeType":"YulAssignment","src":"4646:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:29","nodeType":"YulIdentifier","src":"4660:6:29"},{"kind":"number","nativeSrc":"4668:1:29","nodeType":"YulLiteral","src":"4668:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:29","nodeType":"YulIdentifier","src":"4656:3:29"},"nativeSrc":"4656:14:29","nodeType":"YulFunctionCall","src":"4656:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:29","nodeType":"YulIdentifier","src":"4646:6:29"}]},{"nativeSrc":"4687:31:29","nodeType":"YulAssignment","src":"4687:31:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:29","nodeType":"YulIdentifier","src":"4704:9:29"},{"kind":"number","nativeSrc":"4715:2:29","nodeType":"YulLiteral","src":"4715:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:29","nodeType":"YulIdentifier","src":"4700:3:29"},"nativeSrc":"4700:18:29","nodeType":"YulFunctionCall","src":"4700:18:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:29","nodeType":"YulIdentifier","src":"4687:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:29","nodeType":"YulIdentifier","src":"4535:1:29"},{"name":"loopEnd","nativeSrc":"4538:7:29","nodeType":"YulIdentifier","src":"4538:7:29"}],"functionName":{"name":"lt","nativeSrc":"4532:2:29","nodeType":"YulIdentifier","src":"4532:2:29"},"nativeSrc":"4532:14:29","nodeType":"YulFunctionCall","src":"4532:14:29"},"nativeSrc":"4524:208:29","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:29","nodeType":"YulBlock","src":"4547:21:29","statements":[{"nativeSrc":"4549:17:29","nodeType":"YulAssignment","src":"4549:17:29","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:29","nodeType":"YulIdentifier","src":"4558:1:29"},{"kind":"number","nativeSrc":"4561:4:29","nodeType":"YulLiteral","src":"4561:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:29","nodeType":"YulIdentifier","src":"4554:3:29"},"nativeSrc":"4554:12:29","nodeType":"YulFunctionCall","src":"4554:12:29"},"variableNames":[{"name":"i","nativeSrc":"4549:1:29","nodeType":"YulIdentifier","src":"4549:1:29"}]}]},"pre":{"nativeSrc":"4528:3:29","nodeType":"YulBlock","src":"4528:3:29","statements":[]},"src":"4524:208:29"},{"body":{"nativeSrc":"4768:156:29","nodeType":"YulBlock","src":"4768:156:29","statements":[{"nativeSrc":"4786:43:29","nodeType":"YulVariableDeclaration","src":"4786:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:29","nodeType":"YulIdentifier","src":"4813:3:29"},{"name":"srcOffset","nativeSrc":"4818:9:29","nodeType":"YulIdentifier","src":"4818:9:29"}],"functionName":{"name":"add","nativeSrc":"4809:3:29","nodeType":"YulIdentifier","src":"4809:3:29"},"nativeSrc":"4809:19:29","nodeType":"YulFunctionCall","src":"4809:19:29"}],"functionName":{"name":"mload","nativeSrc":"4803:5:29","nodeType":"YulIdentifier","src":"4803:5:29"},"nativeSrc":"4803:26:29","nodeType":"YulFunctionCall","src":"4803:26:29"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:29","nodeType":"YulTypedName","src":"4790:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:29","nodeType":"YulIdentifier","src":"4853:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:29","nodeType":"YulIdentifier","src":"4880:9:29"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:29","nodeType":"YulIdentifier","src":"4895:6:29"},{"kind":"number","nativeSrc":"4903:4:29","nodeType":"YulLiteral","src":"4903:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:29","nodeType":"YulIdentifier","src":"4891:3:29"},"nativeSrc":"4891:17:29","nodeType":"YulFunctionCall","src":"4891:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:29","nodeType":"YulIdentifier","src":"4861:18:29"},"nativeSrc":"4861:48:29","nodeType":"YulFunctionCall","src":"4861:48:29"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:29","nodeType":"YulIdentifier","src":"4846:6:29"},"nativeSrc":"4846:64:29","nodeType":"YulFunctionCall","src":"4846:64:29"},"nativeSrc":"4846:64:29","nodeType":"YulExpressionStatement","src":"4846:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:29","nodeType":"YulIdentifier","src":"4751:7:29"},{"name":"newLen","nativeSrc":"4760:6:29","nodeType":"YulIdentifier","src":"4760:6:29"}],"functionName":{"name":"lt","nativeSrc":"4748:2:29","nodeType":"YulIdentifier","src":"4748:2:29"},"nativeSrc":"4748:19:29","nodeType":"YulFunctionCall","src":"4748:19:29"},"nativeSrc":"4745:179:29","nodeType":"YulIf","src":"4745:179:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:29","nodeType":"YulIdentifier","src":"4944:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:29","nodeType":"YulIdentifier","src":"4958:6:29"},{"kind":"number","nativeSrc":"4966:1:29","nodeType":"YulLiteral","src":"4966:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:29","nodeType":"YulIdentifier","src":"4954:3:29"},"nativeSrc":"4954:14:29","nodeType":"YulFunctionCall","src":"4954:14:29"},{"kind":"number","nativeSrc":"4970:1:29","nodeType":"YulLiteral","src":"4970:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:29","nodeType":"YulIdentifier","src":"4950:3:29"},"nativeSrc":"4950:22:29","nodeType":"YulFunctionCall","src":"4950:22:29"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:29","nodeType":"YulIdentifier","src":"4937:6:29"},"nativeSrc":"4937:36:29","nodeType":"YulFunctionCall","src":"4937:36:29"},"nativeSrc":"4937:36:29","nodeType":"YulExpressionStatement","src":"4937:36:29"}]},"nativeSrc":"4365:618:29","nodeType":"YulCase","src":"4365:618:29","value":{"kind":"number","nativeSrc":"4370:1:29","nodeType":"YulLiteral","src":"4370:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:29","nodeType":"YulBlock","src":"5000:222:29","statements":[{"nativeSrc":"5014:14:29","nodeType":"YulVariableDeclaration","src":"5014:14:29","value":{"kind":"number","nativeSrc":"5027:1:29","nodeType":"YulLiteral","src":"5027:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:29","nodeType":"YulTypedName","src":"5018:5:29","type":""}]},{"body":{"nativeSrc":"5051:67:29","nodeType":"YulBlock","src":"5051:67:29","statements":[{"nativeSrc":"5069:35:29","nodeType":"YulAssignment","src":"5069:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:29","nodeType":"YulIdentifier","src":"5088:3:29"},{"name":"srcOffset","nativeSrc":"5093:9:29","nodeType":"YulIdentifier","src":"5093:9:29"}],"functionName":{"name":"add","nativeSrc":"5084:3:29","nodeType":"YulIdentifier","src":"5084:3:29"},"nativeSrc":"5084:19:29","nodeType":"YulFunctionCall","src":"5084:19:29"}],"functionName":{"name":"mload","nativeSrc":"5078:5:29","nodeType":"YulIdentifier","src":"5078:5:29"},"nativeSrc":"5078:26:29","nodeType":"YulFunctionCall","src":"5078:26:29"},"variableNames":[{"name":"value","nativeSrc":"5069:5:29","nodeType":"YulIdentifier","src":"5069:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:29","nodeType":"YulIdentifier","src":"5044:6:29"},"nativeSrc":"5041:77:29","nodeType":"YulIf","src":"5041:77:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:29","nodeType":"YulIdentifier","src":"5138:4:29"},{"arguments":[{"name":"value","nativeSrc":"5197:5:29","nodeType":"YulIdentifier","src":"5197:5:29"},{"name":"newLen","nativeSrc":"5204:6:29","nodeType":"YulIdentifier","src":"5204:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:29","nodeType":"YulIdentifier","src":"5144:52:29"},"nativeSrc":"5144:67:29","nodeType":"YulFunctionCall","src":"5144:67:29"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:29","nodeType":"YulIdentifier","src":"5131:6:29"},"nativeSrc":"5131:81:29","nodeType":"YulFunctionCall","src":"5131:81:29"},"nativeSrc":"5131:81:29","nodeType":"YulExpressionStatement","src":"5131:81:29"}]},"nativeSrc":"4992:230:29","nodeType":"YulCase","src":"4992:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:29","nodeType":"YulIdentifier","src":"4345:6:29"},{"kind":"number","nativeSrc":"4353:2:29","nodeType":"YulLiteral","src":"4353:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:29","nodeType":"YulIdentifier","src":"4342:2:29"},"nativeSrc":"4342:14:29","nodeType":"YulFunctionCall","src":"4342:14:29"},"nativeSrc":"4335:887:29","nodeType":"YulSwitch","src":"4335:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:29","nodeType":"YulTypedName","src":"3914:4:29","type":""},{"name":"src","nativeSrc":"3920:3:29","nodeType":"YulTypedName","src":"3920:3:29","type":""}],"src":"3833:1395:29"},{"body":{"nativeSrc":"5279:81:29","nodeType":"YulBlock","src":"5279:81:29","statements":[{"nativeSrc":"5289:65:29","nodeType":"YulAssignment","src":"5289:65:29","value":{"arguments":[{"name":"value","nativeSrc":"5304:5:29","nodeType":"YulIdentifier","src":"5304:5:29"},{"kind":"number","nativeSrc":"5311:42:29","nodeType":"YulLiteral","src":"5311:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5300:3:29","nodeType":"YulIdentifier","src":"5300:3:29"},"nativeSrc":"5300:54:29","nodeType":"YulFunctionCall","src":"5300:54:29"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:29","nodeType":"YulIdentifier","src":"5289:7:29"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5234:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:29","nodeType":"YulTypedName","src":"5261:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:29","nodeType":"YulTypedName","src":"5271:7:29","type":""}],"src":"5234:126:29"},{"body":{"nativeSrc":"5411:51:29","nodeType":"YulBlock","src":"5411:51:29","statements":[{"nativeSrc":"5421:35:29","nodeType":"YulAssignment","src":"5421:35:29","value":{"arguments":[{"name":"value","nativeSrc":"5450:5:29","nodeType":"YulIdentifier","src":"5450:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5432:17:29","nodeType":"YulIdentifier","src":"5432:17:29"},"nativeSrc":"5432:24:29","nodeType":"YulFunctionCall","src":"5432:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"5421:7:29","nodeType":"YulIdentifier","src":"5421:7:29"}]}]},"name":"cleanup_t_address","nativeSrc":"5366:96:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5393:5:29","nodeType":"YulTypedName","src":"5393:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5403:7:29","nodeType":"YulTypedName","src":"5403:7:29","type":""}],"src":"5366:96:29"},{"body":{"nativeSrc":"5533:53:29","nodeType":"YulBlock","src":"5533:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5550:3:29","nodeType":"YulIdentifier","src":"5550:3:29"},{"arguments":[{"name":"value","nativeSrc":"5573:5:29","nodeType":"YulIdentifier","src":"5573:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5555:17:29","nodeType":"YulIdentifier","src":"5555:17:29"},"nativeSrc":"5555:24:29","nodeType":"YulFunctionCall","src":"5555:24:29"}],"functionName":{"name":"mstore","nativeSrc":"5543:6:29","nodeType":"YulIdentifier","src":"5543:6:29"},"nativeSrc":"5543:37:29","nodeType":"YulFunctionCall","src":"5543:37:29"},"nativeSrc":"5543:37:29","nodeType":"YulExpressionStatement","src":"5543:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5468:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5521:5:29","nodeType":"YulTypedName","src":"5521:5:29","type":""},{"name":"pos","nativeSrc":"5528:3:29","nodeType":"YulTypedName","src":"5528:3:29","type":""}],"src":"5468:118:29"},{"body":{"nativeSrc":"5690:124:29","nodeType":"YulBlock","src":"5690:124:29","statements":[{"nativeSrc":"5700:26:29","nodeType":"YulAssignment","src":"5700:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5712:9:29","nodeType":"YulIdentifier","src":"5712:9:29"},{"kind":"number","nativeSrc":"5723:2:29","nodeType":"YulLiteral","src":"5723:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5708:3:29","nodeType":"YulIdentifier","src":"5708:3:29"},"nativeSrc":"5708:18:29","nodeType":"YulFunctionCall","src":"5708:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5700:4:29","nodeType":"YulIdentifier","src":"5700:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5780:6:29","nodeType":"YulIdentifier","src":"5780:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5793:9:29","nodeType":"YulIdentifier","src":"5793:9:29"},{"kind":"number","nativeSrc":"5804:1:29","nodeType":"YulLiteral","src":"5804:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5789:3:29","nodeType":"YulIdentifier","src":"5789:3:29"},"nativeSrc":"5789:17:29","nodeType":"YulFunctionCall","src":"5789:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5736:43:29","nodeType":"YulIdentifier","src":"5736:43:29"},"nativeSrc":"5736:71:29","nodeType":"YulFunctionCall","src":"5736:71:29"},"nativeSrc":"5736:71:29","nodeType":"YulExpressionStatement","src":"5736:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5592:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5662:9:29","nodeType":"YulTypedName","src":"5662:9:29","type":""},{"name":"value0","nativeSrc":"5674:6:29","nodeType":"YulTypedName","src":"5674:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5685:4:29","nodeType":"YulTypedName","src":"5685:4:29","type":""}],"src":"5592:222:29"},{"body":{"nativeSrc":"5848:152:29","nodeType":"YulBlock","src":"5848:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5865:1:29","nodeType":"YulLiteral","src":"5865:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5868:77:29","nodeType":"YulLiteral","src":"5868:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5858:6:29","nodeType":"YulIdentifier","src":"5858:6:29"},"nativeSrc":"5858:88:29","nodeType":"YulFunctionCall","src":"5858:88:29"},"nativeSrc":"5858:88:29","nodeType":"YulExpressionStatement","src":"5858:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5962:1:29","nodeType":"YulLiteral","src":"5962:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"5965:4:29","nodeType":"YulLiteral","src":"5965:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5955:6:29","nodeType":"YulIdentifier","src":"5955:6:29"},"nativeSrc":"5955:15:29","nodeType":"YulFunctionCall","src":"5955:15:29"},"nativeSrc":"5955:15:29","nodeType":"YulExpressionStatement","src":"5955:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5986:1:29","nodeType":"YulLiteral","src":"5986:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5989:4:29","nodeType":"YulLiteral","src":"5989:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5979:6:29","nodeType":"YulIdentifier","src":"5979:6:29"},"nativeSrc":"5979:15:29","nodeType":"YulFunctionCall","src":"5979:15:29"},"nativeSrc":"5979:15:29","nodeType":"YulExpressionStatement","src":"5979:15:29"}]},"name":"panic_error_0x11","nativeSrc":"5820:180:29","nodeType":"YulFunctionDefinition","src":"5820:180:29"},{"body":{"nativeSrc":"6057:51:29","nodeType":"YulBlock","src":"6057:51:29","statements":[{"nativeSrc":"6067:34:29","nodeType":"YulAssignment","src":"6067:34:29","value":{"arguments":[{"kind":"number","nativeSrc":"6092:1:29","nodeType":"YulLiteral","src":"6092:1:29","type":"","value":"1"},{"name":"value","nativeSrc":"6095:5:29","nodeType":"YulIdentifier","src":"6095:5:29"}],"functionName":{"name":"shr","nativeSrc":"6088:3:29","nodeType":"YulIdentifier","src":"6088:3:29"},"nativeSrc":"6088:13:29","nodeType":"YulFunctionCall","src":"6088:13:29"},"variableNames":[{"name":"newValue","nativeSrc":"6067:8:29","nodeType":"YulIdentifier","src":"6067:8:29"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"6006:102:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6038:5:29","nodeType":"YulTypedName","src":"6038:5:29","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6048:8:29","nodeType":"YulTypedName","src":"6048:8:29","type":""}],"src":"6006:102:29"},{"body":{"nativeSrc":"6187:775:29","nodeType":"YulBlock","src":"6187:775:29","statements":[{"nativeSrc":"6197:15:29","nodeType":"YulAssignment","src":"6197:15:29","value":{"name":"_power","nativeSrc":"6206:6:29","nodeType":"YulIdentifier","src":"6206:6:29"},"variableNames":[{"name":"power","nativeSrc":"6197:5:29","nodeType":"YulIdentifier","src":"6197:5:29"}]},{"nativeSrc":"6221:14:29","nodeType":"YulAssignment","src":"6221:14:29","value":{"name":"_base","nativeSrc":"6230:5:29","nodeType":"YulIdentifier","src":"6230:5:29"},"variableNames":[{"name":"base","nativeSrc":"6221:4:29","nodeType":"YulIdentifier","src":"6221:4:29"}]},{"body":{"nativeSrc":"6279:677:29","nodeType":"YulBlock","src":"6279:677:29","statements":[{"body":{"nativeSrc":"6367:22:29","nodeType":"YulBlock","src":"6367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6369:16:29","nodeType":"YulIdentifier","src":"6369:16:29"},"nativeSrc":"6369:18:29","nodeType":"YulFunctionCall","src":"6369:18:29"},"nativeSrc":"6369:18:29","nodeType":"YulExpressionStatement","src":"6369:18:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"6345:4:29","nodeType":"YulIdentifier","src":"6345:4:29"},{"arguments":[{"name":"max","nativeSrc":"6355:3:29","nodeType":"YulIdentifier","src":"6355:3:29"},{"name":"base","nativeSrc":"6360:4:29","nodeType":"YulIdentifier","src":"6360:4:29"}],"functionName":{"name":"div","nativeSrc":"6351:3:29","nodeType":"YulIdentifier","src":"6351:3:29"},"nativeSrc":"6351:14:29","nodeType":"YulFunctionCall","src":"6351:14:29"}],"functionName":{"name":"gt","nativeSrc":"6342:2:29","nodeType":"YulIdentifier","src":"6342:2:29"},"nativeSrc":"6342:24:29","nodeType":"YulFunctionCall","src":"6342:24:29"},"nativeSrc":"6339:50:29","nodeType":"YulIf","src":"6339:50:29"},{"body":{"nativeSrc":"6434:419:29","nodeType":"YulBlock","src":"6434:419:29","statements":[{"nativeSrc":"6814:25:29","nodeType":"YulAssignment","src":"6814:25:29","value":{"arguments":[{"name":"power","nativeSrc":"6827:5:29","nodeType":"YulIdentifier","src":"6827:5:29"},{"name":"base","nativeSrc":"6834:4:29","nodeType":"YulIdentifier","src":"6834:4:29"}],"functionName":{"name":"mul","nativeSrc":"6823:3:29","nodeType":"YulIdentifier","src":"6823:3:29"},"nativeSrc":"6823:16:29","nodeType":"YulFunctionCall","src":"6823:16:29"},"variableNames":[{"name":"power","nativeSrc":"6814:5:29","nodeType":"YulIdentifier","src":"6814:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6409:8:29","nodeType":"YulIdentifier","src":"6409:8:29"},{"kind":"number","nativeSrc":"6419:1:29","nodeType":"YulLiteral","src":"6419:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6405:3:29","nodeType":"YulIdentifier","src":"6405:3:29"},"nativeSrc":"6405:16:29","nodeType":"YulFunctionCall","src":"6405:16:29"},"nativeSrc":"6402:451:29","nodeType":"YulIf","src":"6402:451:29"},{"nativeSrc":"6866:23:29","nodeType":"YulAssignment","src":"6866:23:29","value":{"arguments":[{"name":"base","nativeSrc":"6878:4:29","nodeType":"YulIdentifier","src":"6878:4:29"},{"name":"base","nativeSrc":"6884:4:29","nodeType":"YulIdentifier","src":"6884:4:29"}],"functionName":{"name":"mul","nativeSrc":"6874:3:29","nodeType":"YulIdentifier","src":"6874:3:29"},"nativeSrc":"6874:15:29","nodeType":"YulFunctionCall","src":"6874:15:29"},"variableNames":[{"name":"base","nativeSrc":"6866:4:29","nodeType":"YulIdentifier","src":"6866:4:29"}]},{"nativeSrc":"6902:44:29","nodeType":"YulAssignment","src":"6902:44:29","value":{"arguments":[{"name":"exponent","nativeSrc":"6937:8:29","nodeType":"YulIdentifier","src":"6937:8:29"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"6914:22:29","nodeType":"YulIdentifier","src":"6914:22:29"},"nativeSrc":"6914:32:29","nodeType":"YulFunctionCall","src":"6914:32:29"},"variableNames":[{"name":"exponent","nativeSrc":"6902:8:29","nodeType":"YulIdentifier","src":"6902:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6255:8:29","nodeType":"YulIdentifier","src":"6255:8:29"},{"kind":"number","nativeSrc":"6265:1:29","nodeType":"YulLiteral","src":"6265:1:29","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"6252:2:29","nodeType":"YulIdentifier","src":"6252:2:29"},"nativeSrc":"6252:15:29","nodeType":"YulFunctionCall","src":"6252:15:29"},"nativeSrc":"6244:712:29","nodeType":"YulForLoop","post":{"nativeSrc":"6268:2:29","nodeType":"YulBlock","src":"6268:2:29","statements":[]},"pre":{"nativeSrc":"6248:3:29","nodeType":"YulBlock","src":"6248:3:29","statements":[]},"src":"6244:712:29"}]},"name":"checked_exp_helper","nativeSrc":"6114:848:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"6142:6:29","nodeType":"YulTypedName","src":"6142:6:29","type":""},{"name":"_base","nativeSrc":"6150:5:29","nodeType":"YulTypedName","src":"6150:5:29","type":""},{"name":"exponent","nativeSrc":"6157:8:29","nodeType":"YulTypedName","src":"6157:8:29","type":""},{"name":"max","nativeSrc":"6167:3:29","nodeType":"YulTypedName","src":"6167:3:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6175:5:29","nodeType":"YulTypedName","src":"6175:5:29","type":""},{"name":"base","nativeSrc":"6182:4:29","nodeType":"YulTypedName","src":"6182:4:29","type":""}],"src":"6114:848:29"},{"body":{"nativeSrc":"7028:1013:29","nodeType":"YulBlock","src":"7028:1013:29","statements":[{"body":{"nativeSrc":"7223:20:29","nodeType":"YulBlock","src":"7223:20:29","statements":[{"nativeSrc":"7225:10:29","nodeType":"YulAssignment","src":"7225:10:29","value":{"kind":"number","nativeSrc":"7234:1:29","nodeType":"YulLiteral","src":"7234:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"7225:5:29","nodeType":"YulIdentifier","src":"7225:5:29"}]},{"nativeSrc":"7236:5:29","nodeType":"YulLeave","src":"7236:5:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7213:8:29","nodeType":"YulIdentifier","src":"7213:8:29"}],"functionName":{"name":"iszero","nativeSrc":"7206:6:29","nodeType":"YulIdentifier","src":"7206:6:29"},"nativeSrc":"7206:16:29","nodeType":"YulFunctionCall","src":"7206:16:29"},"nativeSrc":"7203:40:29","nodeType":"YulIf","src":"7203:40:29"},{"body":{"nativeSrc":"7268:20:29","nodeType":"YulBlock","src":"7268:20:29","statements":[{"nativeSrc":"7270:10:29","nodeType":"YulAssignment","src":"7270:10:29","value":{"kind":"number","nativeSrc":"7279:1:29","nodeType":"YulLiteral","src":"7279:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"7270:5:29","nodeType":"YulIdentifier","src":"7270:5:29"}]},{"nativeSrc":"7281:5:29","nodeType":"YulLeave","src":"7281:5:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"7262:4:29","nodeType":"YulIdentifier","src":"7262:4:29"}],"functionName":{"name":"iszero","nativeSrc":"7255:6:29","nodeType":"YulIdentifier","src":"7255:6:29"},"nativeSrc":"7255:12:29","nodeType":"YulFunctionCall","src":"7255:12:29"},"nativeSrc":"7252:36:29","nodeType":"YulIf","src":"7252:36:29"},{"cases":[{"body":{"nativeSrc":"7398:20:29","nodeType":"YulBlock","src":"7398:20:29","statements":[{"nativeSrc":"7400:10:29","nodeType":"YulAssignment","src":"7400:10:29","value":{"kind":"number","nativeSrc":"7409:1:29","nodeType":"YulLiteral","src":"7409:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"7400:5:29","nodeType":"YulIdentifier","src":"7400:5:29"}]},{"nativeSrc":"7411:5:29","nodeType":"YulLeave","src":"7411:5:29"}]},"nativeSrc":"7391:27:29","nodeType":"YulCase","src":"7391:27:29","value":{"kind":"number","nativeSrc":"7396:1:29","nodeType":"YulLiteral","src":"7396:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"7442:176:29","nodeType":"YulBlock","src":"7442:176:29","statements":[{"body":{"nativeSrc":"7477:22:29","nodeType":"YulBlock","src":"7477:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7479:16:29","nodeType":"YulIdentifier","src":"7479:16:29"},"nativeSrc":"7479:18:29","nodeType":"YulFunctionCall","src":"7479:18:29"},"nativeSrc":"7479:18:29","nodeType":"YulExpressionStatement","src":"7479:18:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"7462:8:29","nodeType":"YulIdentifier","src":"7462:8:29"},{"kind":"number","nativeSrc":"7472:3:29","nodeType":"YulLiteral","src":"7472:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"7459:2:29","nodeType":"YulIdentifier","src":"7459:2:29"},"nativeSrc":"7459:17:29","nodeType":"YulFunctionCall","src":"7459:17:29"},"nativeSrc":"7456:43:29","nodeType":"YulIf","src":"7456:43:29"},{"nativeSrc":"7512:25:29","nodeType":"YulAssignment","src":"7512:25:29","value":{"arguments":[{"kind":"number","nativeSrc":"7525:1:29","nodeType":"YulLiteral","src":"7525:1:29","type":"","value":"2"},{"name":"exponent","nativeSrc":"7528:8:29","nodeType":"YulIdentifier","src":"7528:8:29"}],"functionName":{"name":"exp","nativeSrc":"7521:3:29","nodeType":"YulIdentifier","src":"7521:3:29"},"nativeSrc":"7521:16:29","nodeType":"YulFunctionCall","src":"7521:16:29"},"variableNames":[{"name":"power","nativeSrc":"7512:5:29","nodeType":"YulIdentifier","src":"7512:5:29"}]},{"body":{"nativeSrc":"7568:22:29","nodeType":"YulBlock","src":"7568:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7570:16:29","nodeType":"YulIdentifier","src":"7570:16:29"},"nativeSrc":"7570:18:29","nodeType":"YulFunctionCall","src":"7570:18:29"},"nativeSrc":"7570:18:29","nodeType":"YulExpressionStatement","src":"7570:18:29"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7556:5:29","nodeType":"YulIdentifier","src":"7556:5:29"},{"name":"max","nativeSrc":"7563:3:29","nodeType":"YulIdentifier","src":"7563:3:29"}],"functionName":{"name":"gt","nativeSrc":"7553:2:29","nodeType":"YulIdentifier","src":"7553:2:29"},"nativeSrc":"7553:14:29","nodeType":"YulFunctionCall","src":"7553:14:29"},"nativeSrc":"7550:40:29","nodeType":"YulIf","src":"7550:40:29"},{"nativeSrc":"7603:5:29","nodeType":"YulLeave","src":"7603:5:29"}]},"nativeSrc":"7427:191:29","nodeType":"YulCase","src":"7427:191:29","value":{"kind":"number","nativeSrc":"7432:1:29","nodeType":"YulLiteral","src":"7432:1:29","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"7348:4:29","nodeType":"YulIdentifier","src":"7348:4:29"},"nativeSrc":"7341:277:29","nodeType":"YulSwitch","src":"7341:277:29"},{"body":{"nativeSrc":"7750:123:29","nodeType":"YulBlock","src":"7750:123:29","statements":[{"nativeSrc":"7764:28:29","nodeType":"YulAssignment","src":"7764:28:29","value":{"arguments":[{"name":"base","nativeSrc":"7777:4:29","nodeType":"YulIdentifier","src":"7777:4:29"},{"name":"exponent","nativeSrc":"7783:8:29","nodeType":"YulIdentifier","src":"7783:8:29"}],"functionName":{"name":"exp","nativeSrc":"7773:3:29","nodeType":"YulIdentifier","src":"7773:3:29"},"nativeSrc":"7773:19:29","nodeType":"YulFunctionCall","src":"7773:19:29"},"variableNames":[{"name":"power","nativeSrc":"7764:5:29","nodeType":"YulIdentifier","src":"7764:5:29"}]},{"body":{"nativeSrc":"7823:22:29","nodeType":"YulBlock","src":"7823:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7825:16:29","nodeType":"YulIdentifier","src":"7825:16:29"},"nativeSrc":"7825:18:29","nodeType":"YulFunctionCall","src":"7825:18:29"},"nativeSrc":"7825:18:29","nodeType":"YulExpressionStatement","src":"7825:18:29"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7811:5:29","nodeType":"YulIdentifier","src":"7811:5:29"},{"name":"max","nativeSrc":"7818:3:29","nodeType":"YulIdentifier","src":"7818:3:29"}],"functionName":{"name":"gt","nativeSrc":"7808:2:29","nodeType":"YulIdentifier","src":"7808:2:29"},"nativeSrc":"7808:14:29","nodeType":"YulFunctionCall","src":"7808:14:29"},"nativeSrc":"7805:40:29","nodeType":"YulIf","src":"7805:40:29"},{"nativeSrc":"7858:5:29","nodeType":"YulLeave","src":"7858:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7653:4:29","nodeType":"YulIdentifier","src":"7653:4:29"},{"kind":"number","nativeSrc":"7659:2:29","nodeType":"YulLiteral","src":"7659:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"7650:2:29","nodeType":"YulIdentifier","src":"7650:2:29"},"nativeSrc":"7650:12:29","nodeType":"YulFunctionCall","src":"7650:12:29"},{"arguments":[{"name":"exponent","nativeSrc":"7667:8:29","nodeType":"YulIdentifier","src":"7667:8:29"},{"kind":"number","nativeSrc":"7677:2:29","nodeType":"YulLiteral","src":"7677:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"7664:2:29","nodeType":"YulIdentifier","src":"7664:2:29"},"nativeSrc":"7664:16:29","nodeType":"YulFunctionCall","src":"7664:16:29"}],"functionName":{"name":"and","nativeSrc":"7646:3:29","nodeType":"YulIdentifier","src":"7646:3:29"},"nativeSrc":"7646:35:29","nodeType":"YulFunctionCall","src":"7646:35:29"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7702:4:29","nodeType":"YulIdentifier","src":"7702:4:29"},{"kind":"number","nativeSrc":"7708:3:29","nodeType":"YulLiteral","src":"7708:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"7699:2:29","nodeType":"YulIdentifier","src":"7699:2:29"},"nativeSrc":"7699:13:29","nodeType":"YulFunctionCall","src":"7699:13:29"},{"arguments":[{"name":"exponent","nativeSrc":"7717:8:29","nodeType":"YulIdentifier","src":"7717:8:29"},{"kind":"number","nativeSrc":"7727:2:29","nodeType":"YulLiteral","src":"7727:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7714:2:29","nodeType":"YulIdentifier","src":"7714:2:29"},"nativeSrc":"7714:16:29","nodeType":"YulFunctionCall","src":"7714:16:29"}],"functionName":{"name":"and","nativeSrc":"7695:3:29","nodeType":"YulIdentifier","src":"7695:3:29"},"nativeSrc":"7695:36:29","nodeType":"YulFunctionCall","src":"7695:36:29"}],"functionName":{"name":"or","nativeSrc":"7630:2:29","nodeType":"YulIdentifier","src":"7630:2:29"},"nativeSrc":"7630:111:29","nodeType":"YulFunctionCall","src":"7630:111:29"},"nativeSrc":"7627:246:29","nodeType":"YulIf","src":"7627:246:29"},{"nativeSrc":"7883:57:29","nodeType":"YulAssignment","src":"7883:57:29","value":{"arguments":[{"kind":"number","nativeSrc":"7917:1:29","nodeType":"YulLiteral","src":"7917:1:29","type":"","value":"1"},{"name":"base","nativeSrc":"7920:4:29","nodeType":"YulIdentifier","src":"7920:4:29"},{"name":"exponent","nativeSrc":"7926:8:29","nodeType":"YulIdentifier","src":"7926:8:29"},{"name":"max","nativeSrc":"7936:3:29","nodeType":"YulIdentifier","src":"7936:3:29"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"7898:18:29","nodeType":"YulIdentifier","src":"7898:18:29"},"nativeSrc":"7898:42:29","nodeType":"YulFunctionCall","src":"7898:42:29"},"variableNames":[{"name":"power","nativeSrc":"7883:5:29","nodeType":"YulIdentifier","src":"7883:5:29"},{"name":"base","nativeSrc":"7890:4:29","nodeType":"YulIdentifier","src":"7890:4:29"}]},{"body":{"nativeSrc":"7979:22:29","nodeType":"YulBlock","src":"7979:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7981:16:29","nodeType":"YulIdentifier","src":"7981:16:29"},"nativeSrc":"7981:18:29","nodeType":"YulFunctionCall","src":"7981:18:29"},"nativeSrc":"7981:18:29","nodeType":"YulExpressionStatement","src":"7981:18:29"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7956:5:29","nodeType":"YulIdentifier","src":"7956:5:29"},{"arguments":[{"name":"max","nativeSrc":"7967:3:29","nodeType":"YulIdentifier","src":"7967:3:29"},{"name":"base","nativeSrc":"7972:4:29","nodeType":"YulIdentifier","src":"7972:4:29"}],"functionName":{"name":"div","nativeSrc":"7963:3:29","nodeType":"YulIdentifier","src":"7963:3:29"},"nativeSrc":"7963:14:29","nodeType":"YulFunctionCall","src":"7963:14:29"}],"functionName":{"name":"gt","nativeSrc":"7953:2:29","nodeType":"YulIdentifier","src":"7953:2:29"},"nativeSrc":"7953:25:29","nodeType":"YulFunctionCall","src":"7953:25:29"},"nativeSrc":"7950:51:29","nodeType":"YulIf","src":"7950:51:29"},{"nativeSrc":"8010:25:29","nodeType":"YulAssignment","src":"8010:25:29","value":{"arguments":[{"name":"power","nativeSrc":"8023:5:29","nodeType":"YulIdentifier","src":"8023:5:29"},{"name":"base","nativeSrc":"8030:4:29","nodeType":"YulIdentifier","src":"8030:4:29"}],"functionName":{"name":"mul","nativeSrc":"8019:3:29","nodeType":"YulIdentifier","src":"8019:3:29"},"nativeSrc":"8019:16:29","nodeType":"YulFunctionCall","src":"8019:16:29"},"variableNames":[{"name":"power","nativeSrc":"8010:5:29","nodeType":"YulIdentifier","src":"8010:5:29"}]}]},"name":"checked_exp_unsigned","nativeSrc":"6968:1073:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6998:4:29","nodeType":"YulTypedName","src":"6998:4:29","type":""},{"name":"exponent","nativeSrc":"7004:8:29","nodeType":"YulTypedName","src":"7004:8:29","type":""},{"name":"max","nativeSrc":"7014:3:29","nodeType":"YulTypedName","src":"7014:3:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7022:5:29","nodeType":"YulTypedName","src":"7022:5:29","type":""}],"src":"6968:1073:29"},{"body":{"nativeSrc":"8090:43:29","nodeType":"YulBlock","src":"8090:43:29","statements":[{"nativeSrc":"8100:27:29","nodeType":"YulAssignment","src":"8100:27:29","value":{"arguments":[{"name":"value","nativeSrc":"8115:5:29","nodeType":"YulIdentifier","src":"8115:5:29"},{"kind":"number","nativeSrc":"8122:4:29","nodeType":"YulLiteral","src":"8122:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8111:3:29","nodeType":"YulIdentifier","src":"8111:3:29"},"nativeSrc":"8111:16:29","nodeType":"YulFunctionCall","src":"8111:16:29"},"variableNames":[{"name":"cleaned","nativeSrc":"8100:7:29","nodeType":"YulIdentifier","src":"8100:7:29"}]}]},"name":"cleanup_t_uint8","nativeSrc":"8047:86:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8072:5:29","nodeType":"YulTypedName","src":"8072:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8082:7:29","nodeType":"YulTypedName","src":"8082:7:29","type":""}],"src":"8047:86:29"},{"body":{"nativeSrc":"8203:217:29","nodeType":"YulBlock","src":"8203:217:29","statements":[{"nativeSrc":"8213:31:29","nodeType":"YulAssignment","src":"8213:31:29","value":{"arguments":[{"name":"base","nativeSrc":"8239:4:29","nodeType":"YulIdentifier","src":"8239:4:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8221:17:29","nodeType":"YulIdentifier","src":"8221:17:29"},"nativeSrc":"8221:23:29","nodeType":"YulFunctionCall","src":"8221:23:29"},"variableNames":[{"name":"base","nativeSrc":"8213:4:29","nodeType":"YulIdentifier","src":"8213:4:29"}]},{"nativeSrc":"8253:37:29","nodeType":"YulAssignment","src":"8253:37:29","value":{"arguments":[{"name":"exponent","nativeSrc":"8281:8:29","nodeType":"YulIdentifier","src":"8281:8:29"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"8265:15:29","nodeType":"YulIdentifier","src":"8265:15:29"},"nativeSrc":"8265:25:29","nodeType":"YulFunctionCall","src":"8265:25:29"},"variableNames":[{"name":"exponent","nativeSrc":"8253:8:29","nodeType":"YulIdentifier","src":"8253:8:29"}]},{"nativeSrc":"8300:113:29","nodeType":"YulAssignment","src":"8300:113:29","value":{"arguments":[{"name":"base","nativeSrc":"8330:4:29","nodeType":"YulIdentifier","src":"8330:4:29"},{"name":"exponent","nativeSrc":"8336:8:29","nodeType":"YulIdentifier","src":"8336:8:29"},{"kind":"number","nativeSrc":"8346:66:29","nodeType":"YulLiteral","src":"8346:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"8309:20:29","nodeType":"YulIdentifier","src":"8309:20:29"},"nativeSrc":"8309:104:29","nodeType":"YulFunctionCall","src":"8309:104:29"},"variableNames":[{"name":"power","nativeSrc":"8300:5:29","nodeType":"YulIdentifier","src":"8300:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"8139:281:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"8178:4:29","nodeType":"YulTypedName","src":"8178:4:29","type":""},{"name":"exponent","nativeSrc":"8184:8:29","nodeType":"YulTypedName","src":"8184:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"8197:5:29","nodeType":"YulTypedName","src":"8197:5:29","type":""}],"src":"8139:281:29"},{"body":{"nativeSrc":"8474:362:29","nodeType":"YulBlock","src":"8474:362:29","statements":[{"nativeSrc":"8484:25:29","nodeType":"YulAssignment","src":"8484:25:29","value":{"arguments":[{"name":"x","nativeSrc":"8507:1:29","nodeType":"YulIdentifier","src":"8507:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8489:17:29","nodeType":"YulIdentifier","src":"8489:17:29"},"nativeSrc":"8489:20:29","nodeType":"YulFunctionCall","src":"8489:20:29"},"variableNames":[{"name":"x","nativeSrc":"8484:1:29","nodeType":"YulIdentifier","src":"8484:1:29"}]},{"nativeSrc":"8518:25:29","nodeType":"YulAssignment","src":"8518:25:29","value":{"arguments":[{"name":"y","nativeSrc":"8541:1:29","nodeType":"YulIdentifier","src":"8541:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8523:17:29","nodeType":"YulIdentifier","src":"8523:17:29"},"nativeSrc":"8523:20:29","nodeType":"YulFunctionCall","src":"8523:20:29"},"variableNames":[{"name":"y","nativeSrc":"8518:1:29","nodeType":"YulIdentifier","src":"8518:1:29"}]},{"nativeSrc":"8552:28:29","nodeType":"YulVariableDeclaration","src":"8552:28:29","value":{"arguments":[{"name":"x","nativeSrc":"8575:1:29","nodeType":"YulIdentifier","src":"8575:1:29"},{"name":"y","nativeSrc":"8578:1:29","nodeType":"YulIdentifier","src":"8578:1:29"}],"functionName":{"name":"mul","nativeSrc":"8571:3:29","nodeType":"YulIdentifier","src":"8571:3:29"},"nativeSrc":"8571:9:29","nodeType":"YulFunctionCall","src":"8571:9:29"},"variables":[{"name":"product_raw","nativeSrc":"8556:11:29","nodeType":"YulTypedName","src":"8556:11:29","type":""}]},{"nativeSrc":"8589:41:29","nodeType":"YulAssignment","src":"8589:41:29","value":{"arguments":[{"name":"product_raw","nativeSrc":"8618:11:29","nodeType":"YulIdentifier","src":"8618:11:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8600:17:29","nodeType":"YulIdentifier","src":"8600:17:29"},"nativeSrc":"8600:30:29","nodeType":"YulFunctionCall","src":"8600:30:29"},"variableNames":[{"name":"product","nativeSrc":"8589:7:29","nodeType":"YulIdentifier","src":"8589:7:29"}]},{"body":{"nativeSrc":"8807:22:29","nodeType":"YulBlock","src":"8807:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8809:16:29","nodeType":"YulIdentifier","src":"8809:16:29"},"nativeSrc":"8809:18:29","nodeType":"YulFunctionCall","src":"8809:18:29"},"nativeSrc":"8809:18:29","nodeType":"YulExpressionStatement","src":"8809:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"8740:1:29","nodeType":"YulIdentifier","src":"8740:1:29"}],"functionName":{"name":"iszero","nativeSrc":"8733:6:29","nodeType":"YulIdentifier","src":"8733:6:29"},"nativeSrc":"8733:9:29","nodeType":"YulFunctionCall","src":"8733:9:29"},{"arguments":[{"name":"y","nativeSrc":"8763:1:29","nodeType":"YulIdentifier","src":"8763:1:29"},{"arguments":[{"name":"product","nativeSrc":"8770:7:29","nodeType":"YulIdentifier","src":"8770:7:29"},{"name":"x","nativeSrc":"8779:1:29","nodeType":"YulIdentifier","src":"8779:1:29"}],"functionName":{"name":"div","nativeSrc":"8766:3:29","nodeType":"YulIdentifier","src":"8766:3:29"},"nativeSrc":"8766:15:29","nodeType":"YulFunctionCall","src":"8766:15:29"}],"functionName":{"name":"eq","nativeSrc":"8760:2:29","nodeType":"YulIdentifier","src":"8760:2:29"},"nativeSrc":"8760:22:29","nodeType":"YulFunctionCall","src":"8760:22:29"}],"functionName":{"name":"or","nativeSrc":"8713:2:29","nodeType":"YulIdentifier","src":"8713:2:29"},"nativeSrc":"8713:83:29","nodeType":"YulFunctionCall","src":"8713:83:29"}],"functionName":{"name":"iszero","nativeSrc":"8693:6:29","nodeType":"YulIdentifier","src":"8693:6:29"},"nativeSrc":"8693:113:29","nodeType":"YulFunctionCall","src":"8693:113:29"},"nativeSrc":"8690:139:29","nodeType":"YulIf","src":"8690:139:29"}]},"name":"checked_mul_t_uint256","nativeSrc":"8426:410:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8457:1:29","nodeType":"YulTypedName","src":"8457:1:29","type":""},{"name":"y","nativeSrc":"8460:1:29","nodeType":"YulTypedName","src":"8460:1:29","type":""}],"returnVariables":[{"name":"product","nativeSrc":"8466:7:29","nodeType":"YulTypedName","src":"8466:7:29","type":""}],"src":"8426:410:29"},{"body":{"nativeSrc":"8887:32:29","nodeType":"YulBlock","src":"8887:32:29","statements":[{"nativeSrc":"8897:16:29","nodeType":"YulAssignment","src":"8897:16:29","value":{"name":"value","nativeSrc":"8908:5:29","nodeType":"YulIdentifier","src":"8908:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"8897:7:29","nodeType":"YulIdentifier","src":"8897:7:29"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8842:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8869:5:29","nodeType":"YulTypedName","src":"8869:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8879:7:29","nodeType":"YulTypedName","src":"8879:7:29","type":""}],"src":"8842:77:29"},{"body":{"nativeSrc":"8990:53:29","nodeType":"YulBlock","src":"8990:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9007:3:29","nodeType":"YulIdentifier","src":"9007:3:29"},{"arguments":[{"name":"value","nativeSrc":"9030:5:29","nodeType":"YulIdentifier","src":"9030:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9012:17:29","nodeType":"YulIdentifier","src":"9012:17:29"},"nativeSrc":"9012:24:29","nodeType":"YulFunctionCall","src":"9012:24:29"}],"functionName":{"name":"mstore","nativeSrc":"9000:6:29","nodeType":"YulIdentifier","src":"9000:6:29"},"nativeSrc":"9000:37:29","nodeType":"YulFunctionCall","src":"9000:37:29"},"nativeSrc":"9000:37:29","nodeType":"YulExpressionStatement","src":"9000:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8925:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8978:5:29","nodeType":"YulTypedName","src":"8978:5:29","type":""},{"name":"pos","nativeSrc":"8985:3:29","nodeType":"YulTypedName","src":"8985:3:29","type":""}],"src":"8925:118:29"},{"body":{"nativeSrc":"9114:53:29","nodeType":"YulBlock","src":"9114:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9131:3:29","nodeType":"YulIdentifier","src":"9131:3:29"},{"arguments":[{"name":"value","nativeSrc":"9154:5:29","nodeType":"YulIdentifier","src":"9154:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9136:17:29","nodeType":"YulIdentifier","src":"9136:17:29"},"nativeSrc":"9136:24:29","nodeType":"YulFunctionCall","src":"9136:24:29"}],"functionName":{"name":"mstore","nativeSrc":"9124:6:29","nodeType":"YulIdentifier","src":"9124:6:29"},"nativeSrc":"9124:37:29","nodeType":"YulFunctionCall","src":"9124:37:29"},"nativeSrc":"9124:37:29","nodeType":"YulExpressionStatement","src":"9124:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9049:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9102:5:29","nodeType":"YulTypedName","src":"9102:5:29","type":""},{"name":"pos","nativeSrc":"9109:3:29","nodeType":"YulTypedName","src":"9109:3:29","type":""}],"src":"9049:118:29"},{"body":{"nativeSrc":"9383:454:29","nodeType":"YulBlock","src":"9383:454:29","statements":[{"nativeSrc":"9393:27:29","nodeType":"YulAssignment","src":"9393:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9405:9:29","nodeType":"YulIdentifier","src":"9405:9:29"},{"kind":"number","nativeSrc":"9416:3:29","nodeType":"YulLiteral","src":"9416:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9401:3:29","nodeType":"YulIdentifier","src":"9401:3:29"},"nativeSrc":"9401:19:29","nodeType":"YulFunctionCall","src":"9401:19:29"},"variableNames":[{"name":"tail","nativeSrc":"9393:4:29","nodeType":"YulIdentifier","src":"9393:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9474:6:29","nodeType":"YulIdentifier","src":"9474:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9487:9:29","nodeType":"YulIdentifier","src":"9487:9:29"},{"kind":"number","nativeSrc":"9498:1:29","nodeType":"YulLiteral","src":"9498:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9483:3:29","nodeType":"YulIdentifier","src":"9483:3:29"},"nativeSrc":"9483:17:29","nodeType":"YulFunctionCall","src":"9483:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9430:43:29","nodeType":"YulIdentifier","src":"9430:43:29"},"nativeSrc":"9430:71:29","nodeType":"YulFunctionCall","src":"9430:71:29"},"nativeSrc":"9430:71:29","nodeType":"YulExpressionStatement","src":"9430:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9555:6:29","nodeType":"YulIdentifier","src":"9555:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9568:9:29","nodeType":"YulIdentifier","src":"9568:9:29"},{"kind":"number","nativeSrc":"9579:2:29","nodeType":"YulLiteral","src":"9579:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9564:3:29","nodeType":"YulIdentifier","src":"9564:3:29"},"nativeSrc":"9564:18:29","nodeType":"YulFunctionCall","src":"9564:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9511:43:29","nodeType":"YulIdentifier","src":"9511:43:29"},"nativeSrc":"9511:72:29","nodeType":"YulFunctionCall","src":"9511:72:29"},"nativeSrc":"9511:72:29","nodeType":"YulExpressionStatement","src":"9511:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9637:6:29","nodeType":"YulIdentifier","src":"9637:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9650:9:29","nodeType":"YulIdentifier","src":"9650:9:29"},{"kind":"number","nativeSrc":"9661:2:29","nodeType":"YulLiteral","src":"9661:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9646:3:29","nodeType":"YulIdentifier","src":"9646:3:29"},"nativeSrc":"9646:18:29","nodeType":"YulFunctionCall","src":"9646:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9593:43:29","nodeType":"YulIdentifier","src":"9593:43:29"},"nativeSrc":"9593:72:29","nodeType":"YulFunctionCall","src":"9593:72:29"},"nativeSrc":"9593:72:29","nodeType":"YulExpressionStatement","src":"9593:72:29"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9719:6:29","nodeType":"YulIdentifier","src":"9719:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9732:9:29","nodeType":"YulIdentifier","src":"9732:9:29"},{"kind":"number","nativeSrc":"9743:2:29","nodeType":"YulLiteral","src":"9743:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9728:3:29","nodeType":"YulIdentifier","src":"9728:3:29"},"nativeSrc":"9728:18:29","nodeType":"YulFunctionCall","src":"9728:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9675:43:29","nodeType":"YulIdentifier","src":"9675:43:29"},"nativeSrc":"9675:72:29","nodeType":"YulFunctionCall","src":"9675:72:29"},"nativeSrc":"9675:72:29","nodeType":"YulExpressionStatement","src":"9675:72:29"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9801:6:29","nodeType":"YulIdentifier","src":"9801:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9814:9:29","nodeType":"YulIdentifier","src":"9814:9:29"},{"kind":"number","nativeSrc":"9825:3:29","nodeType":"YulLiteral","src":"9825:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9810:3:29","nodeType":"YulIdentifier","src":"9810:3:29"},"nativeSrc":"9810:19:29","nodeType":"YulFunctionCall","src":"9810:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9757:43:29","nodeType":"YulIdentifier","src":"9757:43:29"},"nativeSrc":"9757:73:29","nodeType":"YulFunctionCall","src":"9757:73:29"},"nativeSrc":"9757:73:29","nodeType":"YulExpressionStatement","src":"9757:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"9173:664:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9323:9:29","nodeType":"YulTypedName","src":"9323:9:29","type":""},{"name":"value4","nativeSrc":"9335:6:29","nodeType":"YulTypedName","src":"9335:6:29","type":""},{"name":"value3","nativeSrc":"9343:6:29","nodeType":"YulTypedName","src":"9343:6:29","type":""},{"name":"value2","nativeSrc":"9351:6:29","nodeType":"YulTypedName","src":"9351:6:29","type":""},{"name":"value1","nativeSrc":"9359:6:29","nodeType":"YulTypedName","src":"9359:6:29","type":""},{"name":"value0","nativeSrc":"9367:6:29","nodeType":"YulTypedName","src":"9367:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9378:4:29","nodeType":"YulTypedName","src":"9378:4:29","type":""}],"src":"9173:664:29"},{"body":{"nativeSrc":"9939:73:29","nodeType":"YulBlock","src":"9939:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9956:3:29","nodeType":"YulIdentifier","src":"9956:3:29"},{"name":"length","nativeSrc":"9961:6:29","nodeType":"YulIdentifier","src":"9961:6:29"}],"functionName":{"name":"mstore","nativeSrc":"9949:6:29","nodeType":"YulIdentifier","src":"9949:6:29"},"nativeSrc":"9949:19:29","nodeType":"YulFunctionCall","src":"9949:19:29"},"nativeSrc":"9949:19:29","nodeType":"YulExpressionStatement","src":"9949:19:29"},{"nativeSrc":"9977:29:29","nodeType":"YulAssignment","src":"9977:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"9996:3:29","nodeType":"YulIdentifier","src":"9996:3:29"},{"kind":"number","nativeSrc":"10001:4:29","nodeType":"YulLiteral","src":"10001:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9992:3:29","nodeType":"YulIdentifier","src":"9992:3:29"},"nativeSrc":"9992:14:29","nodeType":"YulFunctionCall","src":"9992:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"9977:11:29","nodeType":"YulIdentifier","src":"9977:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9843:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9911:3:29","nodeType":"YulTypedName","src":"9911:3:29","type":""},{"name":"length","nativeSrc":"9916:6:29","nodeType":"YulTypedName","src":"9916:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9927:11:29","nodeType":"YulTypedName","src":"9927:11:29","type":""}],"src":"9843:169:29"},{"body":{"nativeSrc":"10080:186:29","nodeType":"YulBlock","src":"10080:186:29","statements":[{"nativeSrc":"10091:10:29","nodeType":"YulVariableDeclaration","src":"10091:10:29","value":{"kind":"number","nativeSrc":"10100:1:29","nodeType":"YulLiteral","src":"10100:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10095:1:29","nodeType":"YulTypedName","src":"10095:1:29","type":""}]},{"body":{"nativeSrc":"10160:63:29","nodeType":"YulBlock","src":"10160:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10185:3:29","nodeType":"YulIdentifier","src":"10185:3:29"},{"name":"i","nativeSrc":"10190:1:29","nodeType":"YulIdentifier","src":"10190:1:29"}],"functionName":{"name":"add","nativeSrc":"10181:3:29","nodeType":"YulIdentifier","src":"10181:3:29"},"nativeSrc":"10181:11:29","nodeType":"YulFunctionCall","src":"10181:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10204:3:29","nodeType":"YulIdentifier","src":"10204:3:29"},{"name":"i","nativeSrc":"10209:1:29","nodeType":"YulIdentifier","src":"10209:1:29"}],"functionName":{"name":"add","nativeSrc":"10200:3:29","nodeType":"YulIdentifier","src":"10200:3:29"},"nativeSrc":"10200:11:29","nodeType":"YulFunctionCall","src":"10200:11:29"}],"functionName":{"name":"mload","nativeSrc":"10194:5:29","nodeType":"YulIdentifier","src":"10194:5:29"},"nativeSrc":"10194:18:29","nodeType":"YulFunctionCall","src":"10194:18:29"}],"functionName":{"name":"mstore","nativeSrc":"10174:6:29","nodeType":"YulIdentifier","src":"10174:6:29"},"nativeSrc":"10174:39:29","nodeType":"YulFunctionCall","src":"10174:39:29"},"nativeSrc":"10174:39:29","nodeType":"YulExpressionStatement","src":"10174:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10121:1:29","nodeType":"YulIdentifier","src":"10121:1:29"},{"name":"length","nativeSrc":"10124:6:29","nodeType":"YulIdentifier","src":"10124:6:29"}],"functionName":{"name":"lt","nativeSrc":"10118:2:29","nodeType":"YulIdentifier","src":"10118:2:29"},"nativeSrc":"10118:13:29","nodeType":"YulFunctionCall","src":"10118:13:29"},"nativeSrc":"10110:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"10132:19:29","nodeType":"YulBlock","src":"10132:19:29","statements":[{"nativeSrc":"10134:15:29","nodeType":"YulAssignment","src":"10134:15:29","value":{"arguments":[{"name":"i","nativeSrc":"10143:1:29","nodeType":"YulIdentifier","src":"10143:1:29"},{"kind":"number","nativeSrc":"10146:2:29","nodeType":"YulLiteral","src":"10146:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10139:3:29","nodeType":"YulIdentifier","src":"10139:3:29"},"nativeSrc":"10139:10:29","nodeType":"YulFunctionCall","src":"10139:10:29"},"variableNames":[{"name":"i","nativeSrc":"10134:1:29","nodeType":"YulIdentifier","src":"10134:1:29"}]}]},"pre":{"nativeSrc":"10114:3:29","nodeType":"YulBlock","src":"10114:3:29","statements":[]},"src":"10110:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10243:3:29","nodeType":"YulIdentifier","src":"10243:3:29"},{"name":"length","nativeSrc":"10248:6:29","nodeType":"YulIdentifier","src":"10248:6:29"}],"functionName":{"name":"add","nativeSrc":"10239:3:29","nodeType":"YulIdentifier","src":"10239:3:29"},"nativeSrc":"10239:16:29","nodeType":"YulFunctionCall","src":"10239:16:29"},{"kind":"number","nativeSrc":"10257:1:29","nodeType":"YulLiteral","src":"10257:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10232:6:29","nodeType":"YulIdentifier","src":"10232:6:29"},"nativeSrc":"10232:27:29","nodeType":"YulFunctionCall","src":"10232:27:29"},"nativeSrc":"10232:27:29","nodeType":"YulExpressionStatement","src":"10232:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10018:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10062:3:29","nodeType":"YulTypedName","src":"10062:3:29","type":""},{"name":"dst","nativeSrc":"10067:3:29","nodeType":"YulTypedName","src":"10067:3:29","type":""},{"name":"length","nativeSrc":"10072:6:29","nodeType":"YulTypedName","src":"10072:6:29","type":""}],"src":"10018:248:29"},{"body":{"nativeSrc":"10320:54:29","nodeType":"YulBlock","src":"10320:54:29","statements":[{"nativeSrc":"10330:38:29","nodeType":"YulAssignment","src":"10330:38:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10348:5:29","nodeType":"YulIdentifier","src":"10348:5:29"},{"kind":"number","nativeSrc":"10355:2:29","nodeType":"YulLiteral","src":"10355:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10344:3:29","nodeType":"YulIdentifier","src":"10344:3:29"},"nativeSrc":"10344:14:29","nodeType":"YulFunctionCall","src":"10344:14:29"},{"arguments":[{"kind":"number","nativeSrc":"10364:2:29","nodeType":"YulLiteral","src":"10364:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10360:3:29","nodeType":"YulIdentifier","src":"10360:3:29"},"nativeSrc":"10360:7:29","nodeType":"YulFunctionCall","src":"10360:7:29"}],"functionName":{"name":"and","nativeSrc":"10340:3:29","nodeType":"YulIdentifier","src":"10340:3:29"},"nativeSrc":"10340:28:29","nodeType":"YulFunctionCall","src":"10340:28:29"},"variableNames":[{"name":"result","nativeSrc":"10330:6:29","nodeType":"YulIdentifier","src":"10330:6:29"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"10272:102:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10303:5:29","nodeType":"YulTypedName","src":"10303:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10313:6:29","nodeType":"YulTypedName","src":"10313:6:29","type":""}],"src":"10272:102:29"},{"body":{"nativeSrc":"10472:285:29","nodeType":"YulBlock","src":"10472:285:29","statements":[{"nativeSrc":"10482:53:29","nodeType":"YulVariableDeclaration","src":"10482:53:29","value":{"arguments":[{"name":"value","nativeSrc":"10529:5:29","nodeType":"YulIdentifier","src":"10529:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10496:32:29","nodeType":"YulIdentifier","src":"10496:32:29"},"nativeSrc":"10496:39:29","nodeType":"YulFunctionCall","src":"10496:39:29"},"variables":[{"name":"length","nativeSrc":"10486:6:29","nodeType":"YulTypedName","src":"10486:6:29","type":""}]},{"nativeSrc":"10544:78:29","nodeType":"YulAssignment","src":"10544:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"10610:3:29","nodeType":"YulIdentifier","src":"10610:3:29"},{"name":"length","nativeSrc":"10615:6:29","nodeType":"YulIdentifier","src":"10615:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10551:58:29","nodeType":"YulIdentifier","src":"10551:58:29"},"nativeSrc":"10551:71:29","nodeType":"YulFunctionCall","src":"10551:71:29"},"variableNames":[{"name":"pos","nativeSrc":"10544:3:29","nodeType":"YulIdentifier","src":"10544:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10670:5:29","nodeType":"YulIdentifier","src":"10670:5:29"},{"kind":"number","nativeSrc":"10677:4:29","nodeType":"YulLiteral","src":"10677:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10666:3:29","nodeType":"YulIdentifier","src":"10666:3:29"},"nativeSrc":"10666:16:29","nodeType":"YulFunctionCall","src":"10666:16:29"},{"name":"pos","nativeSrc":"10684:3:29","nodeType":"YulIdentifier","src":"10684:3:29"},{"name":"length","nativeSrc":"10689:6:29","nodeType":"YulIdentifier","src":"10689:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10631:34:29","nodeType":"YulIdentifier","src":"10631:34:29"},"nativeSrc":"10631:65:29","nodeType":"YulFunctionCall","src":"10631:65:29"},"nativeSrc":"10631:65:29","nodeType":"YulExpressionStatement","src":"10631:65:29"},{"nativeSrc":"10705:46:29","nodeType":"YulAssignment","src":"10705:46:29","value":{"arguments":[{"name":"pos","nativeSrc":"10716:3:29","nodeType":"YulIdentifier","src":"10716:3:29"},{"arguments":[{"name":"length","nativeSrc":"10743:6:29","nodeType":"YulIdentifier","src":"10743:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10721:21:29","nodeType":"YulIdentifier","src":"10721:21:29"},"nativeSrc":"10721:29:29","nodeType":"YulFunctionCall","src":"10721:29:29"}],"functionName":{"name":"add","nativeSrc":"10712:3:29","nodeType":"YulIdentifier","src":"10712:3:29"},"nativeSrc":"10712:39:29","nodeType":"YulFunctionCall","src":"10712:39:29"},"variableNames":[{"name":"end","nativeSrc":"10705:3:29","nodeType":"YulIdentifier","src":"10705:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10380:377:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10453:5:29","nodeType":"YulTypedName","src":"10453:5:29","type":""},{"name":"pos","nativeSrc":"10460:3:29","nodeType":"YulTypedName","src":"10460:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10468:3:29","nodeType":"YulTypedName","src":"10468:3:29","type":""}],"src":"10380:377:29"},{"body":{"nativeSrc":"10881:195:29","nodeType":"YulBlock","src":"10881:195:29","statements":[{"nativeSrc":"10891:26:29","nodeType":"YulAssignment","src":"10891:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10903:9:29","nodeType":"YulIdentifier","src":"10903:9:29"},{"kind":"number","nativeSrc":"10914:2:29","nodeType":"YulLiteral","src":"10914:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10899:3:29","nodeType":"YulIdentifier","src":"10899:3:29"},"nativeSrc":"10899:18:29","nodeType":"YulFunctionCall","src":"10899:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10891:4:29","nodeType":"YulIdentifier","src":"10891:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10938:9:29","nodeType":"YulIdentifier","src":"10938:9:29"},{"kind":"number","nativeSrc":"10949:1:29","nodeType":"YulLiteral","src":"10949:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10934:3:29","nodeType":"YulIdentifier","src":"10934:3:29"},"nativeSrc":"10934:17:29","nodeType":"YulFunctionCall","src":"10934:17:29"},{"arguments":[{"name":"tail","nativeSrc":"10957:4:29","nodeType":"YulIdentifier","src":"10957:4:29"},{"name":"headStart","nativeSrc":"10963:9:29","nodeType":"YulIdentifier","src":"10963:9:29"}],"functionName":{"name":"sub","nativeSrc":"10953:3:29","nodeType":"YulIdentifier","src":"10953:3:29"},"nativeSrc":"10953:20:29","nodeType":"YulFunctionCall","src":"10953:20:29"}],"functionName":{"name":"mstore","nativeSrc":"10927:6:29","nodeType":"YulIdentifier","src":"10927:6:29"},"nativeSrc":"10927:47:29","nodeType":"YulFunctionCall","src":"10927:47:29"},"nativeSrc":"10927:47:29","nodeType":"YulExpressionStatement","src":"10927:47:29"},{"nativeSrc":"10983:86:29","nodeType":"YulAssignment","src":"10983:86:29","value":{"arguments":[{"name":"value0","nativeSrc":"11055:6:29","nodeType":"YulIdentifier","src":"11055:6:29"},{"name":"tail","nativeSrc":"11064:4:29","nodeType":"YulIdentifier","src":"11064:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10991:63:29","nodeType":"YulIdentifier","src":"10991:63:29"},"nativeSrc":"10991:78:29","nodeType":"YulFunctionCall","src":"10991:78:29"},"variableNames":[{"name":"tail","nativeSrc":"10983:4:29","nodeType":"YulIdentifier","src":"10983:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10763:313:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10853:9:29","nodeType":"YulTypedName","src":"10853:9:29","type":""},{"name":"value0","nativeSrc":"10865:6:29","nodeType":"YulTypedName","src":"10865:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10876:4:29","nodeType":"YulTypedName","src":"10876:4:29","type":""}],"src":"10763:313:29"},{"body":{"nativeSrc":"11140:40:29","nodeType":"YulBlock","src":"11140:40:29","statements":[{"nativeSrc":"11151:22:29","nodeType":"YulAssignment","src":"11151:22:29","value":{"arguments":[{"name":"value","nativeSrc":"11167:5:29","nodeType":"YulIdentifier","src":"11167:5:29"}],"functionName":{"name":"mload","nativeSrc":"11161:5:29","nodeType":"YulIdentifier","src":"11161:5:29"},"nativeSrc":"11161:12:29","nodeType":"YulFunctionCall","src":"11161:12:29"},"variableNames":[{"name":"length","nativeSrc":"11151:6:29","nodeType":"YulIdentifier","src":"11151:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11082:98:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11123:5:29","nodeType":"YulTypedName","src":"11123:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11133:6:29","nodeType":"YulTypedName","src":"11133:6:29","type":""}],"src":"11082:98:29"},{"body":{"nativeSrc":"11242:60:29","nodeType":"YulBlock","src":"11242:60:29","statements":[{"nativeSrc":"11252:11:29","nodeType":"YulAssignment","src":"11252:11:29","value":{"name":"ptr","nativeSrc":"11260:3:29","nodeType":"YulIdentifier","src":"11260:3:29"},"variableNames":[{"name":"data","nativeSrc":"11252:4:29","nodeType":"YulIdentifier","src":"11252:4:29"}]},{"nativeSrc":"11273:22:29","nodeType":"YulAssignment","src":"11273:22:29","value":{"arguments":[{"name":"ptr","nativeSrc":"11285:3:29","nodeType":"YulIdentifier","src":"11285:3:29"},{"kind":"number","nativeSrc":"11290:4:29","nodeType":"YulLiteral","src":"11290:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11281:3:29","nodeType":"YulIdentifier","src":"11281:3:29"},"nativeSrc":"11281:14:29","nodeType":"YulFunctionCall","src":"11281:14:29"},"variableNames":[{"name":"data","nativeSrc":"11273:4:29","nodeType":"YulIdentifier","src":"11273:4:29"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11186:116:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11229:3:29","nodeType":"YulTypedName","src":"11229:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"11237:4:29","nodeType":"YulTypedName","src":"11237:4:29","type":""}],"src":"11186:116:29"},{"body":{"nativeSrc":"11363:99:29","nodeType":"YulBlock","src":"11363:99:29","statements":[{"nativeSrc":"11374:42:29","nodeType":"YulVariableDeclaration","src":"11374:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"11411:3:29","nodeType":"YulIdentifier","src":"11411:3:29"}],"functionName":{"name":"mload","nativeSrc":"11405:5:29","nodeType":"YulIdentifier","src":"11405:5:29"},"nativeSrc":"11405:10:29","nodeType":"YulFunctionCall","src":"11405:10:29"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11387:17:29","nodeType":"YulIdentifier","src":"11387:17:29"},"nativeSrc":"11387:29:29","nodeType":"YulFunctionCall","src":"11387:29:29"},"variables":[{"name":"value","nativeSrc":"11378:5:29","nodeType":"YulTypedName","src":"11378:5:29","type":""}]},{"nativeSrc":"11426:29:29","nodeType":"YulAssignment","src":"11426:29:29","value":{"name":"value","nativeSrc":"11450:5:29","nodeType":"YulIdentifier","src":"11450:5:29"},"variableNames":[{"name":"returnValue","nativeSrc":"11426:11:29","nodeType":"YulIdentifier","src":"11426:11:29"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"11308:154:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11343:3:29","nodeType":"YulTypedName","src":"11343:3:29","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"11351:11:29","nodeType":"YulTypedName","src":"11351:11:29","type":""}],"src":"11308:154:29"},{"body":{"nativeSrc":"11558:504:29","nodeType":"YulBlock","src":"11558:504:29","statements":[{"nativeSrc":"11569:52:29","nodeType":"YulVariableDeclaration","src":"11569:52:29","value":{"arguments":[{"name":"array","nativeSrc":"11615:5:29","nodeType":"YulIdentifier","src":"11615:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11583:31:29","nodeType":"YulIdentifier","src":"11583:31:29"},"nativeSrc":"11583:38:29","nodeType":"YulFunctionCall","src":"11583:38:29"},"variables":[{"name":"length","nativeSrc":"11573:6:29","nodeType":"YulTypedName","src":"11573:6:29","type":""}]},{"nativeSrc":"11630:21:29","nodeType":"YulVariableDeclaration","src":"11630:21:29","value":{"name":"array","nativeSrc":"11646:5:29","nodeType":"YulIdentifier","src":"11646:5:29"},"variables":[{"name":"dataArea","nativeSrc":"11634:8:29","nodeType":"YulTypedName","src":"11634:8:29","type":""}]},{"nativeSrc":"11661:52:29","nodeType":"YulAssignment","src":"11661:52:29","value":{"arguments":[{"name":"array","nativeSrc":"11707:5:29","nodeType":"YulIdentifier","src":"11707:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11673:33:29","nodeType":"YulIdentifier","src":"11673:33:29"},"nativeSrc":"11673:40:29","nodeType":"YulFunctionCall","src":"11673:40:29"},"variableNames":[{"name":"dataArea","nativeSrc":"11661:8:29","nodeType":"YulIdentifier","src":"11661:8:29"}]},{"nativeSrc":"11723:44:29","nodeType":"YulAssignment","src":"11723:44:29","value":{"arguments":[{"name":"dataArea","nativeSrc":"11758:8:29","nodeType":"YulIdentifier","src":"11758:8:29"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"11732:25:29","nodeType":"YulIdentifier","src":"11732:25:29"},"nativeSrc":"11732:35:29","nodeType":"YulFunctionCall","src":"11732:35:29"},"variableNames":[{"name":"value","nativeSrc":"11723:5:29","nodeType":"YulIdentifier","src":"11723:5:29"}]},{"body":{"nativeSrc":"11795:260:29","nodeType":"YulBlock","src":"11795:260:29","statements":[{"nativeSrc":"11809:236:29","nodeType":"YulAssignment","src":"11809:236:29","value":{"arguments":[{"name":"value","nativeSrc":"11839:5:29","nodeType":"YulIdentifier","src":"11839:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11906:1:29","nodeType":"YulLiteral","src":"11906:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"11913:2:29","nodeType":"YulLiteral","src":"11913:2:29","type":"","value":"32"},{"name":"length","nativeSrc":"11917:6:29","nodeType":"YulIdentifier","src":"11917:6:29"}],"functionName":{"name":"sub","nativeSrc":"11909:3:29","nodeType":"YulIdentifier","src":"11909:3:29"},"nativeSrc":"11909:15:29","nodeType":"YulFunctionCall","src":"11909:15:29"}],"functionName":{"name":"mul","nativeSrc":"11902:3:29","nodeType":"YulIdentifier","src":"11902:3:29"},"nativeSrc":"11902:23:29","nodeType":"YulFunctionCall","src":"11902:23:29"},{"kind":"number","nativeSrc":"11947:66:29","nodeType":"YulLiteral","src":"11947:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"11862:18:29","nodeType":"YulIdentifier","src":"11862:18:29"},"nativeSrc":"11862:169:29","nodeType":"YulFunctionCall","src":"11862:169:29"}],"functionName":{"name":"and","nativeSrc":"11818:3:29","nodeType":"YulIdentifier","src":"11818:3:29"},"nativeSrc":"11818:227:29","nodeType":"YulFunctionCall","src":"11818:227:29"},"variableNames":[{"name":"value","nativeSrc":"11809:5:29","nodeType":"YulIdentifier","src":"11809:5:29"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11783:6:29","nodeType":"YulIdentifier","src":"11783:6:29"},{"kind":"number","nativeSrc":"11791:2:29","nodeType":"YulLiteral","src":"11791:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11780:2:29","nodeType":"YulIdentifier","src":"11780:2:29"},"nativeSrc":"11780:14:29","nodeType":"YulFunctionCall","src":"11780:14:29"},"nativeSrc":"11777:278:29","nodeType":"YulIf","src":"11777:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"11468:594:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"11542:5:29","nodeType":"YulTypedName","src":"11542:5:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11552:5:29","nodeType":"YulTypedName","src":"11552:5:29","type":""}],"src":"11468:594:29"},{"body":{"nativeSrc":"12112:147:29","nodeType":"YulBlock","src":"12112:147:29","statements":[{"nativeSrc":"12122:25:29","nodeType":"YulAssignment","src":"12122:25:29","value":{"arguments":[{"name":"x","nativeSrc":"12145:1:29","nodeType":"YulIdentifier","src":"12145:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12127:17:29","nodeType":"YulIdentifier","src":"12127:17:29"},"nativeSrc":"12127:20:29","nodeType":"YulFunctionCall","src":"12127:20:29"},"variableNames":[{"name":"x","nativeSrc":"12122:1:29","nodeType":"YulIdentifier","src":"12122:1:29"}]},{"nativeSrc":"12156:25:29","nodeType":"YulAssignment","src":"12156:25:29","value":{"arguments":[{"name":"y","nativeSrc":"12179:1:29","nodeType":"YulIdentifier","src":"12179:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12161:17:29","nodeType":"YulIdentifier","src":"12161:17:29"},"nativeSrc":"12161:20:29","nodeType":"YulFunctionCall","src":"12161:20:29"},"variableNames":[{"name":"y","nativeSrc":"12156:1:29","nodeType":"YulIdentifier","src":"12156:1:29"}]},{"nativeSrc":"12190:16:29","nodeType":"YulAssignment","src":"12190:16:29","value":{"arguments":[{"name":"x","nativeSrc":"12201:1:29","nodeType":"YulIdentifier","src":"12201:1:29"},{"name":"y","nativeSrc":"12204:1:29","nodeType":"YulIdentifier","src":"12204:1:29"}],"functionName":{"name":"add","nativeSrc":"12197:3:29","nodeType":"YulIdentifier","src":"12197:3:29"},"nativeSrc":"12197:9:29","nodeType":"YulFunctionCall","src":"12197:9:29"},"variableNames":[{"name":"sum","nativeSrc":"12190:3:29","nodeType":"YulIdentifier","src":"12190:3:29"}]},{"body":{"nativeSrc":"12230:22:29","nodeType":"YulBlock","src":"12230:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12232:16:29","nodeType":"YulIdentifier","src":"12232:16:29"},"nativeSrc":"12232:18:29","nodeType":"YulFunctionCall","src":"12232:18:29"},"nativeSrc":"12232:18:29","nodeType":"YulExpressionStatement","src":"12232:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12222:1:29","nodeType":"YulIdentifier","src":"12222:1:29"},{"name":"sum","nativeSrc":"12225:3:29","nodeType":"YulIdentifier","src":"12225:3:29"}],"functionName":{"name":"gt","nativeSrc":"12219:2:29","nodeType":"YulIdentifier","src":"12219:2:29"},"nativeSrc":"12219:10:29","nodeType":"YulFunctionCall","src":"12219:10:29"},"nativeSrc":"12216:36:29","nodeType":"YulIf","src":"12216:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"12068:191:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12099:1:29","nodeType":"YulTypedName","src":"12099:1:29","type":""},{"name":"y","nativeSrc":"12102:1:29","nodeType":"YulTypedName","src":"12102:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12108:3:29","nodeType":"YulTypedName","src":"12108:3:29","type":""}],"src":"12068:191:29"},{"body":{"nativeSrc":"12419:288:29","nodeType":"YulBlock","src":"12419:288:29","statements":[{"nativeSrc":"12429:26:29","nodeType":"YulAssignment","src":"12429:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12441:9:29","nodeType":"YulIdentifier","src":"12441:9:29"},{"kind":"number","nativeSrc":"12452:2:29","nodeType":"YulLiteral","src":"12452:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12437:3:29","nodeType":"YulIdentifier","src":"12437:3:29"},"nativeSrc":"12437:18:29","nodeType":"YulFunctionCall","src":"12437:18:29"},"variableNames":[{"name":"tail","nativeSrc":"12429:4:29","nodeType":"YulIdentifier","src":"12429:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12509:6:29","nodeType":"YulIdentifier","src":"12509:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12522:9:29","nodeType":"YulIdentifier","src":"12522:9:29"},{"kind":"number","nativeSrc":"12533:1:29","nodeType":"YulLiteral","src":"12533:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12518:3:29","nodeType":"YulIdentifier","src":"12518:3:29"},"nativeSrc":"12518:17:29","nodeType":"YulFunctionCall","src":"12518:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12465:43:29","nodeType":"YulIdentifier","src":"12465:43:29"},"nativeSrc":"12465:71:29","nodeType":"YulFunctionCall","src":"12465:71:29"},"nativeSrc":"12465:71:29","nodeType":"YulExpressionStatement","src":"12465:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12590:6:29","nodeType":"YulIdentifier","src":"12590:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12603:9:29","nodeType":"YulIdentifier","src":"12603:9:29"},{"kind":"number","nativeSrc":"12614:2:29","nodeType":"YulLiteral","src":"12614:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12599:3:29","nodeType":"YulIdentifier","src":"12599:3:29"},"nativeSrc":"12599:18:29","nodeType":"YulFunctionCall","src":"12599:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12546:43:29","nodeType":"YulIdentifier","src":"12546:43:29"},"nativeSrc":"12546:72:29","nodeType":"YulFunctionCall","src":"12546:72:29"},"nativeSrc":"12546:72:29","nodeType":"YulExpressionStatement","src":"12546:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12672:6:29","nodeType":"YulIdentifier","src":"12672:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12685:9:29","nodeType":"YulIdentifier","src":"12685:9:29"},{"kind":"number","nativeSrc":"12696:2:29","nodeType":"YulLiteral","src":"12696:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12681:3:29","nodeType":"YulIdentifier","src":"12681:3:29"},"nativeSrc":"12681:18:29","nodeType":"YulFunctionCall","src":"12681:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12628:43:29","nodeType":"YulIdentifier","src":"12628:43:29"},"nativeSrc":"12628:72:29","nodeType":"YulFunctionCall","src":"12628:72:29"},"nativeSrc":"12628:72:29","nodeType":"YulExpressionStatement","src":"12628:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12265:442:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12375:9:29","nodeType":"YulTypedName","src":"12375:9:29","type":""},{"name":"value2","nativeSrc":"12387:6:29","nodeType":"YulTypedName","src":"12387:6:29","type":""},{"name":"value1","nativeSrc":"12395:6:29","nodeType":"YulTypedName","src":"12395:6:29","type":""},{"name":"value0","nativeSrc":"12403:6:29","nodeType":"YulTypedName","src":"12403:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12414:4:29","nodeType":"YulTypedName","src":"12414:4:29","type":""}],"src":"12265:442:29"},{"body":{"nativeSrc":"12811:124:29","nodeType":"YulBlock","src":"12811:124:29","statements":[{"nativeSrc":"12821:26:29","nodeType":"YulAssignment","src":"12821:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12833:9:29","nodeType":"YulIdentifier","src":"12833:9:29"},{"kind":"number","nativeSrc":"12844:2:29","nodeType":"YulLiteral","src":"12844:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12829:3:29","nodeType":"YulIdentifier","src":"12829:3:29"},"nativeSrc":"12829:18:29","nodeType":"YulFunctionCall","src":"12829:18:29"},"variableNames":[{"name":"tail","nativeSrc":"12821:4:29","nodeType":"YulIdentifier","src":"12821:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12901:6:29","nodeType":"YulIdentifier","src":"12901:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12914:9:29","nodeType":"YulIdentifier","src":"12914:9:29"},{"kind":"number","nativeSrc":"12925:1:29","nodeType":"YulLiteral","src":"12925:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12910:3:29","nodeType":"YulIdentifier","src":"12910:3:29"},"nativeSrc":"12910:17:29","nodeType":"YulFunctionCall","src":"12910:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12857:43:29","nodeType":"YulIdentifier","src":"12857:43:29"},"nativeSrc":"12857:71:29","nodeType":"YulFunctionCall","src":"12857:71:29"},"nativeSrc":"12857:71:29","nodeType":"YulExpressionStatement","src":"12857:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12713:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12783:9:29","nodeType":"YulTypedName","src":"12783:9:29","type":""},{"name":"value0","nativeSrc":"12795:6:29","nodeType":"YulTypedName","src":"12795:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12806:4:29","nodeType":"YulTypedName","src":"12806:4:29","type":""}],"src":"12713:222:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x276 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1A4 PUSH1 0x6 DUP4 PUSH2 0x33C PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x1C0 PUSH1 0x7 DUP3 PUSH2 0x33C PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1FD PUSH2 0x38C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x271 CALLER PUSH2 0x24D PUSH2 0x3E7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x3F0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x35E JUMPI PUSH2 0x357 DUP4 PUSH2 0x478 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x386 JUMP JUMPDEST DUP3 PUSH2 0x36E DUP4 PUSH2 0x4E0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3CC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x462 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x474 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x4C5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x4D1 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x53C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x530 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x658 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x790 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A3 JUMPI PUSH2 0x7A2 PUSH2 0x749 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x80B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x815 DUP7 DUP4 PUSH2 0x7CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85C PUSH2 0x857 PUSH2 0x852 DUP5 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x876 DUP4 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x882 DUP3 PUSH2 0x863 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x89F PUSH2 0x892 JUMP JUMPDEST PUSH2 0x8AA DUP2 DUP5 DUP5 PUSH2 0x86D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8C3 PUSH1 0x0 DUP3 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x8E4 DUP2 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x8ED DUP5 PUSH2 0x7BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8FC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x910 PUSH2 0x908 DUP6 PUSH2 0x7BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x918 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94F DUP4 DUP4 PUSH2 0x925 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x968 DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x981 JUMPI PUSH2 0x980 PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH2 0x98B DUP3 SLOAD PUSH2 0x778 JUMP JUMPDEST PUSH2 0x996 DUP3 DUP3 DUP6 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x9B7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9C1 DUP6 DUP3 PUSH2 0x943 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9D7 DUP7 PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9FF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9DA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA1C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA18 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x925 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5C DUP3 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6C DUP2 PUSH2 0xA51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB13 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEE PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xAFE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB0C DUP6 PUSH2 0xABC JUMP JUMPDEST SWAP5 POP PUSH2 0xAD3 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB2C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBE8 JUMP JUMPDEST DUP2 PUSH2 0xB3A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xBE8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB50 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB5A JUMPI PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB6C JUMPI PUSH2 0xB6B PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST POP PUSH2 0xBE8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBBE JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0xBCB DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xC12 DUP4 PUSH2 0xBEF JUMP JUMPDEST SWAP3 POP PUSH2 0xC3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xC5D DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC6B DUP2 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC82 JUMPI PUSH2 0xC81 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9C DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCAB DUP2 PUSH2 0x82D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xCC6 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xCD3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xCED PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0xCFA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD33 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH2 0xD65 DUP2 DUP6 PUSH2 0xD04 JUMP JUMPDEST SWAP4 POP PUSH2 0xD75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xD3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDA3 DUP2 DUP5 PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD2 DUP3 MLOAD PUSH2 0xC89 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE6 DUP3 PUSH2 0xDAB JUMP JUMPDEST DUP3 PUSH2 0xDF0 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0xDFB DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE36 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x7CE JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xE58 DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE6F PUSH2 0xA8D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE8B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xE98 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCA2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1F54 PUSH2 0xF22 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xD7B ADD MSTORE PUSH1 0x0 PUSH2 0xD40 ADD MSTORE PUSH1 0x0 PUSH2 0x1290 ADD MSTORE PUSH1 0x0 PUSH2 0x126F ADD MSTORE PUSH1 0x0 PUSH2 0xA6C ADD MSTORE PUSH1 0x0 PUSH2 0xAC2 ADD MSTORE PUSH1 0x0 PUSH2 0xAEB ADD MSTORE PUSH2 0x1F54 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x204 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x403 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x410 DUP2 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP6 DUP3 DUP6 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x448 DUP6 DUP6 DUP6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x476 DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x4D4 PUSH1 0x0 PUSH2 0xC28 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x4FC PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x504 PUSH2 0xD72 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x525 JUMPI PUSH2 0x524 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x553 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5CB SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F7 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x644 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x644 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x627 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x659 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x666 DUP2 DUP6 DUP6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6B6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6E5 DUP13 PUSH2 0xDAD JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6FB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x71E DUP3 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72E DUP3 DUP8 DUP8 DUP8 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A2 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP3 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP11 DUP11 DUP11 PUSH2 0x8CE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0xC28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EC DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x96E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE4E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA58 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA63 DUP4 DUP4 DUP4 PUSH2 0x1025 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAE4 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB11 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB19 PUSH2 0x124A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1025 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC7 PUSH2 0x592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC26 JUMPI PUSH2 0xBEA PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD6D PUSH1 0x6 PUSH32 0x0 PUSH2 0x12E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDA8 PUSH1 0x7 PUSH32 0x0 PUSH2 0x12E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE17 PUSH2 0xE11 PUSH2 0xA68 JUMP JUMPDEST DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE30 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE40 DUP3 DUP3 PUSH2 0x14C5 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x101F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1077 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x114A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1103 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1193 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x12FD JUMPI PUSH2 0x12F6 DUP4 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP PUSH2 0x138A JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1309 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1335 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1382 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1357 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1382 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1365 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1436 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1458 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14BB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EB PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1625 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1505 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15BC JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B3 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1624 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1636 DUP4 PUSH2 0x169D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1687 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1727 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x170C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174F DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH2 0x1759 DUP2 DUP6 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1769 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x1733 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1797 DUP2 DUP5 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF DUP3 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FC DUP2 PUSH2 0x17D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1815 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x1820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x180C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x186E DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0x1878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1884 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B7 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18FF DUP7 DUP3 DUP8 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1910 DUP7 DUP3 DUP8 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1921 DUP7 DUP3 DUP8 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x195C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP5 DUP3 DUP6 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F8 DUP2 PUSH2 0x19C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A54 DUP4 DUP4 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP3 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x1A82 DUP2 DUP6 PUSH2 0x1A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A8D DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABE JUMPI DUP2 MLOAD PUSH2 0x1AA5 DUP9 DUP3 PUSH2 0x1A48 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AB0 DUP4 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A91 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1AE0 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x19EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 DUP10 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B06 DUP2 DUP9 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B15 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1B22 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x196C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 DUP5 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B90 DUP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH2 0x1BE0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BEF DUP11 DUP3 DUP12 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C00 DUP11 DUP3 DUP12 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C11 DUP11 DUP3 DUP12 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C22 DUP11 DUP3 DUP12 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C33 DUP11 DUP3 DUP12 ADD PUSH2 0x1B81 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C44 DUP11 DUP3 DUP12 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C55 DUP11 DUP3 DUP12 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C89 DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C9A DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CFE JUMPI PUSH2 0x1CFD PUSH2 0x1CA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1D55 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1D89 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DDF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1DEC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E2E DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E6C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E79 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E86 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E93 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EBF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1ECC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x2B SWAP2 PUSH21 0x5A9DB477340AF2D5AAEA8A918E37564FD7204F83D0 SWAP16 GT PUSH23 0x28BC5B4C64736F6C634300081B00330000000000000000 ","sourceMap":"290:306:28:-:0;;;341:163;;;;;;;;;;1577:52:8;;;;;;;;;;;;;;;;;1616:4;3328:431:21;;;;;;;;;;;;;;;;;401:10:28;1601:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:21;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1577:52:8;455:42:28::3;461:10;486;:8;;;:10;;:::i;:::-;480:2;:16;;;;:::i;:::-;473:4;:23;;;;:::i;:::-;455:5;;;:42;;:::i;:::-;290:306:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:17:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:21:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2707:82:6:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1708:286:17:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:18:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;6008:1107:6:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:77::-;8879:7;8908:5;8897:16;;8842:77;;;:::o;8925:118::-;9012:24;9030:5;9012:24;:::i;:::-;9007:3;9000:37;8925:118;;:::o;9049:::-;9136:24;9154:5;9136:24;:::i;:::-;9131:3;9124:37;9049:118;;:::o;9173:664::-;9378:4;9416:3;9405:9;9401:19;9393:27;;9430:71;9498:1;9487:9;9483:17;9474:6;9430:71;:::i;:::-;9511:72;9579:2;9568:9;9564:18;9555:6;9511:72;:::i;:::-;9593;9661:2;9650:9;9646:18;9637:6;9593:72;:::i;:::-;9675;9743:2;9732:9;9728:18;9719:6;9675:72;:::i;:::-;9757:73;9825:3;9814:9;9810:19;9801:6;9757:73;:::i;:::-;9173:664;;;;;;;;:::o;9843:169::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9843:169;;;;:::o;10018:248::-;10100:1;10110:113;10124:6;10121:1;10118:13;10110:113;;;10209:1;10204:3;10200:11;10194:18;10190:1;10185:3;10181:11;10174:39;10146:2;10143:1;10139:10;10134:15;;10110:113;;;10257:1;10248:6;10243:3;10239:16;10232:27;10080:186;10018:248;;;:::o;10272:102::-;10313:6;10364:2;10360:7;10355:2;10348:5;10344:14;10340:28;10330:38;;10272:102;;;:::o;10380:377::-;10468:3;10496:39;10529:5;10496:39;:::i;:::-;10551:71;10615:6;10610:3;10551:71;:::i;:::-;10544:78;;10631:65;10689:6;10684:3;10677:4;10670:5;10666:16;10631:65;:::i;:::-;10721:29;10743:6;10721:29;:::i;:::-;10716:3;10712:39;10705:46;;10472:285;10380:377;;;;:::o;10763:313::-;10876:4;10914:2;10903:9;10899:18;10891:26;;10963:9;10957:4;10953:20;10949:1;10938:9;10934:17;10927:47;10991:78;11064:4;11055:6;10991:78;:::i;:::-;10983:86;;10763:313;;;;:::o;11082:98::-;11133:6;11167:5;11161:12;11151:22;;11082:98;;;:::o;11186:116::-;11237:4;11260:3;11252:11;;11290:4;11285:3;11281:14;11273:22;;11186:116;;;:::o;11308:154::-;11351:11;11387:29;11411:3;11405:10;11387:29;:::i;:::-;11450:5;11426:29;;11363:99;11308:154;;;:::o;11468:594::-;11552:5;11583:38;11615:5;11583:38;:::i;:::-;11646:5;11673:40;11707:5;11673:40;:::i;:::-;11661:52;;11732:35;11758:8;11732:35;:::i;:::-;11723:44;;11791:2;11783:6;11780:14;11777:278;;;11862:169;11947:66;11917:6;11913:2;11909:15;11906:1;11902:23;11862:169;:::i;:::-;11839:5;11818:227;11809:236;;11777:278;11558:504;;11468:594;;;:::o;12068:191::-;12108:3;12127:20;12145:1;12127:20;:::i;:::-;12122:25;;12161:20;12179:1;12161:20;:::i;:::-;12156:25;;12204:1;12201;12197:9;12190:16;;12225:3;12222:1;12219:10;12216:36;;;12232:18;;:::i;:::-;12216:36;12068:191;;;;:::o;12265:442::-;12414:4;12452:2;12441:9;12437:18;12429:26;;12465:71;12533:1;12522:9;12518:17;12509:6;12465:71;:::i;:::-;12546:72;12614:2;12603:9;12599:18;12590:6;12546:72;:::i;:::-;12628;12696:2;12685:9;12681:18;12672:6;12628:72;:::i;:::-;12265:442;;;;;;:::o;12713:222::-;12806:4;12844:2;12833:9;12829:18;12821:26;;12857:71;12925:1;12914:9;12910:17;12901:6;12857:71;:::i;:::-;12713:222;;;;:::o;290:306:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1145":{"entryPoint":1117,"id":1145,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3273":{"entryPoint":3383,"id":3273,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3285":{"entryPoint":3442,"id":3285,"parameterSlots":0,"returnSlots":1},"@_approve_805":{"entryPoint":2254,"id":805,"parameterSlots":3,"returnSlots":0},"@_approve_865":{"entryPoint":3662,"id":865,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3203":{"entryPoint":4682,"id":3203,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2977,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3182":{"entryPoint":2664,"id":3182,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3219":{"entryPoint":3588,"id":3219,"parameterSlots":1,"returnSlots":1},"@_mint_754":{"entryPoint":2847,"id":754,"parameterSlots":2,"returnSlots":0},"@_msgSender_1890":{"entryPoint":2246,"id":1890,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_913":{"entryPoint":2272,"id":913,"parameterSlots":3,"returnSlots":0},"@_throwError_3058":{"entryPoint":5317,"id":3058,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3112,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_644":{"entryPoint":2420,"id":644,"parameterSlots":3,"returnSlots":0},"@_update_721":{"entryPoint":4133,"id":721,"parameterSlots":3,"returnSlots":0},"@_useNonce_1972":{"entryPoint":3501,"id":1972,"parameterSlots":1,"returnSlots":1},"@allowance_541":{"entryPoint":1977,"id":541,"parameterSlots":2,"returnSlots":1},"@approve_565":{"entryPoint":1016,"id":565,"parameterSlots":2,"returnSlots":1},"@balanceOf_500":{"entryPoint":1146,"id":500,"parameterSlots":1,"returnSlots":1},"@byteLength_2168":{"entryPoint":5789,"id":2168,"parameterSlots":1,"returnSlots":1},"@decimals_478":{"entryPoint":1108,"id":478,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3261":{"entryPoint":1256,"id":3261,"parameterSlots":0,"returnSlots":7},"@mint_7523":{"entryPoint":1132,"id":7523,"parameterSlots":2,"returnSlots":0},"@name_460":{"entryPoint":870,"id":460,"parameterSlots":0,"returnSlots":1},"@nonces_1135":{"entryPoint":1238,"id":1135,"parameterSlots":1,"returnSlots":1},"@nonces_1957":{"entryPoint":3310,"id":1957,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1426,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1118":{"entryPoint":1649,"id":1118,"parameterSlots":7,"returnSlots":0},"@recover_3009":{"entryPoint":3614,"id":3009,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1218,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_469":{"entryPoint":1468,"id":469,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2235":{"entryPoint":4832,"id":2235,"parameterSlots":2,"returnSlots":1},"@toString_2136":{"entryPoint":5673,"id":2136,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3359":{"entryPoint":5008,"id":3359,"parameterSlots":2,"returnSlots":1},"@totalSupply_487":{"entryPoint":1051,"id":487,"parameterSlots":0,"returnSlots":1},"@transferFrom_597":{"entryPoint":1061,"id":597,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2112,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_524":{"entryPoint":1614,"id":524,"parameterSlots":2,"returnSlots":1},"@tryRecover_2973":{"entryPoint":5073,"id":2973,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7268,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6360,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7106,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6200,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6654,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6276,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":6639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6508,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6713,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6456,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":7572,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7613,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6859,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7475,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":7767,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7850,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6471,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6697,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6669,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5869,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6752,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6680,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5880,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7715,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6264,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":6595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6498,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6052,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6443,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5897,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7379,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7668,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7919,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7332,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7428,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6047,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5939,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6102,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7062,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6156,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7018,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15383:29","nodeType":"YulBlock","src":"0:15383:29","statements":[{"body":{"nativeSrc":"66:40:29","nodeType":"YulBlock","src":"66:40:29","statements":[{"nativeSrc":"77:22:29","nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nativeSrc":"93:5:29","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nativeSrc":"87:5:29","nodeType":"YulIdentifier","src":"87:5:29"},"nativeSrc":"87:12:29","nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nativeSrc":"77:6:29","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:29","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:29","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nativeSrc":"208:73:29","nodeType":"YulBlock","src":"208:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:29","nodeType":"YulIdentifier","src":"225:3:29"},{"name":"length","nativeSrc":"230:6:29","nodeType":"YulIdentifier","src":"230:6:29"}],"functionName":{"name":"mstore","nativeSrc":"218:6:29","nodeType":"YulIdentifier","src":"218:6:29"},"nativeSrc":"218:19:29","nodeType":"YulFunctionCall","src":"218:19:29"},"nativeSrc":"218:19:29","nodeType":"YulExpressionStatement","src":"218:19:29"},{"nativeSrc":"246:29:29","nodeType":"YulAssignment","src":"246:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:29","nodeType":"YulIdentifier","src":"265:3:29"},{"kind":"number","nativeSrc":"270:4:29","nodeType":"YulLiteral","src":"270:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:29","nodeType":"YulIdentifier","src":"261:3:29"},"nativeSrc":"261:14:29","nodeType":"YulFunctionCall","src":"261:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:29","nodeType":"YulIdentifier","src":"246:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:29","nodeType":"YulTypedName","src":"180:3:29","type":""},{"name":"length","nativeSrc":"185:6:29","nodeType":"YulTypedName","src":"185:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:29","nodeType":"YulTypedName","src":"196:11:29","type":""}],"src":"112:169:29"},{"body":{"nativeSrc":"349:186:29","nodeType":"YulBlock","src":"349:186:29","statements":[{"nativeSrc":"360:10:29","nodeType":"YulVariableDeclaration","src":"360:10:29","value":{"kind":"number","nativeSrc":"369:1:29","nodeType":"YulLiteral","src":"369:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:29","nodeType":"YulTypedName","src":"364:1:29","type":""}]},{"body":{"nativeSrc":"429:63:29","nodeType":"YulBlock","src":"429:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:29","nodeType":"YulIdentifier","src":"454:3:29"},{"name":"i","nativeSrc":"459:1:29","nodeType":"YulIdentifier","src":"459:1:29"}],"functionName":{"name":"add","nativeSrc":"450:3:29","nodeType":"YulIdentifier","src":"450:3:29"},"nativeSrc":"450:11:29","nodeType":"YulFunctionCall","src":"450:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:29","nodeType":"YulIdentifier","src":"473:3:29"},{"name":"i","nativeSrc":"478:1:29","nodeType":"YulIdentifier","src":"478:1:29"}],"functionName":{"name":"add","nativeSrc":"469:3:29","nodeType":"YulIdentifier","src":"469:3:29"},"nativeSrc":"469:11:29","nodeType":"YulFunctionCall","src":"469:11:29"}],"functionName":{"name":"mload","nativeSrc":"463:5:29","nodeType":"YulIdentifier","src":"463:5:29"},"nativeSrc":"463:18:29","nodeType":"YulFunctionCall","src":"463:18:29"}],"functionName":{"name":"mstore","nativeSrc":"443:6:29","nodeType":"YulIdentifier","src":"443:6:29"},"nativeSrc":"443:39:29","nodeType":"YulFunctionCall","src":"443:39:29"},"nativeSrc":"443:39:29","nodeType":"YulExpressionStatement","src":"443:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:29","nodeType":"YulIdentifier","src":"390:1:29"},{"name":"length","nativeSrc":"393:6:29","nodeType":"YulIdentifier","src":"393:6:29"}],"functionName":{"name":"lt","nativeSrc":"387:2:29","nodeType":"YulIdentifier","src":"387:2:29"},"nativeSrc":"387:13:29","nodeType":"YulFunctionCall","src":"387:13:29"},"nativeSrc":"379:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:29","nodeType":"YulBlock","src":"401:19:29","statements":[{"nativeSrc":"403:15:29","nodeType":"YulAssignment","src":"403:15:29","value":{"arguments":[{"name":"i","nativeSrc":"412:1:29","nodeType":"YulIdentifier","src":"412:1:29"},{"kind":"number","nativeSrc":"415:2:29","nodeType":"YulLiteral","src":"415:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:29","nodeType":"YulIdentifier","src":"408:3:29"},"nativeSrc":"408:10:29","nodeType":"YulFunctionCall","src":"408:10:29"},"variableNames":[{"name":"i","nativeSrc":"403:1:29","nodeType":"YulIdentifier","src":"403:1:29"}]}]},"pre":{"nativeSrc":"383:3:29","nodeType":"YulBlock","src":"383:3:29","statements":[]},"src":"379:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:29","nodeType":"YulIdentifier","src":"512:3:29"},{"name":"length","nativeSrc":"517:6:29","nodeType":"YulIdentifier","src":"517:6:29"}],"functionName":{"name":"add","nativeSrc":"508:3:29","nodeType":"YulIdentifier","src":"508:3:29"},"nativeSrc":"508:16:29","nodeType":"YulFunctionCall","src":"508:16:29"},{"kind":"number","nativeSrc":"526:1:29","nodeType":"YulLiteral","src":"526:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:29","nodeType":"YulIdentifier","src":"501:6:29"},"nativeSrc":"501:27:29","nodeType":"YulFunctionCall","src":"501:27:29"},"nativeSrc":"501:27:29","nodeType":"YulExpressionStatement","src":"501:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:29","nodeType":"YulTypedName","src":"331:3:29","type":""},{"name":"dst","nativeSrc":"336:3:29","nodeType":"YulTypedName","src":"336:3:29","type":""},{"name":"length","nativeSrc":"341:6:29","nodeType":"YulTypedName","src":"341:6:29","type":""}],"src":"287:248:29"},{"body":{"nativeSrc":"589:54:29","nodeType":"YulBlock","src":"589:54:29","statements":[{"nativeSrc":"599:38:29","nodeType":"YulAssignment","src":"599:38:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:29","nodeType":"YulIdentifier","src":"617:5:29"},{"kind":"number","nativeSrc":"624:2:29","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:29","nodeType":"YulIdentifier","src":"613:3:29"},"nativeSrc":"613:14:29","nodeType":"YulFunctionCall","src":"613:14:29"},{"arguments":[{"kind":"number","nativeSrc":"633:2:29","nodeType":"YulLiteral","src":"633:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:29","nodeType":"YulIdentifier","src":"629:3:29"},"nativeSrc":"629:7:29","nodeType":"YulFunctionCall","src":"629:7:29"}],"functionName":{"name":"and","nativeSrc":"609:3:29","nodeType":"YulIdentifier","src":"609:3:29"},"nativeSrc":"609:28:29","nodeType":"YulFunctionCall","src":"609:28:29"},"variableNames":[{"name":"result","nativeSrc":"599:6:29","nodeType":"YulIdentifier","src":"599:6:29"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:29","nodeType":"YulTypedName","src":"572:5:29","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:29","nodeType":"YulTypedName","src":"582:6:29","type":""}],"src":"541:102:29"},{"body":{"nativeSrc":"741:285:29","nodeType":"YulBlock","src":"741:285:29","statements":[{"nativeSrc":"751:53:29","nodeType":"YulVariableDeclaration","src":"751:53:29","value":{"arguments":[{"name":"value","nativeSrc":"798:5:29","nodeType":"YulIdentifier","src":"798:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:29","nodeType":"YulIdentifier","src":"765:32:29"},"nativeSrc":"765:39:29","nodeType":"YulFunctionCall","src":"765:39:29"},"variables":[{"name":"length","nativeSrc":"755:6:29","nodeType":"YulTypedName","src":"755:6:29","type":""}]},{"nativeSrc":"813:78:29","nodeType":"YulAssignment","src":"813:78:29","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:29","nodeType":"YulIdentifier","src":"879:3:29"},{"name":"length","nativeSrc":"884:6:29","nodeType":"YulIdentifier","src":"884:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:29","nodeType":"YulIdentifier","src":"820:58:29"},"nativeSrc":"820:71:29","nodeType":"YulFunctionCall","src":"820:71:29"},"variableNames":[{"name":"pos","nativeSrc":"813:3:29","nodeType":"YulIdentifier","src":"813:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:29","nodeType":"YulIdentifier","src":"939:5:29"},{"kind":"number","nativeSrc":"946:4:29","nodeType":"YulLiteral","src":"946:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:29","nodeType":"YulIdentifier","src":"935:3:29"},"nativeSrc":"935:16:29","nodeType":"YulFunctionCall","src":"935:16:29"},{"name":"pos","nativeSrc":"953:3:29","nodeType":"YulIdentifier","src":"953:3:29"},{"name":"length","nativeSrc":"958:6:29","nodeType":"YulIdentifier","src":"958:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:29","nodeType":"YulIdentifier","src":"900:34:29"},"nativeSrc":"900:65:29","nodeType":"YulFunctionCall","src":"900:65:29"},"nativeSrc":"900:65:29","nodeType":"YulExpressionStatement","src":"900:65:29"},{"nativeSrc":"974:46:29","nodeType":"YulAssignment","src":"974:46:29","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:29","nodeType":"YulIdentifier","src":"985:3:29"},{"arguments":[{"name":"length","nativeSrc":"1012:6:29","nodeType":"YulIdentifier","src":"1012:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:29","nodeType":"YulIdentifier","src":"990:21:29"},"nativeSrc":"990:29:29","nodeType":"YulFunctionCall","src":"990:29:29"}],"functionName":{"name":"add","nativeSrc":"981:3:29","nodeType":"YulIdentifier","src":"981:3:29"},"nativeSrc":"981:39:29","nodeType":"YulFunctionCall","src":"981:39:29"},"variableNames":[{"name":"end","nativeSrc":"974:3:29","nodeType":"YulIdentifier","src":"974:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:29","nodeType":"YulTypedName","src":"722:5:29","type":""},{"name":"pos","nativeSrc":"729:3:29","nodeType":"YulTypedName","src":"729:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:29","nodeType":"YulTypedName","src":"737:3:29","type":""}],"src":"649:377:29"},{"body":{"nativeSrc":"1150:195:29","nodeType":"YulBlock","src":"1150:195:29","statements":[{"nativeSrc":"1160:26:29","nodeType":"YulAssignment","src":"1160:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:29","nodeType":"YulIdentifier","src":"1172:9:29"},{"kind":"number","nativeSrc":"1183:2:29","nodeType":"YulLiteral","src":"1183:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:29","nodeType":"YulIdentifier","src":"1168:3:29"},"nativeSrc":"1168:18:29","nodeType":"YulFunctionCall","src":"1168:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:29","nodeType":"YulIdentifier","src":"1160:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:29","nodeType":"YulIdentifier","src":"1207:9:29"},{"kind":"number","nativeSrc":"1218:1:29","nodeType":"YulLiteral","src":"1218:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:29","nodeType":"YulIdentifier","src":"1203:3:29"},"nativeSrc":"1203:17:29","nodeType":"YulFunctionCall","src":"1203:17:29"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:29","nodeType":"YulIdentifier","src":"1226:4:29"},{"name":"headStart","nativeSrc":"1232:9:29","nodeType":"YulIdentifier","src":"1232:9:29"}],"functionName":{"name":"sub","nativeSrc":"1222:3:29","nodeType":"YulIdentifier","src":"1222:3:29"},"nativeSrc":"1222:20:29","nodeType":"YulFunctionCall","src":"1222:20:29"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:29","nodeType":"YulIdentifier","src":"1196:6:29"},"nativeSrc":"1196:47:29","nodeType":"YulFunctionCall","src":"1196:47:29"},"nativeSrc":"1196:47:29","nodeType":"YulExpressionStatement","src":"1196:47:29"},{"nativeSrc":"1252:86:29","nodeType":"YulAssignment","src":"1252:86:29","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:29","nodeType":"YulIdentifier","src":"1324:6:29"},{"name":"tail","nativeSrc":"1333:4:29","nodeType":"YulIdentifier","src":"1333:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:29","nodeType":"YulIdentifier","src":"1260:63:29"},"nativeSrc":"1260:78:29","nodeType":"YulFunctionCall","src":"1260:78:29"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:29","nodeType":"YulIdentifier","src":"1252:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:29","nodeType":"YulTypedName","src":"1122:9:29","type":""},{"name":"value0","nativeSrc":"1134:6:29","nodeType":"YulTypedName","src":"1134:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:29","nodeType":"YulTypedName","src":"1145:4:29","type":""}],"src":"1032:313:29"},{"body":{"nativeSrc":"1391:35:29","nodeType":"YulBlock","src":"1391:35:29","statements":[{"nativeSrc":"1401:19:29","nodeType":"YulAssignment","src":"1401:19:29","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:29","nodeType":"YulLiteral","src":"1417:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:29","nodeType":"YulIdentifier","src":"1411:5:29"},"nativeSrc":"1411:9:29","nodeType":"YulFunctionCall","src":"1411:9:29"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:29","nodeType":"YulIdentifier","src":"1401:6:29"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:29","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:29","nodeType":"YulTypedName","src":"1384:6:29","type":""}],"src":"1351:75:29"},{"body":{"nativeSrc":"1521:28:29","nodeType":"YulBlock","src":"1521:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:29","nodeType":"YulLiteral","src":"1538:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:29","nodeType":"YulLiteral","src":"1541:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:29","nodeType":"YulIdentifier","src":"1531:6:29"},"nativeSrc":"1531:12:29","nodeType":"YulFunctionCall","src":"1531:12:29"},"nativeSrc":"1531:12:29","nodeType":"YulExpressionStatement","src":"1531:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:29","nodeType":"YulFunctionDefinition","src":"1432:117:29"},{"body":{"nativeSrc":"1644:28:29","nodeType":"YulBlock","src":"1644:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:29","nodeType":"YulLiteral","src":"1661:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:29","nodeType":"YulLiteral","src":"1664:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:29","nodeType":"YulIdentifier","src":"1654:6:29"},"nativeSrc":"1654:12:29","nodeType":"YulFunctionCall","src":"1654:12:29"},"nativeSrc":"1654:12:29","nodeType":"YulExpressionStatement","src":"1654:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:29","nodeType":"YulFunctionDefinition","src":"1555:117:29"},{"body":{"nativeSrc":"1723:81:29","nodeType":"YulBlock","src":"1723:81:29","statements":[{"nativeSrc":"1733:65:29","nodeType":"YulAssignment","src":"1733:65:29","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:29","nodeType":"YulIdentifier","src":"1748:5:29"},{"kind":"number","nativeSrc":"1755:42:29","nodeType":"YulLiteral","src":"1755:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:29","nodeType":"YulIdentifier","src":"1744:3:29"},"nativeSrc":"1744:54:29","nodeType":"YulFunctionCall","src":"1744:54:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:29","nodeType":"YulIdentifier","src":"1733:7:29"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:29","nodeType":"YulTypedName","src":"1705:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:29","nodeType":"YulTypedName","src":"1715:7:29","type":""}],"src":"1678:126:29"},{"body":{"nativeSrc":"1855:51:29","nodeType":"YulBlock","src":"1855:51:29","statements":[{"nativeSrc":"1865:35:29","nodeType":"YulAssignment","src":"1865:35:29","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:29","nodeType":"YulIdentifier","src":"1894:5:29"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:29","nodeType":"YulIdentifier","src":"1876:17:29"},"nativeSrc":"1876:24:29","nodeType":"YulFunctionCall","src":"1876:24:29"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:29","nodeType":"YulIdentifier","src":"1865:7:29"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:29","nodeType":"YulTypedName","src":"1837:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:29","nodeType":"YulTypedName","src":"1847:7:29","type":""}],"src":"1810:96:29"},{"body":{"nativeSrc":"1955:79:29","nodeType":"YulBlock","src":"1955:79:29","statements":[{"body":{"nativeSrc":"2012:16:29","nodeType":"YulBlock","src":"2012:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:29","nodeType":"YulLiteral","src":"2021:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:29","nodeType":"YulLiteral","src":"2024:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:29","nodeType":"YulIdentifier","src":"2014:6:29"},"nativeSrc":"2014:12:29","nodeType":"YulFunctionCall","src":"2014:12:29"},"nativeSrc":"2014:12:29","nodeType":"YulExpressionStatement","src":"2014:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:29","nodeType":"YulIdentifier","src":"1978:5:29"},{"arguments":[{"name":"value","nativeSrc":"2003:5:29","nodeType":"YulIdentifier","src":"2003:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:29","nodeType":"YulIdentifier","src":"1985:17:29"},"nativeSrc":"1985:24:29","nodeType":"YulFunctionCall","src":"1985:24:29"}],"functionName":{"name":"eq","nativeSrc":"1975:2:29","nodeType":"YulIdentifier","src":"1975:2:29"},"nativeSrc":"1975:35:29","nodeType":"YulFunctionCall","src":"1975:35:29"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:29","nodeType":"YulIdentifier","src":"1968:6:29"},"nativeSrc":"1968:43:29","nodeType":"YulFunctionCall","src":"1968:43:29"},"nativeSrc":"1965:63:29","nodeType":"YulIf","src":"1965:63:29"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:29","nodeType":"YulTypedName","src":"1948:5:29","type":""}],"src":"1912:122:29"},{"body":{"nativeSrc":"2092:87:29","nodeType":"YulBlock","src":"2092:87:29","statements":[{"nativeSrc":"2102:29:29","nodeType":"YulAssignment","src":"2102:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:29","nodeType":"YulIdentifier","src":"2124:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:29","nodeType":"YulIdentifier","src":"2111:12:29"},"nativeSrc":"2111:20:29","nodeType":"YulFunctionCall","src":"2111:20:29"},"variableNames":[{"name":"value","nativeSrc":"2102:5:29","nodeType":"YulIdentifier","src":"2102:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:29","nodeType":"YulIdentifier","src":"2167:5:29"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:29","nodeType":"YulIdentifier","src":"2140:26:29"},"nativeSrc":"2140:33:29","nodeType":"YulFunctionCall","src":"2140:33:29"},"nativeSrc":"2140:33:29","nodeType":"YulExpressionStatement","src":"2140:33:29"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:29","nodeType":"YulTypedName","src":"2070:6:29","type":""},{"name":"end","nativeSrc":"2078:3:29","nodeType":"YulTypedName","src":"2078:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:29","nodeType":"YulTypedName","src":"2086:5:29","type":""}],"src":"2040:139:29"},{"body":{"nativeSrc":"2230:32:29","nodeType":"YulBlock","src":"2230:32:29","statements":[{"nativeSrc":"2240:16:29","nodeType":"YulAssignment","src":"2240:16:29","value":{"name":"value","nativeSrc":"2251:5:29","nodeType":"YulIdentifier","src":"2251:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:29","nodeType":"YulIdentifier","src":"2240:7:29"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:29","nodeType":"YulTypedName","src":"2212:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:29","nodeType":"YulTypedName","src":"2222:7:29","type":""}],"src":"2185:77:29"},{"body":{"nativeSrc":"2311:79:29","nodeType":"YulBlock","src":"2311:79:29","statements":[{"body":{"nativeSrc":"2368:16:29","nodeType":"YulBlock","src":"2368:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:29","nodeType":"YulLiteral","src":"2377:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:29","nodeType":"YulLiteral","src":"2380:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:29","nodeType":"YulIdentifier","src":"2370:6:29"},"nativeSrc":"2370:12:29","nodeType":"YulFunctionCall","src":"2370:12:29"},"nativeSrc":"2370:12:29","nodeType":"YulExpressionStatement","src":"2370:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:29","nodeType":"YulIdentifier","src":"2334:5:29"},{"arguments":[{"name":"value","nativeSrc":"2359:5:29","nodeType":"YulIdentifier","src":"2359:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:29","nodeType":"YulIdentifier","src":"2341:17:29"},"nativeSrc":"2341:24:29","nodeType":"YulFunctionCall","src":"2341:24:29"}],"functionName":{"name":"eq","nativeSrc":"2331:2:29","nodeType":"YulIdentifier","src":"2331:2:29"},"nativeSrc":"2331:35:29","nodeType":"YulFunctionCall","src":"2331:35:29"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:29","nodeType":"YulIdentifier","src":"2324:6:29"},"nativeSrc":"2324:43:29","nodeType":"YulFunctionCall","src":"2324:43:29"},"nativeSrc":"2321:63:29","nodeType":"YulIf","src":"2321:63:29"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:29","nodeType":"YulTypedName","src":"2304:5:29","type":""}],"src":"2268:122:29"},{"body":{"nativeSrc":"2448:87:29","nodeType":"YulBlock","src":"2448:87:29","statements":[{"nativeSrc":"2458:29:29","nodeType":"YulAssignment","src":"2458:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:29","nodeType":"YulIdentifier","src":"2480:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:29","nodeType":"YulIdentifier","src":"2467:12:29"},"nativeSrc":"2467:20:29","nodeType":"YulFunctionCall","src":"2467:20:29"},"variableNames":[{"name":"value","nativeSrc":"2458:5:29","nodeType":"YulIdentifier","src":"2458:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:29","nodeType":"YulIdentifier","src":"2523:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:29","nodeType":"YulIdentifier","src":"2496:26:29"},"nativeSrc":"2496:33:29","nodeType":"YulFunctionCall","src":"2496:33:29"},"nativeSrc":"2496:33:29","nodeType":"YulExpressionStatement","src":"2496:33:29"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:29","nodeType":"YulTypedName","src":"2426:6:29","type":""},{"name":"end","nativeSrc":"2434:3:29","nodeType":"YulTypedName","src":"2434:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:29","nodeType":"YulTypedName","src":"2442:5:29","type":""}],"src":"2396:139:29"},{"body":{"nativeSrc":"2624:391:29","nodeType":"YulBlock","src":"2624:391:29","statements":[{"body":{"nativeSrc":"2670:83:29","nodeType":"YulBlock","src":"2670:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:29","nodeType":"YulIdentifier","src":"2672:77:29"},"nativeSrc":"2672:79:29","nodeType":"YulFunctionCall","src":"2672:79:29"},"nativeSrc":"2672:79:29","nodeType":"YulExpressionStatement","src":"2672:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:29","nodeType":"YulIdentifier","src":"2645:7:29"},{"name":"headStart","nativeSrc":"2654:9:29","nodeType":"YulIdentifier","src":"2654:9:29"}],"functionName":{"name":"sub","nativeSrc":"2641:3:29","nodeType":"YulIdentifier","src":"2641:3:29"},"nativeSrc":"2641:23:29","nodeType":"YulFunctionCall","src":"2641:23:29"},{"kind":"number","nativeSrc":"2666:2:29","nodeType":"YulLiteral","src":"2666:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:29","nodeType":"YulIdentifier","src":"2637:3:29"},"nativeSrc":"2637:32:29","nodeType":"YulFunctionCall","src":"2637:32:29"},"nativeSrc":"2634:119:29","nodeType":"YulIf","src":"2634:119:29"},{"nativeSrc":"2763:117:29","nodeType":"YulBlock","src":"2763:117:29","statements":[{"nativeSrc":"2778:15:29","nodeType":"YulVariableDeclaration","src":"2778:15:29","value":{"kind":"number","nativeSrc":"2792:1:29","nodeType":"YulLiteral","src":"2792:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:29","nodeType":"YulTypedName","src":"2782:6:29","type":""}]},{"nativeSrc":"2807:63:29","nodeType":"YulAssignment","src":"2807:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:29","nodeType":"YulIdentifier","src":"2842:9:29"},{"name":"offset","nativeSrc":"2853:6:29","nodeType":"YulIdentifier","src":"2853:6:29"}],"functionName":{"name":"add","nativeSrc":"2838:3:29","nodeType":"YulIdentifier","src":"2838:3:29"},"nativeSrc":"2838:22:29","nodeType":"YulFunctionCall","src":"2838:22:29"},{"name":"dataEnd","nativeSrc":"2862:7:29","nodeType":"YulIdentifier","src":"2862:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:29","nodeType":"YulIdentifier","src":"2817:20:29"},"nativeSrc":"2817:53:29","nodeType":"YulFunctionCall","src":"2817:53:29"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:29","nodeType":"YulIdentifier","src":"2807:6:29"}]}]},{"nativeSrc":"2890:118:29","nodeType":"YulBlock","src":"2890:118:29","statements":[{"nativeSrc":"2905:16:29","nodeType":"YulVariableDeclaration","src":"2905:16:29","value":{"kind":"number","nativeSrc":"2919:2:29","nodeType":"YulLiteral","src":"2919:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:29","nodeType":"YulTypedName","src":"2909:6:29","type":""}]},{"nativeSrc":"2935:63:29","nodeType":"YulAssignment","src":"2935:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:29","nodeType":"YulIdentifier","src":"2970:9:29"},{"name":"offset","nativeSrc":"2981:6:29","nodeType":"YulIdentifier","src":"2981:6:29"}],"functionName":{"name":"add","nativeSrc":"2966:3:29","nodeType":"YulIdentifier","src":"2966:3:29"},"nativeSrc":"2966:22:29","nodeType":"YulFunctionCall","src":"2966:22:29"},{"name":"dataEnd","nativeSrc":"2990:7:29","nodeType":"YulIdentifier","src":"2990:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:29","nodeType":"YulIdentifier","src":"2945:20:29"},"nativeSrc":"2945:53:29","nodeType":"YulFunctionCall","src":"2945:53:29"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:29","nodeType":"YulIdentifier","src":"2935:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:29","nodeType":"YulTypedName","src":"2586:9:29","type":""},{"name":"dataEnd","nativeSrc":"2597:7:29","nodeType":"YulTypedName","src":"2597:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:29","nodeType":"YulTypedName","src":"2609:6:29","type":""},{"name":"value1","nativeSrc":"2617:6:29","nodeType":"YulTypedName","src":"2617:6:29","type":""}],"src":"2541:474:29"},{"body":{"nativeSrc":"3063:48:29","nodeType":"YulBlock","src":"3063:48:29","statements":[{"nativeSrc":"3073:32:29","nodeType":"YulAssignment","src":"3073:32:29","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:29","nodeType":"YulIdentifier","src":"3098:5:29"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:29","nodeType":"YulIdentifier","src":"3091:6:29"},"nativeSrc":"3091:13:29","nodeType":"YulFunctionCall","src":"3091:13:29"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:29","nodeType":"YulIdentifier","src":"3084:6:29"},"nativeSrc":"3084:21:29","nodeType":"YulFunctionCall","src":"3084:21:29"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:29","nodeType":"YulIdentifier","src":"3073:7:29"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:29","nodeType":"YulTypedName","src":"3045:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:29","nodeType":"YulTypedName","src":"3055:7:29","type":""}],"src":"3021:90:29"},{"body":{"nativeSrc":"3176:50:29","nodeType":"YulBlock","src":"3176:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:29","nodeType":"YulIdentifier","src":"3193:3:29"},{"arguments":[{"name":"value","nativeSrc":"3213:5:29","nodeType":"YulIdentifier","src":"3213:5:29"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:29","nodeType":"YulIdentifier","src":"3198:14:29"},"nativeSrc":"3198:21:29","nodeType":"YulFunctionCall","src":"3198:21:29"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:29","nodeType":"YulIdentifier","src":"3186:6:29"},"nativeSrc":"3186:34:29","nodeType":"YulFunctionCall","src":"3186:34:29"},"nativeSrc":"3186:34:29","nodeType":"YulExpressionStatement","src":"3186:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:29","nodeType":"YulTypedName","src":"3164:5:29","type":""},{"name":"pos","nativeSrc":"3171:3:29","nodeType":"YulTypedName","src":"3171:3:29","type":""}],"src":"3117:109:29"},{"body":{"nativeSrc":"3324:118:29","nodeType":"YulBlock","src":"3324:118:29","statements":[{"nativeSrc":"3334:26:29","nodeType":"YulAssignment","src":"3334:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:29","nodeType":"YulIdentifier","src":"3346:9:29"},{"kind":"number","nativeSrc":"3357:2:29","nodeType":"YulLiteral","src":"3357:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:29","nodeType":"YulIdentifier","src":"3342:3:29"},"nativeSrc":"3342:18:29","nodeType":"YulFunctionCall","src":"3342:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:29","nodeType":"YulIdentifier","src":"3334:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:29","nodeType":"YulIdentifier","src":"3408:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:29","nodeType":"YulIdentifier","src":"3421:9:29"},{"kind":"number","nativeSrc":"3432:1:29","nodeType":"YulLiteral","src":"3432:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:29","nodeType":"YulIdentifier","src":"3417:3:29"},"nativeSrc":"3417:17:29","nodeType":"YulFunctionCall","src":"3417:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:29","nodeType":"YulIdentifier","src":"3370:37:29"},"nativeSrc":"3370:65:29","nodeType":"YulFunctionCall","src":"3370:65:29"},"nativeSrc":"3370:65:29","nodeType":"YulExpressionStatement","src":"3370:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:29","nodeType":"YulTypedName","src":"3296:9:29","type":""},{"name":"value0","nativeSrc":"3308:6:29","nodeType":"YulTypedName","src":"3308:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:29","nodeType":"YulTypedName","src":"3319:4:29","type":""}],"src":"3232:210:29"},{"body":{"nativeSrc":"3513:53:29","nodeType":"YulBlock","src":"3513:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:29","nodeType":"YulIdentifier","src":"3530:3:29"},{"arguments":[{"name":"value","nativeSrc":"3553:5:29","nodeType":"YulIdentifier","src":"3553:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:29","nodeType":"YulIdentifier","src":"3535:17:29"},"nativeSrc":"3535:24:29","nodeType":"YulFunctionCall","src":"3535:24:29"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:29","nodeType":"YulIdentifier","src":"3523:6:29"},"nativeSrc":"3523:37:29","nodeType":"YulFunctionCall","src":"3523:37:29"},"nativeSrc":"3523:37:29","nodeType":"YulExpressionStatement","src":"3523:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:29","nodeType":"YulTypedName","src":"3501:5:29","type":""},{"name":"pos","nativeSrc":"3508:3:29","nodeType":"YulTypedName","src":"3508:3:29","type":""}],"src":"3448:118:29"},{"body":{"nativeSrc":"3670:124:29","nodeType":"YulBlock","src":"3670:124:29","statements":[{"nativeSrc":"3680:26:29","nodeType":"YulAssignment","src":"3680:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:29","nodeType":"YulIdentifier","src":"3692:9:29"},{"kind":"number","nativeSrc":"3703:2:29","nodeType":"YulLiteral","src":"3703:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:29","nodeType":"YulIdentifier","src":"3688:3:29"},"nativeSrc":"3688:18:29","nodeType":"YulFunctionCall","src":"3688:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:29","nodeType":"YulIdentifier","src":"3680:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:29","nodeType":"YulIdentifier","src":"3760:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:29","nodeType":"YulIdentifier","src":"3773:9:29"},{"kind":"number","nativeSrc":"3784:1:29","nodeType":"YulLiteral","src":"3784:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:29","nodeType":"YulIdentifier","src":"3769:3:29"},"nativeSrc":"3769:17:29","nodeType":"YulFunctionCall","src":"3769:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:29","nodeType":"YulIdentifier","src":"3716:43:29"},"nativeSrc":"3716:71:29","nodeType":"YulFunctionCall","src":"3716:71:29"},"nativeSrc":"3716:71:29","nodeType":"YulExpressionStatement","src":"3716:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:29","nodeType":"YulTypedName","src":"3642:9:29","type":""},{"name":"value0","nativeSrc":"3654:6:29","nodeType":"YulTypedName","src":"3654:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:29","nodeType":"YulTypedName","src":"3665:4:29","type":""}],"src":"3572:222:29"},{"body":{"nativeSrc":"3900:519:29","nodeType":"YulBlock","src":"3900:519:29","statements":[{"body":{"nativeSrc":"3946:83:29","nodeType":"YulBlock","src":"3946:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:29","nodeType":"YulIdentifier","src":"3948:77:29"},"nativeSrc":"3948:79:29","nodeType":"YulFunctionCall","src":"3948:79:29"},"nativeSrc":"3948:79:29","nodeType":"YulExpressionStatement","src":"3948:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:29","nodeType":"YulIdentifier","src":"3921:7:29"},{"name":"headStart","nativeSrc":"3930:9:29","nodeType":"YulIdentifier","src":"3930:9:29"}],"functionName":{"name":"sub","nativeSrc":"3917:3:29","nodeType":"YulIdentifier","src":"3917:3:29"},"nativeSrc":"3917:23:29","nodeType":"YulFunctionCall","src":"3917:23:29"},{"kind":"number","nativeSrc":"3942:2:29","nodeType":"YulLiteral","src":"3942:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:29","nodeType":"YulIdentifier","src":"3913:3:29"},"nativeSrc":"3913:32:29","nodeType":"YulFunctionCall","src":"3913:32:29"},"nativeSrc":"3910:119:29","nodeType":"YulIf","src":"3910:119:29"},{"nativeSrc":"4039:117:29","nodeType":"YulBlock","src":"4039:117:29","statements":[{"nativeSrc":"4054:15:29","nodeType":"YulVariableDeclaration","src":"4054:15:29","value":{"kind":"number","nativeSrc":"4068:1:29","nodeType":"YulLiteral","src":"4068:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:29","nodeType":"YulTypedName","src":"4058:6:29","type":""}]},{"nativeSrc":"4083:63:29","nodeType":"YulAssignment","src":"4083:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:29","nodeType":"YulIdentifier","src":"4118:9:29"},{"name":"offset","nativeSrc":"4129:6:29","nodeType":"YulIdentifier","src":"4129:6:29"}],"functionName":{"name":"add","nativeSrc":"4114:3:29","nodeType":"YulIdentifier","src":"4114:3:29"},"nativeSrc":"4114:22:29","nodeType":"YulFunctionCall","src":"4114:22:29"},{"name":"dataEnd","nativeSrc":"4138:7:29","nodeType":"YulIdentifier","src":"4138:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:29","nodeType":"YulIdentifier","src":"4093:20:29"},"nativeSrc":"4093:53:29","nodeType":"YulFunctionCall","src":"4093:53:29"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:29","nodeType":"YulIdentifier","src":"4083:6:29"}]}]},{"nativeSrc":"4166:118:29","nodeType":"YulBlock","src":"4166:118:29","statements":[{"nativeSrc":"4181:16:29","nodeType":"YulVariableDeclaration","src":"4181:16:29","value":{"kind":"number","nativeSrc":"4195:2:29","nodeType":"YulLiteral","src":"4195:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:29","nodeType":"YulTypedName","src":"4185:6:29","type":""}]},{"nativeSrc":"4211:63:29","nodeType":"YulAssignment","src":"4211:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:29","nodeType":"YulIdentifier","src":"4246:9:29"},{"name":"offset","nativeSrc":"4257:6:29","nodeType":"YulIdentifier","src":"4257:6:29"}],"functionName":{"name":"add","nativeSrc":"4242:3:29","nodeType":"YulIdentifier","src":"4242:3:29"},"nativeSrc":"4242:22:29","nodeType":"YulFunctionCall","src":"4242:22:29"},{"name":"dataEnd","nativeSrc":"4266:7:29","nodeType":"YulIdentifier","src":"4266:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:29","nodeType":"YulIdentifier","src":"4221:20:29"},"nativeSrc":"4221:53:29","nodeType":"YulFunctionCall","src":"4221:53:29"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:29","nodeType":"YulIdentifier","src":"4211:6:29"}]}]},{"nativeSrc":"4294:118:29","nodeType":"YulBlock","src":"4294:118:29","statements":[{"nativeSrc":"4309:16:29","nodeType":"YulVariableDeclaration","src":"4309:16:29","value":{"kind":"number","nativeSrc":"4323:2:29","nodeType":"YulLiteral","src":"4323:2:29","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:29","nodeType":"YulTypedName","src":"4313:6:29","type":""}]},{"nativeSrc":"4339:63:29","nodeType":"YulAssignment","src":"4339:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:29","nodeType":"YulIdentifier","src":"4374:9:29"},{"name":"offset","nativeSrc":"4385:6:29","nodeType":"YulIdentifier","src":"4385:6:29"}],"functionName":{"name":"add","nativeSrc":"4370:3:29","nodeType":"YulIdentifier","src":"4370:3:29"},"nativeSrc":"4370:22:29","nodeType":"YulFunctionCall","src":"4370:22:29"},{"name":"dataEnd","nativeSrc":"4394:7:29","nodeType":"YulIdentifier","src":"4394:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:29","nodeType":"YulIdentifier","src":"4349:20:29"},"nativeSrc":"4349:53:29","nodeType":"YulFunctionCall","src":"4349:53:29"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:29","nodeType":"YulIdentifier","src":"4339:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:29","nodeType":"YulTypedName","src":"3854:9:29","type":""},{"name":"dataEnd","nativeSrc":"3865:7:29","nodeType":"YulTypedName","src":"3865:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:29","nodeType":"YulTypedName","src":"3877:6:29","type":""},{"name":"value1","nativeSrc":"3885:6:29","nodeType":"YulTypedName","src":"3885:6:29","type":""},{"name":"value2","nativeSrc":"3893:6:29","nodeType":"YulTypedName","src":"3893:6:29","type":""}],"src":"3800:619:29"},{"body":{"nativeSrc":"4468:43:29","nodeType":"YulBlock","src":"4468:43:29","statements":[{"nativeSrc":"4478:27:29","nodeType":"YulAssignment","src":"4478:27:29","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:29","nodeType":"YulIdentifier","src":"4493:5:29"},{"kind":"number","nativeSrc":"4500:4:29","nodeType":"YulLiteral","src":"4500:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:29","nodeType":"YulIdentifier","src":"4489:3:29"},"nativeSrc":"4489:16:29","nodeType":"YulFunctionCall","src":"4489:16:29"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:29","nodeType":"YulIdentifier","src":"4478:7:29"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:29","nodeType":"YulTypedName","src":"4450:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:29","nodeType":"YulTypedName","src":"4460:7:29","type":""}],"src":"4425:86:29"},{"body":{"nativeSrc":"4578:51:29","nodeType":"YulBlock","src":"4578:51:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:29","nodeType":"YulIdentifier","src":"4595:3:29"},{"arguments":[{"name":"value","nativeSrc":"4616:5:29","nodeType":"YulIdentifier","src":"4616:5:29"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:29","nodeType":"YulIdentifier","src":"4600:15:29"},"nativeSrc":"4600:22:29","nodeType":"YulFunctionCall","src":"4600:22:29"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:29","nodeType":"YulIdentifier","src":"4588:6:29"},"nativeSrc":"4588:35:29","nodeType":"YulFunctionCall","src":"4588:35:29"},"nativeSrc":"4588:35:29","nodeType":"YulExpressionStatement","src":"4588:35:29"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:29","nodeType":"YulTypedName","src":"4566:5:29","type":""},{"name":"pos","nativeSrc":"4573:3:29","nodeType":"YulTypedName","src":"4573:3:29","type":""}],"src":"4517:112:29"},{"body":{"nativeSrc":"4729:120:29","nodeType":"YulBlock","src":"4729:120:29","statements":[{"nativeSrc":"4739:26:29","nodeType":"YulAssignment","src":"4739:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:29","nodeType":"YulIdentifier","src":"4751:9:29"},{"kind":"number","nativeSrc":"4762:2:29","nodeType":"YulLiteral","src":"4762:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:29","nodeType":"YulIdentifier","src":"4747:3:29"},"nativeSrc":"4747:18:29","nodeType":"YulFunctionCall","src":"4747:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:29","nodeType":"YulIdentifier","src":"4739:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:29","nodeType":"YulIdentifier","src":"4815:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:29","nodeType":"YulIdentifier","src":"4828:9:29"},{"kind":"number","nativeSrc":"4839:1:29","nodeType":"YulLiteral","src":"4839:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:29","nodeType":"YulIdentifier","src":"4824:3:29"},"nativeSrc":"4824:17:29","nodeType":"YulFunctionCall","src":"4824:17:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:29","nodeType":"YulIdentifier","src":"4775:39:29"},"nativeSrc":"4775:67:29","nodeType":"YulFunctionCall","src":"4775:67:29"},"nativeSrc":"4775:67:29","nodeType":"YulExpressionStatement","src":"4775:67:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:29","nodeType":"YulTypedName","src":"4701:9:29","type":""},{"name":"value0","nativeSrc":"4713:6:29","nodeType":"YulTypedName","src":"4713:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:29","nodeType":"YulTypedName","src":"4724:4:29","type":""}],"src":"4635:214:29"},{"body":{"nativeSrc":"4900:32:29","nodeType":"YulBlock","src":"4900:32:29","statements":[{"nativeSrc":"4910:16:29","nodeType":"YulAssignment","src":"4910:16:29","value":{"name":"value","nativeSrc":"4921:5:29","nodeType":"YulIdentifier","src":"4921:5:29"},"variableNames":[{"name":"cleaned","nativeSrc":"4910:7:29","nodeType":"YulIdentifier","src":"4910:7:29"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4855:77:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4882:5:29","nodeType":"YulTypedName","src":"4882:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4892:7:29","nodeType":"YulTypedName","src":"4892:7:29","type":""}],"src":"4855:77:29"},{"body":{"nativeSrc":"5003:53:29","nodeType":"YulBlock","src":"5003:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5020:3:29","nodeType":"YulIdentifier","src":"5020:3:29"},{"arguments":[{"name":"value","nativeSrc":"5043:5:29","nodeType":"YulIdentifier","src":"5043:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5025:17:29","nodeType":"YulIdentifier","src":"5025:17:29"},"nativeSrc":"5025:24:29","nodeType":"YulFunctionCall","src":"5025:24:29"}],"functionName":{"name":"mstore","nativeSrc":"5013:6:29","nodeType":"YulIdentifier","src":"5013:6:29"},"nativeSrc":"5013:37:29","nodeType":"YulFunctionCall","src":"5013:37:29"},"nativeSrc":"5013:37:29","nodeType":"YulExpressionStatement","src":"5013:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4938:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4991:5:29","nodeType":"YulTypedName","src":"4991:5:29","type":""},{"name":"pos","nativeSrc":"4998:3:29","nodeType":"YulTypedName","src":"4998:3:29","type":""}],"src":"4938:118:29"},{"body":{"nativeSrc":"5160:124:29","nodeType":"YulBlock","src":"5160:124:29","statements":[{"nativeSrc":"5170:26:29","nodeType":"YulAssignment","src":"5170:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5182:9:29","nodeType":"YulIdentifier","src":"5182:9:29"},{"kind":"number","nativeSrc":"5193:2:29","nodeType":"YulLiteral","src":"5193:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5178:3:29","nodeType":"YulIdentifier","src":"5178:3:29"},"nativeSrc":"5178:18:29","nodeType":"YulFunctionCall","src":"5178:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5170:4:29","nodeType":"YulIdentifier","src":"5170:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5250:6:29","nodeType":"YulIdentifier","src":"5250:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"5263:9:29","nodeType":"YulIdentifier","src":"5263:9:29"},{"kind":"number","nativeSrc":"5274:1:29","nodeType":"YulLiteral","src":"5274:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5259:3:29","nodeType":"YulIdentifier","src":"5259:3:29"},"nativeSrc":"5259:17:29","nodeType":"YulFunctionCall","src":"5259:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5206:43:29","nodeType":"YulIdentifier","src":"5206:43:29"},"nativeSrc":"5206:71:29","nodeType":"YulFunctionCall","src":"5206:71:29"},"nativeSrc":"5206:71:29","nodeType":"YulExpressionStatement","src":"5206:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5062:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5132:9:29","nodeType":"YulTypedName","src":"5132:9:29","type":""},{"name":"value0","nativeSrc":"5144:6:29","nodeType":"YulTypedName","src":"5144:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5155:4:29","nodeType":"YulTypedName","src":"5155:4:29","type":""}],"src":"5062:222:29"},{"body":{"nativeSrc":"5356:263:29","nodeType":"YulBlock","src":"5356:263:29","statements":[{"body":{"nativeSrc":"5402:83:29","nodeType":"YulBlock","src":"5402:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5404:77:29","nodeType":"YulIdentifier","src":"5404:77:29"},"nativeSrc":"5404:79:29","nodeType":"YulFunctionCall","src":"5404:79:29"},"nativeSrc":"5404:79:29","nodeType":"YulExpressionStatement","src":"5404:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5377:7:29","nodeType":"YulIdentifier","src":"5377:7:29"},{"name":"headStart","nativeSrc":"5386:9:29","nodeType":"YulIdentifier","src":"5386:9:29"}],"functionName":{"name":"sub","nativeSrc":"5373:3:29","nodeType":"YulIdentifier","src":"5373:3:29"},"nativeSrc":"5373:23:29","nodeType":"YulFunctionCall","src":"5373:23:29"},{"kind":"number","nativeSrc":"5398:2:29","nodeType":"YulLiteral","src":"5398:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5369:3:29","nodeType":"YulIdentifier","src":"5369:3:29"},"nativeSrc":"5369:32:29","nodeType":"YulFunctionCall","src":"5369:32:29"},"nativeSrc":"5366:119:29","nodeType":"YulIf","src":"5366:119:29"},{"nativeSrc":"5495:117:29","nodeType":"YulBlock","src":"5495:117:29","statements":[{"nativeSrc":"5510:15:29","nodeType":"YulVariableDeclaration","src":"5510:15:29","value":{"kind":"number","nativeSrc":"5524:1:29","nodeType":"YulLiteral","src":"5524:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5514:6:29","nodeType":"YulTypedName","src":"5514:6:29","type":""}]},{"nativeSrc":"5539:63:29","nodeType":"YulAssignment","src":"5539:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5574:9:29","nodeType":"YulIdentifier","src":"5574:9:29"},{"name":"offset","nativeSrc":"5585:6:29","nodeType":"YulIdentifier","src":"5585:6:29"}],"functionName":{"name":"add","nativeSrc":"5570:3:29","nodeType":"YulIdentifier","src":"5570:3:29"},"nativeSrc":"5570:22:29","nodeType":"YulFunctionCall","src":"5570:22:29"},{"name":"dataEnd","nativeSrc":"5594:7:29","nodeType":"YulIdentifier","src":"5594:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5549:20:29","nodeType":"YulIdentifier","src":"5549:20:29"},"nativeSrc":"5549:53:29","nodeType":"YulFunctionCall","src":"5549:53:29"},"variableNames":[{"name":"value0","nativeSrc":"5539:6:29","nodeType":"YulIdentifier","src":"5539:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5290:329:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5326:9:29","nodeType":"YulTypedName","src":"5326:9:29","type":""},{"name":"dataEnd","nativeSrc":"5337:7:29","nodeType":"YulTypedName","src":"5337:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5349:6:29","nodeType":"YulTypedName","src":"5349:6:29","type":""}],"src":"5290:329:29"},{"body":{"nativeSrc":"5669:105:29","nodeType":"YulBlock","src":"5669:105:29","statements":[{"nativeSrc":"5679:89:29","nodeType":"YulAssignment","src":"5679:89:29","value":{"arguments":[{"name":"value","nativeSrc":"5694:5:29","nodeType":"YulIdentifier","src":"5694:5:29"},{"kind":"number","nativeSrc":"5701:66:29","nodeType":"YulLiteral","src":"5701:66:29","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5690:3:29","nodeType":"YulIdentifier","src":"5690:3:29"},"nativeSrc":"5690:78:29","nodeType":"YulFunctionCall","src":"5690:78:29"},"variableNames":[{"name":"cleaned","nativeSrc":"5679:7:29","nodeType":"YulIdentifier","src":"5679:7:29"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5625:149:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5651:5:29","nodeType":"YulTypedName","src":"5651:5:29","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5661:7:29","nodeType":"YulTypedName","src":"5661:7:29","type":""}],"src":"5625:149:29"},{"body":{"nativeSrc":"5843:52:29","nodeType":"YulBlock","src":"5843:52:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5860:3:29","nodeType":"YulIdentifier","src":"5860:3:29"},{"arguments":[{"name":"value","nativeSrc":"5882:5:29","nodeType":"YulIdentifier","src":"5882:5:29"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"5865:16:29","nodeType":"YulIdentifier","src":"5865:16:29"},"nativeSrc":"5865:23:29","nodeType":"YulFunctionCall","src":"5865:23:29"}],"functionName":{"name":"mstore","nativeSrc":"5853:6:29","nodeType":"YulIdentifier","src":"5853:6:29"},"nativeSrc":"5853:36:29","nodeType":"YulFunctionCall","src":"5853:36:29"},"nativeSrc":"5853:36:29","nodeType":"YulExpressionStatement","src":"5853:36:29"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"5780:115:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5831:5:29","nodeType":"YulTypedName","src":"5831:5:29","type":""},{"name":"pos","nativeSrc":"5838:3:29","nodeType":"YulTypedName","src":"5838:3:29","type":""}],"src":"5780:115:29"},{"body":{"nativeSrc":"5966:53:29","nodeType":"YulBlock","src":"5966:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5983:3:29","nodeType":"YulIdentifier","src":"5983:3:29"},{"arguments":[{"name":"value","nativeSrc":"6006:5:29","nodeType":"YulIdentifier","src":"6006:5:29"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5988:17:29","nodeType":"YulIdentifier","src":"5988:17:29"},"nativeSrc":"5988:24:29","nodeType":"YulFunctionCall","src":"5988:24:29"}],"functionName":{"name":"mstore","nativeSrc":"5976:6:29","nodeType":"YulIdentifier","src":"5976:6:29"},"nativeSrc":"5976:37:29","nodeType":"YulFunctionCall","src":"5976:37:29"},"nativeSrc":"5976:37:29","nodeType":"YulExpressionStatement","src":"5976:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5901:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5954:5:29","nodeType":"YulTypedName","src":"5954:5:29","type":""},{"name":"pos","nativeSrc":"5961:3:29","nodeType":"YulTypedName","src":"5961:3:29","type":""}],"src":"5901:118:29"},{"body":{"nativeSrc":"6099:40:29","nodeType":"YulBlock","src":"6099:40:29","statements":[{"nativeSrc":"6110:22:29","nodeType":"YulAssignment","src":"6110:22:29","value":{"arguments":[{"name":"value","nativeSrc":"6126:5:29","nodeType":"YulIdentifier","src":"6126:5:29"}],"functionName":{"name":"mload","nativeSrc":"6120:5:29","nodeType":"YulIdentifier","src":"6120:5:29"},"nativeSrc":"6120:12:29","nodeType":"YulFunctionCall","src":"6120:12:29"},"variableNames":[{"name":"length","nativeSrc":"6110:6:29","nodeType":"YulIdentifier","src":"6110:6:29"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6025:114:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6082:5:29","nodeType":"YulTypedName","src":"6082:5:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6092:6:29","nodeType":"YulTypedName","src":"6092:6:29","type":""}],"src":"6025:114:29"},{"body":{"nativeSrc":"6256:73:29","nodeType":"YulBlock","src":"6256:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6273:3:29","nodeType":"YulIdentifier","src":"6273:3:29"},{"name":"length","nativeSrc":"6278:6:29","nodeType":"YulIdentifier","src":"6278:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6266:6:29","nodeType":"YulIdentifier","src":"6266:6:29"},"nativeSrc":"6266:19:29","nodeType":"YulFunctionCall","src":"6266:19:29"},"nativeSrc":"6266:19:29","nodeType":"YulExpressionStatement","src":"6266:19:29"},{"nativeSrc":"6294:29:29","nodeType":"YulAssignment","src":"6294:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"6313:3:29","nodeType":"YulIdentifier","src":"6313:3:29"},{"kind":"number","nativeSrc":"6318:4:29","nodeType":"YulLiteral","src":"6318:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6309:3:29","nodeType":"YulIdentifier","src":"6309:3:29"},"nativeSrc":"6309:14:29","nodeType":"YulFunctionCall","src":"6309:14:29"},"variableNames":[{"name":"updated_pos","nativeSrc":"6294:11:29","nodeType":"YulIdentifier","src":"6294:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6145:184:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6228:3:29","nodeType":"YulTypedName","src":"6228:3:29","type":""},{"name":"length","nativeSrc":"6233:6:29","nodeType":"YulTypedName","src":"6233:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6244:11:29","nodeType":"YulTypedName","src":"6244:11:29","type":""}],"src":"6145:184:29"},{"body":{"nativeSrc":"6407:60:29","nodeType":"YulBlock","src":"6407:60:29","statements":[{"nativeSrc":"6417:11:29","nodeType":"YulAssignment","src":"6417:11:29","value":{"name":"ptr","nativeSrc":"6425:3:29","nodeType":"YulIdentifier","src":"6425:3:29"},"variableNames":[{"name":"data","nativeSrc":"6417:4:29","nodeType":"YulIdentifier","src":"6417:4:29"}]},{"nativeSrc":"6438:22:29","nodeType":"YulAssignment","src":"6438:22:29","value":{"arguments":[{"name":"ptr","nativeSrc":"6450:3:29","nodeType":"YulIdentifier","src":"6450:3:29"},{"kind":"number","nativeSrc":"6455:4:29","nodeType":"YulLiteral","src":"6455:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6446:3:29","nodeType":"YulIdentifier","src":"6446:3:29"},"nativeSrc":"6446:14:29","nodeType":"YulFunctionCall","src":"6446:14:29"},"variableNames":[{"name":"data","nativeSrc":"6438:4:29","nodeType":"YulIdentifier","src":"6438:4:29"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6335:132:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6394:3:29","nodeType":"YulTypedName","src":"6394:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6402:4:29","nodeType":"YulTypedName","src":"6402:4:29","type":""}],"src":"6335:132:29"},{"body":{"nativeSrc":"6528:53:29","nodeType":"YulBlock","src":"6528:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6545:3:29","nodeType":"YulIdentifier","src":"6545:3:29"},{"arguments":[{"name":"value","nativeSrc":"6568:5:29","nodeType":"YulIdentifier","src":"6568:5:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6550:17:29","nodeType":"YulIdentifier","src":"6550:17:29"},"nativeSrc":"6550:24:29","nodeType":"YulFunctionCall","src":"6550:24:29"}],"functionName":{"name":"mstore","nativeSrc":"6538:6:29","nodeType":"YulIdentifier","src":"6538:6:29"},"nativeSrc":"6538:37:29","nodeType":"YulFunctionCall","src":"6538:37:29"},"nativeSrc":"6538:37:29","nodeType":"YulExpressionStatement","src":"6538:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6473:108:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6516:5:29","nodeType":"YulTypedName","src":"6516:5:29","type":""},{"name":"pos","nativeSrc":"6523:3:29","nodeType":"YulTypedName","src":"6523:3:29","type":""}],"src":"6473:108:29"},{"body":{"nativeSrc":"6667:99:29","nodeType":"YulBlock","src":"6667:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6711:6:29","nodeType":"YulIdentifier","src":"6711:6:29"},{"name":"pos","nativeSrc":"6719:3:29","nodeType":"YulIdentifier","src":"6719:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6677:33:29","nodeType":"YulIdentifier","src":"6677:33:29"},"nativeSrc":"6677:46:29","nodeType":"YulFunctionCall","src":"6677:46:29"},"nativeSrc":"6677:46:29","nodeType":"YulExpressionStatement","src":"6677:46:29"},{"nativeSrc":"6732:28:29","nodeType":"YulAssignment","src":"6732:28:29","value":{"arguments":[{"name":"pos","nativeSrc":"6750:3:29","nodeType":"YulIdentifier","src":"6750:3:29"},{"kind":"number","nativeSrc":"6755:4:29","nodeType":"YulLiteral","src":"6755:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6746:3:29","nodeType":"YulIdentifier","src":"6746:3:29"},"nativeSrc":"6746:14:29","nodeType":"YulFunctionCall","src":"6746:14:29"},"variableNames":[{"name":"updatedPos","nativeSrc":"6732:10:29","nodeType":"YulIdentifier","src":"6732:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6587:179:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6640:6:29","nodeType":"YulTypedName","src":"6640:6:29","type":""},{"name":"pos","nativeSrc":"6648:3:29","nodeType":"YulTypedName","src":"6648:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6656:10:29","nodeType":"YulTypedName","src":"6656:10:29","type":""}],"src":"6587:179:29"},{"body":{"nativeSrc":"6847:38:29","nodeType":"YulBlock","src":"6847:38:29","statements":[{"nativeSrc":"6857:22:29","nodeType":"YulAssignment","src":"6857:22:29","value":{"arguments":[{"name":"ptr","nativeSrc":"6869:3:29","nodeType":"YulIdentifier","src":"6869:3:29"},{"kind":"number","nativeSrc":"6874:4:29","nodeType":"YulLiteral","src":"6874:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6865:3:29","nodeType":"YulIdentifier","src":"6865:3:29"},"nativeSrc":"6865:14:29","nodeType":"YulFunctionCall","src":"6865:14:29"},"variableNames":[{"name":"next","nativeSrc":"6857:4:29","nodeType":"YulIdentifier","src":"6857:4:29"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6772:113:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6834:3:29","nodeType":"YulTypedName","src":"6834:3:29","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6842:4:29","nodeType":"YulTypedName","src":"6842:4:29","type":""}],"src":"6772:113:29"},{"body":{"nativeSrc":"7045:608:29","nodeType":"YulBlock","src":"7045:608:29","statements":[{"nativeSrc":"7055:68:29","nodeType":"YulVariableDeclaration","src":"7055:68:29","value":{"arguments":[{"name":"value","nativeSrc":"7117:5:29","nodeType":"YulIdentifier","src":"7117:5:29"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7069:47:29","nodeType":"YulIdentifier","src":"7069:47:29"},"nativeSrc":"7069:54:29","nodeType":"YulFunctionCall","src":"7069:54:29"},"variables":[{"name":"length","nativeSrc":"7059:6:29","nodeType":"YulTypedName","src":"7059:6:29","type":""}]},{"nativeSrc":"7132:93:29","nodeType":"YulAssignment","src":"7132:93:29","value":{"arguments":[{"name":"pos","nativeSrc":"7213:3:29","nodeType":"YulIdentifier","src":"7213:3:29"},{"name":"length","nativeSrc":"7218:6:29","nodeType":"YulIdentifier","src":"7218:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7139:73:29","nodeType":"YulIdentifier","src":"7139:73:29"},"nativeSrc":"7139:86:29","nodeType":"YulFunctionCall","src":"7139:86:29"},"variableNames":[{"name":"pos","nativeSrc":"7132:3:29","nodeType":"YulIdentifier","src":"7132:3:29"}]},{"nativeSrc":"7234:71:29","nodeType":"YulVariableDeclaration","src":"7234:71:29","value":{"arguments":[{"name":"value","nativeSrc":"7299:5:29","nodeType":"YulIdentifier","src":"7299:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7249:49:29","nodeType":"YulIdentifier","src":"7249:49:29"},"nativeSrc":"7249:56:29","nodeType":"YulFunctionCall","src":"7249:56:29"},"variables":[{"name":"baseRef","nativeSrc":"7238:7:29","nodeType":"YulTypedName","src":"7238:7:29","type":""}]},{"nativeSrc":"7314:21:29","nodeType":"YulVariableDeclaration","src":"7314:21:29","value":{"name":"baseRef","nativeSrc":"7328:7:29","nodeType":"YulIdentifier","src":"7328:7:29"},"variables":[{"name":"srcPtr","nativeSrc":"7318:6:29","nodeType":"YulTypedName","src":"7318:6:29","type":""}]},{"body":{"nativeSrc":"7404:224:29","nodeType":"YulBlock","src":"7404:224:29","statements":[{"nativeSrc":"7418:34:29","nodeType":"YulVariableDeclaration","src":"7418:34:29","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7445:6:29","nodeType":"YulIdentifier","src":"7445:6:29"}],"functionName":{"name":"mload","nativeSrc":"7439:5:29","nodeType":"YulIdentifier","src":"7439:5:29"},"nativeSrc":"7439:13:29","nodeType":"YulFunctionCall","src":"7439:13:29"},"variables":[{"name":"elementValue0","nativeSrc":"7422:13:29","nodeType":"YulTypedName","src":"7422:13:29","type":""}]},{"nativeSrc":"7465:70:29","nodeType":"YulAssignment","src":"7465:70:29","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7516:13:29","nodeType":"YulIdentifier","src":"7516:13:29"},{"name":"pos","nativeSrc":"7531:3:29","nodeType":"YulIdentifier","src":"7531:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7472:43:29","nodeType":"YulIdentifier","src":"7472:43:29"},"nativeSrc":"7472:63:29","nodeType":"YulFunctionCall","src":"7472:63:29"},"variableNames":[{"name":"pos","nativeSrc":"7465:3:29","nodeType":"YulIdentifier","src":"7465:3:29"}]},{"nativeSrc":"7548:70:29","nodeType":"YulAssignment","src":"7548:70:29","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7611:6:29","nodeType":"YulIdentifier","src":"7611:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7558:52:29","nodeType":"YulIdentifier","src":"7558:52:29"},"nativeSrc":"7558:60:29","nodeType":"YulFunctionCall","src":"7558:60:29"},"variableNames":[{"name":"srcPtr","nativeSrc":"7548:6:29","nodeType":"YulIdentifier","src":"7548:6:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7366:1:29","nodeType":"YulIdentifier","src":"7366:1:29"},{"name":"length","nativeSrc":"7369:6:29","nodeType":"YulIdentifier","src":"7369:6:29"}],"functionName":{"name":"lt","nativeSrc":"7363:2:29","nodeType":"YulIdentifier","src":"7363:2:29"},"nativeSrc":"7363:13:29","nodeType":"YulFunctionCall","src":"7363:13:29"},"nativeSrc":"7344:284:29","nodeType":"YulForLoop","post":{"nativeSrc":"7377:18:29","nodeType":"YulBlock","src":"7377:18:29","statements":[{"nativeSrc":"7379:14:29","nodeType":"YulAssignment","src":"7379:14:29","value":{"arguments":[{"name":"i","nativeSrc":"7388:1:29","nodeType":"YulIdentifier","src":"7388:1:29"},{"kind":"number","nativeSrc":"7391:1:29","nodeType":"YulLiteral","src":"7391:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7384:3:29","nodeType":"YulIdentifier","src":"7384:3:29"},"nativeSrc":"7384:9:29","nodeType":"YulFunctionCall","src":"7384:9:29"},"variableNames":[{"name":"i","nativeSrc":"7379:1:29","nodeType":"YulIdentifier","src":"7379:1:29"}]}]},"pre":{"nativeSrc":"7348:14:29","nodeType":"YulBlock","src":"7348:14:29","statements":[{"nativeSrc":"7350:10:29","nodeType":"YulVariableDeclaration","src":"7350:10:29","value":{"kind":"number","nativeSrc":"7359:1:29","nodeType":"YulLiteral","src":"7359:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7354:1:29","nodeType":"YulTypedName","src":"7354:1:29","type":""}]}]},"src":"7344:284:29"},{"nativeSrc":"7637:10:29","nodeType":"YulAssignment","src":"7637:10:29","value":{"name":"pos","nativeSrc":"7644:3:29","nodeType":"YulIdentifier","src":"7644:3:29"},"variableNames":[{"name":"end","nativeSrc":"7637:3:29","nodeType":"YulIdentifier","src":"7637:3:29"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6921:732:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7024:5:29","nodeType":"YulTypedName","src":"7024:5:29","type":""},{"name":"pos","nativeSrc":"7031:3:29","nodeType":"YulTypedName","src":"7031:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7040:3:29","nodeType":"YulTypedName","src":"7040:3:29","type":""}],"src":"6921:732:29"},{"body":{"nativeSrc":"8013:861:29","nodeType":"YulBlock","src":"8013:861:29","statements":[{"nativeSrc":"8023:27:29","nodeType":"YulAssignment","src":"8023:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8035:9:29","nodeType":"YulIdentifier","src":"8035:9:29"},{"kind":"number","nativeSrc":"8046:3:29","nodeType":"YulLiteral","src":"8046:3:29","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8031:3:29","nodeType":"YulIdentifier","src":"8031:3:29"},"nativeSrc":"8031:19:29","nodeType":"YulFunctionCall","src":"8031:19:29"},"variableNames":[{"name":"tail","nativeSrc":"8023:4:29","nodeType":"YulIdentifier","src":"8023:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8102:6:29","nodeType":"YulIdentifier","src":"8102:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"8115:9:29","nodeType":"YulIdentifier","src":"8115:9:29"},{"kind":"number","nativeSrc":"8126:1:29","nodeType":"YulLiteral","src":"8126:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8111:3:29","nodeType":"YulIdentifier","src":"8111:3:29"},"nativeSrc":"8111:17:29","nodeType":"YulFunctionCall","src":"8111:17:29"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8060:41:29","nodeType":"YulIdentifier","src":"8060:41:29"},"nativeSrc":"8060:69:29","nodeType":"YulFunctionCall","src":"8060:69:29"},"nativeSrc":"8060:69:29","nodeType":"YulExpressionStatement","src":"8060:69:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8150:9:29","nodeType":"YulIdentifier","src":"8150:9:29"},{"kind":"number","nativeSrc":"8161:2:29","nodeType":"YulLiteral","src":"8161:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8146:3:29","nodeType":"YulIdentifier","src":"8146:3:29"},"nativeSrc":"8146:18:29","nodeType":"YulFunctionCall","src":"8146:18:29"},{"arguments":[{"name":"tail","nativeSrc":"8170:4:29","nodeType":"YulIdentifier","src":"8170:4:29"},{"name":"headStart","nativeSrc":"8176:9:29","nodeType":"YulIdentifier","src":"8176:9:29"}],"functionName":{"name":"sub","nativeSrc":"8166:3:29","nodeType":"YulIdentifier","src":"8166:3:29"},"nativeSrc":"8166:20:29","nodeType":"YulFunctionCall","src":"8166:20:29"}],"functionName":{"name":"mstore","nativeSrc":"8139:6:29","nodeType":"YulIdentifier","src":"8139:6:29"},"nativeSrc":"8139:48:29","nodeType":"YulFunctionCall","src":"8139:48:29"},"nativeSrc":"8139:48:29","nodeType":"YulExpressionStatement","src":"8139:48:29"},{"nativeSrc":"8196:86:29","nodeType":"YulAssignment","src":"8196:86:29","value":{"arguments":[{"name":"value1","nativeSrc":"8268:6:29","nodeType":"YulIdentifier","src":"8268:6:29"},{"name":"tail","nativeSrc":"8277:4:29","nodeType":"YulIdentifier","src":"8277:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8204:63:29","nodeType":"YulIdentifier","src":"8204:63:29"},"nativeSrc":"8204:78:29","nodeType":"YulFunctionCall","src":"8204:78:29"},"variableNames":[{"name":"tail","nativeSrc":"8196:4:29","nodeType":"YulIdentifier","src":"8196:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8303:9:29","nodeType":"YulIdentifier","src":"8303:9:29"},{"kind":"number","nativeSrc":"8314:2:29","nodeType":"YulLiteral","src":"8314:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8299:3:29","nodeType":"YulIdentifier","src":"8299:3:29"},"nativeSrc":"8299:18:29","nodeType":"YulFunctionCall","src":"8299:18:29"},{"arguments":[{"name":"tail","nativeSrc":"8323:4:29","nodeType":"YulIdentifier","src":"8323:4:29"},{"name":"headStart","nativeSrc":"8329:9:29","nodeType":"YulIdentifier","src":"8329:9:29"}],"functionName":{"name":"sub","nativeSrc":"8319:3:29","nodeType":"YulIdentifier","src":"8319:3:29"},"nativeSrc":"8319:20:29","nodeType":"YulFunctionCall","src":"8319:20:29"}],"functionName":{"name":"mstore","nativeSrc":"8292:6:29","nodeType":"YulIdentifier","src":"8292:6:29"},"nativeSrc":"8292:48:29","nodeType":"YulFunctionCall","src":"8292:48:29"},"nativeSrc":"8292:48:29","nodeType":"YulExpressionStatement","src":"8292:48:29"},{"nativeSrc":"8349:86:29","nodeType":"YulAssignment","src":"8349:86:29","value":{"arguments":[{"name":"value2","nativeSrc":"8421:6:29","nodeType":"YulIdentifier","src":"8421:6:29"},{"name":"tail","nativeSrc":"8430:4:29","nodeType":"YulIdentifier","src":"8430:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8357:63:29","nodeType":"YulIdentifier","src":"8357:63:29"},"nativeSrc":"8357:78:29","nodeType":"YulFunctionCall","src":"8357:78:29"},"variableNames":[{"name":"tail","nativeSrc":"8349:4:29","nodeType":"YulIdentifier","src":"8349:4:29"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8489:6:29","nodeType":"YulIdentifier","src":"8489:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"8502:9:29","nodeType":"YulIdentifier","src":"8502:9:29"},{"kind":"number","nativeSrc":"8513:2:29","nodeType":"YulLiteral","src":"8513:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8498:3:29","nodeType":"YulIdentifier","src":"8498:3:29"},"nativeSrc":"8498:18:29","nodeType":"YulFunctionCall","src":"8498:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8445:43:29","nodeType":"YulIdentifier","src":"8445:43:29"},"nativeSrc":"8445:72:29","nodeType":"YulFunctionCall","src":"8445:72:29"},"nativeSrc":"8445:72:29","nodeType":"YulExpressionStatement","src":"8445:72:29"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8571:6:29","nodeType":"YulIdentifier","src":"8571:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"8584:9:29","nodeType":"YulIdentifier","src":"8584:9:29"},{"kind":"number","nativeSrc":"8595:3:29","nodeType":"YulLiteral","src":"8595:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8580:3:29","nodeType":"YulIdentifier","src":"8580:3:29"},"nativeSrc":"8580:19:29","nodeType":"YulFunctionCall","src":"8580:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8527:43:29","nodeType":"YulIdentifier","src":"8527:43:29"},"nativeSrc":"8527:73:29","nodeType":"YulFunctionCall","src":"8527:73:29"},"nativeSrc":"8527:73:29","nodeType":"YulExpressionStatement","src":"8527:73:29"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8654:6:29","nodeType":"YulIdentifier","src":"8654:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"8667:9:29","nodeType":"YulIdentifier","src":"8667:9:29"},{"kind":"number","nativeSrc":"8678:3:29","nodeType":"YulLiteral","src":"8678:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8663:3:29","nodeType":"YulIdentifier","src":"8663:3:29"},"nativeSrc":"8663:19:29","nodeType":"YulFunctionCall","src":"8663:19:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8610:43:29","nodeType":"YulIdentifier","src":"8610:43:29"},"nativeSrc":"8610:73:29","nodeType":"YulFunctionCall","src":"8610:73:29"},"nativeSrc":"8610:73:29","nodeType":"YulExpressionStatement","src":"8610:73:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8704:9:29","nodeType":"YulIdentifier","src":"8704:9:29"},{"kind":"number","nativeSrc":"8715:3:29","nodeType":"YulLiteral","src":"8715:3:29","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8700:3:29","nodeType":"YulIdentifier","src":"8700:3:29"},"nativeSrc":"8700:19:29","nodeType":"YulFunctionCall","src":"8700:19:29"},{"arguments":[{"name":"tail","nativeSrc":"8725:4:29","nodeType":"YulIdentifier","src":"8725:4:29"},{"name":"headStart","nativeSrc":"8731:9:29","nodeType":"YulIdentifier","src":"8731:9:29"}],"functionName":{"name":"sub","nativeSrc":"8721:3:29","nodeType":"YulIdentifier","src":"8721:3:29"},"nativeSrc":"8721:20:29","nodeType":"YulFunctionCall","src":"8721:20:29"}],"functionName":{"name":"mstore","nativeSrc":"8693:6:29","nodeType":"YulIdentifier","src":"8693:6:29"},"nativeSrc":"8693:49:29","nodeType":"YulFunctionCall","src":"8693:49:29"},"nativeSrc":"8693:49:29","nodeType":"YulExpressionStatement","src":"8693:49:29"},{"nativeSrc":"8751:116:29","nodeType":"YulAssignment","src":"8751:116:29","value":{"arguments":[{"name":"value6","nativeSrc":"8853:6:29","nodeType":"YulIdentifier","src":"8853:6:29"},{"name":"tail","nativeSrc":"8862:4:29","nodeType":"YulIdentifier","src":"8862:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8759:93:29","nodeType":"YulIdentifier","src":"8759:93:29"},"nativeSrc":"8759:108:29","nodeType":"YulFunctionCall","src":"8759:108:29"},"variableNames":[{"name":"tail","nativeSrc":"8751:4:29","nodeType":"YulIdentifier","src":"8751:4:29"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7659:1215:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7937:9:29","nodeType":"YulTypedName","src":"7937:9:29","type":""},{"name":"value6","nativeSrc":"7949:6:29","nodeType":"YulTypedName","src":"7949:6:29","type":""},{"name":"value5","nativeSrc":"7957:6:29","nodeType":"YulTypedName","src":"7957:6:29","type":""},{"name":"value4","nativeSrc":"7965:6:29","nodeType":"YulTypedName","src":"7965:6:29","type":""},{"name":"value3","nativeSrc":"7973:6:29","nodeType":"YulTypedName","src":"7973:6:29","type":""},{"name":"value2","nativeSrc":"7981:6:29","nodeType":"YulTypedName","src":"7981:6:29","type":""},{"name":"value1","nativeSrc":"7989:6:29","nodeType":"YulTypedName","src":"7989:6:29","type":""},{"name":"value0","nativeSrc":"7997:6:29","nodeType":"YulTypedName","src":"7997:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8008:4:29","nodeType":"YulTypedName","src":"8008:4:29","type":""}],"src":"7659:1215:29"},{"body":{"nativeSrc":"8978:124:29","nodeType":"YulBlock","src":"8978:124:29","statements":[{"nativeSrc":"8988:26:29","nodeType":"YulAssignment","src":"8988:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9000:9:29","nodeType":"YulIdentifier","src":"9000:9:29"},{"kind":"number","nativeSrc":"9011:2:29","nodeType":"YulLiteral","src":"9011:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8996:3:29","nodeType":"YulIdentifier","src":"8996:3:29"},"nativeSrc":"8996:18:29","nodeType":"YulFunctionCall","src":"8996:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8988:4:29","nodeType":"YulIdentifier","src":"8988:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9068:6:29","nodeType":"YulIdentifier","src":"9068:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9081:9:29","nodeType":"YulIdentifier","src":"9081:9:29"},{"kind":"number","nativeSrc":"9092:1:29","nodeType":"YulLiteral","src":"9092:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9077:3:29","nodeType":"YulIdentifier","src":"9077:3:29"},"nativeSrc":"9077:17:29","nodeType":"YulFunctionCall","src":"9077:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9024:43:29","nodeType":"YulIdentifier","src":"9024:43:29"},"nativeSrc":"9024:71:29","nodeType":"YulFunctionCall","src":"9024:71:29"},"nativeSrc":"9024:71:29","nodeType":"YulExpressionStatement","src":"9024:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8880:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8950:9:29","nodeType":"YulTypedName","src":"8950:9:29","type":""},{"name":"value0","nativeSrc":"8962:6:29","nodeType":"YulTypedName","src":"8962:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8973:4:29","nodeType":"YulTypedName","src":"8973:4:29","type":""}],"src":"8880:222:29"},{"body":{"nativeSrc":"9149:77:29","nodeType":"YulBlock","src":"9149:77:29","statements":[{"body":{"nativeSrc":"9204:16:29","nodeType":"YulBlock","src":"9204:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9213:1:29","nodeType":"YulLiteral","src":"9213:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9216:1:29","nodeType":"YulLiteral","src":"9216:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9206:6:29","nodeType":"YulIdentifier","src":"9206:6:29"},"nativeSrc":"9206:12:29","nodeType":"YulFunctionCall","src":"9206:12:29"},"nativeSrc":"9206:12:29","nodeType":"YulExpressionStatement","src":"9206:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9172:5:29","nodeType":"YulIdentifier","src":"9172:5:29"},{"arguments":[{"name":"value","nativeSrc":"9195:5:29","nodeType":"YulIdentifier","src":"9195:5:29"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9179:15:29","nodeType":"YulIdentifier","src":"9179:15:29"},"nativeSrc":"9179:22:29","nodeType":"YulFunctionCall","src":"9179:22:29"}],"functionName":{"name":"eq","nativeSrc":"9169:2:29","nodeType":"YulIdentifier","src":"9169:2:29"},"nativeSrc":"9169:33:29","nodeType":"YulFunctionCall","src":"9169:33:29"}],"functionName":{"name":"iszero","nativeSrc":"9162:6:29","nodeType":"YulIdentifier","src":"9162:6:29"},"nativeSrc":"9162:41:29","nodeType":"YulFunctionCall","src":"9162:41:29"},"nativeSrc":"9159:61:29","nodeType":"YulIf","src":"9159:61:29"}]},"name":"validator_revert_t_uint8","nativeSrc":"9108:118:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9142:5:29","nodeType":"YulTypedName","src":"9142:5:29","type":""}],"src":"9108:118:29"},{"body":{"nativeSrc":"9282:85:29","nodeType":"YulBlock","src":"9282:85:29","statements":[{"nativeSrc":"9292:29:29","nodeType":"YulAssignment","src":"9292:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"9314:6:29","nodeType":"YulIdentifier","src":"9314:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"9301:12:29","nodeType":"YulIdentifier","src":"9301:12:29"},"nativeSrc":"9301:20:29","nodeType":"YulFunctionCall","src":"9301:20:29"},"variableNames":[{"name":"value","nativeSrc":"9292:5:29","nodeType":"YulIdentifier","src":"9292:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9355:5:29","nodeType":"YulIdentifier","src":"9355:5:29"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9330:24:29","nodeType":"YulIdentifier","src":"9330:24:29"},"nativeSrc":"9330:31:29","nodeType":"YulFunctionCall","src":"9330:31:29"},"nativeSrc":"9330:31:29","nodeType":"YulExpressionStatement","src":"9330:31:29"}]},"name":"abi_decode_t_uint8","nativeSrc":"9232:135:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9260:6:29","nodeType":"YulTypedName","src":"9260:6:29","type":""},{"name":"end","nativeSrc":"9268:3:29","nodeType":"YulTypedName","src":"9268:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9276:5:29","nodeType":"YulTypedName","src":"9276:5:29","type":""}],"src":"9232:135:29"},{"body":{"nativeSrc":"9416:79:29","nodeType":"YulBlock","src":"9416:79:29","statements":[{"body":{"nativeSrc":"9473:16:29","nodeType":"YulBlock","src":"9473:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9482:1:29","nodeType":"YulLiteral","src":"9482:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9485:1:29","nodeType":"YulLiteral","src":"9485:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9475:6:29","nodeType":"YulIdentifier","src":"9475:6:29"},"nativeSrc":"9475:12:29","nodeType":"YulFunctionCall","src":"9475:12:29"},"nativeSrc":"9475:12:29","nodeType":"YulExpressionStatement","src":"9475:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9439:5:29","nodeType":"YulIdentifier","src":"9439:5:29"},{"arguments":[{"name":"value","nativeSrc":"9464:5:29","nodeType":"YulIdentifier","src":"9464:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9446:17:29","nodeType":"YulIdentifier","src":"9446:17:29"},"nativeSrc":"9446:24:29","nodeType":"YulFunctionCall","src":"9446:24:29"}],"functionName":{"name":"eq","nativeSrc":"9436:2:29","nodeType":"YulIdentifier","src":"9436:2:29"},"nativeSrc":"9436:35:29","nodeType":"YulFunctionCall","src":"9436:35:29"}],"functionName":{"name":"iszero","nativeSrc":"9429:6:29","nodeType":"YulIdentifier","src":"9429:6:29"},"nativeSrc":"9429:43:29","nodeType":"YulFunctionCall","src":"9429:43:29"},"nativeSrc":"9426:63:29","nodeType":"YulIf","src":"9426:63:29"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9373:122:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9409:5:29","nodeType":"YulTypedName","src":"9409:5:29","type":""}],"src":"9373:122:29"},{"body":{"nativeSrc":"9553:87:29","nodeType":"YulBlock","src":"9553:87:29","statements":[{"nativeSrc":"9563:29:29","nodeType":"YulAssignment","src":"9563:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"9585:6:29","nodeType":"YulIdentifier","src":"9585:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"9572:12:29","nodeType":"YulIdentifier","src":"9572:12:29"},"nativeSrc":"9572:20:29","nodeType":"YulFunctionCall","src":"9572:20:29"},"variableNames":[{"name":"value","nativeSrc":"9563:5:29","nodeType":"YulIdentifier","src":"9563:5:29"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9628:5:29","nodeType":"YulIdentifier","src":"9628:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9601:26:29","nodeType":"YulIdentifier","src":"9601:26:29"},"nativeSrc":"9601:33:29","nodeType":"YulFunctionCall","src":"9601:33:29"},"nativeSrc":"9601:33:29","nodeType":"YulExpressionStatement","src":"9601:33:29"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9501:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9531:6:29","nodeType":"YulTypedName","src":"9531:6:29","type":""},{"name":"end","nativeSrc":"9539:3:29","nodeType":"YulTypedName","src":"9539:3:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9547:5:29","nodeType":"YulTypedName","src":"9547:5:29","type":""}],"src":"9501:139:29"},{"body":{"nativeSrc":"9812:1033:29","nodeType":"YulBlock","src":"9812:1033:29","statements":[{"body":{"nativeSrc":"9859:83:29","nodeType":"YulBlock","src":"9859:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9861:77:29","nodeType":"YulIdentifier","src":"9861:77:29"},"nativeSrc":"9861:79:29","nodeType":"YulFunctionCall","src":"9861:79:29"},"nativeSrc":"9861:79:29","nodeType":"YulExpressionStatement","src":"9861:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9833:7:29","nodeType":"YulIdentifier","src":"9833:7:29"},{"name":"headStart","nativeSrc":"9842:9:29","nodeType":"YulIdentifier","src":"9842:9:29"}],"functionName":{"name":"sub","nativeSrc":"9829:3:29","nodeType":"YulIdentifier","src":"9829:3:29"},"nativeSrc":"9829:23:29","nodeType":"YulFunctionCall","src":"9829:23:29"},{"kind":"number","nativeSrc":"9854:3:29","nodeType":"YulLiteral","src":"9854:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"9825:3:29","nodeType":"YulIdentifier","src":"9825:3:29"},"nativeSrc":"9825:33:29","nodeType":"YulFunctionCall","src":"9825:33:29"},"nativeSrc":"9822:120:29","nodeType":"YulIf","src":"9822:120:29"},{"nativeSrc":"9952:117:29","nodeType":"YulBlock","src":"9952:117:29","statements":[{"nativeSrc":"9967:15:29","nodeType":"YulVariableDeclaration","src":"9967:15:29","value":{"kind":"number","nativeSrc":"9981:1:29","nodeType":"YulLiteral","src":"9981:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9971:6:29","nodeType":"YulTypedName","src":"9971:6:29","type":""}]},{"nativeSrc":"9996:63:29","nodeType":"YulAssignment","src":"9996:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10031:9:29","nodeType":"YulIdentifier","src":"10031:9:29"},{"name":"offset","nativeSrc":"10042:6:29","nodeType":"YulIdentifier","src":"10042:6:29"}],"functionName":{"name":"add","nativeSrc":"10027:3:29","nodeType":"YulIdentifier","src":"10027:3:29"},"nativeSrc":"10027:22:29","nodeType":"YulFunctionCall","src":"10027:22:29"},{"name":"dataEnd","nativeSrc":"10051:7:29","nodeType":"YulIdentifier","src":"10051:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10006:20:29","nodeType":"YulIdentifier","src":"10006:20:29"},"nativeSrc":"10006:53:29","nodeType":"YulFunctionCall","src":"10006:53:29"},"variableNames":[{"name":"value0","nativeSrc":"9996:6:29","nodeType":"YulIdentifier","src":"9996:6:29"}]}]},{"nativeSrc":"10079:118:29","nodeType":"YulBlock","src":"10079:118:29","statements":[{"nativeSrc":"10094:16:29","nodeType":"YulVariableDeclaration","src":"10094:16:29","value":{"kind":"number","nativeSrc":"10108:2:29","nodeType":"YulLiteral","src":"10108:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10098:6:29","nodeType":"YulTypedName","src":"10098:6:29","type":""}]},{"nativeSrc":"10124:63:29","nodeType":"YulAssignment","src":"10124:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10159:9:29","nodeType":"YulIdentifier","src":"10159:9:29"},{"name":"offset","nativeSrc":"10170:6:29","nodeType":"YulIdentifier","src":"10170:6:29"}],"functionName":{"name":"add","nativeSrc":"10155:3:29","nodeType":"YulIdentifier","src":"10155:3:29"},"nativeSrc":"10155:22:29","nodeType":"YulFunctionCall","src":"10155:22:29"},{"name":"dataEnd","nativeSrc":"10179:7:29","nodeType":"YulIdentifier","src":"10179:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10134:20:29","nodeType":"YulIdentifier","src":"10134:20:29"},"nativeSrc":"10134:53:29","nodeType":"YulFunctionCall","src":"10134:53:29"},"variableNames":[{"name":"value1","nativeSrc":"10124:6:29","nodeType":"YulIdentifier","src":"10124:6:29"}]}]},{"nativeSrc":"10207:118:29","nodeType":"YulBlock","src":"10207:118:29","statements":[{"nativeSrc":"10222:16:29","nodeType":"YulVariableDeclaration","src":"10222:16:29","value":{"kind":"number","nativeSrc":"10236:2:29","nodeType":"YulLiteral","src":"10236:2:29","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10226:6:29","nodeType":"YulTypedName","src":"10226:6:29","type":""}]},{"nativeSrc":"10252:63:29","nodeType":"YulAssignment","src":"10252:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10287:9:29","nodeType":"YulIdentifier","src":"10287:9:29"},{"name":"offset","nativeSrc":"10298:6:29","nodeType":"YulIdentifier","src":"10298:6:29"}],"functionName":{"name":"add","nativeSrc":"10283:3:29","nodeType":"YulIdentifier","src":"10283:3:29"},"nativeSrc":"10283:22:29","nodeType":"YulFunctionCall","src":"10283:22:29"},{"name":"dataEnd","nativeSrc":"10307:7:29","nodeType":"YulIdentifier","src":"10307:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10262:20:29","nodeType":"YulIdentifier","src":"10262:20:29"},"nativeSrc":"10262:53:29","nodeType":"YulFunctionCall","src":"10262:53:29"},"variableNames":[{"name":"value2","nativeSrc":"10252:6:29","nodeType":"YulIdentifier","src":"10252:6:29"}]}]},{"nativeSrc":"10335:118:29","nodeType":"YulBlock","src":"10335:118:29","statements":[{"nativeSrc":"10350:16:29","nodeType":"YulVariableDeclaration","src":"10350:16:29","value":{"kind":"number","nativeSrc":"10364:2:29","nodeType":"YulLiteral","src":"10364:2:29","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10354:6:29","nodeType":"YulTypedName","src":"10354:6:29","type":""}]},{"nativeSrc":"10380:63:29","nodeType":"YulAssignment","src":"10380:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10415:9:29","nodeType":"YulIdentifier","src":"10415:9:29"},{"name":"offset","nativeSrc":"10426:6:29","nodeType":"YulIdentifier","src":"10426:6:29"}],"functionName":{"name":"add","nativeSrc":"10411:3:29","nodeType":"YulIdentifier","src":"10411:3:29"},"nativeSrc":"10411:22:29","nodeType":"YulFunctionCall","src":"10411:22:29"},{"name":"dataEnd","nativeSrc":"10435:7:29","nodeType":"YulIdentifier","src":"10435:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10390:20:29","nodeType":"YulIdentifier","src":"10390:20:29"},"nativeSrc":"10390:53:29","nodeType":"YulFunctionCall","src":"10390:53:29"},"variableNames":[{"name":"value3","nativeSrc":"10380:6:29","nodeType":"YulIdentifier","src":"10380:6:29"}]}]},{"nativeSrc":"10463:117:29","nodeType":"YulBlock","src":"10463:117:29","statements":[{"nativeSrc":"10478:17:29","nodeType":"YulVariableDeclaration","src":"10478:17:29","value":{"kind":"number","nativeSrc":"10492:3:29","nodeType":"YulLiteral","src":"10492:3:29","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10482:6:29","nodeType":"YulTypedName","src":"10482:6:29","type":""}]},{"nativeSrc":"10509:61:29","nodeType":"YulAssignment","src":"10509:61:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10542:9:29","nodeType":"YulIdentifier","src":"10542:9:29"},{"name":"offset","nativeSrc":"10553:6:29","nodeType":"YulIdentifier","src":"10553:6:29"}],"functionName":{"name":"add","nativeSrc":"10538:3:29","nodeType":"YulIdentifier","src":"10538:3:29"},"nativeSrc":"10538:22:29","nodeType":"YulFunctionCall","src":"10538:22:29"},{"name":"dataEnd","nativeSrc":"10562:7:29","nodeType":"YulIdentifier","src":"10562:7:29"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10519:18:29","nodeType":"YulIdentifier","src":"10519:18:29"},"nativeSrc":"10519:51:29","nodeType":"YulFunctionCall","src":"10519:51:29"},"variableNames":[{"name":"value4","nativeSrc":"10509:6:29","nodeType":"YulIdentifier","src":"10509:6:29"}]}]},{"nativeSrc":"10590:119:29","nodeType":"YulBlock","src":"10590:119:29","statements":[{"nativeSrc":"10605:17:29","nodeType":"YulVariableDeclaration","src":"10605:17:29","value":{"kind":"number","nativeSrc":"10619:3:29","nodeType":"YulLiteral","src":"10619:3:29","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10609:6:29","nodeType":"YulTypedName","src":"10609:6:29","type":""}]},{"nativeSrc":"10636:63:29","nodeType":"YulAssignment","src":"10636:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10671:9:29","nodeType":"YulIdentifier","src":"10671:9:29"},{"name":"offset","nativeSrc":"10682:6:29","nodeType":"YulIdentifier","src":"10682:6:29"}],"functionName":{"name":"add","nativeSrc":"10667:3:29","nodeType":"YulIdentifier","src":"10667:3:29"},"nativeSrc":"10667:22:29","nodeType":"YulFunctionCall","src":"10667:22:29"},{"name":"dataEnd","nativeSrc":"10691:7:29","nodeType":"YulIdentifier","src":"10691:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10646:20:29","nodeType":"YulIdentifier","src":"10646:20:29"},"nativeSrc":"10646:53:29","nodeType":"YulFunctionCall","src":"10646:53:29"},"variableNames":[{"name":"value5","nativeSrc":"10636:6:29","nodeType":"YulIdentifier","src":"10636:6:29"}]}]},{"nativeSrc":"10719:119:29","nodeType":"YulBlock","src":"10719:119:29","statements":[{"nativeSrc":"10734:17:29","nodeType":"YulVariableDeclaration","src":"10734:17:29","value":{"kind":"number","nativeSrc":"10748:3:29","nodeType":"YulLiteral","src":"10748:3:29","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"10738:6:29","nodeType":"YulTypedName","src":"10738:6:29","type":""}]},{"nativeSrc":"10765:63:29","nodeType":"YulAssignment","src":"10765:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10800:9:29","nodeType":"YulIdentifier","src":"10800:9:29"},{"name":"offset","nativeSrc":"10811:6:29","nodeType":"YulIdentifier","src":"10811:6:29"}],"functionName":{"name":"add","nativeSrc":"10796:3:29","nodeType":"YulIdentifier","src":"10796:3:29"},"nativeSrc":"10796:22:29","nodeType":"YulFunctionCall","src":"10796:22:29"},{"name":"dataEnd","nativeSrc":"10820:7:29","nodeType":"YulIdentifier","src":"10820:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10775:20:29","nodeType":"YulIdentifier","src":"10775:20:29"},"nativeSrc":"10775:53:29","nodeType":"YulFunctionCall","src":"10775:53:29"},"variableNames":[{"name":"value6","nativeSrc":"10765:6:29","nodeType":"YulIdentifier","src":"10765:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9646:1199:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9734:9:29","nodeType":"YulTypedName","src":"9734:9:29","type":""},{"name":"dataEnd","nativeSrc":"9745:7:29","nodeType":"YulTypedName","src":"9745:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9757:6:29","nodeType":"YulTypedName","src":"9757:6:29","type":""},{"name":"value1","nativeSrc":"9765:6:29","nodeType":"YulTypedName","src":"9765:6:29","type":""},{"name":"value2","nativeSrc":"9773:6:29","nodeType":"YulTypedName","src":"9773:6:29","type":""},{"name":"value3","nativeSrc":"9781:6:29","nodeType":"YulTypedName","src":"9781:6:29","type":""},{"name":"value4","nativeSrc":"9789:6:29","nodeType":"YulTypedName","src":"9789:6:29","type":""},{"name":"value5","nativeSrc":"9797:6:29","nodeType":"YulTypedName","src":"9797:6:29","type":""},{"name":"value6","nativeSrc":"9805:6:29","nodeType":"YulTypedName","src":"9805:6:29","type":""}],"src":"9646:1199:29"},{"body":{"nativeSrc":"10934:391:29","nodeType":"YulBlock","src":"10934:391:29","statements":[{"body":{"nativeSrc":"10980:83:29","nodeType":"YulBlock","src":"10980:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10982:77:29","nodeType":"YulIdentifier","src":"10982:77:29"},"nativeSrc":"10982:79:29","nodeType":"YulFunctionCall","src":"10982:79:29"},"nativeSrc":"10982:79:29","nodeType":"YulExpressionStatement","src":"10982:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10955:7:29","nodeType":"YulIdentifier","src":"10955:7:29"},{"name":"headStart","nativeSrc":"10964:9:29","nodeType":"YulIdentifier","src":"10964:9:29"}],"functionName":{"name":"sub","nativeSrc":"10951:3:29","nodeType":"YulIdentifier","src":"10951:3:29"},"nativeSrc":"10951:23:29","nodeType":"YulFunctionCall","src":"10951:23:29"},{"kind":"number","nativeSrc":"10976:2:29","nodeType":"YulLiteral","src":"10976:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10947:3:29","nodeType":"YulIdentifier","src":"10947:3:29"},"nativeSrc":"10947:32:29","nodeType":"YulFunctionCall","src":"10947:32:29"},"nativeSrc":"10944:119:29","nodeType":"YulIf","src":"10944:119:29"},{"nativeSrc":"11073:117:29","nodeType":"YulBlock","src":"11073:117:29","statements":[{"nativeSrc":"11088:15:29","nodeType":"YulVariableDeclaration","src":"11088:15:29","value":{"kind":"number","nativeSrc":"11102:1:29","nodeType":"YulLiteral","src":"11102:1:29","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11092:6:29","nodeType":"YulTypedName","src":"11092:6:29","type":""}]},{"nativeSrc":"11117:63:29","nodeType":"YulAssignment","src":"11117:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11152:9:29","nodeType":"YulIdentifier","src":"11152:9:29"},{"name":"offset","nativeSrc":"11163:6:29","nodeType":"YulIdentifier","src":"11163:6:29"}],"functionName":{"name":"add","nativeSrc":"11148:3:29","nodeType":"YulIdentifier","src":"11148:3:29"},"nativeSrc":"11148:22:29","nodeType":"YulFunctionCall","src":"11148:22:29"},{"name":"dataEnd","nativeSrc":"11172:7:29","nodeType":"YulIdentifier","src":"11172:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11127:20:29","nodeType":"YulIdentifier","src":"11127:20:29"},"nativeSrc":"11127:53:29","nodeType":"YulFunctionCall","src":"11127:53:29"},"variableNames":[{"name":"value0","nativeSrc":"11117:6:29","nodeType":"YulIdentifier","src":"11117:6:29"}]}]},{"nativeSrc":"11200:118:29","nodeType":"YulBlock","src":"11200:118:29","statements":[{"nativeSrc":"11215:16:29","nodeType":"YulVariableDeclaration","src":"11215:16:29","value":{"kind":"number","nativeSrc":"11229:2:29","nodeType":"YulLiteral","src":"11229:2:29","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11219:6:29","nodeType":"YulTypedName","src":"11219:6:29","type":""}]},{"nativeSrc":"11245:63:29","nodeType":"YulAssignment","src":"11245:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11280:9:29","nodeType":"YulIdentifier","src":"11280:9:29"},{"name":"offset","nativeSrc":"11291:6:29","nodeType":"YulIdentifier","src":"11291:6:29"}],"functionName":{"name":"add","nativeSrc":"11276:3:29","nodeType":"YulIdentifier","src":"11276:3:29"},"nativeSrc":"11276:22:29","nodeType":"YulFunctionCall","src":"11276:22:29"},{"name":"dataEnd","nativeSrc":"11300:7:29","nodeType":"YulIdentifier","src":"11300:7:29"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11255:20:29","nodeType":"YulIdentifier","src":"11255:20:29"},"nativeSrc":"11255:53:29","nodeType":"YulFunctionCall","src":"11255:53:29"},"variableNames":[{"name":"value1","nativeSrc":"11245:6:29","nodeType":"YulIdentifier","src":"11245:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10851:474:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10896:9:29","nodeType":"YulTypedName","src":"10896:9:29","type":""},{"name":"dataEnd","nativeSrc":"10907:7:29","nodeType":"YulTypedName","src":"10907:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10919:6:29","nodeType":"YulTypedName","src":"10919:6:29","type":""},{"name":"value1","nativeSrc":"10927:6:29","nodeType":"YulTypedName","src":"10927:6:29","type":""}],"src":"10851:474:29"},{"body":{"nativeSrc":"11359:152:29","nodeType":"YulBlock","src":"11359:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11376:1:29","nodeType":"YulLiteral","src":"11376:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11379:77:29","nodeType":"YulLiteral","src":"11379:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11369:6:29","nodeType":"YulIdentifier","src":"11369:6:29"},"nativeSrc":"11369:88:29","nodeType":"YulFunctionCall","src":"11369:88:29"},"nativeSrc":"11369:88:29","nodeType":"YulExpressionStatement","src":"11369:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11473:1:29","nodeType":"YulLiteral","src":"11473:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"11476:4:29","nodeType":"YulLiteral","src":"11476:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11466:6:29","nodeType":"YulIdentifier","src":"11466:6:29"},"nativeSrc":"11466:15:29","nodeType":"YulFunctionCall","src":"11466:15:29"},"nativeSrc":"11466:15:29","nodeType":"YulExpressionStatement","src":"11466:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11497:1:29","nodeType":"YulLiteral","src":"11497:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11500:4:29","nodeType":"YulLiteral","src":"11500:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11490:6:29","nodeType":"YulIdentifier","src":"11490:6:29"},"nativeSrc":"11490:15:29","nodeType":"YulFunctionCall","src":"11490:15:29"},"nativeSrc":"11490:15:29","nodeType":"YulExpressionStatement","src":"11490:15:29"}]},"name":"panic_error_0x22","nativeSrc":"11331:180:29","nodeType":"YulFunctionDefinition","src":"11331:180:29"},{"body":{"nativeSrc":"11568:269:29","nodeType":"YulBlock","src":"11568:269:29","statements":[{"nativeSrc":"11578:22:29","nodeType":"YulAssignment","src":"11578:22:29","value":{"arguments":[{"name":"data","nativeSrc":"11592:4:29","nodeType":"YulIdentifier","src":"11592:4:29"},{"kind":"number","nativeSrc":"11598:1:29","nodeType":"YulLiteral","src":"11598:1:29","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11588:3:29","nodeType":"YulIdentifier","src":"11588:3:29"},"nativeSrc":"11588:12:29","nodeType":"YulFunctionCall","src":"11588:12:29"},"variableNames":[{"name":"length","nativeSrc":"11578:6:29","nodeType":"YulIdentifier","src":"11578:6:29"}]},{"nativeSrc":"11609:38:29","nodeType":"YulVariableDeclaration","src":"11609:38:29","value":{"arguments":[{"name":"data","nativeSrc":"11639:4:29","nodeType":"YulIdentifier","src":"11639:4:29"},{"kind":"number","nativeSrc":"11645:1:29","nodeType":"YulLiteral","src":"11645:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11635:3:29","nodeType":"YulIdentifier","src":"11635:3:29"},"nativeSrc":"11635:12:29","nodeType":"YulFunctionCall","src":"11635:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11613:18:29","nodeType":"YulTypedName","src":"11613:18:29","type":""}]},{"body":{"nativeSrc":"11686:51:29","nodeType":"YulBlock","src":"11686:51:29","statements":[{"nativeSrc":"11700:27:29","nodeType":"YulAssignment","src":"11700:27:29","value":{"arguments":[{"name":"length","nativeSrc":"11714:6:29","nodeType":"YulIdentifier","src":"11714:6:29"},{"kind":"number","nativeSrc":"11722:4:29","nodeType":"YulLiteral","src":"11722:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11710:3:29","nodeType":"YulIdentifier","src":"11710:3:29"},"nativeSrc":"11710:17:29","nodeType":"YulFunctionCall","src":"11710:17:29"},"variableNames":[{"name":"length","nativeSrc":"11700:6:29","nodeType":"YulIdentifier","src":"11700:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11666:18:29","nodeType":"YulIdentifier","src":"11666:18:29"}],"functionName":{"name":"iszero","nativeSrc":"11659:6:29","nodeType":"YulIdentifier","src":"11659:6:29"},"nativeSrc":"11659:26:29","nodeType":"YulFunctionCall","src":"11659:26:29"},"nativeSrc":"11656:81:29","nodeType":"YulIf","src":"11656:81:29"},{"body":{"nativeSrc":"11789:42:29","nodeType":"YulBlock","src":"11789:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11803:16:29","nodeType":"YulIdentifier","src":"11803:16:29"},"nativeSrc":"11803:18:29","nodeType":"YulFunctionCall","src":"11803:18:29"},"nativeSrc":"11803:18:29","nodeType":"YulExpressionStatement","src":"11803:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11753:18:29","nodeType":"YulIdentifier","src":"11753:18:29"},{"arguments":[{"name":"length","nativeSrc":"11776:6:29","nodeType":"YulIdentifier","src":"11776:6:29"},{"kind":"number","nativeSrc":"11784:2:29","nodeType":"YulLiteral","src":"11784:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11773:2:29","nodeType":"YulIdentifier","src":"11773:2:29"},"nativeSrc":"11773:14:29","nodeType":"YulFunctionCall","src":"11773:14:29"}],"functionName":{"name":"eq","nativeSrc":"11750:2:29","nodeType":"YulIdentifier","src":"11750:2:29"},"nativeSrc":"11750:38:29","nodeType":"YulFunctionCall","src":"11750:38:29"},"nativeSrc":"11747:84:29","nodeType":"YulIf","src":"11747:84:29"}]},"name":"extract_byte_array_length","nativeSrc":"11517:320:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11552:4:29","nodeType":"YulTypedName","src":"11552:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11561:6:29","nodeType":"YulTypedName","src":"11561:6:29","type":""}],"src":"11517:320:29"},{"body":{"nativeSrc":"11871:152:29","nodeType":"YulBlock","src":"11871:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11888:1:29","nodeType":"YulLiteral","src":"11888:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"11891:77:29","nodeType":"YulLiteral","src":"11891:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11881:6:29","nodeType":"YulIdentifier","src":"11881:6:29"},"nativeSrc":"11881:88:29","nodeType":"YulFunctionCall","src":"11881:88:29"},"nativeSrc":"11881:88:29","nodeType":"YulExpressionStatement","src":"11881:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11985:1:29","nodeType":"YulLiteral","src":"11985:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"11988:4:29","nodeType":"YulLiteral","src":"11988:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"11978:6:29","nodeType":"YulIdentifier","src":"11978:6:29"},"nativeSrc":"11978:15:29","nodeType":"YulFunctionCall","src":"11978:15:29"},"nativeSrc":"11978:15:29","nodeType":"YulExpressionStatement","src":"11978:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12009:1:29","nodeType":"YulLiteral","src":"12009:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"12012:4:29","nodeType":"YulLiteral","src":"12012:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12002:6:29","nodeType":"YulIdentifier","src":"12002:6:29"},"nativeSrc":"12002:15:29","nodeType":"YulFunctionCall","src":"12002:15:29"},"nativeSrc":"12002:15:29","nodeType":"YulExpressionStatement","src":"12002:15:29"}]},"name":"panic_error_0x41","nativeSrc":"11843:180:29","nodeType":"YulFunctionDefinition","src":"11843:180:29"},{"body":{"nativeSrc":"12267:537:29","nodeType":"YulBlock","src":"12267:537:29","statements":[{"nativeSrc":"12277:27:29","nodeType":"YulAssignment","src":"12277:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12289:9:29","nodeType":"YulIdentifier","src":"12289:9:29"},{"kind":"number","nativeSrc":"12300:3:29","nodeType":"YulLiteral","src":"12300:3:29","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12285:3:29","nodeType":"YulIdentifier","src":"12285:3:29"},"nativeSrc":"12285:19:29","nodeType":"YulFunctionCall","src":"12285:19:29"},"variableNames":[{"name":"tail","nativeSrc":"12277:4:29","nodeType":"YulIdentifier","src":"12277:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12358:6:29","nodeType":"YulIdentifier","src":"12358:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12371:9:29","nodeType":"YulIdentifier","src":"12371:9:29"},{"kind":"number","nativeSrc":"12382:1:29","nodeType":"YulLiteral","src":"12382:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12367:3:29","nodeType":"YulIdentifier","src":"12367:3:29"},"nativeSrc":"12367:17:29","nodeType":"YulFunctionCall","src":"12367:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12314:43:29","nodeType":"YulIdentifier","src":"12314:43:29"},"nativeSrc":"12314:71:29","nodeType":"YulFunctionCall","src":"12314:71:29"},"nativeSrc":"12314:71:29","nodeType":"YulExpressionStatement","src":"12314:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12439:6:29","nodeType":"YulIdentifier","src":"12439:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12452:9:29","nodeType":"YulIdentifier","src":"12452:9:29"},{"kind":"number","nativeSrc":"12463:2:29","nodeType":"YulLiteral","src":"12463:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12448:3:29","nodeType":"YulIdentifier","src":"12448:3:29"},"nativeSrc":"12448:18:29","nodeType":"YulFunctionCall","src":"12448:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12395:43:29","nodeType":"YulIdentifier","src":"12395:43:29"},"nativeSrc":"12395:72:29","nodeType":"YulFunctionCall","src":"12395:72:29"},"nativeSrc":"12395:72:29","nodeType":"YulExpressionStatement","src":"12395:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12521:6:29","nodeType":"YulIdentifier","src":"12521:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12534:9:29","nodeType":"YulIdentifier","src":"12534:9:29"},{"kind":"number","nativeSrc":"12545:2:29","nodeType":"YulLiteral","src":"12545:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12530:3:29","nodeType":"YulIdentifier","src":"12530:3:29"},"nativeSrc":"12530:18:29","nodeType":"YulFunctionCall","src":"12530:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12477:43:29","nodeType":"YulIdentifier","src":"12477:43:29"},"nativeSrc":"12477:72:29","nodeType":"YulFunctionCall","src":"12477:72:29"},"nativeSrc":"12477:72:29","nodeType":"YulExpressionStatement","src":"12477:72:29"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12603:6:29","nodeType":"YulIdentifier","src":"12603:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12616:9:29","nodeType":"YulIdentifier","src":"12616:9:29"},{"kind":"number","nativeSrc":"12627:2:29","nodeType":"YulLiteral","src":"12627:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12612:3:29","nodeType":"YulIdentifier","src":"12612:3:29"},"nativeSrc":"12612:18:29","nodeType":"YulFunctionCall","src":"12612:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12559:43:29","nodeType":"YulIdentifier","src":"12559:43:29"},"nativeSrc":"12559:72:29","nodeType":"YulFunctionCall","src":"12559:72:29"},"nativeSrc":"12559:72:29","nodeType":"YulExpressionStatement","src":"12559:72:29"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12685:6:29","nodeType":"YulIdentifier","src":"12685:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12698:9:29","nodeType":"YulIdentifier","src":"12698:9:29"},{"kind":"number","nativeSrc":"12709:3:29","nodeType":"YulLiteral","src":"12709:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12694:3:29","nodeType":"YulIdentifier","src":"12694:3:29"},"nativeSrc":"12694:19:29","nodeType":"YulFunctionCall","src":"12694:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12641:43:29","nodeType":"YulIdentifier","src":"12641:43:29"},"nativeSrc":"12641:73:29","nodeType":"YulFunctionCall","src":"12641:73:29"},"nativeSrc":"12641:73:29","nodeType":"YulExpressionStatement","src":"12641:73:29"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12768:6:29","nodeType":"YulIdentifier","src":"12768:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"12781:9:29","nodeType":"YulIdentifier","src":"12781:9:29"},{"kind":"number","nativeSrc":"12792:3:29","nodeType":"YulLiteral","src":"12792:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12777:3:29","nodeType":"YulIdentifier","src":"12777:3:29"},"nativeSrc":"12777:19:29","nodeType":"YulFunctionCall","src":"12777:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12724:43:29","nodeType":"YulIdentifier","src":"12724:43:29"},"nativeSrc":"12724:73:29","nodeType":"YulFunctionCall","src":"12724:73:29"},"nativeSrc":"12724:73:29","nodeType":"YulExpressionStatement","src":"12724:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12029:775:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12199:9:29","nodeType":"YulTypedName","src":"12199:9:29","type":""},{"name":"value5","nativeSrc":"12211:6:29","nodeType":"YulTypedName","src":"12211:6:29","type":""},{"name":"value4","nativeSrc":"12219:6:29","nodeType":"YulTypedName","src":"12219:6:29","type":""},{"name":"value3","nativeSrc":"12227:6:29","nodeType":"YulTypedName","src":"12227:6:29","type":""},{"name":"value2","nativeSrc":"12235:6:29","nodeType":"YulTypedName","src":"12235:6:29","type":""},{"name":"value1","nativeSrc":"12243:6:29","nodeType":"YulTypedName","src":"12243:6:29","type":""},{"name":"value0","nativeSrc":"12251:6:29","nodeType":"YulTypedName","src":"12251:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12262:4:29","nodeType":"YulTypedName","src":"12262:4:29","type":""}],"src":"12029:775:29"},{"body":{"nativeSrc":"12936:206:29","nodeType":"YulBlock","src":"12936:206:29","statements":[{"nativeSrc":"12946:26:29","nodeType":"YulAssignment","src":"12946:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"12958:9:29","nodeType":"YulIdentifier","src":"12958:9:29"},{"kind":"number","nativeSrc":"12969:2:29","nodeType":"YulLiteral","src":"12969:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12954:3:29","nodeType":"YulIdentifier","src":"12954:3:29"},"nativeSrc":"12954:18:29","nodeType":"YulFunctionCall","src":"12954:18:29"},"variableNames":[{"name":"tail","nativeSrc":"12946:4:29","nodeType":"YulIdentifier","src":"12946:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13026:6:29","nodeType":"YulIdentifier","src":"13026:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13039:9:29","nodeType":"YulIdentifier","src":"13039:9:29"},{"kind":"number","nativeSrc":"13050:1:29","nodeType":"YulLiteral","src":"13050:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13035:3:29","nodeType":"YulIdentifier","src":"13035:3:29"},"nativeSrc":"13035:17:29","nodeType":"YulFunctionCall","src":"13035:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12982:43:29","nodeType":"YulIdentifier","src":"12982:43:29"},"nativeSrc":"12982:71:29","nodeType":"YulFunctionCall","src":"12982:71:29"},"nativeSrc":"12982:71:29","nodeType":"YulExpressionStatement","src":"12982:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13107:6:29","nodeType":"YulIdentifier","src":"13107:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13120:9:29","nodeType":"YulIdentifier","src":"13120:9:29"},{"kind":"number","nativeSrc":"13131:2:29","nodeType":"YulLiteral","src":"13131:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13116:3:29","nodeType":"YulIdentifier","src":"13116:3:29"},"nativeSrc":"13116:18:29","nodeType":"YulFunctionCall","src":"13116:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13063:43:29","nodeType":"YulIdentifier","src":"13063:43:29"},"nativeSrc":"13063:72:29","nodeType":"YulFunctionCall","src":"13063:72:29"},"nativeSrc":"13063:72:29","nodeType":"YulExpressionStatement","src":"13063:72:29"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12810:332:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12900:9:29","nodeType":"YulTypedName","src":"12900:9:29","type":""},{"name":"value1","nativeSrc":"12912:6:29","nodeType":"YulTypedName","src":"12912:6:29","type":""},{"name":"value0","nativeSrc":"12920:6:29","nodeType":"YulTypedName","src":"12920:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12931:4:29","nodeType":"YulTypedName","src":"12931:4:29","type":""}],"src":"12810:332:29"},{"body":{"nativeSrc":"13302:288:29","nodeType":"YulBlock","src":"13302:288:29","statements":[{"nativeSrc":"13312:26:29","nodeType":"YulAssignment","src":"13312:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"13324:9:29","nodeType":"YulIdentifier","src":"13324:9:29"},{"kind":"number","nativeSrc":"13335:2:29","nodeType":"YulLiteral","src":"13335:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13320:3:29","nodeType":"YulIdentifier","src":"13320:3:29"},"nativeSrc":"13320:18:29","nodeType":"YulFunctionCall","src":"13320:18:29"},"variableNames":[{"name":"tail","nativeSrc":"13312:4:29","nodeType":"YulIdentifier","src":"13312:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13392:6:29","nodeType":"YulIdentifier","src":"13392:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13405:9:29","nodeType":"YulIdentifier","src":"13405:9:29"},{"kind":"number","nativeSrc":"13416:1:29","nodeType":"YulLiteral","src":"13416:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13401:3:29","nodeType":"YulIdentifier","src":"13401:3:29"},"nativeSrc":"13401:17:29","nodeType":"YulFunctionCall","src":"13401:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13348:43:29","nodeType":"YulIdentifier","src":"13348:43:29"},"nativeSrc":"13348:71:29","nodeType":"YulFunctionCall","src":"13348:71:29"},"nativeSrc":"13348:71:29","nodeType":"YulExpressionStatement","src":"13348:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13473:6:29","nodeType":"YulIdentifier","src":"13473:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13486:9:29","nodeType":"YulIdentifier","src":"13486:9:29"},{"kind":"number","nativeSrc":"13497:2:29","nodeType":"YulLiteral","src":"13497:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13482:3:29","nodeType":"YulIdentifier","src":"13482:3:29"},"nativeSrc":"13482:18:29","nodeType":"YulFunctionCall","src":"13482:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13429:43:29","nodeType":"YulIdentifier","src":"13429:43:29"},"nativeSrc":"13429:72:29","nodeType":"YulFunctionCall","src":"13429:72:29"},"nativeSrc":"13429:72:29","nodeType":"YulExpressionStatement","src":"13429:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13555:6:29","nodeType":"YulIdentifier","src":"13555:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"13568:9:29","nodeType":"YulIdentifier","src":"13568:9:29"},{"kind":"number","nativeSrc":"13579:2:29","nodeType":"YulLiteral","src":"13579:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13564:3:29","nodeType":"YulIdentifier","src":"13564:3:29"},"nativeSrc":"13564:18:29","nodeType":"YulFunctionCall","src":"13564:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13511:43:29","nodeType":"YulIdentifier","src":"13511:43:29"},"nativeSrc":"13511:72:29","nodeType":"YulFunctionCall","src":"13511:72:29"},"nativeSrc":"13511:72:29","nodeType":"YulExpressionStatement","src":"13511:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13148:442:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13258:9:29","nodeType":"YulTypedName","src":"13258:9:29","type":""},{"name":"value2","nativeSrc":"13270:6:29","nodeType":"YulTypedName","src":"13270:6:29","type":""},{"name":"value1","nativeSrc":"13278:6:29","nodeType":"YulTypedName","src":"13278:6:29","type":""},{"name":"value0","nativeSrc":"13286:6:29","nodeType":"YulTypedName","src":"13286:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13297:4:29","nodeType":"YulTypedName","src":"13297:4:29","type":""}],"src":"13148:442:29"},{"body":{"nativeSrc":"13624:152:29","nodeType":"YulBlock","src":"13624:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13641:1:29","nodeType":"YulLiteral","src":"13641:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13644:77:29","nodeType":"YulLiteral","src":"13644:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13634:6:29","nodeType":"YulIdentifier","src":"13634:6:29"},"nativeSrc":"13634:88:29","nodeType":"YulFunctionCall","src":"13634:88:29"},"nativeSrc":"13634:88:29","nodeType":"YulExpressionStatement","src":"13634:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13738:1:29","nodeType":"YulLiteral","src":"13738:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"13741:4:29","nodeType":"YulLiteral","src":"13741:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13731:6:29","nodeType":"YulIdentifier","src":"13731:6:29"},"nativeSrc":"13731:15:29","nodeType":"YulFunctionCall","src":"13731:15:29"},"nativeSrc":"13731:15:29","nodeType":"YulExpressionStatement","src":"13731:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13762:1:29","nodeType":"YulLiteral","src":"13762:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"13765:4:29","nodeType":"YulLiteral","src":"13765:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13755:6:29","nodeType":"YulIdentifier","src":"13755:6:29"},"nativeSrc":"13755:15:29","nodeType":"YulFunctionCall","src":"13755:15:29"},"nativeSrc":"13755:15:29","nodeType":"YulExpressionStatement","src":"13755:15:29"}]},"name":"panic_error_0x11","nativeSrc":"13596:180:29","nodeType":"YulFunctionDefinition","src":"13596:180:29"},{"body":{"nativeSrc":"13826:147:29","nodeType":"YulBlock","src":"13826:147:29","statements":[{"nativeSrc":"13836:25:29","nodeType":"YulAssignment","src":"13836:25:29","value":{"arguments":[{"name":"x","nativeSrc":"13859:1:29","nodeType":"YulIdentifier","src":"13859:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13841:17:29","nodeType":"YulIdentifier","src":"13841:17:29"},"nativeSrc":"13841:20:29","nodeType":"YulFunctionCall","src":"13841:20:29"},"variableNames":[{"name":"x","nativeSrc":"13836:1:29","nodeType":"YulIdentifier","src":"13836:1:29"}]},{"nativeSrc":"13870:25:29","nodeType":"YulAssignment","src":"13870:25:29","value":{"arguments":[{"name":"y","nativeSrc":"13893:1:29","nodeType":"YulIdentifier","src":"13893:1:29"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13875:17:29","nodeType":"YulIdentifier","src":"13875:17:29"},"nativeSrc":"13875:20:29","nodeType":"YulFunctionCall","src":"13875:20:29"},"variableNames":[{"name":"y","nativeSrc":"13870:1:29","nodeType":"YulIdentifier","src":"13870:1:29"}]},{"nativeSrc":"13904:16:29","nodeType":"YulAssignment","src":"13904:16:29","value":{"arguments":[{"name":"x","nativeSrc":"13915:1:29","nodeType":"YulIdentifier","src":"13915:1:29"},{"name":"y","nativeSrc":"13918:1:29","nodeType":"YulIdentifier","src":"13918:1:29"}],"functionName":{"name":"add","nativeSrc":"13911:3:29","nodeType":"YulIdentifier","src":"13911:3:29"},"nativeSrc":"13911:9:29","nodeType":"YulFunctionCall","src":"13911:9:29"},"variableNames":[{"name":"sum","nativeSrc":"13904:3:29","nodeType":"YulIdentifier","src":"13904:3:29"}]},{"body":{"nativeSrc":"13944:22:29","nodeType":"YulBlock","src":"13944:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13946:16:29","nodeType":"YulIdentifier","src":"13946:16:29"},"nativeSrc":"13946:18:29","nodeType":"YulFunctionCall","src":"13946:18:29"},"nativeSrc":"13946:18:29","nodeType":"YulExpressionStatement","src":"13946:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13936:1:29","nodeType":"YulIdentifier","src":"13936:1:29"},{"name":"sum","nativeSrc":"13939:3:29","nodeType":"YulIdentifier","src":"13939:3:29"}],"functionName":{"name":"gt","nativeSrc":"13933:2:29","nodeType":"YulIdentifier","src":"13933:2:29"},"nativeSrc":"13933:10:29","nodeType":"YulFunctionCall","src":"13933:10:29"},"nativeSrc":"13930:36:29","nodeType":"YulIf","src":"13930:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"13782:191:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13813:1:29","nodeType":"YulTypedName","src":"13813:1:29","type":""},{"name":"y","nativeSrc":"13816:1:29","nodeType":"YulTypedName","src":"13816:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13822:3:29","nodeType":"YulTypedName","src":"13822:3:29","type":""}],"src":"13782:191:29"},{"body":{"nativeSrc":"14189:454:29","nodeType":"YulBlock","src":"14189:454:29","statements":[{"nativeSrc":"14199:27:29","nodeType":"YulAssignment","src":"14199:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"14211:9:29","nodeType":"YulIdentifier","src":"14211:9:29"},{"kind":"number","nativeSrc":"14222:3:29","nodeType":"YulLiteral","src":"14222:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14207:3:29","nodeType":"YulIdentifier","src":"14207:3:29"},"nativeSrc":"14207:19:29","nodeType":"YulFunctionCall","src":"14207:19:29"},"variableNames":[{"name":"tail","nativeSrc":"14199:4:29","nodeType":"YulIdentifier","src":"14199:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14280:6:29","nodeType":"YulIdentifier","src":"14280:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14293:9:29","nodeType":"YulIdentifier","src":"14293:9:29"},{"kind":"number","nativeSrc":"14304:1:29","nodeType":"YulLiteral","src":"14304:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14289:3:29","nodeType":"YulIdentifier","src":"14289:3:29"},"nativeSrc":"14289:17:29","nodeType":"YulFunctionCall","src":"14289:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14236:43:29","nodeType":"YulIdentifier","src":"14236:43:29"},"nativeSrc":"14236:71:29","nodeType":"YulFunctionCall","src":"14236:71:29"},"nativeSrc":"14236:71:29","nodeType":"YulExpressionStatement","src":"14236:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14361:6:29","nodeType":"YulIdentifier","src":"14361:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14374:9:29","nodeType":"YulIdentifier","src":"14374:9:29"},{"kind":"number","nativeSrc":"14385:2:29","nodeType":"YulLiteral","src":"14385:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14370:3:29","nodeType":"YulIdentifier","src":"14370:3:29"},"nativeSrc":"14370:18:29","nodeType":"YulFunctionCall","src":"14370:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14317:43:29","nodeType":"YulIdentifier","src":"14317:43:29"},"nativeSrc":"14317:72:29","nodeType":"YulFunctionCall","src":"14317:72:29"},"nativeSrc":"14317:72:29","nodeType":"YulExpressionStatement","src":"14317:72:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14443:6:29","nodeType":"YulIdentifier","src":"14443:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14456:9:29","nodeType":"YulIdentifier","src":"14456:9:29"},{"kind":"number","nativeSrc":"14467:2:29","nodeType":"YulLiteral","src":"14467:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14452:3:29","nodeType":"YulIdentifier","src":"14452:3:29"},"nativeSrc":"14452:18:29","nodeType":"YulFunctionCall","src":"14452:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14399:43:29","nodeType":"YulIdentifier","src":"14399:43:29"},"nativeSrc":"14399:72:29","nodeType":"YulFunctionCall","src":"14399:72:29"},"nativeSrc":"14399:72:29","nodeType":"YulExpressionStatement","src":"14399:72:29"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14525:6:29","nodeType":"YulIdentifier","src":"14525:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14538:9:29","nodeType":"YulIdentifier","src":"14538:9:29"},{"kind":"number","nativeSrc":"14549:2:29","nodeType":"YulLiteral","src":"14549:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14534:3:29","nodeType":"YulIdentifier","src":"14534:3:29"},"nativeSrc":"14534:18:29","nodeType":"YulFunctionCall","src":"14534:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14481:43:29","nodeType":"YulIdentifier","src":"14481:43:29"},"nativeSrc":"14481:72:29","nodeType":"YulFunctionCall","src":"14481:72:29"},"nativeSrc":"14481:72:29","nodeType":"YulExpressionStatement","src":"14481:72:29"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14607:6:29","nodeType":"YulIdentifier","src":"14607:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14620:9:29","nodeType":"YulIdentifier","src":"14620:9:29"},{"kind":"number","nativeSrc":"14631:3:29","nodeType":"YulLiteral","src":"14631:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14616:3:29","nodeType":"YulIdentifier","src":"14616:3:29"},"nativeSrc":"14616:19:29","nodeType":"YulFunctionCall","src":"14616:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14563:43:29","nodeType":"YulIdentifier","src":"14563:43:29"},"nativeSrc":"14563:73:29","nodeType":"YulFunctionCall","src":"14563:73:29"},"nativeSrc":"14563:73:29","nodeType":"YulExpressionStatement","src":"14563:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"13979:664:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14129:9:29","nodeType":"YulTypedName","src":"14129:9:29","type":""},{"name":"value4","nativeSrc":"14141:6:29","nodeType":"YulTypedName","src":"14141:6:29","type":""},{"name":"value3","nativeSrc":"14149:6:29","nodeType":"YulTypedName","src":"14149:6:29","type":""},{"name":"value2","nativeSrc":"14157:6:29","nodeType":"YulTypedName","src":"14157:6:29","type":""},{"name":"value1","nativeSrc":"14165:6:29","nodeType":"YulTypedName","src":"14165:6:29","type":""},{"name":"value0","nativeSrc":"14173:6:29","nodeType":"YulTypedName","src":"14173:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14184:4:29","nodeType":"YulTypedName","src":"14184:4:29","type":""}],"src":"13979:664:29"},{"body":{"nativeSrc":"14827:367:29","nodeType":"YulBlock","src":"14827:367:29","statements":[{"nativeSrc":"14837:27:29","nodeType":"YulAssignment","src":"14837:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"14849:9:29","nodeType":"YulIdentifier","src":"14849:9:29"},{"kind":"number","nativeSrc":"14860:3:29","nodeType":"YulLiteral","src":"14860:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14845:3:29","nodeType":"YulIdentifier","src":"14845:3:29"},"nativeSrc":"14845:19:29","nodeType":"YulFunctionCall","src":"14845:19:29"},"variableNames":[{"name":"tail","nativeSrc":"14837:4:29","nodeType":"YulIdentifier","src":"14837:4:29"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14918:6:29","nodeType":"YulIdentifier","src":"14918:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"14931:9:29","nodeType":"YulIdentifier","src":"14931:9:29"},{"kind":"number","nativeSrc":"14942:1:29","nodeType":"YulLiteral","src":"14942:1:29","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14927:3:29","nodeType":"YulIdentifier","src":"14927:3:29"},"nativeSrc":"14927:17:29","nodeType":"YulFunctionCall","src":"14927:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14874:43:29","nodeType":"YulIdentifier","src":"14874:43:29"},"nativeSrc":"14874:71:29","nodeType":"YulFunctionCall","src":"14874:71:29"},"nativeSrc":"14874:71:29","nodeType":"YulExpressionStatement","src":"14874:71:29"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14995:6:29","nodeType":"YulIdentifier","src":"14995:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"15008:9:29","nodeType":"YulIdentifier","src":"15008:9:29"},{"kind":"number","nativeSrc":"15019:2:29","nodeType":"YulLiteral","src":"15019:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15004:3:29","nodeType":"YulIdentifier","src":"15004:3:29"},"nativeSrc":"15004:18:29","nodeType":"YulFunctionCall","src":"15004:18:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"14955:39:29","nodeType":"YulIdentifier","src":"14955:39:29"},"nativeSrc":"14955:68:29","nodeType":"YulFunctionCall","src":"14955:68:29"},"nativeSrc":"14955:68:29","nodeType":"YulExpressionStatement","src":"14955:68:29"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15077:6:29","nodeType":"YulIdentifier","src":"15077:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"15090:9:29","nodeType":"YulIdentifier","src":"15090:9:29"},{"kind":"number","nativeSrc":"15101:2:29","nodeType":"YulLiteral","src":"15101:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15086:3:29","nodeType":"YulIdentifier","src":"15086:3:29"},"nativeSrc":"15086:18:29","nodeType":"YulFunctionCall","src":"15086:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15033:43:29","nodeType":"YulIdentifier","src":"15033:43:29"},"nativeSrc":"15033:72:29","nodeType":"YulFunctionCall","src":"15033:72:29"},"nativeSrc":"15033:72:29","nodeType":"YulExpressionStatement","src":"15033:72:29"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15159:6:29","nodeType":"YulIdentifier","src":"15159:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"15172:9:29","nodeType":"YulIdentifier","src":"15172:9:29"},{"kind":"number","nativeSrc":"15183:2:29","nodeType":"YulLiteral","src":"15183:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15168:3:29","nodeType":"YulIdentifier","src":"15168:3:29"},"nativeSrc":"15168:18:29","nodeType":"YulFunctionCall","src":"15168:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15115:43:29","nodeType":"YulIdentifier","src":"15115:43:29"},"nativeSrc":"15115:72:29","nodeType":"YulFunctionCall","src":"15115:72:29"},"nativeSrc":"15115:72:29","nodeType":"YulExpressionStatement","src":"15115:72:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14649:545:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14775:9:29","nodeType":"YulTypedName","src":"14775:9:29","type":""},{"name":"value3","nativeSrc":"14787:6:29","nodeType":"YulTypedName","src":"14787:6:29","type":""},{"name":"value2","nativeSrc":"14795:6:29","nodeType":"YulTypedName","src":"14795:6:29","type":""},{"name":"value1","nativeSrc":"14803:6:29","nodeType":"YulTypedName","src":"14803:6:29","type":""},{"name":"value0","nativeSrc":"14811:6:29","nodeType":"YulTypedName","src":"14811:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14822:4:29","nodeType":"YulTypedName","src":"14822:4:29","type":""}],"src":"14649:545:29"},{"body":{"nativeSrc":"15228:152:29","nodeType":"YulBlock","src":"15228:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15245:1:29","nodeType":"YulLiteral","src":"15245:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"15248:77:29","nodeType":"YulLiteral","src":"15248:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15238:6:29","nodeType":"YulIdentifier","src":"15238:6:29"},"nativeSrc":"15238:88:29","nodeType":"YulFunctionCall","src":"15238:88:29"},"nativeSrc":"15238:88:29","nodeType":"YulExpressionStatement","src":"15238:88:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15342:1:29","nodeType":"YulLiteral","src":"15342:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"15345:4:29","nodeType":"YulLiteral","src":"15345:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15335:6:29","nodeType":"YulIdentifier","src":"15335:6:29"},"nativeSrc":"15335:15:29","nodeType":"YulFunctionCall","src":"15335:15:29"},"nativeSrc":"15335:15:29","nodeType":"YulExpressionStatement","src":"15335:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15366:1:29","nodeType":"YulLiteral","src":"15366:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"15369:4:29","nodeType":"YulLiteral","src":"15369:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15359:6:29","nodeType":"YulIdentifier","src":"15359:6:29"},"nativeSrc":"15359:15:29","nodeType":"YulFunctionCall","src":"15359:15:29"},"nativeSrc":"15359:15:29","nodeType":"YulExpressionStatement","src":"15359:15:29"}]},"name":"panic_error_0x21","nativeSrc":"15200:180:29","nodeType":"YulFunctionDefinition","src":"15200:180:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3080":[{"length":32,"start":2795}],"3082":[{"length":32,"start":2754}],"3084":[{"length":32,"start":2668}],"3086":[{"length":32,"start":4719}],"3088":[{"length":32,"start":4752}],"3091":[{"length":32,"start":3392}],"3094":[{"length":32,"start":3451}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b41146102b0578063a9059cbb146102ce578063d505accf146102fe578063dd62ed3e1461031a578063f2fde38b1461034a5761010b565b8063715018a6146102345780637ecebe001461023e57806384b0196e1461026e5780638da5cb5b146102925761010b565b8063313ce567116100de578063313ce567146101ac5780633644e515146101ca57806340c10f19146101e857806370a08231146102045761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610366565b604051610125919061177d565b60405180910390f35b61014860048036038101906101439190611838565b6103f8565b6040516101559190611893565b60405180910390f35b61016661041b565b60405161017391906118bd565b60405180910390f35b610196600480360381019061019191906118d8565b610425565b6040516101a39190611893565b60405180910390f35b6101b4610454565b6040516101c19190611947565b60405180910390f35b6101d261045d565b6040516101df919061197b565b60405180910390f35b61020260048036038101906101fd9190611838565b61046c565b005b61021e60048036038101906102199190611996565b61047a565b60405161022b91906118bd565b60405180910390f35b61023c6104c2565b005b61025860048036038101906102539190611996565b6104d6565b60405161026591906118bd565b60405180910390f35b6102766104e8565b6040516102899796959493929190611acb565b60405180910390f35b61029a610592565b6040516102a79190611b4f565b60405180910390f35b6102b86105bc565b6040516102c5919061177d565b60405180910390f35b6102e860048036038101906102e39190611838565b61064e565b6040516102f59190611893565b60405180910390f35b61031860048036038101906103139190611bc2565b610671565b005b610334600480360381019061032f9190611c64565b6107b9565b60405161034191906118bd565b60405180910390f35b610364600480360381019061035f9190611996565b610840565b005b60606003805461037590611cd3565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190611cd3565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b6000806104036108c6565b90506104108185856108ce565b600191505092915050565b6000600254905090565b6000806104306108c6565b905061043d8582856108e0565b610448858585610974565b60019150509392505050565b60006012905090565b6000610467610a68565b905090565b6104768282610b1f565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ca610ba1565b6104d46000610c28565b565b60006104e182610cee565b9050919050565b6000606080600080600060606104fc610d37565b610504610d72565b46306000801b600067ffffffffffffffff81111561052557610524611d04565b5b6040519080825280602002602001820160405280156105535781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105cb90611cd3565b80601f01602080910402602001604051908101604052809291908181526020018280546105f790611cd3565b80156106445780601f1061061957610100808354040283529160200191610644565b820191906000526020600020905b81548152906001019060200180831161062757829003601f168201915b5050505050905090565b6000806106596108c6565b9050610666818585610974565b600191505092915050565b834211156106b657836040517f627913020000000000000000000000000000000000000000000000000000000081526004016106ad91906118bd565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106e58c610dad565b896040516020016106fb96959493929190611d33565b604051602081830303815290604052805190602001209050600061071e82610e04565b9050600061072e82878787610e1e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107a257808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610799929190611d94565b60405180910390fd5b6107ad8a8a8a6108ce565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610848610ba1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ba5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108b19190611b4f565b60405180910390fd5b6108c381610c28565b50565b600033905090565b6108db8383836001610e4e565b505050565b60006108ec84846107b9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461096e578181101561095e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161095593929190611dbd565b60405180910390fd5b61096d84848484036000610e4e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109e65760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109dd9190611b4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a585760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a4f9190611b4f565b60405180910390fd5b610a63838383611025565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610ae457507f000000000000000000000000000000000000000000000000000000000000000046145b15610b11577f00000000000000000000000000000000000000000000000000000000000000009050610b1c565b610b1961124a565b90505b90565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b915760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b889190611b4f565b60405180910390fd5b610b9d60008383611025565b5050565b610ba96108c6565b73ffffffffffffffffffffffffffffffffffffffff16610bc7610592565b73ffffffffffffffffffffffffffffffffffffffff1614610c2657610bea6108c6565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c1d9190611b4f565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610d6d60067f00000000000000000000000000000000000000000000000000000000000000006112e090919063ffffffff16565b905090565b6060610da860077f00000000000000000000000000000000000000000000000000000000000000006112e090919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610e17610e11610a68565b83611390565b9050919050565b600080600080610e30888888886113d1565b925092509250610e4082826114c5565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ec05760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb79190611b4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f325760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f299190611b4f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561101f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161101691906118bd565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107757806002600082825461106b9190611e23565b9250508190555061114a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611103578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110fa93929190611dbd565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119357806002600082825403925050819055506111e0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161123d91906118bd565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016112c5959493929190611e57565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146112fd576112f683611629565b905061138a565b81805461130990611cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461133590611cd3565b80156113825780601f1061135757610100808354040283529160200191611382565b820191906000526020600020905b81548152906001019060200180831161136557829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156114115760006003859250925092506114bb565b6000600188888888604051600081526020016040526040516114369493929190611eaa565b6020604051602081039080840390855afa158015611458573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ac57600060016000801b935093509350506114bb565b8060008060001b935093509350505b9450945094915050565b600060038111156114d9576114d8611eef565b5b8260038111156114ec576114eb611eef565b5b0315611625576001600381111561150657611505611eef565b5b82600381111561151957611518611eef565b5b03611550576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561156457611563611eef565b5b82600381111561157757611576611eef565b5b036115bc578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016115b391906118bd565b60405180910390fd5b6003808111156115cf576115ce611eef565b5b8260038111156115e2576115e1611eef565b5b0361162457806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161161b919061197b565b60405180910390fd5b5b5050565b606060006116368361169d565b90506000602067ffffffffffffffff81111561165557611654611d04565b5b6040519080825280601f01601f1916602001820160405280156116875781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156116e4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561172757808201518184015260208101905061170c565b60008484015250505050565b6000601f19601f8301169050919050565b600061174f826116ed565b61175981856116f8565b9350611769818560208601611709565b61177281611733565b840191505092915050565b600060208201905081810360008301526117978184611744565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117cf826117a4565b9050919050565b6117df816117c4565b81146117ea57600080fd5b50565b6000813590506117fc816117d6565b92915050565b6000819050919050565b61181581611802565b811461182057600080fd5b50565b6000813590506118328161180c565b92915050565b6000806040838503121561184f5761184e61179f565b5b600061185d858286016117ed565b925050602061186e85828601611823565b9150509250929050565b60008115159050919050565b61188d81611878565b82525050565b60006020820190506118a86000830184611884565b92915050565b6118b781611802565b82525050565b60006020820190506118d260008301846118ae565b92915050565b6000806000606084860312156118f1576118f061179f565b5b60006118ff868287016117ed565b9350506020611910868287016117ed565b925050604061192186828701611823565b9150509250925092565b600060ff82169050919050565b6119418161192b565b82525050565b600060208201905061195c6000830184611938565b92915050565b6000819050919050565b61197581611962565b82525050565b6000602082019050611990600083018461196c565b92915050565b6000602082840312156119ac576119ab61179f565b5b60006119ba848285016117ed565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6119f8816119c3565b82525050565b611a07816117c4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a4281611802565b82525050565b6000611a548383611a39565b60208301905092915050565b6000602082019050919050565b6000611a7882611a0d565b611a828185611a18565b9350611a8d83611a29565b8060005b83811015611abe578151611aa58882611a48565b9750611ab083611a60565b925050600181019050611a91565b5085935050505092915050565b600060e082019050611ae0600083018a6119ef565b8181036020830152611af28189611744565b90508181036040830152611b068188611744565b9050611b1560608301876118ae565b611b2260808301866119fe565b611b2f60a083018561196c565b81810360c0830152611b418184611a6d565b905098975050505050505050565b6000602082019050611b6460008301846119fe565b92915050565b611b738161192b565b8114611b7e57600080fd5b50565b600081359050611b9081611b6a565b92915050565b611b9f81611962565b8114611baa57600080fd5b50565b600081359050611bbc81611b96565b92915050565b600080600080600080600060e0888a031215611be157611be061179f565b5b6000611bef8a828b016117ed565b9750506020611c008a828b016117ed565b9650506040611c118a828b01611823565b9550506060611c228a828b01611823565b9450506080611c338a828b01611b81565b93505060a0611c448a828b01611bad565b92505060c0611c558a828b01611bad565b91505092959891949750929550565b60008060408385031215611c7b57611c7a61179f565b5b6000611c89858286016117ed565b9250506020611c9a858286016117ed565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ceb57607f821691505b602082108103611cfe57611cfd611ca4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611d48600083018961196c565b611d5560208301886119fe565b611d6260408301876119fe565b611d6f60608301866118ae565b611d7c60808301856118ae565b611d8960a08301846118ae565b979650505050505050565b6000604082019050611da960008301856119fe565b611db660208301846119fe565b9392505050565b6000606082019050611dd260008301866119fe565b611ddf60208301856118ae565b611dec60408301846118ae565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e2e82611802565b9150611e3983611802565b9250828201905080821115611e5157611e50611df4565b5b92915050565b600060a082019050611e6c600083018861196c565b611e79602083018761196c565b611e86604083018661196c565b611e9360608301856118ae565b611ea060808301846119fe565b9695505050505050565b6000608082019050611ebf600083018761196c565b611ecc6020830186611938565b611ed9604083018561196c565b611ee6606083018461196c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220032b91745a9db477340af2d5aaea8a918e37564fd7204f83d09f117628bc5b4c64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x204 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x403 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x410 DUP2 DUP6 DUP6 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP6 DUP3 DUP6 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x448 DUP6 DUP6 DUP6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 PUSH2 0xA68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x476 DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x4D4 PUSH1 0x0 PUSH2 0xC28 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0xCEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x4FC PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x504 PUSH2 0xD72 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x525 JUMPI PUSH2 0x524 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x553 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5CB SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F7 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x644 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x644 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x627 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x659 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x666 DUP2 DUP6 DUP6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6B6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6E5 DUP13 PUSH2 0xDAD JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6FB SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x71E DUP3 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72E DUP3 DUP8 DUP8 DUP8 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A2 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP3 SWAP2 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP11 DUP11 DUP11 PUSH2 0x8CE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0xC28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EC DUP5 DUP5 PUSH2 0x7B9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x96E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96D DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE4E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA58 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA63 DUP4 DUP4 DUP4 PUSH2 0x1025 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAE4 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB11 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB19 PUSH2 0x124A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB91 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1025 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x8C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC7 PUSH2 0x592 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC26 JUMPI PUSH2 0xBEA PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD6D PUSH1 0x6 PUSH32 0x0 PUSH2 0x12E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDA8 PUSH1 0x7 PUSH32 0x0 PUSH2 0x12E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE17 PUSH2 0xE11 PUSH2 0xA68 JUMP JUMPDEST DUP4 PUSH2 0x1390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE30 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE40 DUP3 DUP3 PUSH2 0x14C5 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB7 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x101F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1016 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1077 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x114A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1103 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1193 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x12FD JUMPI PUSH2 0x12F6 DUP4 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP PUSH2 0x138A JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1309 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1335 SWAP1 PUSH2 0x1CD3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1382 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1357 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1382 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1365 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1436 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1458 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14BB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EB PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1625 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1506 JUMPI PUSH2 0x1505 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1577 JUMPI PUSH2 0x1576 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15BC JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B3 SWAP2 SWAP1 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x15CF JUMPI PUSH2 0x15CE PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH2 0x15E1 PUSH2 0x1EEF JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1624 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1636 DUP4 PUSH2 0x169D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1D04 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1687 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1727 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x170C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174F DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH2 0x1759 DUP2 DUP6 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1769 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x1733 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1797 DUP2 DUP5 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CF DUP3 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DF DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FC DUP2 PUSH2 0x17D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1815 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP2 EQ PUSH2 0x1820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x180C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184F JUMPI PUSH2 0x184E PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185D DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x186E DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188D DUP2 PUSH2 0x1878 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1884 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B7 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18FF DUP7 DUP3 DUP8 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1910 DUP7 DUP3 DUP8 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1921 DUP7 DUP3 DUP8 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x195C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP5 DUP3 DUP6 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F8 DUP2 PUSH2 0x19C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A07 DUP2 PUSH2 0x17C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A42 DUP2 PUSH2 0x1802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A54 DUP4 DUP4 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP3 PUSH2 0x1A0D JUMP JUMPDEST PUSH2 0x1A82 DUP2 DUP6 PUSH2 0x1A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A8D DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABE JUMPI DUP2 MLOAD PUSH2 0x1AA5 DUP9 DUP3 PUSH2 0x1A48 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AB0 DUP4 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A91 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1AE0 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x19EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 DUP10 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B06 DUP2 DUP9 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B15 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1B22 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x196C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 DUP5 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x192B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B90 DUP2 PUSH2 0x1B6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH2 0x1BE0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BEF DUP11 DUP3 DUP12 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C00 DUP11 DUP3 DUP12 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C11 DUP11 DUP3 DUP12 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C22 DUP11 DUP3 DUP12 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C33 DUP11 DUP3 DUP12 ADD PUSH2 0x1B81 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C44 DUP11 DUP3 DUP12 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C55 DUP11 DUP3 DUP12 ADD PUSH2 0x1BAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7B JUMPI PUSH2 0x1C7A PUSH2 0x179F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C89 DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C9A DUP6 DUP3 DUP7 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CFE JUMPI PUSH2 0x1CFD PUSH2 0x1CA4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D48 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1D55 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1D89 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DA9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DB6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DD2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DDF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1DEC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E2E DUP3 PUSH2 0x1802 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E39 DUP4 PUSH2 0x1802 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E6C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E79 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E86 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1E93 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x19FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EBF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1ECC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x196C JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0x2B SWAP2 PUSH21 0x5A9DB477340AF2D5AAEA8A918E37564FD7204F83D0 SWAP16 GT PUSH23 0x28BC5B4C64736F6C634300081B00330000000000000000 ","sourceMap":"290:306:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:84:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2409:143:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:21;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:672:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:6;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;2659:112:8:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;510:84:28:-;570:17;576:2;580:6;570:5;:17::i;:::-;510:84;;:::o;3004:116:6:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2409:143:8:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;5144:557:21:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1683:672:8:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;3551:140:6:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3845:262:21:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:15:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:21:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:15:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:21:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6887:260:20:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9701:432:6:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;4113:179:21:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3358:267:17:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3326:374:22:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;5203:1551:20:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:17:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:77::-;4892:7;4921:5;4910:16;;4855:77;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:329::-;5349:6;5398:2;5386:9;5377:7;5373:23;5369:32;5366:119;;;5404:79;;:::i;:::-;5366:119;5524:1;5549:53;5594:7;5585:6;5574:9;5570:22;5549:53;:::i;:::-;5539:63;;5495:117;5290:329;;;;:::o;5625:149::-;5661:7;5701:66;5694:5;5690:78;5679:89;;5625:149;;;:::o;5780:115::-;5865:23;5882:5;5865:23;:::i;:::-;5860:3;5853:36;5780:115;;:::o;5901:118::-;5988:24;6006:5;5988:24;:::i;:::-;5983:3;5976:37;5901:118;;:::o;6025:114::-;6092:6;6126:5;6120:12;6110:22;;6025:114;;;:::o;6145:184::-;6244:11;6278:6;6273:3;6266:19;6318:4;6313:3;6309:14;6294:29;;6145:184;;;;:::o;6335:132::-;6402:4;6425:3;6417:11;;6455:4;6450:3;6446:14;6438:22;;6335:132;;;:::o;6473:108::-;6550:24;6568:5;6550:24;:::i;:::-;6545:3;6538:37;6473:108;;:::o;6587:179::-;6656:10;6677:46;6719:3;6711:6;6677:46;:::i;:::-;6755:4;6750:3;6746:14;6732:28;;6587:179;;;;:::o;6772:113::-;6842:4;6874;6869:3;6865:14;6857:22;;6772:113;;;:::o;6921:732::-;7040:3;7069:54;7117:5;7069:54;:::i;:::-;7139:86;7218:6;7213:3;7139:86;:::i;:::-;7132:93;;7249:56;7299:5;7249:56;:::i;:::-;7328:7;7359:1;7344:284;7369:6;7366:1;7363:13;7344:284;;;7445:6;7439:13;7472:63;7531:3;7516:13;7472:63;:::i;:::-;7465:70;;7558:60;7611:6;7558:60;:::i;:::-;7548:70;;7404:224;7391:1;7388;7384:9;7379:14;;7344:284;;;7348:14;7644:3;7637:10;;7045:608;;;6921:732;;;;:::o;7659:1215::-;8008:4;8046:3;8035:9;8031:19;8023:27;;8060:69;8126:1;8115:9;8111:17;8102:6;8060:69;:::i;:::-;8176:9;8170:4;8166:20;8161:2;8150:9;8146:18;8139:48;8204:78;8277:4;8268:6;8204:78;:::i;:::-;8196:86;;8329:9;8323:4;8319:20;8314:2;8303:9;8299:18;8292:48;8357:78;8430:4;8421:6;8357:78;:::i;:::-;8349:86;;8445:72;8513:2;8502:9;8498:18;8489:6;8445:72;:::i;:::-;8527:73;8595:3;8584:9;8580:19;8571:6;8527:73;:::i;:::-;8610;8678:3;8667:9;8663:19;8654:6;8610:73;:::i;:::-;8731:9;8725:4;8721:20;8715:3;8704:9;8700:19;8693:49;8759:108;8862:4;8853:6;8759:108;:::i;:::-;8751:116;;7659:1215;;;;;;;;;;:::o;8880:222::-;8973:4;9011:2;9000:9;8996:18;8988:26;;9024:71;9092:1;9081:9;9077:17;9068:6;9024:71;:::i;:::-;8880:222;;;;:::o;9108:118::-;9179:22;9195:5;9179:22;:::i;:::-;9172:5;9169:33;9159:61;;9216:1;9213;9206:12;9159:61;9108:118;:::o;9232:135::-;9276:5;9314:6;9301:20;9292:29;;9330:31;9355:5;9330:31;:::i;:::-;9232:135;;;;:::o;9373:122::-;9446:24;9464:5;9446:24;:::i;:::-;9439:5;9436:35;9426:63;;9485:1;9482;9475:12;9426:63;9373:122;:::o;9501:139::-;9547:5;9585:6;9572:20;9563:29;;9601:33;9628:5;9601:33;:::i;:::-;9501:139;;;;:::o;9646:1199::-;9757:6;9765;9773;9781;9789;9797;9805;9854:3;9842:9;9833:7;9829:23;9825:33;9822:120;;;9861:79;;:::i;:::-;9822:120;9981:1;10006:53;10051:7;10042:6;10031:9;10027:22;10006:53;:::i;:::-;9996:63;;9952:117;10108:2;10134:53;10179:7;10170:6;10159:9;10155:22;10134:53;:::i;:::-;10124:63;;10079:118;10236:2;10262:53;10307:7;10298:6;10287:9;10283:22;10262:53;:::i;:::-;10252:63;;10207:118;10364:2;10390:53;10435:7;10426:6;10415:9;10411:22;10390:53;:::i;:::-;10380:63;;10335:118;10492:3;10519:51;10562:7;10553:6;10542:9;10538:22;10519:51;:::i;:::-;10509:61;;10463:117;10619:3;10646:53;10691:7;10682:6;10671:9;10667:22;10646:53;:::i;:::-;10636:63;;10590:119;10748:3;10775:53;10820:7;10811:6;10800:9;10796:22;10775:53;:::i;:::-;10765:63;;10719:119;9646:1199;;;;;;;;;;:::o;10851:474::-;10919:6;10927;10976:2;10964:9;10955:7;10951:23;10947:32;10944:119;;;10982:79;;:::i;:::-;10944:119;11102:1;11127:53;11172:7;11163:6;11152:9;11148:22;11127:53;:::i;:::-;11117:63;;11073:117;11229:2;11255:53;11300:7;11291:6;11280:9;11276:22;11255:53;:::i;:::-;11245:63;;11200:118;10851:474;;;;;:::o;11331:180::-;11379:77;11376:1;11369:88;11476:4;11473:1;11466:15;11500:4;11497:1;11490:15;11517:320;11561:6;11598:1;11592:4;11588:12;11578:22;;11645:1;11639:4;11635:12;11666:18;11656:81;;11722:4;11714:6;11710:17;11700:27;;11656:81;11784:2;11776:6;11773:14;11753:18;11750:38;11747:84;;11803:18;;:::i;:::-;11747:84;11568:269;11517:320;;;:::o;11843:180::-;11891:77;11888:1;11881:88;11988:4;11985:1;11978:15;12012:4;12009:1;12002:15;12029:775;12262:4;12300:3;12289:9;12285:19;12277:27;;12314:71;12382:1;12371:9;12367:17;12358:6;12314:71;:::i;:::-;12395:72;12463:2;12452:9;12448:18;12439:6;12395:72;:::i;:::-;12477;12545:2;12534:9;12530:18;12521:6;12477:72;:::i;:::-;12559;12627:2;12616:9;12612:18;12603:6;12559:72;:::i;:::-;12641:73;12709:3;12698:9;12694:19;12685:6;12641:73;:::i;:::-;12724;12792:3;12781:9;12777:19;12768:6;12724:73;:::i;:::-;12029:775;;;;;;;;;:::o;12810:332::-;12931:4;12969:2;12958:9;12954:18;12946:26;;12982:71;13050:1;13039:9;13035:17;13026:6;12982:71;:::i;:::-;13063:72;13131:2;13120:9;13116:18;13107:6;13063:72;:::i;:::-;12810:332;;;;;:::o;13148:442::-;13297:4;13335:2;13324:9;13320:18;13312:26;;13348:71;13416:1;13405:9;13401:17;13392:6;13348:71;:::i;:::-;13429:72;13497:2;13486:9;13482:18;13473:6;13429:72;:::i;:::-;13511;13579:2;13568:9;13564:18;13555:6;13511:72;:::i;:::-;13148:442;;;;;;:::o;13596:180::-;13644:77;13641:1;13634:88;13741:4;13738:1;13731:15;13765:4;13762:1;13755:15;13782:191;13822:3;13841:20;13859:1;13841:20;:::i;:::-;13836:25;;13875:20;13893:1;13875:20;:::i;:::-;13870:25;;13918:1;13915;13911:9;13904:16;;13939:3;13936:1;13933:10;13930:36;;;13946:18;;:::i;:::-;13930:36;13782:191;;;;:::o;13979:664::-;14184:4;14222:3;14211:9;14207:19;14199:27;;14236:71;14304:1;14293:9;14289:17;14280:6;14236:71;:::i;:::-;14317:72;14385:2;14374:9;14370:18;14361:6;14317:72;:::i;:::-;14399;14467:2;14456:9;14452:18;14443:6;14399:72;:::i;:::-;14481;14549:2;14538:9;14534:18;14525:6;14481:72;:::i;:::-;14563:73;14631:3;14620:9;14616:19;14607:6;14563:73;:::i;:::-;13979:664;;;;;;;;:::o;14649:545::-;14822:4;14860:3;14849:9;14845:19;14837:27;;14874:71;14942:1;14931:9;14927:17;14918:6;14874:71;:::i;:::-;14955:68;15019:2;15008:9;15004:18;14995:6;14955:68;:::i;:::-;15033:72;15101:2;15090:9;15086:18;15077:6;15033:72;:::i;:::-;15115;15183:2;15172:9;15168:18;15159:6;15115:72;:::i;:::-;14649:545;;;;;;;:::o;15200:180::-;15248:77;15245:1;15238:88;15345:4;15342:1;15335:15;15369:4;15366:1;15359:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDT.sol\":\"USDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/USDT.sol\":{\"keccak256\":\"0xac380c23d90c29fcf985724d1010abe88eb4c7eeb6ae72cb34c57ceba9337516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd5d9a502cbf05bbb176a74235800eaddf2cc9bd16d01a22d45c9ee07fc16f08\",\"dweb:/ipfs/QmSAv3e8PYRMx6jJHoSgUsGLj79Z8gjaiaKZdibeFQ8iSz\"]}},\"version\":1}"}}}}}